

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Oct 31 21:34:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1827 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  011A                     	;# 
   138  011B                     	;# 
   139  011D                     	;# 
   140  011E                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0191                     	;# 
   144  0191                     	;# 
   145  0192                     	;# 
   146  0193                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0194                     	;# 
   150  0195                     	;# 
   151  0196                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019D                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  020C                     	;# 
   164  020D                     	;# 
   165  0211                     	;# 
   166  0211                     	;# 
   167  0212                     	;# 
   168  0212                     	;# 
   169  0213                     	;# 
   170  0213                     	;# 
   171  0214                     	;# 
   172  0214                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0216                     	;# 
   177  0216                     	;# 
   178  0217                     	;# 
   179  0217                     	;# 
   180  0219                     	;# 
   181  021A                     	;# 
   182  021B                     	;# 
   183  021C                     	;# 
   184  021D                     	;# 
   185  021E                     	;# 
   186  021F                     	;# 
   187  0291                     	;# 
   188  0291                     	;# 
   189  0292                     	;# 
   190  0293                     	;# 
   191  0294                     	;# 
   192  0295                     	;# 
   193  0295                     	;# 
   194  0296                     	;# 
   195  0298                     	;# 
   196  0298                     	;# 
   197  0299                     	;# 
   198  029A                     	;# 
   199  029B                     	;# 
   200  029C                     	;# 
   201  029C                     	;# 
   202  029D                     	;# 
   203  029E                     	;# 
   204  029E                     	;# 
   205  0311                     	;# 
   206  0311                     	;# 
   207  0312                     	;# 
   208  0313                     	;# 
   209  0318                     	;# 
   210  0318                     	;# 
   211  0319                     	;# 
   212  031A                     	;# 
   213  0394                     	;# 
   214  0395                     	;# 
   215  0396                     	;# 
   216  039A                     	;# 
   217  039C                     	;# 
   218  039D                     	;# 
   219  039E                     	;# 
   220  039F                     	;# 
   221  0415                     	;# 
   222  0416                     	;# 
   223  0417                     	;# 
   224  041C                     	;# 
   225  041D                     	;# 
   226  041E                     	;# 
   227  0FE4                     	;# 
   228  0FE5                     	;# 
   229  0FE6                     	;# 
   230  0FE7                     	;# 
   231  0FE8                     	;# 
   232  0FE9                     	;# 
   233  0FEA                     	;# 
   234  0FEB                     	;# 
   235  0FED                     	;# 
   236  0FEE                     	;# 
   237  0FEF                     	;# 
   238  0000                     	;# 
   239  0001                     	;# 
   240  0002                     	;# 
   241  0003                     	;# 
   242  0004                     	;# 
   243  0005                     	;# 
   244  0006                     	;# 
   245  0007                     	;# 
   246  0008                     	;# 
   247  0009                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  0111                     	;# 
   287  0112                     	;# 
   288  0113                     	;# 
   289  0114                     	;# 
   290  0115                     	;# 
   291  0116                     	;# 
   292  0117                     	;# 
   293  0118                     	;# 
   294  0119                     	;# 
   295  011A                     	;# 
   296  011B                     	;# 
   297  011D                     	;# 
   298  011E                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0191                     	;# 
   302  0191                     	;# 
   303  0192                     	;# 
   304  0193                     	;# 
   305  0193                     	;# 
   306  0193                     	;# 
   307  0194                     	;# 
   308  0195                     	;# 
   309  0196                     	;# 
   310  0199                     	;# 
   311  019A                     	;# 
   312  019B                     	;# 
   313  019B                     	;# 
   314  019B                     	;# 
   315  019B                     	;# 
   316  019C                     	;# 
   317  019C                     	;# 
   318  019D                     	;# 
   319  019E                     	;# 
   320  019F                     	;# 
   321  020C                     	;# 
   322  020D                     	;# 
   323  0211                     	;# 
   324  0211                     	;# 
   325  0212                     	;# 
   326  0212                     	;# 
   327  0213                     	;# 
   328  0213                     	;# 
   329  0214                     	;# 
   330  0214                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0216                     	;# 
   336  0217                     	;# 
   337  0217                     	;# 
   338  0219                     	;# 
   339  021A                     	;# 
   340  021B                     	;# 
   341  021C                     	;# 
   342  021D                     	;# 
   343  021E                     	;# 
   344  021F                     	;# 
   345  0291                     	;# 
   346  0291                     	;# 
   347  0292                     	;# 
   348  0293                     	;# 
   349  0294                     	;# 
   350  0295                     	;# 
   351  0295                     	;# 
   352  0296                     	;# 
   353  0298                     	;# 
   354  0298                     	;# 
   355  0299                     	;# 
   356  029A                     	;# 
   357  029B                     	;# 
   358  029C                     	;# 
   359  029C                     	;# 
   360  029D                     	;# 
   361  029E                     	;# 
   362  029E                     	;# 
   363  0311                     	;# 
   364  0311                     	;# 
   365  0312                     	;# 
   366  0313                     	;# 
   367  0318                     	;# 
   368  0318                     	;# 
   369  0319                     	;# 
   370  031A                     	;# 
   371  0394                     	;# 
   372  0395                     	;# 
   373  0396                     	;# 
   374  039A                     	;# 
   375  039C                     	;# 
   376  039D                     	;# 
   377  039E                     	;# 
   378  039F                     	;# 
   379  0415                     	;# 
   380  0416                     	;# 
   381  0417                     	;# 
   382  041C                     	;# 
   383  041D                     	;# 
   384  041E                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0014                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  0111                     	;# 
   445  0112                     	;# 
   446  0113                     	;# 
   447  0114                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011A                     	;# 
   454  011B                     	;# 
   455  011D                     	;# 
   456  011E                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  0191                     	;# 
   460  0191                     	;# 
   461  0192                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0194                     	;# 
   466  0195                     	;# 
   467  0196                     	;# 
   468  0199                     	;# 
   469  019A                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019B                     	;# 
   474  019C                     	;# 
   475  019C                     	;# 
   476  019D                     	;# 
   477  019E                     	;# 
   478  019F                     	;# 
   479  020C                     	;# 
   480  020D                     	;# 
   481  0211                     	;# 
   482  0211                     	;# 
   483  0212                     	;# 
   484  0212                     	;# 
   485  0213                     	;# 
   486  0213                     	;# 
   487  0214                     	;# 
   488  0214                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0215                     	;# 
   492  0216                     	;# 
   493  0216                     	;# 
   494  0217                     	;# 
   495  0217                     	;# 
   496  0219                     	;# 
   497  021A                     	;# 
   498  021B                     	;# 
   499  021C                     	;# 
   500  021D                     	;# 
   501  021E                     	;# 
   502  021F                     	;# 
   503  0291                     	;# 
   504  0291                     	;# 
   505  0292                     	;# 
   506  0293                     	;# 
   507  0294                     	;# 
   508  0295                     	;# 
   509  0295                     	;# 
   510  0296                     	;# 
   511  0298                     	;# 
   512  0298                     	;# 
   513  0299                     	;# 
   514  029A                     	;# 
   515  029B                     	;# 
   516  029C                     	;# 
   517  029C                     	;# 
   518  029D                     	;# 
   519  029E                     	;# 
   520  029E                     	;# 
   521  0311                     	;# 
   522  0311                     	;# 
   523  0312                     	;# 
   524  0313                     	;# 
   525  0318                     	;# 
   526  0318                     	;# 
   527  0319                     	;# 
   528  031A                     	;# 
   529  0394                     	;# 
   530  0395                     	;# 
   531  0396                     	;# 
   532  039A                     	;# 
   533  039C                     	;# 
   534  039D                     	;# 
   535  039E                     	;# 
   536  039F                     	;# 
   537  0415                     	;# 
   538  0416                     	;# 
   539  0417                     	;# 
   540  041C                     	;# 
   541  041D                     	;# 
   542  041E                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;# 
   554  0000                     	;# 
   555  0001                     	;# 
   556  0002                     	;# 
   557  0003                     	;# 
   558  0004                     	;# 
   559  0005                     	;# 
   560  0006                     	;# 
   561  0007                     	;# 
   562  0008                     	;# 
   563  0009                     	;# 
   564  000A                     	;# 
   565  000B                     	;# 
   566  000C                     	;# 
   567  000D                     	;# 
   568  0011                     	;# 
   569  0012                     	;# 
   570  0013                     	;# 
   571  0014                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0016                     	;# 
   575  0017                     	;# 
   576  0018                     	;# 
   577  0019                     	;# 
   578  001A                     	;# 
   579  001B                     	;# 
   580  001C                     	;# 
   581  001E                     	;# 
   582  001F                     	;# 
   583  008C                     	;# 
   584  008D                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0095                     	;# 
   590  0096                     	;# 
   591  0097                     	;# 
   592  0098                     	;# 
   593  0099                     	;# 
   594  009A                     	;# 
   595  009B                     	;# 
   596  009B                     	;# 
   597  009C                     	;# 
   598  009D                     	;# 
   599  009E                     	;# 
   600  010C                     	;# 
   601  010D                     	;# 
   602  0111                     	;# 
   603  0112                     	;# 
   604  0113                     	;# 
   605  0114                     	;# 
   606  0115                     	;# 
   607  0116                     	;# 
   608  0117                     	;# 
   609  0118                     	;# 
   610  0119                     	;# 
   611  011A                     	;# 
   612  011B                     	;# 
   613  011D                     	;# 
   614  011E                     	;# 
   615  018C                     	;# 
   616  018D                     	;# 
   617  0191                     	;# 
   618  0191                     	;# 
   619  0192                     	;# 
   620  0193                     	;# 
   621  0193                     	;# 
   622  0193                     	;# 
   623  0194                     	;# 
   624  0195                     	;# 
   625  0196                     	;# 
   626  0199                     	;# 
   627  019A                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019C                     	;# 
   633  019C                     	;# 
   634  019D                     	;# 
   635  019E                     	;# 
   636  019F                     	;# 
   637  020C                     	;# 
   638  020D                     	;# 
   639  0211                     	;# 
   640  0211                     	;# 
   641  0212                     	;# 
   642  0212                     	;# 
   643  0213                     	;# 
   644  0213                     	;# 
   645  0214                     	;# 
   646  0214                     	;# 
   647  0215                     	;# 
   648  0215                     	;# 
   649  0215                     	;# 
   650  0216                     	;# 
   651  0216                     	;# 
   652  0217                     	;# 
   653  0217                     	;# 
   654  0219                     	;# 
   655  021A                     	;# 
   656  021B                     	;# 
   657  021C                     	;# 
   658  021D                     	;# 
   659  021E                     	;# 
   660  021F                     	;# 
   661  0291                     	;# 
   662  0291                     	;# 
   663  0292                     	;# 
   664  0293                     	;# 
   665  0294                     	;# 
   666  0295                     	;# 
   667  0295                     	;# 
   668  0296                     	;# 
   669  0298                     	;# 
   670  0298                     	;# 
   671  0299                     	;# 
   672  029A                     	;# 
   673  029B                     	;# 
   674  029C                     	;# 
   675  029C                     	;# 
   676  029D                     	;# 
   677  029E                     	;# 
   678  029E                     	;# 
   679  0311                     	;# 
   680  0311                     	;# 
   681  0312                     	;# 
   682  0313                     	;# 
   683  0318                     	;# 
   684  0318                     	;# 
   685  0319                     	;# 
   686  031A                     	;# 
   687  0394                     	;# 
   688  0395                     	;# 
   689  0396                     	;# 
   690  039A                     	;# 
   691  039C                     	;# 
   692  039D                     	;# 
   693  039E                     	;# 
   694  039F                     	;# 
   695  0415                     	;# 
   696  0416                     	;# 
   697  0417                     	;# 
   698  041C                     	;# 
   699  041D                     	;# 
   700  041E                     	;# 
   701  0FE4                     	;# 
   702  0FE5                     	;# 
   703  0FE6                     	;# 
   704  0FE7                     	;# 
   705  0FE8                     	;# 
   706  0FE9                     	;# 
   707  0FEA                     	;# 
   708  0FEB                     	;# 
   709  0FED                     	;# 
   710  0FEE                     	;# 
   711  0FEF                     	;# 
   712  0000                     	;# 
   713  0001                     	;# 
   714  0002                     	;# 
   715  0003                     	;# 
   716  0004                     	;# 
   717  0005                     	;# 
   718  0006                     	;# 
   719  0007                     	;# 
   720  0008                     	;# 
   721  0009                     	;# 
   722  000A                     	;# 
   723  000B                     	;# 
   724  000C                     	;# 
   725  000D                     	;# 
   726  0011                     	;# 
   727  0012                     	;# 
   728  0013                     	;# 
   729  0014                     	;# 
   730  0015                     	;# 
   731  0016                     	;# 
   732  0016                     	;# 
   733  0017                     	;# 
   734  0018                     	;# 
   735  0019                     	;# 
   736  001A                     	;# 
   737  001B                     	;# 
   738  001C                     	;# 
   739  001E                     	;# 
   740  001F                     	;# 
   741  008C                     	;# 
   742  008D                     	;# 
   743  0091                     	;# 
   744  0092                     	;# 
   745  0093                     	;# 
   746  0094                     	;# 
   747  0095                     	;# 
   748  0096                     	;# 
   749  0097                     	;# 
   750  0098                     	;# 
   751  0099                     	;# 
   752  009A                     	;# 
   753  009B                     	;# 
   754  009B                     	;# 
   755  009C                     	;# 
   756  009D                     	;# 
   757  009E                     	;# 
   758  010C                     	;# 
   759  010D                     	;# 
   760  0111                     	;# 
   761  0112                     	;# 
   762  0113                     	;# 
   763  0114                     	;# 
   764  0115                     	;# 
   765  0116                     	;# 
   766  0117                     	;# 
   767  0118                     	;# 
   768  0119                     	;# 
   769  011A                     	;# 
   770  011B                     	;# 
   771  011D                     	;# 
   772  011E                     	;# 
   773  018C                     	;# 
   774  018D                     	;# 
   775  0191                     	;# 
   776  0191                     	;# 
   777  0192                     	;# 
   778  0193                     	;# 
   779  0193                     	;# 
   780  0193                     	;# 
   781  0194                     	;# 
   782  0195                     	;# 
   783  0196                     	;# 
   784  0199                     	;# 
   785  019A                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019C                     	;# 
   791  019C                     	;# 
   792  019D                     	;# 
   793  019E                     	;# 
   794  019F                     	;# 
   795  020C                     	;# 
   796  020D                     	;# 
   797  0211                     	;# 
   798  0211                     	;# 
   799  0212                     	;# 
   800  0212                     	;# 
   801  0213                     	;# 
   802  0213                     	;# 
   803  0214                     	;# 
   804  0214                     	;# 
   805  0215                     	;# 
   806  0215                     	;# 
   807  0215                     	;# 
   808  0216                     	;# 
   809  0216                     	;# 
   810  0217                     	;# 
   811  0217                     	;# 
   812  0219                     	;# 
   813  021A                     	;# 
   814  021B                     	;# 
   815  021C                     	;# 
   816  021D                     	;# 
   817  021E                     	;# 
   818  021F                     	;# 
   819  0291                     	;# 
   820  0291                     	;# 
   821  0292                     	;# 
   822  0293                     	;# 
   823  0294                     	;# 
   824  0295                     	;# 
   825  0295                     	;# 
   826  0296                     	;# 
   827  0298                     	;# 
   828  0298                     	;# 
   829  0299                     	;# 
   830  029A                     	;# 
   831  029B                     	;# 
   832  029C                     	;# 
   833  029C                     	;# 
   834  029D                     	;# 
   835  029E                     	;# 
   836  029E                     	;# 
   837  0311                     	;# 
   838  0311                     	;# 
   839  0312                     	;# 
   840  0313                     	;# 
   841  0318                     	;# 
   842  0318                     	;# 
   843  0319                     	;# 
   844  031A                     	;# 
   845  0394                     	;# 
   846  0395                     	;# 
   847  0396                     	;# 
   848  039A                     	;# 
   849  039C                     	;# 
   850  039D                     	;# 
   851  039E                     	;# 
   852  039F                     	;# 
   853  0415                     	;# 
   854  0416                     	;# 
   855  0417                     	;# 
   856  041C                     	;# 
   857  041D                     	;# 
   858  041E                     	;# 
   859  0FE4                     	;# 
   860  0FE5                     	;# 
   861  0FE6                     	;# 
   862  0FE7                     	;# 
   863  0FE8                     	;# 
   864  0FE9                     	;# 
   865  0FEA                     	;# 
   866  0FEB                     	;# 
   867  0FED                     	;# 
   868  0FEE                     	;# 
   869  0FEF                     	;# 
   870  0000                     	;# 
   871  0001                     	;# 
   872  0002                     	;# 
   873  0003                     	;# 
   874  0004                     	;# 
   875  0005                     	;# 
   876  0006                     	;# 
   877  0007                     	;# 
   878  0008                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  0011                     	;# 
   885  0012                     	;# 
   886  0013                     	;# 
   887  0014                     	;# 
   888  0015                     	;# 
   889  0016                     	;# 
   890  0016                     	;# 
   891  0017                     	;# 
   892  0018                     	;# 
   893  0019                     	;# 
   894  001A                     	;# 
   895  001B                     	;# 
   896  001C                     	;# 
   897  001E                     	;# 
   898  001F                     	;# 
   899  008C                     	;# 
   900  008D                     	;# 
   901  0091                     	;# 
   902  0092                     	;# 
   903  0093                     	;# 
   904  0094                     	;# 
   905  0095                     	;# 
   906  0096                     	;# 
   907  0097                     	;# 
   908  0098                     	;# 
   909  0099                     	;# 
   910  009A                     	;# 
   911  009B                     	;# 
   912  009B                     	;# 
   913  009C                     	;# 
   914  009D                     	;# 
   915  009E                     	;# 
   916  010C                     	;# 
   917  010D                     	;# 
   918  0111                     	;# 
   919  0112                     	;# 
   920  0113                     	;# 
   921  0114                     	;# 
   922  0115                     	;# 
   923  0116                     	;# 
   924  0117                     	;# 
   925  0118                     	;# 
   926  0119                     	;# 
   927  011A                     	;# 
   928  011B                     	;# 
   929  011D                     	;# 
   930  011E                     	;# 
   931  018C                     	;# 
   932  018D                     	;# 
   933  0191                     	;# 
   934  0191                     	;# 
   935  0192                     	;# 
   936  0193                     	;# 
   937  0193                     	;# 
   938  0193                     	;# 
   939  0194                     	;# 
   940  0195                     	;# 
   941  0196                     	;# 
   942  0199                     	;# 
   943  019A                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019B                     	;# 
   948  019C                     	;# 
   949  019C                     	;# 
   950  019D                     	;# 
   951  019E                     	;# 
   952  019F                     	;# 
   953  020C                     	;# 
   954  020D                     	;# 
   955  0211                     	;# 
   956  0211                     	;# 
   957  0212                     	;# 
   958  0212                     	;# 
   959  0213                     	;# 
   960  0213                     	;# 
   961  0214                     	;# 
   962  0214                     	;# 
   963  0215                     	;# 
   964  0215                     	;# 
   965  0215                     	;# 
   966  0216                     	;# 
   967  0216                     	;# 
   968  0217                     	;# 
   969  0217                     	;# 
   970  0219                     	;# 
   971  021A                     	;# 
   972  021B                     	;# 
   973  021C                     	;# 
   974  021D                     	;# 
   975  021E                     	;# 
   976  021F                     	;# 
   977  0291                     	;# 
   978  0291                     	;# 
   979  0292                     	;# 
   980  0293                     	;# 
   981  0294                     	;# 
   982  0295                     	;# 
   983  0295                     	;# 
   984  0296                     	;# 
   985  0298                     	;# 
   986  0298                     	;# 
   987  0299                     	;# 
   988  029A                     	;# 
   989  029B                     	;# 
   990  029C                     	;# 
   991  029C                     	;# 
   992  029D                     	;# 
   993  029E                     	;# 
   994  029E                     	;# 
   995  0311                     	;# 
   996  0311                     	;# 
   997  0312                     	;# 
   998  0313                     	;# 
   999  0318                     	;# 
  1000  0318                     	;# 
  1001  0319                     	;# 
  1002  031A                     	;# 
  1003  0394                     	;# 
  1004  0395                     	;# 
  1005  0396                     	;# 
  1006  039A                     	;# 
  1007  039C                     	;# 
  1008  039D                     	;# 
  1009  039E                     	;# 
  1010  039F                     	;# 
  1011  0415                     	;# 
  1012  0416                     	;# 
  1013  0417                     	;# 
  1014  041C                     	;# 
  1015  041D                     	;# 
  1016  041E                     	;# 
  1017  0FE4                     	;# 
  1018  0FE5                     	;# 
  1019  0FE6                     	;# 
  1020  0FE7                     	;# 
  1021  0FE8                     	;# 
  1022  0FE9                     	;# 
  1023  0FEA                     	;# 
  1024  0FEB                     	;# 
  1025  0FED                     	;# 
  1026  0FEE                     	;# 
  1027  0FEF                     	;# 
  1028  0000                     	;# 
  1029  0001                     	;# 
  1030  0002                     	;# 
  1031  0003                     	;# 
  1032  0004                     	;# 
  1033  0005                     	;# 
  1034  0006                     	;# 
  1035  0007                     	;# 
  1036  0008                     	;# 
  1037  0009                     	;# 
  1038  000A                     	;# 
  1039  000B                     	;# 
  1040  000C                     	;# 
  1041  000D                     	;# 
  1042  0011                     	;# 
  1043  0012                     	;# 
  1044  0013                     	;# 
  1045  0014                     	;# 
  1046  0015                     	;# 
  1047  0016                     	;# 
  1048  0016                     	;# 
  1049  0017                     	;# 
  1050  0018                     	;# 
  1051  0019                     	;# 
  1052  001A                     	;# 
  1053  001B                     	;# 
  1054  001C                     	;# 
  1055  001E                     	;# 
  1056  001F                     	;# 
  1057  008C                     	;# 
  1058  008D                     	;# 
  1059  0091                     	;# 
  1060  0092                     	;# 
  1061  0093                     	;# 
  1062  0094                     	;# 
  1063  0095                     	;# 
  1064  0096                     	;# 
  1065  0097                     	;# 
  1066  0098                     	;# 
  1067  0099                     	;# 
  1068  009A                     	;# 
  1069  009B                     	;# 
  1070  009B                     	;# 
  1071  009C                     	;# 
  1072  009D                     	;# 
  1073  009E                     	;# 
  1074  010C                     	;# 
  1075  010D                     	;# 
  1076  0111                     	;# 
  1077  0112                     	;# 
  1078  0113                     	;# 
  1079  0114                     	;# 
  1080  0115                     	;# 
  1081  0116                     	;# 
  1082  0117                     	;# 
  1083  0118                     	;# 
  1084  0119                     	;# 
  1085  011A                     	;# 
  1086  011B                     	;# 
  1087  011D                     	;# 
  1088  011E                     	;# 
  1089  018C                     	;# 
  1090  018D                     	;# 
  1091  0191                     	;# 
  1092  0191                     	;# 
  1093  0192                     	;# 
  1094  0193                     	;# 
  1095  0193                     	;# 
  1096  0193                     	;# 
  1097  0194                     	;# 
  1098  0195                     	;# 
  1099  0196                     	;# 
  1100  0199                     	;# 
  1101  019A                     	;# 
  1102  019B                     	;# 
  1103  019B                     	;# 
  1104  019B                     	;# 
  1105  019B                     	;# 
  1106  019C                     	;# 
  1107  019C                     	;# 
  1108  019D                     	;# 
  1109  019E                     	;# 
  1110  019F                     	;# 
  1111  020C                     	;# 
  1112  020D                     	;# 
  1113  0211                     	;# 
  1114  0211                     	;# 
  1115  0212                     	;# 
  1116  0212                     	;# 
  1117  0213                     	;# 
  1118  0213                     	;# 
  1119  0214                     	;# 
  1120  0214                     	;# 
  1121  0215                     	;# 
  1122  0215                     	;# 
  1123  0215                     	;# 
  1124  0216                     	;# 
  1125  0216                     	;# 
  1126  0217                     	;# 
  1127  0217                     	;# 
  1128  0219                     	;# 
  1129  021A                     	;# 
  1130  021B                     	;# 
  1131  021C                     	;# 
  1132  021D                     	;# 
  1133  021E                     	;# 
  1134  021F                     	;# 
  1135  0291                     	;# 
  1136  0291                     	;# 
  1137  0292                     	;# 
  1138  0293                     	;# 
  1139  0294                     	;# 
  1140  0295                     	;# 
  1141  0295                     	;# 
  1142  0296                     	;# 
  1143  0298                     	;# 
  1144  0298                     	;# 
  1145  0299                     	;# 
  1146  029A                     	;# 
  1147  029B                     	;# 
  1148  029C                     	;# 
  1149  029C                     	;# 
  1150  029D                     	;# 
  1151  029E                     	;# 
  1152  029E                     	;# 
  1153  0311                     	;# 
  1154  0311                     	;# 
  1155  0312                     	;# 
  1156  0313                     	;# 
  1157  0318                     	;# 
  1158  0318                     	;# 
  1159  0319                     	;# 
  1160  031A                     	;# 
  1161  0394                     	;# 
  1162  0395                     	;# 
  1163  0396                     	;# 
  1164  039A                     	;# 
  1165  039C                     	;# 
  1166  039D                     	;# 
  1167  039E                     	;# 
  1168  039F                     	;# 
  1169  0415                     	;# 
  1170  0416                     	;# 
  1171  0417                     	;# 
  1172  041C                     	;# 
  1173  041D                     	;# 
  1174  041E                     	;# 
  1175  0FE4                     	;# 
  1176  0FE5                     	;# 
  1177  0FE6                     	;# 
  1178  0FE7                     	;# 
  1179  0FE8                     	;# 
  1180  0FE9                     	;# 
  1181  0FEA                     	;# 
  1182  0FEB                     	;# 
  1183  0FED                     	;# 
  1184  0FEE                     	;# 
  1185  0FEF                     	;# 
  1186                           
  1187                           	psect	idataBANK0
  1188  000B                     __pidataBANK0:
  1189                           
  1190                           ;initializer for lcd_set_cursor@F2395
  1191  000B  3400               	retlw	0
  1192  000C  3440               	retlw	64
  1193  000D  3414               	retlw	20
  1194  000E  3454               	retlw	84
  1195                           
  1196                           	psect	stringtext1
  1197  0800                     __pstringtext1:
  1198  0800                     _dpowers:
  1199  0800  3401               	retlw	1
  1200  0801  3400               	retlw	0
  1201  0802  340A               	retlw	10
  1202  0803  3400               	retlw	0
  1203  0804  3464               	retlw	100
  1204  0805  3400               	retlw	0
  1205  0806  34E8               	retlw	232
  1206  0807  3403               	retlw	3
  1207  0808  3410               	retlw	16
  1208  0809  3427               	retlw	39
  1209  080A                     __end_of_dpowers:
  1210  000C                     _PORTAbits	set	12
  1211  0095                     _OPTION_REGbits	set	149
  1212  008D                     _TRISB	set	141
  1213  008C                     _TRISA	set	140
  1214  0097                     _WDTCON	set	151
  1215  0098                     _OSCTUNE	set	152
  1216  0099                     _OSCCON	set	153
  1217  011E                     _APFCON1	set	286
  1218  011D                     _APFCON0	set	285
  1219  010D                     _LATB	set	269
  1220  010C                     _LATA	set	268
  1221  0116                     _BORCON	set	278
  1222  018C                     _ANSELA	set	396
  1223  018D                     _ANSELB	set	397
  1224  021D                     _SSP2CON1bits	set	541
  1225  021C                     _SSP2STATbits	set	540
  1226  0219                     _SSP2BUF	set	537
  1227  021E                     _SSP2CON2bits	set	542
  1228  021C                     _SSP2STAT	set	540
  1229  021E                     _SSP2CON2	set	542
  1230  021D                     _SSP2CON1	set	541
  1231  021A                     _SSP2ADD	set	538
  1232  020C                     _WPUA	set	524
  1233  020D                     _WPUB	set	525
  1234  080A                     STR_2:
  1235  080A  346C               	retlw	108	;'l'
  1236  080B  346F               	retlw	111	;'o'
  1237  080C  3461               	retlw	97	;'a'
  1238  080D  3464               	retlw	100	;'d'
  1239  080E  3420               	retlw	32	;' '
  1240  080F  3463               	retlw	99	;'c'
  1241  0810  3465               	retlw	101	;'e'
  1242  0811  346C               	retlw	108	;'l'
  1243  0812  346C               	retlw	108	;'l'
  1244  0813  3420               	retlw	32	;' '
  1245  0814  3473               	retlw	115	;'s'
  1246  0815  3465               	retlw	101	;'e'
  1247  0816  3474               	retlw	116	;'t'
  1248  0817  3420               	retlw	32	;' '
  1249  0818  3475               	retlw	117	;'u'
  1250  0819  3470               	retlw	112	;'p'
  1251  081A  3400               	retlw	0
  1252                           
  1253                           	psect	stringtext2
  1254  081B                     __pstringtext2:
  1255  081B                     STR_1:
  1256  081B  3449               	retlw	73	;'I'
  1257  081C  346E               	retlw	110	;'n'
  1258  081D  3469               	retlw	105	;'i'
  1259  081E  3474               	retlw	116	;'t'
  1260  081F  3469               	retlw	105	;'i'
  1261  0820  3461               	retlw	97	;'a'
  1262  0821  346C               	retlw	108	;'l'
  1263  0822  3469               	retlw	105	;'i'
  1264  0823  347A               	retlw	122	;'z'
  1265  0824  3465               	retlw	101	;'e'
  1266  0825  3400               	retlw	0
  1267                           
  1268                           	psect	stringtext3
  1269  0826                     __pstringtext3:
  1270  0826                     STR_3:
  1271  0826  3425               	retlw	37	;'%'
  1272  0827  3464               	retlw	100	;'d'
  1273  0828  3420               	retlw	32	;' '
  1274  0829  3467               	retlw	103	;'g'
  1275  082A  3400               	retlw	0
  1276                           
  1277                           	psect	stringtext4
  1278  082B                     __pstringtext4:
  1279  082B                     STR_5:
  1280  082B  3420               	retlw	32	;' '
  1281  082C  3400               	retlw	0
  1282                           
  1283                           	psect	stringtext5
  1284  0000                     __pstringtext5:
  1285  0826                     
  1286                           	psect	cinit
  1287  07E5                     start_initialization:	
  1288                           ; #config settings
  1289                           
  1290  07E5                     __initialization:
  1291                           
  1292                           ; Initialize objects allocated to BANK0
  1293  07E5  3180  200B  3187   	fcall	__pidataBANK0	;fetch initializer
  1294  07E8  00D9               	movwf	__pdataBANK0& (0+127)
  1295  07E9  3180  200C  3187   	fcall	__pidataBANK0+1	;fetch initializer
  1296  07EC  00DA               	movwf	(__pdataBANK0+1)& (0+127)
  1297  07ED  3180  200D  3187   	fcall	__pidataBANK0+2	;fetch initializer
  1298  07F0  00DB               	movwf	(__pdataBANK0+2)& (0+127)
  1299  07F1  3180  200E  3187   	fcall	__pidataBANK0+3	;fetch initializer
  1300  07F4  00DC               	movwf	(__pdataBANK0+3)& (0+127)
  1301                           
  1302                           ; Clear objects allocated to BANK0
  1303  07F5  3042               	movlw	low __pbssBANK0
  1304  07F6  0084               	movwf	4
  1305  07F7  3000               	movlw	high __pbssBANK0
  1306  07F8  0085               	movwf	5
  1307  07F9  3017               	movlw	23
  1308  07FA  3180  2015  3187   	fcall	clear_ram0
  1309  07FD                     end_of_initialization:	
  1310                           ;End of C runtime variable initialization code
  1311                           
  1312  07FD                     __end_of__initialization:
  1313  07FD  0020               	movlb	0
  1314  07FE  3184  2C6B         	ljmp	_main	;jump to C main() function
  1315                           
  1316                           	psect	bssBANK0
  1317  0042                     __pbssBANK0:
  1318  0042                     _weight_zero:
  1319  0042                     	ds	3
  1320  0045                     _weight_dat:
  1321  0045                     	ds	3
  1322  0048                     __backlightval:
  1323  0048                     	ds	1
  1324  0049                     _str:
  1325  0049                     	ds	16
  1326                           
  1327                           	psect	dataBANK0
  1328  0059                     __pdataBANK0:
  1329  0059                     lcd_set_cursor@F2395:
  1330  0059                     	ds	4
  1331                           
  1332                           	psect	clrtext
  1333  0015                     clear_ram0:	
  1334                           ;	Called with FSR0 containing the base address, and
  1335                           ;	WREG with the size to clear
  1336                           
  1337  0015  0064               	clrwdt	;clear the watchdog before getting into this loop
  1338  0016                     clrloop0:
  1339  0016  0180               	clrf	0	;clear RAM location pointed to by FSR
  1340  0017  3101               	addfsr 0,1
  1341  0018  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1342  0019  2816               	goto	clrloop0	;have we reached the end yet?
  1343  001A  3400               	retlw	0	;all done for this memory range, return
  1344                           
  1345                           	psect	cstackCOMMON
  1346  0070                     __pcstackCOMMON:
  1347  0070                     ?_PIN_MANAGER_Initialize:
  1348  0070                     ??_PIN_MANAGER_Initialize:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ?_OSCILLATOR_Initialize:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ??_OSCILLATOR_Initialize:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_WDT_Initialize:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ??_WDT_Initialize:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ?_lcd_init:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_lcd_backlight:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     ?_lcd_clear:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0070                     ?_SYSTEM_Initialize:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ??_SYSTEM_Initialize:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ?_main:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0070                     ?_set_CELL_CLK_LOW:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0070                     ??_set_CELL_CLK_LOW:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0070                     ?_set_CELL_CLK_HIGH:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0070                     ??_set_CELL_CLK_HIGH:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0070                     ?_get_CELL_DAT_VAL:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0070                     ??_get_CELL_DAT_VAL:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0070                     ?_i2c_wait:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0070                     ??_i2c_wait:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0070                     ?_i2c_start:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0070                     ??_i2c_start:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     ?_i2c_stop:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     ??_i2c_stop:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ?_i2c_write:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ??_i2c_write:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ?_lcd_cmd:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ?___lwdiv:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     ?___ltdiv:	
  1430                           ; 2 bytes @ 0x0
  1431                           
  1432  0070                     ?___fldiv:	
  1433                           ; 3 bytes @ 0x0
  1434                           
  1435  0070                     ?___xxtofl:	
  1436                           ; 4 bytes @ 0x0
  1437                           
  1438  0070                     i2c_write@data:	
  1439                           ; 4 bytes @ 0x0
  1440                           
  1441  0070                     ___lwdiv@divisor:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ___ltdiv@divisor:	
  1445                           ; 2 bytes @ 0x0
  1446                           
  1447  0070                     ___fldiv@a:	
  1448                           ; 3 bytes @ 0x0
  1449                           
  1450  0070                     ___xxtofl@val:	
  1451                           ; 4 bytes @ 0x0
  1452                           
  1453                           
  1454                           ; 4 bytes @ 0x0
  1455  0070                     	ds	1
  1456  0071                     ??_lcd_cmd:
  1457  0071                     lcd_cmd@cmd:	
  1458                           ; 1 bytes @ 0x1
  1459                           
  1460                           
  1461                           ; 1 bytes @ 0x1
  1462  0071                     	ds	1
  1463  0072                     ??_lcd_init:
  1464  0072                     ??_lcd_backlight:	
  1465                           ; 1 bytes @ 0x2
  1466                           
  1467  0072                     ?_command:	
  1468                           ; 1 bytes @ 0x2
  1469                           
  1470  0072                     command@mode:	
  1471                           ; 1 bytes @ 0x2
  1472                           
  1473  0072                     ___lwdiv@dividend:	
  1474                           ; 1 bytes @ 0x2
  1475                           
  1476                           
  1477                           ; 2 bytes @ 0x2
  1478  0072                     	ds	1
  1479  0073                     ??_command:
  1480  0073                     ___ltdiv@dividend:	
  1481                           ; 1 bytes @ 0x3
  1482                           
  1483                           
  1484                           ; 3 bytes @ 0x3
  1485  0073                     	ds	1
  1486  0074                     ??___lwdiv:
  1487  0074                     ??___xxtofl:	
  1488                           ; 1 bytes @ 0x4
  1489                           
  1490  0074                     ___fldiv@b:	
  1491                           ; 1 bytes @ 0x4
  1492                           
  1493                           
  1494                           ; 4 bytes @ 0x4
  1495  0074                     	ds	1
  1496  0075                     command@val:
  1497  0075                     ___lwdiv@quotient:	
  1498                           ; 1 bytes @ 0x5
  1499                           
  1500                           
  1501                           ; 2 bytes @ 0x5
  1502  0075                     	ds	1
  1503  0076                     ??___ltdiv:
  1504  0076                     command@highnib:	
  1505                           ; 1 bytes @ 0x6
  1506                           
  1507                           
  1508                           ; 1 bytes @ 0x6
  1509  0076                     	ds	1
  1510  0077                     command@lownib:
  1511  0077                     ___lwdiv@counter:	
  1512                           ; 1 bytes @ 0x7
  1513                           
  1514  0077                     ___ltdiv@quotient:	
  1515                           ; 1 bytes @ 0x7
  1516                           
  1517                           
  1518                           ; 3 bytes @ 0x7
  1519  0077                     	ds	1
  1520  0078                     ?_lcd_set_cursor:
  1521  0078                     ?_lcd_print:	
  1522                           ; 1 bytes @ 0x8
  1523                           
  1524  0078                     ??___fldiv:	
  1525                           ; 1 bytes @ 0x8
  1526                           
  1527  0078                     ?___lwmod:	
  1528                           ; 1 bytes @ 0x8
  1529                           
  1530  0078                     lcd_set_cursor@row:	
  1531                           ; 2 bytes @ 0x8
  1532                           
  1533  0078                     ___xxtofl@sign:	
  1534                           ; 1 bytes @ 0x8
  1535                           
  1536  0078                     lcd_print@str:	
  1537                           ; 1 bytes @ 0x8
  1538                           
  1539  0078                     ___lwmod@divisor:	
  1540                           ; 2 bytes @ 0x8
  1541                           
  1542                           
  1543                           ; 2 bytes @ 0x8
  1544  0078                     	ds	1
  1545  0079                     ??_lcd_set_cursor:
  1546  0079                     ___xxtofl@exp:	
  1547                           ; 1 bytes @ 0x9
  1548                           
  1549                           
  1550                           ; 1 bytes @ 0x9
  1551  0079                     	ds	1
  1552  007A                     ??_lcd_print:
  1553  007A                     ___ltdiv@counter:	
  1554                           ; 1 bytes @ 0xA
  1555                           
  1556  007A                     ___lwmod@dividend:	
  1557                           ; 1 bytes @ 0xA
  1558                           
  1559  007A                     ___xxtofl@arg:	
  1560                           ; 2 bytes @ 0xA
  1561                           
  1562                           
  1563                           ; 4 bytes @ 0xA
  1564  007A                     	ds	1
  1565  007B                     ?_get_scale_val:
  1566  007B                     lcd_print@cmd:	
  1567                           ; 3 bytes @ 0xB
  1568                           
  1569                           
  1570                           ; 1 bytes @ 0xB
  1571  007B                     	ds	1
  1572  007C                     ??_lcd_clear:
  1573  007C                     ??___lwmod:	
  1574                           ; 1 bytes @ 0xC
  1575                           
  1576                           
  1577                           ; 1 bytes @ 0xC
  1578  007C                     	ds	1
  1579  007D                     ___lwmod@counter:
  1580                           
  1581                           ; 1 bytes @ 0xD
  1582  007D                     	ds	1
  1583                           
  1584                           	psect	cstackBANK0
  1585  0020                     __pcstackBANK0:
  1586  0020                     ??_get_scale_val:
  1587  0020                     ?_sprintf:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0020                     sprintf@f:	
  1591                           ; 2 bytes @ 0x0
  1592                           
  1593  0020                     lcd_set_cursor@row_offsets:	
  1594                           ; 2 bytes @ 0x0
  1595                           
  1596  0020                     ___fldiv@rem:	
  1597                           ; 4 bytes @ 0x0
  1598                           
  1599                           
  1600                           ; 4 bytes @ 0x0
  1601  0020                     	ds	3
  1602  0023                     get_scale_val@weight_add:
  1603                           
  1604                           ; 3 bytes @ 0x3
  1605  0023                     	ds	1
  1606  0024                     lcd_set_cursor@col:
  1607  0024                     ___fldiv@sign:	
  1608                           ; 1 bytes @ 0x4
  1609                           
  1610                           
  1611                           ; 1 bytes @ 0x4
  1612  0024                     	ds	1
  1613  0025                     lcd_set_cursor@cmd:
  1614  0025                     ___fldiv@new_exp:	
  1615                           ; 1 bytes @ 0x5
  1616                           
  1617                           
  1618                           ; 2 bytes @ 0x5
  1619  0025                     	ds	1
  1620  0026                     ??_sprintf:
  1621  0026                     get_scale_val@j:	
  1622                           ; 1 bytes @ 0x6
  1623                           
  1624  0026                     lcd_clear@row:	
  1625                           ; 1 bytes @ 0x6
  1626                           
  1627                           
  1628                           ; 1 bytes @ 0x6
  1629  0026                     	ds	1
  1630  0027                     get_scale_val@n:
  1631  0027                     lcd_clear@col:	
  1632                           ; 1 bytes @ 0x7
  1633                           
  1634  0027                     ___fldiv@grs:	
  1635                           ; 1 bytes @ 0x7
  1636                           
  1637                           
  1638                           ; 4 bytes @ 0x7
  1639  0027                     	ds	1
  1640  0028                     get_scale_val@weight_count:
  1641                           
  1642                           ; 3 bytes @ 0x8
  1643  0028                     	ds	2
  1644  002A                     sprintf@ap:
  1645                           
  1646                           ; 1 bytes @ 0xA
  1647  002A                     	ds	1
  1648  002B                     get_scale_val@i:
  1649  002B                     sprintf@flag:	
  1650                           ; 1 bytes @ 0xB
  1651                           
  1652  002B                     ___fldiv@bexp:	
  1653                           ; 1 bytes @ 0xB
  1654                           
  1655                           
  1656                           ; 1 bytes @ 0xB
  1657  002B                     	ds	1
  1658  002C                     sprintf@prec:
  1659  002C                     ___fldiv@aexp:	
  1660                           ; 1 bytes @ 0xC
  1661                           
  1662                           
  1663                           ; 1 bytes @ 0xC
  1664  002C                     	ds	1
  1665  002D                     ?_scale_convert_gram:
  1666  002D                     sprintf@val:	
  1667                           ; 4 bytes @ 0xD
  1668                           
  1669  002D                     scale_convert_gram@count:	
  1670                           ; 2 bytes @ 0xD
  1671                           
  1672                           
  1673                           ; 3 bytes @ 0xD
  1674  002D                     	ds	2
  1675  002F                     sprintf@sp:
  1676                           
  1677                           ; 1 bytes @ 0xF
  1678  002F                     	ds	1
  1679  0030                     sprintf@c:
  1680                           
  1681                           ; 1 bytes @ 0x10
  1682  0030                     	ds	1
  1683  0031                     ??_scale_convert_gram:
  1684                           
  1685                           ; 1 bytes @ 0x11
  1686  0031                     	ds	3
  1687  0034                     scale_convert_gram@temp:
  1688                           
  1689                           ; 4 bytes @ 0x14
  1690  0034                     	ds	4
  1691  0038                     ??_main:
  1692                           
  1693                           ; 1 bytes @ 0x18
  1694  0038                     	ds	2
  1695  003A                     main@weight_gram:
  1696                           
  1697                           ; 4 bytes @ 0x1A
  1698  003A                     	ds	4
  1699  003E                     main@weight_gram_180:
  1700                           
  1701                           ; 4 bytes @ 0x1E
  1702  003E                     	ds	4
  1703                           
  1704                           	psect	maintext
  1705  046B                     __pmaintext:	
  1706 ;;
  1707 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1708 ;;
  1709 ;; *************** function _main *****************
  1710 ;; Defined at:
  1711 ;;		line 8 in file "main.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  weight_gram     4   30[BANK0 ] float 
  1716 ;;  weight_gram     4   26[BANK0 ] float 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : B1F/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1726 ;;      Params:         0       0       0       0       0       0
  1727 ;;      Locals:         0       8       0       0       0       0
  1728 ;;      Temps:          0       2       0       0       0       0
  1729 ;;      Totals:         0      10       0       0       0       0
  1730 ;;Total ram usage:       10 bytes
  1731 ;; Hardware stack levels required when called: 6
  1732 ;; This function calls:
  1733 ;;		_SYSTEM_Initialize
  1734 ;;		_get_scale_val
  1735 ;;		_lcd_backlight
  1736 ;;		_lcd_clear
  1737 ;;		_lcd_init
  1738 ;;		_lcd_print
  1739 ;;		_lcd_set_cursor
  1740 ;;		_scale_convert_gram
  1741 ;;		_sprintf
  1742 ;; This function is called by:
  1743 ;;		Startup code after reset
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _main
  1749  046B                     _main:
  1750  046B                     l2207:	
  1751                           ;incstack = 0
  1752                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1753                           
  1754                           
  1755                           ;main.c: 10: SYSTEM_Initialize();
  1756  046B  3180  2030  3184   	fcall	_SYSTEM_Initialize
  1757  046E                     l2209:
  1758                           
  1759                           ;main.c: 13: WPUB = 0x24;
  1760  046E  3024               	movlw	36
  1761  046F  0024               	movlb	4	; select bank4
  1762  0470  008D               	movwf	13	;volatile
  1763  0471                     l2211:
  1764                           
  1765                           ;main.c: 14: OPTION_REGbits.nWPUEN = 0;
  1766  0471  0021               	movlb	1	; select bank1
  1767  0472  1395               	bcf	21,7	;volatile
  1768  0473                     l2213:
  1769                           
  1770                           ;main.c: 17: ANSELA = 0x00;
  1771  0473  0023               	movlb	3	; select bank3
  1772  0474  018C               	clrf	12	;volatile
  1773  0475                     l2215:
  1774                           
  1775                           ;main.c: 18: ANSELB = 0x00;
  1776  0475  018D               	clrf	13	;volatile
  1777  0476                     l2217:
  1778                           
  1779                           ;main.c: 22: TRISA = 0x08;
  1780  0476  3008               	movlw	8
  1781  0477  0021               	movlb	1	; select bank1
  1782  0478  008C               	movwf	12	;volatile
  1783  0479                     l2219:
  1784                           
  1785                           ;main.c: 24: LATA = 0x00;
  1786  0479  0022               	movlb	2	; select bank2
  1787  047A  018C               	clrf	12	;volatile
  1788  047B                     l2221:
  1789                           
  1790                           ;main.c: 25: LATB = 0x00;
  1791  047B  018D               	clrf	13	;volatile
  1792  047C                     l2223:
  1793                           
  1794                           ;main.c: 29: SSP2ADD = 0x13;
  1795  047C  3013               	movlw	19
  1796  047D  0024               	movlb	4	; select bank4
  1797  047E  009A               	movwf	26	;volatile
  1798  047F                     l2225:
  1799                           
  1800                           ;main.c: 30: SSP2CON1 = 0x28;
  1801  047F  3028               	movlw	40
  1802  0480  009D               	movwf	29	;volatile
  1803  0481                     l2227:
  1804                           
  1805                           ;main.c: 31: SSP2CON2 = 0x0;
  1806  0481  019E               	clrf	30	;volatile
  1807  0482                     l2229:
  1808                           
  1809                           ;main.c: 32: SSP2STAT = 0;
  1810  0482  019C               	clrf	28	;volatile
  1811                           
  1812                           ;main.c: 34: lcd_init();
  1813  0483  3185  2545  3184   	fcall	_lcd_init
  1814                           
  1815                           ;main.c: 35: lcd_backlight();
  1816  0486  3180  2050  3184   	fcall	_lcd_backlight
  1817  0489                     l2231:
  1818                           
  1819                           ;main.c: 36: lcd_set_cursor(0, 0);
  1820  0489  01F8               	clrf	lcd_set_cursor@row
  1821  048A  3000               	movlw	0
  1822  048B  3180  20B5  3184   	fcall	_lcd_set_cursor
  1823  048E                     l2233:
  1824                           
  1825                           ;main.c: 39: lcd_print("Initialize");
  1826  048E  301B               	movlw	low (STR_1| (0+32768))
  1827  048F  00F8               	movwf	lcd_print@str
  1828  0490  3088               	movlw	high (STR_1| (0+32768))
  1829  0491  00F9               	movwf	lcd_print@str+1
  1830  0492  3180  2098  3184   	fcall	_lcd_print
  1831  0495                     l2235:
  1832                           
  1833                           ;main.c: 41: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1834  0495  300B               	movlw	11
  1835  0496  0020               	movlb	0	; select bank0
  1836  0497  00B9               	movwf	??_main+1
  1837  0498  3026               	movlw	38
  1838  0499  00B8               	movwf	??_main
  1839  049A  305D               	movlw	93
  1840  049B                     u1817:
  1841  049B  0B89               	decfsz	9,f
  1842  049C  2C9B               	goto	u1817
  1843  049D  0BB8               	decfsz	??_main,f
  1844  049E  2C9B               	goto	u1817
  1845  049F  0BB9               	decfsz	??_main+1,f
  1846  04A0  2C9B               	goto	u1817
  1847  04A1  3200               	nop2
  1848  04A2                     l2237:
  1849                           
  1850                           ;main.c: 43: weight_zero = get_scale_val(50);
  1851  04A2  3032               	movlw	50
  1852  04A3  3182  2240  3184   	fcall	_get_scale_val
  1853  04A6  087B               	movf	?_get_scale_val,w
  1854  04A7  0020               	movlb	0	; select bank0
  1855  04A8  00C2               	movwf	_weight_zero
  1856  04A9  087C               	movf	?_get_scale_val+1,w
  1857  04AA  00C3               	movwf	_weight_zero+1
  1858  04AB  087D               	movf	?_get_scale_val+2,w
  1859  04AC  00C4               	movwf	_weight_zero+2
  1860  04AD                     l2239:
  1861                           
  1862                           ;main.c: 45: lcd_clear();
  1863  04AD  3180  20D7  3184   	fcall	_lcd_clear
  1864  04B0                     l2241:
  1865                           
  1866                           ;main.c: 46: lcd_set_cursor(0, 0);
  1867  04B0  01F8               	clrf	lcd_set_cursor@row
  1868  04B1  3000               	movlw	0
  1869  04B2  3180  20B5  3184   	fcall	_lcd_set_cursor
  1870  04B5                     l2243:
  1871                           
  1872                           ;main.c: 47: lcd_print("load cell set up");
  1873  04B5  300A               	movlw	low (STR_2| (0+32768))
  1874  04B6  00F8               	movwf	lcd_print@str
  1875  04B7  3088               	movlw	high (STR_2| (0+32768))
  1876  04B8  00F9               	movwf	lcd_print@str+1
  1877  04B9  3180  2098  3184   	fcall	_lcd_print
  1878  04BC                     l2245:
  1879                           
  1880                           ;main.c: 48: lcd_set_cursor(0, 1);
  1881  04BC  01F8               	clrf	lcd_set_cursor@row
  1882  04BD  0AF8               	incf	lcd_set_cursor@row,f
  1883  04BE  3000               	movlw	0
  1884  04BF  3180  20B5  3184   	fcall	_lcd_set_cursor
  1885  04C2                     l2247:
  1886                           
  1887                           ;main.c: 49: float weight_gram = scale_convert_gram(weight_dat);
  1888  04C2  0020               	movlb	0	; select bank0
  1889  04C3  0845               	movf	_weight_dat,w
  1890  04C4  00AD               	movwf	scale_convert_gram@count
  1891  04C5  0846               	movf	_weight_dat+1,w
  1892  04C6  00AE               	movwf	scale_convert_gram@count+1
  1893  04C7  0847               	movf	_weight_dat+2,w
  1894  04C8  00AF               	movwf	scale_convert_gram@count+2
  1895  04C9  3181  21F3  3184   	fcall	_scale_convert_gram
  1896  04CC  0020               	movlb	0	; select bank0
  1897  04CD  0830               	movf	?_scale_convert_gram+3,w
  1898  04CE  00BD               	movwf	main@weight_gram+3
  1899  04CF  082F               	movf	?_scale_convert_gram+2,w
  1900  04D0  00BC               	movwf	main@weight_gram+2
  1901  04D1  082E               	movf	?_scale_convert_gram+1,w
  1902  04D2  00BB               	movwf	main@weight_gram+1
  1903  04D3  082D               	movf	?_scale_convert_gram,w
  1904  04D4  00BA               	movwf	main@weight_gram
  1905  04D5                     l2249:
  1906                           
  1907                           ;main.c: 51: sprintf(str, "%d g", weight_gram);
  1908  04D5  3026               	movlw	low (STR_3| (0+32768))
  1909  04D6  00A0               	movwf	sprintf@f
  1910  04D7  3088               	movlw	high (STR_3| (0+32768))
  1911  04D8  00A1               	movwf	sprintf@f+1
  1912  04D9  083D               	movf	main@weight_gram+3,w
  1913  04DA  00A5               	movwf	?_sprintf+5
  1914  04DB  083C               	movf	main@weight_gram+2,w
  1915  04DC  00A4               	movwf	?_sprintf+4
  1916  04DD  083B               	movf	main@weight_gram+1,w
  1917  04DE  00A3               	movwf	?_sprintf+3
  1918  04DF  083A               	movf	main@weight_gram,w
  1919  04E0  00A2               	movwf	?_sprintf+2
  1920  04E1  3049               	movlw	(low (_str| 0))& (0+255)
  1921  04E2  3183  2392  3184   	fcall	_sprintf
  1922  04E5                     l2251:
  1923                           
  1924                           ;main.c: 53: lcd_print(str);
  1925  04E5  3049               	movlw	low _str
  1926  04E6  00F8               	movwf	lcd_print@str
  1927  04E7  3000               	movlw	high _str
  1928  04E8  00F9               	movwf	lcd_print@str+1
  1929  04E9  3180  2098  3184   	fcall	_lcd_print
  1930  04EC                     l2253:
  1931                           
  1932                           ;main.c: 55: _delay((unsigned long)((3000)*(8000000/4000.0)));
  1933  04EC  301F               	movlw	31
  1934  04ED  0020               	movlb	0	; select bank0
  1935  04EE  00B9               	movwf	??_main+1
  1936  04EF  3071               	movlw	113
  1937  04F0  00B8               	movwf	??_main
  1938  04F1  301E               	movlw	30
  1939  04F2                     u1827:
  1940  04F2  0B89               	decfsz	9,f
  1941  04F3  2CF2               	goto	u1827
  1942  04F4  0BB8               	decfsz	??_main,f
  1943  04F5  2CF2               	goto	u1827
  1944  04F6  0BB9               	decfsz	??_main+1,f
  1945  04F7  2CF2               	goto	u1827
  1946  04F8  0000               	nop
  1947  04F9                     l2255:
  1948                           
  1949                           ;main.c: 58: {;main.c: 59: weight_dat = get_scale_val(8);
  1950  04F9  3008               	movlw	8
  1951  04FA  3182  2240  3184   	fcall	_get_scale_val
  1952  04FD  087B               	movf	?_get_scale_val,w
  1953  04FE  0020               	movlb	0	; select bank0
  1954  04FF  00C5               	movwf	_weight_dat
  1955  0500  087C               	movf	?_get_scale_val+1,w
  1956  0501  00C6               	movwf	_weight_dat+1
  1957  0502  087D               	movf	?_get_scale_val+2,w
  1958  0503  00C7               	movwf	_weight_dat+2
  1959  0504                     l2257:
  1960                           
  1961                           ;main.c: 60: float weight_gram = scale_convert_gram(weight_dat);
  1962  0504  0845               	movf	_weight_dat,w
  1963  0505  00AD               	movwf	scale_convert_gram@count
  1964  0506  0846               	movf	_weight_dat+1,w
  1965  0507  00AE               	movwf	scale_convert_gram@count+1
  1966  0508  0847               	movf	_weight_dat+2,w
  1967  0509  00AF               	movwf	scale_convert_gram@count+2
  1968  050A  3181  21F3  3184   	fcall	_scale_convert_gram
  1969  050D  0020               	movlb	0	; select bank0
  1970  050E  0830               	movf	?_scale_convert_gram+3,w
  1971  050F  00C1               	movwf	main@weight_gram_180+3
  1972  0510  082F               	movf	?_scale_convert_gram+2,w
  1973  0511  00C0               	movwf	main@weight_gram_180+2
  1974  0512  082E               	movf	?_scale_convert_gram+1,w
  1975  0513  00BF               	movwf	main@weight_gram_180+1
  1976  0514  082D               	movf	?_scale_convert_gram,w
  1977  0515  00BE               	movwf	main@weight_gram_180
  1978                           
  1979                           ;main.c: 62: sprintf(str, "%d g", weight_gram);
  1980  0516  3026               	movlw	low (STR_3| (0+32768))
  1981  0517  00A0               	movwf	sprintf@f
  1982  0518  3088               	movlw	high (STR_3| (0+32768))
  1983  0519  00A1               	movwf	sprintf@f+1
  1984  051A  0841               	movf	main@weight_gram_180+3,w
  1985  051B  00A5               	movwf	?_sprintf+5
  1986  051C  0840               	movf	main@weight_gram_180+2,w
  1987  051D  00A4               	movwf	?_sprintf+4
  1988  051E  083F               	movf	main@weight_gram_180+1,w
  1989  051F  00A3               	movwf	?_sprintf+3
  1990  0520  083E               	movf	main@weight_gram_180,w
  1991  0521  00A2               	movwf	?_sprintf+2
  1992  0522  3049               	movlw	(low (_str| 0))& (0+255)
  1993  0523  3183  2392  3184   	fcall	_sprintf
  1994                           
  1995                           ;main.c: 64: lcd_clear();
  1996  0526  3180  20D7  3184   	fcall	_lcd_clear
  1997  0529                     l2259:
  1998                           
  1999                           ;main.c: 65: lcd_set_cursor(0, 0);
  2000  0529  01F8               	clrf	lcd_set_cursor@row
  2001  052A  3000               	movlw	0
  2002  052B  3180  20B5  3184   	fcall	_lcd_set_cursor
  2003  052E                     l2261:
  2004                           
  2005                           ;main.c: 66: lcd_print(str);
  2006  052E  3049               	movlw	low _str
  2007  052F  00F8               	movwf	lcd_print@str
  2008  0530  3000               	movlw	high _str
  2009  0531  00F9               	movwf	lcd_print@str+1
  2010  0532  3180  2098  3184   	fcall	_lcd_print
  2011  0535                     l2263:
  2012                           
  2013                           ;main.c: 68: _delay((unsigned long)((100)*(8000000/4000.0)));
  2014  0535  3002               	movlw	2
  2015  0536  0020               	movlb	0	; select bank0
  2016  0537  00B9               	movwf	??_main+1
  2017  0538  3004               	movlw	4
  2018  0539  00B8               	movwf	??_main
  2019  053A  30BA               	movlw	186
  2020  053B                     u1837:
  2021  053B  0B89               	decfsz	9,f
  2022  053C  2D3B               	goto	u1837
  2023  053D  0BB8               	decfsz	??_main,f
  2024  053E  2D3B               	goto	u1837
  2025  053F  0BB9               	decfsz	??_main+1,f
  2026  0540  2D3B               	goto	u1837
  2027  0541  0000               	nop
  2028  0542  2CF9               	goto	l2255
  2029  0543  3180  2802         	ljmp	start
  2030  0545                     __end_of_main:
  2031                           
  2032                           	psect	text1
  2033  0392                     __ptext1:	
  2034 ;; *************** function _sprintf *****************
  2035 ;; Defined at:
  2036 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  sp              1    wreg     PTR unsigned char 
  2039 ;;		 -> str(16), 
  2040 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  2041 ;;		 -> STR_4(5), STR_3(5), 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  2044 ;;		 -> str(16), 
  2045 ;;  tmpval          4    0        struct .
  2046 ;;  val             2   13[BANK0 ] unsigned int 
  2047 ;;  cp              2    0        PTR const unsigned char 
  2048 ;;  len             2    0        unsigned int 
  2049 ;;  c               1   16[BANK0 ] unsigned char 
  2050 ;;  prec            1   12[BANK0 ] char 
  2051 ;;  flag            1   11[BANK0 ] unsigned char 
  2052 ;;  ap              1   10[BANK0 ] PTR void [1]
  2053 ;;		 -> ?_sprintf(2), 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  2    0[BANK0 ] int 
  2056 ;; Registers used:
  2057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2063 ;;      Params:         0       6       0       0       0       0
  2064 ;;      Locals:         0       7       0       0       0       0
  2065 ;;      Temps:          0       4       0       0       0       0
  2066 ;;      Totals:         0      17       0       0       0       0
  2067 ;;Total ram usage:       17 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; Hardware stack levels required when called: 1
  2070 ;; This function calls:
  2071 ;;		___lwdiv
  2072 ;;		___lwmod
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           
  2079                           ;psect for function _sprintf
  2080  0392                     _sprintf:
  2081                           
  2082                           ;incstack = 0
  2083                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2084                           ;sprintf@sp stored from wreg
  2085  0392  0020               	movlb	0	; select bank0
  2086  0393  00AF               	movwf	sprintf@sp
  2087  0394                     l2149:
  2088                           
  2089                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  2090  0394  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2091  0395  00A6               	movwf	??_sprintf
  2092  0396  0826               	movf	??_sprintf,w
  2093  0397  00AA               	movwf	sprintf@ap
  2094                           
  2095                           ;doprnt.c: 553: while((c = *f++)) {
  2096  0398  2C52               	goto	l2201
  2097  0399                     l2151:
  2098                           
  2099                           ;doprnt.c: 555: if(c != '%')
  2100  0399  3025               	movlw	37
  2101  039A  0630               	xorwf	sprintf@c,w
  2102  039B  1903               	btfsc	3,2
  2103  039C  2B9E               	goto	u1721
  2104  039D  2B9F               	goto	u1720
  2105  039E                     u1721:
  2106  039E  2BAB               	goto	l2157
  2107  039F                     u1720:
  2108  039F                     l2153:
  2109                           
  2110                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2111  039F  0830               	movf	sprintf@c,w
  2112  03A0  00A6               	movwf	??_sprintf
  2113  03A1  082F               	movf	sprintf@sp,w
  2114  03A2  0086               	movwf	6
  2115  03A3  0187               	clrf	7
  2116  03A4  0826               	movf	??_sprintf,w
  2117  03A5  0081               	movwf	1
  2118  03A6                     l2155:
  2119  03A6  3001               	movlw	1
  2120  03A7  00A6               	movwf	??_sprintf
  2121  03A8  0826               	movf	??_sprintf,w
  2122  03A9  07AF               	addwf	sprintf@sp,f
  2123                           
  2124                           ;doprnt.c: 559: continue;
  2125  03AA  2C52               	goto	l2201
  2126  03AB                     l2157:
  2127                           
  2128                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2129  03AB  01AB               	clrf	sprintf@flag
  2130  03AC                     l2161:	
  2131                           ;doprnt.c: 661: switch(c = *f++) {
  2132                           
  2133  03AC  0821               	movf	sprintf@f+1,w
  2134  03AD  00A7               	movwf	??_sprintf+1
  2135  03AE  0820               	movf	sprintf@f,w
  2136  03AF  00A6               	movwf	??_sprintf
  2137  03B0  0AA0               	incf	sprintf@f,f
  2138  03B1  1903               	skipnz
  2139  03B2  0AA1               	incf	sprintf@f+1,f
  2140  03B3  0826               	movf	??_sprintf,w
  2141  03B4  0084               	movwf	4
  2142  03B5  0827               	movf	??_sprintf+1,w
  2143  03B6  0085               	movwf	5
  2144  03B7  0800               	movf	0,w	;code access
  2145  03B8  00B0               	movwf	sprintf@c
  2146                           
  2147                           ; Switch size 1, requested type "simple"
  2148                           ; Number of cases is 3, Range of values is 0 to 105
  2149                           ; switch strategies available:
  2150                           ; Name         Instructions Cycles
  2151                           ; simple_byte           10     6 (average)
  2152                           ; direct_byte          218     6 (fixed)
  2153                           ; jumptable            260     6 (fixed)
  2154                           ;	Chosen strategy is simple_byte
  2155  03B9  3A00               	xorlw	0	; case 0
  2156  03BA  1903               	skipnz
  2157  03BB  2C66               	goto	l2203
  2158  03BC  3A64               	xorlw	100	; case 100
  2159  03BD  1903               	skipnz
  2160  03BE  2BC3               	goto	l2163
  2161  03BF  3A0D               	xorlw	13	; case 105
  2162  03C0  1903               	skipnz
  2163  03C1  2BC3               	goto	l2163
  2164  03C2  2C52               	goto	l2201
  2165  03C3                     l2163:
  2166                           
  2167                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2168  03C3  082A               	movf	sprintf@ap,w
  2169  03C4  0086               	movwf	6
  2170  03C5  0187               	clrf	7
  2171  03C6  3F40               	moviw [0]fsr1
  2172  03C7  00AD               	movwf	sprintf@val
  2173  03C8  3F41               	moviw [1]fsr1
  2174  03C9  00AE               	movwf	sprintf@val+1
  2175  03CA                     l2165:
  2176  03CA  3002               	movlw	2
  2177  03CB  00A6               	movwf	??_sprintf
  2178  03CC  0826               	movf	??_sprintf,w
  2179  03CD  07AA               	addwf	sprintf@ap,f
  2180  03CE                     l2167:
  2181                           
  2182                           ;doprnt.c: 1287: if((int)val < 0) {
  2183  03CE  1FAE               	btfss	sprintf@val+1,7
  2184  03CF  2BD1               	goto	u1731
  2185  03D0  2BD2               	goto	u1730
  2186  03D1                     u1731:
  2187  03D1  2BDB               	goto	l2173
  2188  03D2                     u1730:
  2189  03D2                     l2169:
  2190                           
  2191                           ;doprnt.c: 1288: flag |= 0x03;
  2192  03D2  3003               	movlw	3
  2193  03D3  00A6               	movwf	??_sprintf
  2194  03D4  0826               	movf	??_sprintf,w
  2195  03D5  04AB               	iorwf	sprintf@flag,f
  2196  03D6                     l2171:
  2197                           
  2198                           ;doprnt.c: 1289: val = -val;
  2199  03D6  09AD               	comf	sprintf@val,f
  2200  03D7  09AE               	comf	sprintf@val+1,f
  2201  03D8  0AAD               	incf	sprintf@val,f
  2202  03D9  1903               	skipnz
  2203  03DA  0AAE               	incf	sprintf@val+1,f
  2204  03DB                     l2173:
  2205                           
  2206                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2207  03DB  01B0               	clrf	sprintf@c
  2208  03DC  0AB0               	incf	sprintf@c,f
  2209  03DD                     l2179:
  2210                           
  2211                           ;doprnt.c: 1332: if(val < dpowers[c])
  2212  03DD  0830               	movf	sprintf@c,w
  2213  03DE  00A6               	movwf	??_sprintf
  2214  03DF  01A7               	clrf	??_sprintf+1
  2215  03E0  35A6               	lslf	??_sprintf,f
  2216  03E1  0DA7               	rlf	??_sprintf+1,f
  2217  03E2  3000               	movlw	low (_dpowers| (0+32768))
  2218  03E3  0726               	addwf	??_sprintf,w
  2219  03E4  0084               	movwf	4
  2220  03E5  3088               	movlw	high (_dpowers| (0+32768))
  2221  03E6  3D27               	addwfc	??_sprintf+1,w
  2222  03E7  0085               	movwf	5
  2223  03E8  3F00               	moviw [0]fsr0
  2224  03E9  00A8               	movwf	??_sprintf+2
  2225  03EA  3F01               	moviw [1]fsr0
  2226  03EB  00A9               	movwf	??_sprintf+3
  2227  03EC  0829               	movf	??_sprintf+3,w
  2228  03ED  022E               	subwf	sprintf@val+1,w
  2229  03EE  1D03               	skipz
  2230  03EF  2BF2               	goto	u1745
  2231  03F0  0828               	movf	??_sprintf+2,w
  2232  03F1  022D               	subwf	sprintf@val,w
  2233  03F2                     u1745:
  2234  03F2  1803               	skipnc
  2235  03F3  2BF5               	goto	u1741
  2236  03F4  2BF6               	goto	u1740
  2237  03F5                     u1741:
  2238  03F5  2BF7               	goto	l2183
  2239  03F6                     u1740:
  2240  03F6  2C01               	goto	l2185
  2241  03F7                     l2183:
  2242  03F7  3001               	movlw	1
  2243  03F8  00A6               	movwf	??_sprintf
  2244  03F9  0826               	movf	??_sprintf,w
  2245  03FA  07B0               	addwf	sprintf@c,f
  2246  03FB  3005               	movlw	5
  2247  03FC  0630               	xorwf	sprintf@c,w
  2248  03FD  1D03               	btfss	3,2
  2249  03FE  2C00               	goto	u1751
  2250  03FF  2C01               	goto	u1750
  2251  0400                     u1751:
  2252  0400  2BDD               	goto	l2179
  2253  0401                     u1750:
  2254  0401                     l2185:
  2255                           
  2256                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2257  0401  082B               	movf	sprintf@flag,w
  2258  0402  3903               	andlw	3
  2259  0403  1903               	btfsc	3,2
  2260  0404  2C06               	goto	u1761
  2261  0405  2C07               	goto	u1760
  2262  0406                     u1761:
  2263  0406  2C12               	goto	l2191
  2264  0407                     u1760:
  2265  0407                     l2187:
  2266                           
  2267                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2268  0407  302D               	movlw	45
  2269  0408  00A6               	movwf	??_sprintf
  2270  0409  082F               	movf	sprintf@sp,w
  2271  040A  0086               	movwf	6
  2272  040B  0187               	clrf	7
  2273  040C  0826               	movf	??_sprintf,w
  2274  040D  0081               	movwf	1
  2275  040E                     l2189:
  2276  040E  3001               	movlw	1
  2277  040F  00A6               	movwf	??_sprintf
  2278  0410  0826               	movf	??_sprintf,w
  2279  0411  07AF               	addwf	sprintf@sp,f
  2280  0412                     l2191:
  2281                           
  2282                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2283  0412  0830               	movf	sprintf@c,w
  2284  0413  00A6               	movwf	??_sprintf
  2285  0414  0826               	movf	??_sprintf,w
  2286  0415  00AC               	movwf	sprintf@prec
  2287                           
  2288                           ;doprnt.c: 1500: while(prec--) {
  2289  0416  2C49               	goto	l2199
  2290  0417                     l2193:
  2291                           
  2292                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2293  0417  300A               	movlw	10
  2294  0418  00F8               	movwf	___lwmod@divisor
  2295  0419  3000               	movlw	0
  2296  041A  00F9               	movwf	___lwmod@divisor+1
  2297  041B  082C               	movf	sprintf@prec,w
  2298  041C  00A6               	movwf	??_sprintf
  2299  041D  01A7               	clrf	??_sprintf+1
  2300  041E  35A6               	lslf	??_sprintf,f
  2301  041F  0DA7               	rlf	??_sprintf+1,f
  2302  0420  3000               	movlw	low (_dpowers| (0+32768))
  2303  0421  0726               	addwf	??_sprintf,w
  2304  0422  0084               	movwf	4
  2305  0423  3088               	movlw	high (_dpowers| (0+32768))
  2306  0424  3D27               	addwfc	??_sprintf+1,w
  2307  0425  0085               	movwf	5
  2308  0426  3F00               	moviw [0]fsr0
  2309  0427  00F0               	movwf	___lwdiv@divisor
  2310  0428  3F01               	moviw [1]fsr0
  2311  0429  00F1               	movwf	___lwdiv@divisor+1
  2312  042A  082E               	movf	sprintf@val+1,w
  2313  042B  00F3               	movwf	___lwdiv@dividend+1
  2314  042C  082D               	movf	sprintf@val,w
  2315  042D  00F2               	movwf	___lwdiv@dividend
  2316  042E  3181  216B  3183   	fcall	___lwdiv
  2317  0431  0871               	movf	?___lwdiv+1,w
  2318  0432  00FB               	movwf	___lwmod@dividend+1
  2319  0433  0870               	movf	?___lwdiv,w
  2320  0434  00FA               	movwf	___lwmod@dividend
  2321  0435  3180  20FF  3183   	fcall	___lwmod
  2322  0438  0878               	movf	?___lwmod,w
  2323  0439  3E30               	addlw	48
  2324  043A  0020               	movlb	0	; select bank0
  2325  043B  00A8               	movwf	??_sprintf+2
  2326  043C  0828               	movf	??_sprintf+2,w
  2327  043D  00B0               	movwf	sprintf@c
  2328  043E                     l2195:
  2329                           
  2330                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2331  043E  0830               	movf	sprintf@c,w
  2332  043F  00A6               	movwf	??_sprintf
  2333  0440  082F               	movf	sprintf@sp,w
  2334  0441  0086               	movwf	6
  2335  0442  0187               	clrf	7
  2336  0443  0826               	movf	??_sprintf,w
  2337  0444  0081               	movwf	1
  2338  0445                     l2197:
  2339  0445  3001               	movlw	1
  2340  0446  00A6               	movwf	??_sprintf
  2341  0447  0826               	movf	??_sprintf,w
  2342  0448  07AF               	addwf	sprintf@sp,f
  2343  0449                     l2199:
  2344  0449  30FF               	movlw	255
  2345  044A  00A6               	movwf	??_sprintf
  2346  044B  0826               	movf	??_sprintf,w
  2347  044C  07AC               	addwf	sprintf@prec,f
  2348  044D  0A2C               	incf	sprintf@prec,w
  2349  044E  1D03               	btfss	3,2
  2350  044F  2C51               	goto	u1771
  2351  0450  2C52               	goto	u1770
  2352  0451                     u1771:
  2353  0451  2C17               	goto	l2193
  2354  0452                     u1770:
  2355  0452                     l2201:
  2356  0452  0821               	movf	sprintf@f+1,w
  2357  0453  00A7               	movwf	??_sprintf+1
  2358  0454  0820               	movf	sprintf@f,w
  2359  0455  00A6               	movwf	??_sprintf
  2360  0456  0AA0               	incf	sprintf@f,f
  2361  0457  1903               	skipnz
  2362  0458  0AA1               	incf	sprintf@f+1,f
  2363  0459  0826               	movf	??_sprintf,w
  2364  045A  0084               	movwf	4
  2365  045B  0827               	movf	??_sprintf+1,w
  2366  045C  0085               	movwf	5
  2367  045D  0800               	movf	0,w	;code access
  2368  045E  00A8               	movwf	??_sprintf+2
  2369  045F  0828               	movf	??_sprintf+2,w
  2370  0460  00B0               	movwf	sprintf@c
  2371  0461  0830               	movf	sprintf@c,w
  2372  0462  1D03               	btfss	3,2
  2373  0463  2C65               	goto	u1781
  2374  0464  2C66               	goto	u1780
  2375  0465                     u1781:
  2376  0465  2B99               	goto	l2151
  2377  0466                     u1780:
  2378  0466                     l2203:
  2379                           
  2380                           ;doprnt.c: 1564: *sp = 0;
  2381  0466  082F               	movf	sprintf@sp,w
  2382  0467  0086               	movwf	6
  2383  0468  0187               	clrf	7
  2384  0469  0181               	clrf	1
  2385  046A                     l425:
  2386  046A  0008               	return
  2387  046B                     __end_of_sprintf:
  2388                           
  2389                           	psect	text2
  2390  00FF                     __ptext2:	
  2391 ;; *************** function ___lwmod *****************
  2392 ;; Defined at:
  2393 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  divisor         2    8[COMMON] unsigned int 
  2396 ;;  dividend        2   10[COMMON] unsigned int 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  counter         1   13[COMMON] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  2    8[COMMON] unsigned int 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2408 ;;      Params:         4       0       0       0       0       0
  2409 ;;      Locals:         1       0       0       0       0       0
  2410 ;;      Temps:          1       0       0       0       0       0
  2411 ;;      Totals:         6       0       0       0       0       0
  2412 ;;Total ram usage:        6 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; This function calls:
  2415 ;;		Nothing
  2416 ;; This function is called by:
  2417 ;;		_sprintf
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           
  2422                           ;psect for function ___lwmod
  2423  00FF                     ___lwmod:
  2424  00FF                     l1775:	
  2425                           ;incstack = 0
  2426                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2427                           
  2428  00FF  0878               	movf	___lwmod@divisor,w
  2429  0100  0479               	iorwf	___lwmod@divisor+1,w
  2430  0101  1903               	btfsc	3,2
  2431  0102  2904               	goto	u1141
  2432  0103  2905               	goto	u1140
  2433  0104                     u1141:
  2434  0104  292E               	goto	l1793
  2435  0105                     u1140:
  2436  0105                     l1777:
  2437  0105  01FD               	clrf	___lwmod@counter
  2438  0106  0AFD               	incf	___lwmod@counter,f
  2439  0107  2911               	goto	l1783
  2440  0108                     l1779:
  2441  0108  3001               	movlw	1
  2442  0109                     u1155:
  2443  0109  35F8               	lslf	___lwmod@divisor,f
  2444  010A  0DF9               	rlf	___lwmod@divisor+1,f
  2445  010B  0B89               	decfsz	9,f
  2446  010C  2909               	goto	u1155
  2447  010D                     l1781:
  2448  010D  3001               	movlw	1
  2449  010E  00FC               	movwf	??___lwmod
  2450  010F  087C               	movf	??___lwmod,w
  2451  0110  07FD               	addwf	___lwmod@counter,f
  2452  0111                     l1783:
  2453  0111  1FF9               	btfss	___lwmod@divisor+1,7
  2454  0112  2914               	goto	u1161
  2455  0113  2915               	goto	u1160
  2456  0114                     u1161:
  2457  0114  2908               	goto	l1779
  2458  0115                     u1160:
  2459  0115                     l1785:
  2460  0115  0879               	movf	___lwmod@divisor+1,w
  2461  0116  027B               	subwf	___lwmod@dividend+1,w
  2462  0117  1D03               	skipz
  2463  0118  291B               	goto	u1175
  2464  0119  0878               	movf	___lwmod@divisor,w
  2465  011A  027A               	subwf	___lwmod@dividend,w
  2466  011B                     u1175:
  2467  011B  1C03               	skipc
  2468  011C  291E               	goto	u1171
  2469  011D  291F               	goto	u1170
  2470  011E                     u1171:
  2471  011E  2923               	goto	l1789
  2472  011F                     u1170:
  2473  011F                     l1787:
  2474  011F  0878               	movf	___lwmod@divisor,w
  2475  0120  02FA               	subwf	___lwmod@dividend,f
  2476  0121  0879               	movf	___lwmod@divisor+1,w
  2477  0122  3BFB               	subwfb	___lwmod@dividend+1,f
  2478  0123                     l1789:
  2479  0123  3001               	movlw	1
  2480  0124                     u1185:
  2481  0124  36F9               	lsrf	___lwmod@divisor+1,f
  2482  0125  0CF8               	rrf	___lwmod@divisor,f
  2483  0126  0B89               	decfsz	9,f
  2484  0127  2924               	goto	u1185
  2485  0128                     l1791:
  2486  0128  3001               	movlw	1
  2487  0129  02FD               	subwf	___lwmod@counter,f
  2488  012A  1D03               	btfss	3,2
  2489  012B  292D               	goto	u1191
  2490  012C  292E               	goto	u1190
  2491  012D                     u1191:
  2492  012D  2915               	goto	l1785
  2493  012E                     u1190:
  2494  012E                     l1793:
  2495  012E  087B               	movf	___lwmod@dividend+1,w
  2496  012F  00F9               	movwf	?___lwmod+1
  2497  0130  087A               	movf	___lwmod@dividend,w
  2498  0131  00F8               	movwf	?___lwmod
  2499  0132                     l711:
  2500  0132  0008               	return
  2501  0133                     __end_of___lwmod:
  2502                           
  2503                           	psect	text3
  2504  016B                     __ptext3:	
  2505 ;; *************** function ___lwdiv *****************
  2506 ;; Defined at:
  2507 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  divisor         2    0[COMMON] unsigned int 
  2510 ;;  dividend        2    2[COMMON] unsigned int 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  quotient        2    5[COMMON] unsigned int 
  2513 ;;  counter         1    7[COMMON] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2    0[COMMON] unsigned int 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2523 ;;      Params:         4       0       0       0       0       0
  2524 ;;      Locals:         3       0       0       0       0       0
  2525 ;;      Temps:          1       0       0       0       0       0
  2526 ;;      Totals:         8       0       0       0       0       0
  2527 ;;Total ram usage:        8 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_sprintf
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           
  2537                           ;psect for function ___lwdiv
  2538  016B                     ___lwdiv:
  2539  016B                     l1749:	
  2540                           ;incstack = 0
  2541                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2542                           
  2543  016B  01F5               	clrf	___lwdiv@quotient
  2544  016C  01F6               	clrf	___lwdiv@quotient+1
  2545  016D                     l1751:
  2546  016D  0870               	movf	___lwdiv@divisor,w
  2547  016E  0471               	iorwf	___lwdiv@divisor+1,w
  2548  016F  1903               	btfsc	3,2
  2549  0170  2972               	goto	u1071
  2550  0171  2973               	goto	u1070
  2551  0172                     u1071:
  2552  0172  29A2               	goto	l1771
  2553  0173                     u1070:
  2554  0173                     l1753:
  2555  0173  01F7               	clrf	___lwdiv@counter
  2556  0174  0AF7               	incf	___lwdiv@counter,f
  2557  0175  297F               	goto	l1759
  2558  0176                     l1755:
  2559  0176  3001               	movlw	1
  2560  0177                     u1085:
  2561  0177  35F0               	lslf	___lwdiv@divisor,f
  2562  0178  0DF1               	rlf	___lwdiv@divisor+1,f
  2563  0179  0B89               	decfsz	9,f
  2564  017A  2977               	goto	u1085
  2565  017B                     l1757:
  2566  017B  3001               	movlw	1
  2567  017C  00F4               	movwf	??___lwdiv
  2568  017D  0874               	movf	??___lwdiv,w
  2569  017E  07F7               	addwf	___lwdiv@counter,f
  2570  017F                     l1759:
  2571  017F  1FF1               	btfss	___lwdiv@divisor+1,7
  2572  0180  2982               	goto	u1091
  2573  0181  2983               	goto	u1090
  2574  0182                     u1091:
  2575  0182  2976               	goto	l1755
  2576  0183                     u1090:
  2577  0183                     l1761:
  2578  0183  3001               	movlw	1
  2579  0184                     u1105:
  2580  0184  35F5               	lslf	___lwdiv@quotient,f
  2581  0185  0DF6               	rlf	___lwdiv@quotient+1,f
  2582  0186  0B89               	decfsz	9,f
  2583  0187  2984               	goto	u1105
  2584  0188  0871               	movf	___lwdiv@divisor+1,w
  2585  0189  0273               	subwf	___lwdiv@dividend+1,w
  2586  018A  1D03               	skipz
  2587  018B  298E               	goto	u1115
  2588  018C  0870               	movf	___lwdiv@divisor,w
  2589  018D  0272               	subwf	___lwdiv@dividend,w
  2590  018E                     u1115:
  2591  018E  1C03               	skipc
  2592  018F  2991               	goto	u1111
  2593  0190  2992               	goto	u1110
  2594  0191                     u1111:
  2595  0191  2997               	goto	l1767
  2596  0192                     u1110:
  2597  0192                     l1763:
  2598  0192  0870               	movf	___lwdiv@divisor,w
  2599  0193  02F2               	subwf	___lwdiv@dividend,f
  2600  0194  0871               	movf	___lwdiv@divisor+1,w
  2601  0195  3BF3               	subwfb	___lwdiv@dividend+1,f
  2602  0196                     l1765:
  2603  0196  1475               	bsf	___lwdiv@quotient,0
  2604  0197                     l1767:
  2605  0197  3001               	movlw	1
  2606  0198                     u1125:
  2607  0198  36F1               	lsrf	___lwdiv@divisor+1,f
  2608  0199  0CF0               	rrf	___lwdiv@divisor,f
  2609  019A  0B89               	decfsz	9,f
  2610  019B  2998               	goto	u1125
  2611  019C                     l1769:
  2612  019C  3001               	movlw	1
  2613  019D  02F7               	subwf	___lwdiv@counter,f
  2614  019E  1D03               	btfss	3,2
  2615  019F  29A1               	goto	u1131
  2616  01A0  29A2               	goto	u1130
  2617  01A1                     u1131:
  2618  01A1  2983               	goto	l1761
  2619  01A2                     u1130:
  2620  01A2                     l1771:
  2621  01A2  0876               	movf	___lwdiv@quotient+1,w
  2622  01A3  00F1               	movwf	?___lwdiv+1
  2623  01A4  0875               	movf	___lwdiv@quotient,w
  2624  01A5  00F0               	movwf	?___lwdiv
  2625  01A6                     l701:
  2626  01A6  0008               	return
  2627  01A7                     __end_of___lwdiv:
  2628                           
  2629                           	psect	text4
  2630  01F3                     __ptext4:	
  2631 ;; *************** function _scale_convert_gram *****************
  2632 ;; Defined at:
  2633 ;;		line 64 in file "loadcell.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  count           3   13[BANK0 ] unsigned um
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  temp            4   20[BANK0 ] float 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  4   13[BANK0 ] float 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2, status,0, pclath, cstack
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2647 ;;      Params:         0       4       0       0       0       0
  2648 ;;      Locals:         0       4       0       0       0       0
  2649 ;;      Temps:          0       3       0       0       0       0
  2650 ;;      Totals:         0      11       0       0       0       0
  2651 ;;Total ram usage:       11 bytes
  2652 ;; Hardware stack levels used: 1
  2653 ;; Hardware stack levels required when called: 1
  2654 ;; This function calls:
  2655 ;;		___fldiv
  2656 ;;		___xxtofl
  2657 ;; This function is called by:
  2658 ;;		_main
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           
  2663                           ;psect for function _scale_convert_gram
  2664  01F3                     _scale_convert_gram:
  2665  01F3                     l2143:	
  2666                           ;incstack = 0
  2667                           ; Regs used in _scale_convert_gram: [wreg+status,2+status,0+pclath+cstack]
  2668                           
  2669                           
  2670                           ;loadcell.c: 66: float temp = count - weight_zero;
  2671  01F3  0020               	movlb	0	; select bank0
  2672  01F4  0842               	movf	_weight_zero,w
  2673  01F5  022D               	subwf	scale_convert_gram@count,w
  2674  01F6  00B1               	movwf	??_scale_convert_gram
  2675  01F7  082E               	movf	scale_convert_gram@count+1,w
  2676  01F8  00B2               	movwf	??_scale_convert_gram+1
  2677  01F9  0843               	movf	_weight_zero+1,w
  2678  01FA  1C03               	skipc
  2679  01FB  0F43               	incfsz	_weight_zero+1,w
  2680  01FC  29FE               	goto	u1711
  2681  01FD  29FF               	goto	u1712
  2682  01FE                     u1711:
  2683  01FE  02B2               	subwf	??_scale_convert_gram+1,f
  2684  01FF                     u1712:
  2685  01FF  082F               	movf	scale_convert_gram@count+2,w
  2686  0200  00B3               	movwf	??_scale_convert_gram+2
  2687  0201  0844               	movf	_weight_zero+2,w
  2688  0202  1C03               	skipc
  2689  0203  0F44               	incfsz	_weight_zero+2,w
  2690  0204  2A06               	goto	u1713
  2691  0205  2A07               	goto	u1714
  2692  0206                     u1713:
  2693  0206  02B3               	subwf	??_scale_convert_gram+2,f
  2694  0207                     u1714:
  2695  0207  0831               	movf	??_scale_convert_gram,w
  2696  0208  00F0               	movwf	___xxtofl@val
  2697  0209  0832               	movf	??_scale_convert_gram+1,w
  2698  020A  00F1               	movwf	___xxtofl@val+1
  2699  020B  0833               	movf	??_scale_convert_gram+2,w
  2700  020C  00F2               	movwf	___xxtofl@val+2
  2701  020D  01F3               	clrf	___xxtofl@val+3
  2702  020E  3000               	movlw	0
  2703  020F  3182  22E6  3181   	fcall	___xxtofl
  2704  0212  0873               	movf	?___xxtofl+3,w
  2705  0213  0020               	movlb	0	; select bank0
  2706  0214  00B7               	movwf	scale_convert_gram@temp+3
  2707  0215  0872               	movf	?___xxtofl+2,w
  2708  0216  00B6               	movwf	scale_convert_gram@temp+2
  2709  0217  0871               	movf	?___xxtofl+1,w
  2710  0218  00B5               	movwf	scale_convert_gram@temp+1
  2711  0219  0870               	movf	?___xxtofl,w
  2712  021A  00B4               	movwf	scale_convert_gram@temp
  2713                           
  2714                           ;loadcell.c: 67: temp = temp / 486;
  2715  021B  3043               	movlw	67
  2716  021C  00F3               	movwf	___fldiv@a+3
  2717  021D  30F3               	movlw	243
  2718  021E  00F2               	movwf	___fldiv@a+2
  2719  021F  3000               	movlw	0
  2720  0220  00F1               	movwf	___fldiv@a+1
  2721  0221  3000               	movlw	0
  2722  0222  00F0               	movwf	___fldiv@a
  2723  0223  0837               	movf	scale_convert_gram@temp+3,w
  2724  0224  00F7               	movwf	___fldiv@b+3
  2725  0225  0836               	movf	scale_convert_gram@temp+2,w
  2726  0226  00F6               	movwf	___fldiv@b+2
  2727  0227  0835               	movf	scale_convert_gram@temp+1,w
  2728  0228  00F5               	movwf	___fldiv@b+1
  2729  0229  0834               	movf	scale_convert_gram@temp,w
  2730  022A  00F4               	movwf	___fldiv@b
  2731  022B  3186  2631  3181   	fcall	___fldiv
  2732  022E  0873               	movf	?___fldiv+3,w
  2733  022F  0020               	movlb	0	; select bank0
  2734  0230  00B7               	movwf	scale_convert_gram@temp+3
  2735  0231  0872               	movf	?___fldiv+2,w
  2736  0232  00B6               	movwf	scale_convert_gram@temp+2
  2737  0233  0871               	movf	?___fldiv+1,w
  2738  0234  00B5               	movwf	scale_convert_gram@temp+1
  2739  0235  0870               	movf	?___fldiv,w
  2740  0236  00B4               	movwf	scale_convert_gram@temp
  2741  0237                     l2145:
  2742                           
  2743                           ;loadcell.c: 68: return temp;
  2744  0237  0837               	movf	scale_convert_gram@temp+3,w
  2745  0238  00B0               	movwf	?_scale_convert_gram+3
  2746  0239  0836               	movf	scale_convert_gram@temp+2,w
  2747  023A  00AF               	movwf	?_scale_convert_gram+2
  2748  023B  0835               	movf	scale_convert_gram@temp+1,w
  2749  023C  00AE               	movwf	?_scale_convert_gram+1
  2750  023D  0834               	movf	scale_convert_gram@temp,w
  2751  023E  00AD               	movwf	?_scale_convert_gram
  2752  023F                     l153:
  2753  023F  0008               	return
  2754  0240                     __end_of_scale_convert_gram:
  2755                           
  2756                           	psect	text5
  2757  02E6                     __ptext5:	
  2758 ;; *************** function ___xxtofl *****************
  2759 ;; Defined at:
  2760 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  sign            1    wreg     unsigned char 
  2763 ;;  val             4    0[COMMON] long 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  sign            1    8[COMMON] unsigned char 
  2766 ;;  arg             4   10[COMMON] unsigned long 
  2767 ;;  exp             1    9[COMMON] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  4    0[COMMON] unsigned char 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2777 ;;      Params:         4       0       0       0       0       0
  2778 ;;      Locals:         6       0       0       0       0       0
  2779 ;;      Temps:          4       0       0       0       0       0
  2780 ;;      Totals:        14       0       0       0       0       0
  2781 ;;Total ram usage:       14 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_scale_convert_gram
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           
  2791                           ;psect for function ___xxtofl
  2792  02E6                     ___xxtofl:
  2793                           
  2794                           ;incstack = 0
  2795                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2796                           ;___xxtofl@sign stored from wreg
  2797  02E6  00F8               	movwf	___xxtofl@sign
  2798  02E7                     l1937:
  2799  02E7  0878               	movf	___xxtofl@sign,w
  2800  02E8  1903               	btfsc	3,2
  2801  02E9  2AEB               	goto	u1491
  2802  02EA  2AEC               	goto	u1490
  2803  02EB                     u1491:
  2804  02EB  2B00               	goto	l1943
  2805  02EC                     u1490:
  2806  02EC                     l1939:
  2807  02EC  1FF3               	btfss	___xxtofl@val+3,7
  2808  02ED  2AEF               	goto	u1501
  2809  02EE  2AF0               	goto	u1500
  2810  02EF                     u1501:
  2811  02EF  2B00               	goto	l1943
  2812  02F0                     u1500:
  2813  02F0                     l1941:
  2814  02F0  0970               	comf	___xxtofl@val,w
  2815  02F1  00FA               	movwf	___xxtofl@arg
  2816  02F2  0971               	comf	___xxtofl@val+1,w
  2817  02F3  00FB               	movwf	___xxtofl@arg+1
  2818  02F4  0972               	comf	___xxtofl@val+2,w
  2819  02F5  00FC               	movwf	___xxtofl@arg+2
  2820  02F6  0973               	comf	___xxtofl@val+3,w
  2821  02F7  00FD               	movwf	___xxtofl@arg+3
  2822  02F8  0AFA               	incf	___xxtofl@arg,f
  2823  02F9  1903               	skipnz
  2824  02FA  0AFB               	incf	___xxtofl@arg+1,f
  2825  02FB  1903               	skipnz
  2826  02FC  0AFC               	incf	___xxtofl@arg+2,f
  2827  02FD  1903               	skipnz
  2828  02FE  0AFD               	incf	___xxtofl@arg+3,f
  2829  02FF  2B08               	goto	l862
  2830  0300                     l1943:
  2831  0300  0873               	movf	___xxtofl@val+3,w
  2832  0301  00FD               	movwf	___xxtofl@arg+3
  2833  0302  0872               	movf	___xxtofl@val+2,w
  2834  0303  00FC               	movwf	___xxtofl@arg+2
  2835  0304  0871               	movf	___xxtofl@val+1,w
  2836  0305  00FB               	movwf	___xxtofl@arg+1
  2837  0306  0870               	movf	___xxtofl@val,w
  2838  0307  00FA               	movwf	___xxtofl@arg
  2839  0308                     l862:
  2840  0308  0873               	movf	___xxtofl@val+3,w
  2841  0309  0472               	iorwf	___xxtofl@val+2,w
  2842  030A  0471               	iorwf	___xxtofl@val+1,w
  2843  030B  0470               	iorwf	___xxtofl@val,w
  2844  030C  1D03               	skipz
  2845  030D  2B0F               	goto	u1511
  2846  030E  2B10               	goto	u1510
  2847  030F                     u1511:
  2848  030F  2B19               	goto	l1949
  2849  0310                     u1510:
  2850  0310                     l1945:
  2851  0310  3000               	movlw	0
  2852  0311  00F3               	movwf	?___xxtofl+3
  2853  0312  3000               	movlw	0
  2854  0313  00F2               	movwf	?___xxtofl+2
  2855  0314  3000               	movlw	0
  2856  0315  00F1               	movwf	?___xxtofl+1
  2857  0316  3000               	movlw	0
  2858  0317  00F0               	movwf	?___xxtofl
  2859  0318  2B91               	goto	l864
  2860  0319                     l1949:
  2861  0319  3096               	movlw	150
  2862  031A  00F4               	movwf	??___xxtofl
  2863  031B  0874               	movf	??___xxtofl,w
  2864  031C  00F9               	movwf	___xxtofl@exp
  2865  031D  2B29               	goto	l1953
  2866  031E                     l1951:
  2867  031E  3001               	movlw	1
  2868  031F  00F4               	movwf	??___xxtofl
  2869  0320  0874               	movf	??___xxtofl,w
  2870  0321  07F9               	addwf	___xxtofl@exp,f
  2871  0322  3001               	movlw	1
  2872  0323                     u1525:
  2873  0323  36FD               	lsrf	___xxtofl@arg+3,f
  2874  0324  0CFC               	rrf	___xxtofl@arg+2,f
  2875  0325  0CFB               	rrf	___xxtofl@arg+1,f
  2876  0326  0CFA               	rrf	___xxtofl@arg,f
  2877  0327  0B89               	decfsz	9,f
  2878  0328  2B23               	goto	u1525
  2879  0329                     l1953:
  2880  0329  30FE               	movlw	254
  2881  032A  057D               	andwf	___xxtofl@arg+3,w
  2882  032B  1D03               	btfss	3,2
  2883  032C  2B2E               	goto	u1531
  2884  032D  2B2F               	goto	u1530
  2885  032E                     u1531:
  2886  032E  2B1E               	goto	l1951
  2887  032F                     u1530:
  2888  032F  2B43               	goto	l868
  2889  0330                     l1955:
  2890  0330  3001               	movlw	1
  2891  0331  00F4               	movwf	??___xxtofl
  2892  0332  0874               	movf	??___xxtofl,w
  2893  0333  07F9               	addwf	___xxtofl@exp,f
  2894  0334                     l1957:
  2895  0334  3001               	movlw	1
  2896  0335  07FA               	addwf	___xxtofl@arg,f
  2897  0336  3000               	movlw	0
  2898  0337  3DFB               	addwfc	___xxtofl@arg+1,f
  2899  0338  3000               	movlw	0
  2900  0339  3DFC               	addwfc	___xxtofl@arg+2,f
  2901  033A  3000               	movlw	0
  2902  033B  3DFD               	addwfc	___xxtofl@arg+3,f
  2903  033C                     l1959:
  2904  033C  3001               	movlw	1
  2905  033D                     u1545:
  2906  033D  36FD               	lsrf	___xxtofl@arg+3,f
  2907  033E  0CFC               	rrf	___xxtofl@arg+2,f
  2908  033F  0CFB               	rrf	___xxtofl@arg+1,f
  2909  0340  0CFA               	rrf	___xxtofl@arg,f
  2910  0341  0B89               	decfsz	9,f
  2911  0342  2B3D               	goto	u1545
  2912  0343                     l868:
  2913  0343  30FF               	movlw	255
  2914  0344  057D               	andwf	___xxtofl@arg+3,w
  2915  0345  1D03               	btfss	3,2
  2916  0346  2B48               	goto	u1551
  2917  0347  2B49               	goto	u1550
  2918  0348                     u1551:
  2919  0348  2B30               	goto	l1955
  2920  0349                     u1550:
  2921  0349  2B53               	goto	l1963
  2922  034A                     l1961:
  2923  034A  3001               	movlw	1
  2924  034B  02F9               	subwf	___xxtofl@exp,f
  2925  034C  3001               	movlw	1
  2926  034D                     u1565:
  2927  034D  35FA               	lslf	___xxtofl@arg,f
  2928  034E  0DFB               	rlf	___xxtofl@arg+1,f
  2929  034F  0DFC               	rlf	___xxtofl@arg+2,f
  2930  0350  0DFD               	rlf	___xxtofl@arg+3,f
  2931  0351  0B89               	decfsz	9,f
  2932  0352  2B4D               	goto	u1565
  2933  0353                     l1963:
  2934  0353  1BFC               	btfsc	___xxtofl@arg+2,7
  2935  0354  2B56               	goto	u1571
  2936  0355  2B57               	goto	u1570
  2937  0356                     u1571:
  2938  0356  2B5D               	goto	l875
  2939  0357                     u1570:
  2940  0357                     l1965:
  2941  0357  3002               	movlw	2
  2942  0358  0279               	subwf	___xxtofl@exp,w
  2943  0359  1803               	skipnc
  2944  035A  2B5C               	goto	u1581
  2945  035B  2B5D               	goto	u1580
  2946  035C                     u1581:
  2947  035C  2B4A               	goto	l1961
  2948  035D                     u1580:
  2949  035D                     l875:
  2950  035D  1879               	btfsc	___xxtofl@exp,0
  2951  035E  2B60               	goto	u1591
  2952  035F  2B61               	goto	u1590
  2953  0360                     u1591:
  2954  0360  2B69               	goto	l876
  2955  0361                     u1590:
  2956  0361                     l1967:
  2957  0361  30FF               	movlw	255
  2958  0362  05FA               	andwf	___xxtofl@arg,f
  2959  0363  30FF               	movlw	255
  2960  0364  05FB               	andwf	___xxtofl@arg+1,f
  2961  0365  307F               	movlw	127
  2962  0366  05FC               	andwf	___xxtofl@arg+2,f
  2963  0367  30FF               	movlw	255
  2964  0368  05FD               	andwf	___xxtofl@arg+3,f
  2965  0369                     l876:
  2966  0369  1003               	clrc
  2967  036A  0CF9               	rrf	___xxtofl@exp,f
  2968  036B                     l1969:
  2969  036B  0879               	movf	___xxtofl@exp,w
  2970  036C  00F4               	movwf	??___xxtofl
  2971  036D  01F5               	clrf	??___xxtofl+1
  2972  036E  01F6               	clrf	??___xxtofl+2
  2973  036F  01F7               	clrf	??___xxtofl+3
  2974  0370  3018               	movlw	24
  2975  0371                     u1605:
  2976  0371  35F4               	lslf	??___xxtofl,f
  2977  0372  0DF5               	rlf	??___xxtofl+1,f
  2978  0373  0DF6               	rlf	??___xxtofl+2,f
  2979  0374  0DF7               	rlf	??___xxtofl+3,f
  2980  0375                     u1600:
  2981  0375  0B89               	decfsz	9,f
  2982  0376  2B71               	goto	u1605
  2983  0377  0874               	movf	??___xxtofl,w
  2984  0378  04FA               	iorwf	___xxtofl@arg,f
  2985  0379  0875               	movf	??___xxtofl+1,w
  2986  037A  04FB               	iorwf	___xxtofl@arg+1,f
  2987  037B  0876               	movf	??___xxtofl+2,w
  2988  037C  04FC               	iorwf	___xxtofl@arg+2,f
  2989  037D  0877               	movf	??___xxtofl+3,w
  2990  037E  04FD               	iorwf	___xxtofl@arg+3,f
  2991  037F                     l1971:
  2992  037F  0878               	movf	___xxtofl@sign,w
  2993  0380  1903               	btfsc	3,2
  2994  0381  2B83               	goto	u1611
  2995  0382  2B84               	goto	u1610
  2996  0383                     u1611:
  2997  0383  2B89               	goto	l1977
  2998  0384                     u1610:
  2999  0384                     l1973:
  3000  0384  1FF3               	btfss	___xxtofl@val+3,7
  3001  0385  2B87               	goto	u1621
  3002  0386  2B88               	goto	u1620
  3003  0387                     u1621:
  3004  0387  2B89               	goto	l1977
  3005  0388                     u1620:
  3006  0388                     l1975:
  3007  0388  17FD               	bsf	___xxtofl@arg+3,7
  3008  0389                     l1977:
  3009  0389  087D               	movf	___xxtofl@arg+3,w
  3010  038A  00F3               	movwf	?___xxtofl+3
  3011  038B  087C               	movf	___xxtofl@arg+2,w
  3012  038C  00F2               	movwf	?___xxtofl+2
  3013  038D  087B               	movf	___xxtofl@arg+1,w
  3014  038E  00F1               	movwf	?___xxtofl+1
  3015  038F  087A               	movf	___xxtofl@arg,w
  3016  0390  00F0               	movwf	?___xxtofl
  3017  0391                     l864:
  3018  0391  0008               	return
  3019  0392                     __end_of___xxtofl:
  3020                           
  3021                           	psect	text6
  3022  0631                     __ptext6:	
  3023 ;; *************** function ___fldiv *****************
  3024 ;; Defined at:
  3025 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  a               4    0[COMMON] unsigned char 
  3028 ;;  b               4    4[COMMON] unsigned char 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  grs             4    7[BANK0 ] unsigned long 
  3031 ;;  rem             4    0[BANK0 ] unsigned long 
  3032 ;;  new_exp         2    5[BANK0 ] int 
  3033 ;;  aexp            1   12[BANK0 ] unsigned char 
  3034 ;;  bexp            1   11[BANK0 ] unsigned char 
  3035 ;;  sign            1    4[BANK0 ] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  4    0[COMMON] unsigned char 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3045 ;;      Params:         8       0       0       0       0       0
  3046 ;;      Locals:         0      13       0       0       0       0
  3047 ;;      Temps:          5       0       0       0       0       0
  3048 ;;      Totals:        13      13       0       0       0       0
  3049 ;;Total ram usage:       26 bytes
  3050 ;; Hardware stack levels used: 1
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_scale_convert_gram
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function ___fldiv
  3060  0631                     ___fldiv:
  3061  0631                     l1797:	
  3062                           ;incstack = 0
  3063                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  3064                           
  3065  0631  0877               	movf	___fldiv@b+3,w
  3066  0632  3980               	andlw	128
  3067  0633  00F8               	movwf	??___fldiv
  3068  0634  0878               	movf	??___fldiv,w
  3069  0635  0020               	movlb	0	; select bank0
  3070  0636  00A4               	movwf	___fldiv@sign
  3071  0637                     l1799:
  3072  0637  3577               	lslf	___fldiv@b+3,w
  3073  0638  00F8               	movwf	??___fldiv
  3074  0639  0878               	movf	??___fldiv,w
  3075  063A  00AB               	movwf	___fldiv@bexp
  3076  063B                     l1801:
  3077  063B  1FF6               	btfss	___fldiv@b+2,7
  3078  063C  2E3E               	goto	u1201
  3079  063D  2E3F               	goto	u1200
  3080  063E                     u1201:
  3081  063E  2E40               	goto	l1805
  3082  063F                     u1200:
  3083  063F                     l1803:
  3084  063F  142B               	bsf	___fldiv@bexp,0
  3085  0640                     l1805:
  3086  0640  082B               	movf	___fldiv@bexp,w
  3087  0641  1903               	btfsc	3,2
  3088  0642  2E44               	goto	u1211
  3089  0643  2E45               	goto	u1210
  3090  0644                     u1211:
  3091  0644  2E55               	goto	l1815
  3092  0645                     u1210:
  3093  0645                     l1807:
  3094  0645  0A2B               	incf	___fldiv@bexp,w
  3095  0646  1D03               	btfss	3,2
  3096  0647  2E49               	goto	u1221
  3097  0648  2E4A               	goto	u1220
  3098  0649                     u1221:
  3099  0649  2E52               	goto	l1811
  3100  064A                     u1220:
  3101  064A                     l1809:
  3102  064A  3000               	movlw	0
  3103  064B  00F7               	movwf	___fldiv@b+3
  3104  064C  3000               	movlw	0
  3105  064D  00F6               	movwf	___fldiv@b+2
  3106  064E  3000               	movlw	0
  3107  064F  00F5               	movwf	___fldiv@b+1
  3108  0650  3000               	movlw	0
  3109  0651  00F4               	movwf	___fldiv@b
  3110  0652                     l1811:
  3111  0652  17F6               	bsf	___fldiv@b+2,7
  3112  0653                     l1813:
  3113  0653  01F7               	clrf	___fldiv@b+3
  3114  0654  2E5D               	goto	l1817
  3115  0655                     l1815:
  3116  0655  3000               	movlw	0
  3117  0656  00F7               	movwf	___fldiv@b+3
  3118  0657  3000               	movlw	0
  3119  0658  00F6               	movwf	___fldiv@b+2
  3120  0659  3000               	movlw	0
  3121  065A  00F5               	movwf	___fldiv@b+1
  3122  065B  3000               	movlw	0
  3123  065C  00F4               	movwf	___fldiv@b
  3124  065D                     l1817:
  3125  065D  0873               	movf	___fldiv@a+3,w
  3126  065E  3980               	andlw	128
  3127  065F  00F8               	movwf	??___fldiv
  3128  0660  0878               	movf	??___fldiv,w
  3129  0661  06A4               	xorwf	___fldiv@sign,f
  3130  0662                     l1819:
  3131  0662  3573               	lslf	___fldiv@a+3,w
  3132  0663  00F8               	movwf	??___fldiv
  3133  0664  0878               	movf	??___fldiv,w
  3134  0665  00AC               	movwf	___fldiv@aexp
  3135  0666                     l1821:
  3136  0666  1FF2               	btfss	___fldiv@a+2,7
  3137  0667  2E69               	goto	u1231
  3138  0668  2E6A               	goto	u1230
  3139  0669                     u1231:
  3140  0669  2E6B               	goto	l1825
  3141  066A                     u1230:
  3142  066A                     l1823:
  3143  066A  142C               	bsf	___fldiv@aexp,0
  3144  066B                     l1825:
  3145  066B  082C               	movf	___fldiv@aexp,w
  3146  066C  1903               	btfsc	3,2
  3147  066D  2E6F               	goto	u1241
  3148  066E  2E70               	goto	u1240
  3149  066F                     u1241:
  3150  066F  2E80               	goto	l1835
  3151  0670                     u1240:
  3152  0670                     l1827:
  3153  0670  0A2C               	incf	___fldiv@aexp,w
  3154  0671  1D03               	btfss	3,2
  3155  0672  2E74               	goto	u1251
  3156  0673  2E75               	goto	u1250
  3157  0674                     u1251:
  3158  0674  2E7D               	goto	l1831
  3159  0675                     u1250:
  3160  0675                     l1829:
  3161  0675  3000               	movlw	0
  3162  0676  00F3               	movwf	___fldiv@a+3
  3163  0677  3000               	movlw	0
  3164  0678  00F2               	movwf	___fldiv@a+2
  3165  0679  3000               	movlw	0
  3166  067A  00F1               	movwf	___fldiv@a+1
  3167  067B  3000               	movlw	0
  3168  067C  00F0               	movwf	___fldiv@a
  3169  067D                     l1831:
  3170  067D  17F2               	bsf	___fldiv@a+2,7
  3171  067E                     l1833:
  3172  067E  01F3               	clrf	___fldiv@a+3
  3173  067F  2E88               	goto	l778
  3174  0680                     l1835:
  3175  0680  3000               	movlw	0
  3176  0681  00F3               	movwf	___fldiv@a+3
  3177  0682  3000               	movlw	0
  3178  0683  00F2               	movwf	___fldiv@a+2
  3179  0684  3000               	movlw	0
  3180  0685  00F1               	movwf	___fldiv@a+1
  3181  0686  3000               	movlw	0
  3182  0687  00F0               	movwf	___fldiv@a
  3183  0688                     l778:
  3184  0688  0873               	movf	___fldiv@a+3,w
  3185  0689  0472               	iorwf	___fldiv@a+2,w
  3186  068A  0471               	iorwf	___fldiv@a+1,w
  3187  068B  0470               	iorwf	___fldiv@a,w
  3188  068C  1D03               	skipz
  3189  068D  2E8F               	goto	u1261
  3190  068E  2E90               	goto	u1260
  3191  068F                     u1261:
  3192  068F  2EA9               	goto	l1845
  3193  0690                     u1260:
  3194  0690                     l1837:
  3195  0690  3000               	movlw	0
  3196  0691  00F7               	movwf	___fldiv@b+3
  3197  0692  3000               	movlw	0
  3198  0693  00F6               	movwf	___fldiv@b+2
  3199  0694  3000               	movlw	0
  3200  0695  00F5               	movwf	___fldiv@b+1
  3201  0696  3000               	movlw	0
  3202  0697  00F4               	movwf	___fldiv@b
  3203  0698  3080               	movlw	128
  3204  0699  04F6               	iorwf	___fldiv@b+2,f
  3205  069A  307F               	movlw	127
  3206  069B  04F7               	iorwf	___fldiv@b+3,f
  3207  069C                     l1839:
  3208  069C  0824               	movf	___fldiv@sign,w
  3209  069D  00F8               	movwf	??___fldiv
  3210  069E  0878               	movf	??___fldiv,w
  3211  069F  04F7               	iorwf	___fldiv@b+3,f
  3212  06A0                     l1841:
  3213  06A0  0877               	movf	___fldiv@b+3,w
  3214  06A1  00F3               	movwf	?___fldiv+3
  3215  06A2  0876               	movf	___fldiv@b+2,w
  3216  06A3  00F2               	movwf	?___fldiv+2
  3217  06A4  0875               	movf	___fldiv@b+1,w
  3218  06A5  00F1               	movwf	?___fldiv+1
  3219  06A6  0874               	movf	___fldiv@b,w
  3220  06A7  00F0               	movwf	?___fldiv
  3221  06A8  2FE4               	goto	l780
  3222  06A9                     l1845:
  3223  06A9  082B               	movf	___fldiv@bexp,w
  3224  06AA  1D03               	btfss	3,2
  3225  06AB  2EAD               	goto	u1271
  3226  06AC  2EAE               	goto	u1270
  3227  06AD                     u1271:
  3228  06AD  2EB7               	goto	l1851
  3229  06AE                     u1270:
  3230  06AE                     l1847:
  3231  06AE  3000               	movlw	0
  3232  06AF  00F3               	movwf	?___fldiv+3
  3233  06B0  3000               	movlw	0
  3234  06B1  00F2               	movwf	?___fldiv+2
  3235  06B2  3000               	movlw	0
  3236  06B3  00F1               	movwf	?___fldiv+1
  3237  06B4  3000               	movlw	0
  3238  06B5  00F0               	movwf	?___fldiv
  3239  06B6  2FE4               	goto	l780
  3240  06B7                     l1851:
  3241  06B7  082B               	movf	___fldiv@bexp,w
  3242  06B8  00F8               	movwf	??___fldiv
  3243  06B9  01F9               	clrf	??___fldiv+1
  3244  06BA  0879               	movf	??___fldiv+1,w
  3245  06BB  00FB               	movwf	??___fldiv+3
  3246  06BC  082C               	movf	___fldiv@aexp,w
  3247  06BD  0278               	subwf	??___fldiv,w
  3248  06BE  00FA               	movwf	??___fldiv+2
  3249  06BF  1C03               	skipc
  3250  06C0  03FB               	decf	??___fldiv+3,f
  3251  06C1  087A               	movf	??___fldiv+2,w
  3252  06C2  3E7F               	addlw	127
  3253  06C3  00A5               	movwf	___fldiv@new_exp
  3254  06C4  3000               	movlw	0
  3255  06C5  3D7B               	addwfc	??___fldiv+3,w
  3256  06C6  00A6               	movwf	___fldiv@new_exp+1
  3257  06C7                     l1853:
  3258  06C7  0877               	movf	___fldiv@b+3,w
  3259  06C8  00A3               	movwf	___fldiv@rem+3
  3260  06C9  0876               	movf	___fldiv@b+2,w
  3261  06CA  00A2               	movwf	___fldiv@rem+2
  3262  06CB  0875               	movf	___fldiv@b+1,w
  3263  06CC  00A1               	movwf	___fldiv@rem+1
  3264  06CD  0874               	movf	___fldiv@b,w
  3265  06CE  00A0               	movwf	___fldiv@rem
  3266  06CF                     l1855:
  3267  06CF  3000               	movlw	0
  3268  06D0  00F7               	movwf	___fldiv@b+3
  3269  06D1  3000               	movlw	0
  3270  06D2  00F6               	movwf	___fldiv@b+2
  3271  06D3  3000               	movlw	0
  3272  06D4  00F5               	movwf	___fldiv@b+1
  3273  06D5  3000               	movlw	0
  3274  06D6  00F4               	movwf	___fldiv@b
  3275  06D7                     l1857:
  3276  06D7  3000               	movlw	0
  3277  06D8  00AA               	movwf	___fldiv@grs+3
  3278  06D9  3000               	movlw	0
  3279  06DA  00A9               	movwf	___fldiv@grs+2
  3280  06DB  3000               	movlw	0
  3281  06DC  00A8               	movwf	___fldiv@grs+1
  3282  06DD  3000               	movlw	0
  3283  06DE  00A7               	movwf	___fldiv@grs
  3284  06DF                     l1859:
  3285  06DF  01AC               	clrf	___fldiv@aexp
  3286  06E0  2F1F               	goto	l1879
  3287  06E1                     l1861:
  3288  06E1  082C               	movf	___fldiv@aexp,w
  3289  06E2  1903               	btfsc	3,2
  3290  06E3  2EE5               	goto	u1281
  3291  06E4  2EE6               	goto	u1280
  3292  06E5                     u1281:
  3293  06E5  2F00               	goto	l1871
  3294  06E6                     u1280:
  3295  06E6                     l1863:
  3296  06E6  3001               	movlw	1
  3297  06E7                     u1295:
  3298  06E7  35A0               	lslf	___fldiv@rem,f
  3299  06E8  0DA1               	rlf	___fldiv@rem+1,f
  3300  06E9  0DA2               	rlf	___fldiv@rem+2,f
  3301  06EA  0DA3               	rlf	___fldiv@rem+3,f
  3302  06EB  0B89               	decfsz	9,f
  3303  06EC  2EE7               	goto	u1295
  3304  06ED  3001               	movlw	1
  3305  06EE                     u1305:
  3306  06EE  35F4               	lslf	___fldiv@b,f
  3307  06EF  0DF5               	rlf	___fldiv@b+1,f
  3308  06F0  0DF6               	rlf	___fldiv@b+2,f
  3309  06F1  0DF7               	rlf	___fldiv@b+3,f
  3310  06F2  0B89               	decfsz	9,f
  3311  06F3  2EEE               	goto	u1305
  3312  06F4                     l1865:
  3313  06F4  1FAA               	btfss	___fldiv@grs+3,7
  3314  06F5  2EF7               	goto	u1311
  3315  06F6  2EF8               	goto	u1310
  3316  06F7                     u1311:
  3317  06F7  2EF9               	goto	l1869
  3318  06F8                     u1310:
  3319  06F8                     l1867:
  3320  06F8  1474               	bsf	___fldiv@b,0
  3321  06F9                     l1869:
  3322  06F9  3001               	movlw	1
  3323  06FA                     u1325:
  3324  06FA  35A7               	lslf	___fldiv@grs,f
  3325  06FB  0DA8               	rlf	___fldiv@grs+1,f
  3326  06FC  0DA9               	rlf	___fldiv@grs+2,f
  3327  06FD  0DAA               	rlf	___fldiv@grs+3,f
  3328  06FE  0B89               	decfsz	9,f
  3329  06FF  2EFA               	goto	u1325
  3330  0700                     l1871:
  3331  0700  0873               	movf	___fldiv@a+3,w
  3332  0701  0223               	subwf	___fldiv@rem+3,w
  3333  0702  1D03               	skipz
  3334  0703  2F0E               	goto	u1335
  3335  0704  0872               	movf	___fldiv@a+2,w
  3336  0705  0222               	subwf	___fldiv@rem+2,w
  3337  0706  1D03               	skipz
  3338  0707  2F0E               	goto	u1335
  3339  0708  0871               	movf	___fldiv@a+1,w
  3340  0709  0221               	subwf	___fldiv@rem+1,w
  3341  070A  1D03               	skipz
  3342  070B  2F0E               	goto	u1335
  3343  070C  0870               	movf	___fldiv@a,w
  3344  070D  0220               	subwf	___fldiv@rem,w
  3345  070E                     u1335:
  3346  070E  1C03               	skipc
  3347  070F  2F11               	goto	u1331
  3348  0710  2F12               	goto	u1330
  3349  0711                     u1331:
  3350  0711  2F1B               	goto	l1877
  3351  0712                     u1330:
  3352  0712                     l1873:
  3353  0712  172A               	bsf	___fldiv@grs+3,6
  3354  0713                     l1875:
  3355  0713  0870               	movf	___fldiv@a,w
  3356  0714  02A0               	subwf	___fldiv@rem,f
  3357  0715  0871               	movf	___fldiv@a+1,w
  3358  0716  3BA1               	subwfb	___fldiv@rem+1,f
  3359  0717  0872               	movf	___fldiv@a+2,w
  3360  0718  3BA2               	subwfb	___fldiv@rem+2,f
  3361  0719  0873               	movf	___fldiv@a+3,w
  3362  071A  3BA3               	subwfb	___fldiv@rem+3,f
  3363  071B                     l1877:
  3364  071B  3001               	movlw	1
  3365  071C  00F8               	movwf	??___fldiv
  3366  071D  0878               	movf	??___fldiv,w
  3367  071E  07AC               	addwf	___fldiv@aexp,f
  3368  071F                     l1879:
  3369  071F  301A               	movlw	26
  3370  0720  022C               	subwf	___fldiv@aexp,w
  3371  0721  1C03               	skipc
  3372  0722  2F24               	goto	u1341
  3373  0723  2F25               	goto	u1340
  3374  0724                     u1341:
  3375  0724  2EE1               	goto	l1861
  3376  0725                     u1340:
  3377  0725                     l1881:
  3378  0725  0823               	movf	___fldiv@rem+3,w
  3379  0726  0422               	iorwf	___fldiv@rem+2,w
  3380  0727  0421               	iorwf	___fldiv@rem+1,w
  3381  0728  0420               	iorwf	___fldiv@rem,w
  3382  0729  1903               	skipnz
  3383  072A  2F2C               	goto	u1351
  3384  072B  2F2D               	goto	u1350
  3385  072C                     u1351:
  3386  072C  2F46               	goto	l1895
  3387  072D                     u1350:
  3388  072D                     l1883:
  3389  072D  1427               	bsf	___fldiv@grs,0
  3390  072E  2F46               	goto	l1895
  3391  072F                     l1885:
  3392  072F  3001               	movlw	1
  3393  0730                     u1365:
  3394  0730  35F4               	lslf	___fldiv@b,f
  3395  0731  0DF5               	rlf	___fldiv@b+1,f
  3396  0732  0DF6               	rlf	___fldiv@b+2,f
  3397  0733  0DF7               	rlf	___fldiv@b+3,f
  3398  0734  0B89               	decfsz	9,f
  3399  0735  2F30               	goto	u1365
  3400  0736                     l1887:
  3401  0736  1FAA               	btfss	___fldiv@grs+3,7
  3402  0737  2F39               	goto	u1371
  3403  0738  2F3A               	goto	u1370
  3404  0739                     u1371:
  3405  0739  2F3B               	goto	l1891
  3406  073A                     u1370:
  3407  073A                     l1889:
  3408  073A  1474               	bsf	___fldiv@b,0
  3409  073B                     l1891:
  3410  073B  3001               	movlw	1
  3411  073C                     u1385:
  3412  073C  35A7               	lslf	___fldiv@grs,f
  3413  073D  0DA8               	rlf	___fldiv@grs+1,f
  3414  073E  0DA9               	rlf	___fldiv@grs+2,f
  3415  073F  0DAA               	rlf	___fldiv@grs+3,f
  3416  0740  0B89               	decfsz	9,f
  3417  0741  2F3C               	goto	u1385
  3418  0742                     l1893:
  3419  0742  30FF               	movlw	255
  3420  0743  07A5               	addwf	___fldiv@new_exp,f
  3421  0744  30FF               	movlw	255
  3422  0745  3DA6               	addwfc	___fldiv@new_exp+1,f
  3423  0746                     l1895:
  3424  0746  1FF6               	btfss	___fldiv@b+2,7
  3425  0747  2F49               	goto	u1391
  3426  0748  2F4A               	goto	u1390
  3427  0749                     u1391:
  3428  0749  2F2F               	goto	l1885
  3429  074A                     u1390:
  3430  074A                     l1897:
  3431  074A  01AC               	clrf	___fldiv@aexp
  3432  074B                     l1899:
  3433  074B  1FAA               	btfss	___fldiv@grs+3,7
  3434  074C  2F4E               	goto	u1401
  3435  074D  2F4F               	goto	u1400
  3436  074E                     u1401:
  3437  074E  2F6B               	goto	l1907
  3438  074F                     u1400:
  3439  074F                     l1901:
  3440  074F  30FF               	movlw	255
  3441  0750  0527               	andwf	___fldiv@grs,w
  3442  0751  00F8               	movwf	??___fldiv
  3443  0752  30FF               	movlw	255
  3444  0753  0528               	andwf	___fldiv@grs+1,w
  3445  0754  00F9               	movwf	??___fldiv+1
  3446  0755  30FF               	movlw	255
  3447  0756  0529               	andwf	___fldiv@grs+2,w
  3448  0757  00FA               	movwf	??___fldiv+2
  3449  0758  307F               	movlw	127
  3450  0759  052A               	andwf	___fldiv@grs+3,w
  3451  075A  00FB               	movwf	??___fldiv+3
  3452  075B  087B               	movf	??___fldiv+3,w
  3453  075C  047A               	iorwf	??___fldiv+2,w
  3454  075D  0479               	iorwf	??___fldiv+1,w
  3455  075E  0478               	iorwf	??___fldiv,w
  3456  075F  1903               	skipnz
  3457  0760  2F62               	goto	u1411
  3458  0761  2F63               	goto	u1410
  3459  0762                     u1411:
  3460  0762  2F66               	goto	l794
  3461  0763                     u1410:
  3462  0763                     l1903:
  3463  0763  01AC               	clrf	___fldiv@aexp
  3464  0764  0AAC               	incf	___fldiv@aexp,f
  3465  0765  2F6B               	goto	l1907
  3466  0766                     l794:
  3467  0766  1C74               	btfss	___fldiv@b,0
  3468  0767  2F69               	goto	u1421
  3469  0768  2F6A               	goto	u1420
  3470  0769                     u1421:
  3471  0769  2F6B               	goto	l1907
  3472  076A                     u1420:
  3473  076A  2F63               	goto	l1903
  3474  076B                     l1907:
  3475  076B  082C               	movf	___fldiv@aexp,w
  3476  076C  1903               	btfsc	3,2
  3477  076D  2F6F               	goto	u1431
  3478  076E  2F70               	goto	u1430
  3479  076F                     u1431:
  3480  076F  2F98               	goto	l1917
  3481  0770                     u1430:
  3482  0770                     l1909:
  3483  0770  3001               	movlw	1
  3484  0771  07F4               	addwf	___fldiv@b,f
  3485  0772  3000               	movlw	0
  3486  0773  3DF5               	addwfc	___fldiv@b+1,f
  3487  0774  3000               	movlw	0
  3488  0775  3DF6               	addwfc	___fldiv@b+2,f
  3489  0776  3000               	movlw	0
  3490  0777  3DF7               	addwfc	___fldiv@b+3,f
  3491  0778                     l1911:
  3492  0778  1C77               	btfss	___fldiv@b+3,0
  3493  0779  2F7B               	goto	u1441
  3494  077A  2F7C               	goto	u1440
  3495  077B                     u1441:
  3496  077B  2F98               	goto	l1917
  3497  077C                     u1440:
  3498  077C                     l1913:
  3499  077C  0874               	movf	___fldiv@b,w
  3500  077D  00F8               	movwf	??___fldiv
  3501  077E  0875               	movf	___fldiv@b+1,w
  3502  077F  00F9               	movwf	??___fldiv+1
  3503  0780  0876               	movf	___fldiv@b+2,w
  3504  0781  00FA               	movwf	??___fldiv+2
  3505  0782  0877               	movf	___fldiv@b+3,w
  3506  0783  00FB               	movwf	??___fldiv+3
  3507  0784  3001               	movlw	1
  3508  0785  00FC               	movwf	??___fldiv+4
  3509  0786                     u1455:
  3510  0786  37FB               	asrf	??___fldiv+3,f
  3511  0787  0CFA               	rrf	??___fldiv+2,f
  3512  0788  0CF9               	rrf	??___fldiv+1,f
  3513  0789  0CF8               	rrf	??___fldiv,f
  3514  078A                     u1450:
  3515  078A  0BFC               	decfsz	??___fldiv+4,f
  3516  078B  2F86               	goto	u1455
  3517  078C  087B               	movf	??___fldiv+3,w
  3518  078D  00F7               	movwf	___fldiv@b+3
  3519  078E  087A               	movf	??___fldiv+2,w
  3520  078F  00F6               	movwf	___fldiv@b+2
  3521  0790  0879               	movf	??___fldiv+1,w
  3522  0791  00F5               	movwf	___fldiv@b+1
  3523  0792  0878               	movf	??___fldiv,w
  3524  0793  00F4               	movwf	___fldiv@b
  3525  0794                     l1915:
  3526  0794  3001               	movlw	1
  3527  0795  07A5               	addwf	___fldiv@new_exp,f
  3528  0796  3000               	movlw	0
  3529  0797  3DA6               	addwfc	___fldiv@new_exp+1,f
  3530  0798                     l1917:
  3531  0798  0826               	movf	___fldiv@new_exp+1,w
  3532  0799  3A80               	xorlw	128
  3533  079A  00F8               	movwf	??___fldiv
  3534  079B  3080               	movlw	128
  3535  079C  0278               	subwf	??___fldiv,w
  3536  079D  1D03               	skipz
  3537  079E  2FA1               	goto	u1465
  3538  079F  30FF               	movlw	255
  3539  07A0  0225               	subwf	___fldiv@new_exp,w
  3540  07A1                     u1465:
  3541  07A1  1C03               	skipc
  3542  07A2  2FA4               	goto	u1461
  3543  07A3  2FA5               	goto	u1460
  3544  07A4                     u1461:
  3545  07A4  2FB2               	goto	l799
  3546  07A5                     u1460:
  3547  07A5                     l1919:
  3548  07A5  30FF               	movlw	255
  3549  07A6  0020               	movlb	0	; select bank0
  3550  07A7  00A5               	movwf	___fldiv@new_exp
  3551  07A8  3000               	movlw	0
  3552  07A9  00A6               	movwf	___fldiv@new_exp+1
  3553  07AA  3000               	movlw	0
  3554  07AB  00F7               	movwf	___fldiv@b+3
  3555  07AC  3000               	movlw	0
  3556  07AD  00F6               	movwf	___fldiv@b+2
  3557  07AE  3000               	movlw	0
  3558  07AF  00F5               	movwf	___fldiv@b+1
  3559  07B0  3000               	movlw	0
  3560  07B1  00F4               	movwf	___fldiv@b
  3561  07B2                     l799:
  3562  07B2  0020               	movlb	0	; select bank0
  3563  07B3  0826               	movf	___fldiv@new_exp+1,w
  3564  07B4  3A80               	xorlw	128
  3565  07B5  00F8               	movwf	??___fldiv
  3566  07B6  3080               	movlw	128
  3567  07B7  0278               	subwf	??___fldiv,w
  3568  07B8  1D03               	skipz
  3569  07B9  2FBC               	goto	u1475
  3570  07BA  3001               	movlw	1
  3571  07BB  0225               	subwf	___fldiv@new_exp,w
  3572  07BC                     u1475:
  3573  07BC  1803               	skipnc
  3574  07BD  2FBF               	goto	u1471
  3575  07BE  2FC0               	goto	u1470
  3576  07BF                     u1471:
  3577  07BF  2FCC               	goto	l800
  3578  07C0                     u1470:
  3579  07C0                     l1921:
  3580  07C0  0020               	movlb	0	; select bank0
  3581  07C1  01A5               	clrf	___fldiv@new_exp
  3582  07C2  01A6               	clrf	___fldiv@new_exp+1
  3583  07C3                     l1923:
  3584  07C3  3000               	movlw	0
  3585  07C4  00F7               	movwf	___fldiv@b+3
  3586  07C5  3000               	movlw	0
  3587  07C6  00F6               	movwf	___fldiv@b+2
  3588  07C7  3000               	movlw	0
  3589  07C8  00F5               	movwf	___fldiv@b+1
  3590  07C9  3000               	movlw	0
  3591  07CA  00F4               	movwf	___fldiv@b
  3592  07CB                     l1925:
  3593  07CB  01A4               	clrf	___fldiv@sign
  3594  07CC                     l800:
  3595  07CC  0020               	movlb	0	; select bank0
  3596  07CD  0825               	movf	___fldiv@new_exp,w
  3597  07CE  00F8               	movwf	??___fldiv
  3598  07CF  0878               	movf	??___fldiv,w
  3599  07D0  00AB               	movwf	___fldiv@bexp
  3600  07D1                     l1927:
  3601  07D1  1C2B               	btfss	___fldiv@bexp,0
  3602  07D2  2FD4               	goto	u1481
  3603  07D3  2FD5               	goto	u1480
  3604  07D4                     u1481:
  3605  07D4  2FD7               	goto	l1931
  3606  07D5                     u1480:
  3607  07D5                     l1929:
  3608  07D5  17F6               	bsf	___fldiv@b+2,7
  3609  07D6  2FDB               	goto	l802
  3610  07D7                     l1931:
  3611  07D7  307F               	movlw	127
  3612  07D8  00F8               	movwf	??___fldiv
  3613  07D9  0878               	movf	??___fldiv,w
  3614  07DA  05F6               	andwf	___fldiv@b+2,f
  3615  07DB                     l802:
  3616  07DB  362B               	lsrf	___fldiv@bexp,w
  3617  07DC  00F8               	movwf	??___fldiv
  3618  07DD  0878               	movf	??___fldiv,w
  3619  07DE  00F7               	movwf	___fldiv@b+3
  3620  07DF  0824               	movf	___fldiv@sign,w
  3621  07E0  00F8               	movwf	??___fldiv
  3622  07E1  0878               	movf	??___fldiv,w
  3623  07E2  04F7               	iorwf	___fldiv@b+3,f
  3624  07E3  2EA0               	goto	l1841
  3625  07E4                     l780:
  3626  07E4  0008               	return
  3627  07E5                     __end_of___fldiv:
  3628                           
  3629                           	psect	text7
  3630  0545                     __ptext7:	
  3631 ;; *************** function _lcd_init *****************
  3632 ;; Defined at:
  3633 ;;		line 19 in file "lcd_lib.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0, pclath, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3647 ;;      Params:         0       0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0
  3649 ;;      Temps:          2       0       0       0       0       0
  3650 ;;      Totals:         2       0       0       0       0       0
  3651 ;;Total ram usage:        2 bytes
  3652 ;; Hardware stack levels used: 1
  3653 ;; Hardware stack levels required when called: 3
  3654 ;; This function calls:
  3655 ;;		_lcd_cmd
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           
  3662                           ;psect for function _lcd_init
  3663  0545                     _lcd_init:
  3664  0545                     l1983:	
  3665                           ;incstack = 0
  3666                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3667                           
  3668                           
  3669                           ;lcd_lib.c: 20: _delay((unsigned long)((400)*(8000000/4000.0)));
  3670  0545  3005               	movlw	5
  3671  0546  00F3               	movwf	??_lcd_init+1
  3672  0547  300F               	movlw	15
  3673  0548  00F2               	movwf	??_lcd_init
  3674  0549  30F1               	movlw	241
  3675  054A                     u1847:
  3676  054A  0B89               	decfsz	9,f
  3677  054B  2D4A               	goto	u1847
  3678  054C  0BF2               	decfsz	??_lcd_init,f
  3679  054D  2D4A               	goto	u1847
  3680  054E  0BF3               	decfsz	??_lcd_init+1,f
  3681  054F  2D4A               	goto	u1847
  3682  0550  0000               	nop
  3683  0551                     l1985:
  3684                           
  3685                           ;lcd_lib.c: 22: lcd_cmd(0x30);
  3686  0551  3030               	movlw	48
  3687  0552  3180  206E  3185   	fcall	_lcd_cmd
  3688  0555                     l1987:
  3689                           
  3690                           ;lcd_lib.c: 23: lcd_cmd(0x34);
  3691  0555  3034               	movlw	52
  3692  0556  3180  206E  3185   	fcall	_lcd_cmd
  3693  0559                     l1989:
  3694                           
  3695                           ;lcd_lib.c: 24: lcd_cmd(0x30);
  3696  0559  3030               	movlw	48
  3697  055A  3180  206E  3185   	fcall	_lcd_cmd
  3698  055D                     l1991:
  3699                           
  3700                           ;lcd_lib.c: 25: _delay((unsigned long)((5)*(8000000/4000.0)));
  3701  055D  300D               	movlw	13
  3702  055E  00F2               	movwf	??_lcd_init
  3703  055F  30FC               	movlw	252
  3704  0560                     u1857:
  3705  0560  0B89               	decfsz	9,f
  3706  0561  2D60               	goto	u1857
  3707  0562  0BF2               	decfsz	??_lcd_init,f
  3708  0563  2D60               	goto	u1857
  3709                           
  3710                           ;lcd_lib.c: 27: lcd_cmd(0x30);
  3711  0564  3030               	movlw	48
  3712  0565  3180  206E  3185   	fcall	_lcd_cmd
  3713                           
  3714                           ;lcd_lib.c: 28: lcd_cmd(0x34);
  3715  0568  3034               	movlw	52
  3716  0569  3180  206E  3185   	fcall	_lcd_cmd
  3717                           
  3718                           ;lcd_lib.c: 29: lcd_cmd(0x30);
  3719  056C  3030               	movlw	48
  3720  056D  3180  206E  3185   	fcall	_lcd_cmd
  3721  0570                     l1993:
  3722                           
  3723                           ;lcd_lib.c: 30: _delay((unsigned long)((5)*(8000000/4000.0)));
  3724  0570  300D               	movlw	13
  3725  0571  00F2               	movwf	??_lcd_init
  3726  0572  30FC               	movlw	252
  3727  0573                     u1867:
  3728  0573  0B89               	decfsz	9,f
  3729  0574  2D73               	goto	u1867
  3730  0575  0BF2               	decfsz	??_lcd_init,f
  3731  0576  2D73               	goto	u1867
  3732  0577                     l1995:
  3733                           
  3734                           ;lcd_lib.c: 32: lcd_cmd(0x30);
  3735  0577  3030               	movlw	48
  3736  0578  3180  206E  3185   	fcall	_lcd_cmd
  3737  057B                     l1997:
  3738                           
  3739                           ;lcd_lib.c: 33: lcd_cmd(0x34);
  3740  057B  3034               	movlw	52
  3741  057C  3180  206E  3185   	fcall	_lcd_cmd
  3742  057F                     l1999:
  3743                           
  3744                           ;lcd_lib.c: 34: lcd_cmd(0x30);
  3745  057F  3030               	movlw	48
  3746  0580  3180  206E  3185   	fcall	_lcd_cmd
  3747                           
  3748                           ;lcd_lib.c: 35: _delay((unsigned long)((300)*(8000000/4000000.0)));
  3749  0583  30C8               	movlw	200
  3750  0584                     u1877:
  3751  0584  0B89               	decfsz	9,f
  3752  0585  2D84               	goto	u1877
  3753  0586                     l2001:
  3754                           
  3755                           ;lcd_lib.c: 37: lcd_cmd(0x20);
  3756  0586  3020               	movlw	32
  3757  0587  3180  206E  3185   	fcall	_lcd_cmd
  3758  058A                     l2003:
  3759                           
  3760                           ;lcd_lib.c: 38: lcd_cmd(0x24);
  3761  058A  3024               	movlw	36
  3762  058B  3180  206E  3185   	fcall	_lcd_cmd
  3763  058E                     l2005:
  3764                           
  3765                           ;lcd_lib.c: 39: lcd_cmd(0x20);
  3766  058E  3020               	movlw	32
  3767  058F  3180  206E  3185   	fcall	_lcd_cmd
  3768  0592                     l2007:
  3769                           
  3770                           ;lcd_lib.c: 40: _delay((unsigned long)((10)*(8000000/4000000.0)));
  3771  0592  3006               	movlw	6
  3772  0593                     u1887:
  3773  0593  0B89               	decfsz	9,f
  3774  0594  2D93               	goto	u1887
  3775  0595  3200               	nop2
  3776                           
  3777                           ;lcd_lib.c: 43: lcd_cmd(0x20);
  3778  0596  3020               	movlw	32
  3779  0597  3180  206E  3185   	fcall	_lcd_cmd
  3780                           
  3781                           ;lcd_lib.c: 44: lcd_cmd(0x24);
  3782  059A  3024               	movlw	36
  3783  059B  3180  206E  3185   	fcall	_lcd_cmd
  3784                           
  3785                           ;lcd_lib.c: 45: lcd_cmd(0x20);
  3786  059E  3020               	movlw	32
  3787  059F  3180  206E  3185   	fcall	_lcd_cmd
  3788  05A2                     l2009:
  3789                           
  3790                           ;lcd_lib.c: 47: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3791  05A2  3042               	movlw	66
  3792  05A3                     u1897:
  3793  05A3  0B89               	decfsz	9,f
  3794  05A4  2DA3               	goto	u1897
  3795  05A5  3200               	nop2
  3796  05A6                     l2011:
  3797                           
  3798                           ;lcd_lib.c: 49: lcd_cmd(0x80);
  3799  05A6  3080               	movlw	128
  3800  05A7  3180  206E  3185   	fcall	_lcd_cmd
  3801  05AA                     l2013:
  3802                           
  3803                           ;lcd_lib.c: 50: lcd_cmd(0x84);
  3804  05AA  3084               	movlw	132
  3805  05AB  3180  206E  3185   	fcall	_lcd_cmd
  3806  05AE                     l2015:
  3807                           
  3808                           ;lcd_lib.c: 51: lcd_cmd(0x80);
  3809  05AE  3080               	movlw	128
  3810  05AF  3180  206E  3185   	fcall	_lcd_cmd
  3811  05B2                     l2017:
  3812                           
  3813                           ;lcd_lib.c: 55: lcd_cmd(0x00);
  3814  05B2  3000               	movlw	0
  3815  05B3  3180  206E  3185   	fcall	_lcd_cmd
  3816  05B6                     l2019:
  3817                           
  3818                           ;lcd_lib.c: 56: lcd_cmd(0x04);
  3819  05B6  3004               	movlw	4
  3820  05B7  3180  206E  3185   	fcall	_lcd_cmd
  3821  05BA                     l2021:
  3822                           
  3823                           ;lcd_lib.c: 57: lcd_cmd(0x00);
  3824  05BA  3000               	movlw	0
  3825  05BB  3180  206E  3185   	fcall	_lcd_cmd
  3826  05BE                     l2023:
  3827                           
  3828                           ;lcd_lib.c: 59: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3829  05BE  3042               	movlw	66
  3830  05BF                     u1907:
  3831  05BF  0B89               	decfsz	9,f
  3832  05C0  2DBF               	goto	u1907
  3833  05C1  3200               	nop2
  3834                           
  3835                           ;lcd_lib.c: 61: lcd_cmd(0xC0);
  3836  05C2  30C0               	movlw	192
  3837  05C3  3180  206E  3185   	fcall	_lcd_cmd
  3838                           
  3839                           ;lcd_lib.c: 62: lcd_cmd(0xC4);
  3840  05C6  30C4               	movlw	196
  3841  05C7  3180  206E  3185   	fcall	_lcd_cmd
  3842                           
  3843                           ;lcd_lib.c: 63: lcd_cmd(0xC0);
  3844  05CA  30C0               	movlw	192
  3845  05CB  3180  206E  3185   	fcall	_lcd_cmd
  3846                           
  3847                           ;lcd_lib.c: 67: lcd_cmd(0x00);
  3848  05CE  3000               	movlw	0
  3849  05CF  3180  206E  3185   	fcall	_lcd_cmd
  3850                           
  3851                           ;lcd_lib.c: 68: lcd_cmd(0x04);
  3852  05D2  3004               	movlw	4
  3853  05D3  3180  206E  3185   	fcall	_lcd_cmd
  3854                           
  3855                           ;lcd_lib.c: 69: lcd_cmd(0x00);
  3856  05D6  3000               	movlw	0
  3857  05D7  3180  206E  3185   	fcall	_lcd_cmd
  3858  05DA                     l2025:
  3859                           
  3860                           ;lcd_lib.c: 71: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3861  05DA  3042               	movlw	66
  3862  05DB                     u1917:
  3863  05DB  0B89               	decfsz	9,f
  3864  05DC  2DDB               	goto	u1917
  3865  05DD  3200               	nop2
  3866  05DE                     l2027:
  3867                           
  3868                           ;lcd_lib.c: 73: lcd_cmd(0x10);
  3869  05DE  3010               	movlw	16
  3870  05DF  3180  206E  3185   	fcall	_lcd_cmd
  3871  05E2                     l2029:
  3872                           
  3873                           ;lcd_lib.c: 74: lcd_cmd(0x14);
  3874  05E2  3014               	movlw	20
  3875  05E3  3180  206E  3185   	fcall	_lcd_cmd
  3876  05E6                     l2031:
  3877                           
  3878                           ;lcd_lib.c: 75: lcd_cmd(0x10);
  3879  05E6  3010               	movlw	16
  3880  05E7  3180  206E  3185   	fcall	_lcd_cmd
  3881                           
  3882                           ;lcd_lib.c: 77: _delay((unsigned long)((5)*(8000000/4000.0)));
  3883  05EA  300D               	movlw	13
  3884  05EB  00F2               	movwf	??_lcd_init
  3885  05EC  30FC               	movlw	252
  3886  05ED                     u1927:
  3887  05ED  0B89               	decfsz	9,f
  3888  05EE  2DED               	goto	u1927
  3889  05EF  0BF2               	decfsz	??_lcd_init,f
  3890  05F0  2DED               	goto	u1927
  3891  05F1                     l2033:
  3892                           
  3893                           ;lcd_lib.c: 80: lcd_cmd(0x00);
  3894  05F1  3000               	movlw	0
  3895  05F2  3180  206E  3185   	fcall	_lcd_cmd
  3896  05F5                     l2035:
  3897                           
  3898                           ;lcd_lib.c: 81: lcd_cmd(0x04);
  3899  05F5  3004               	movlw	4
  3900  05F6  3180  206E  3185   	fcall	_lcd_cmd
  3901  05F9                     l2037:
  3902                           
  3903                           ;lcd_lib.c: 82: lcd_cmd(0x00);
  3904  05F9  3000               	movlw	0
  3905  05FA  3180  206E  3185   	fcall	_lcd_cmd
  3906  05FD                     l2039:
  3907                           
  3908                           ;lcd_lib.c: 84: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3909  05FD  3042               	movlw	66
  3910  05FE                     u1937:
  3911  05FE  0B89               	decfsz	9,f
  3912  05FF  2DFE               	goto	u1937
  3913  0600  3200               	nop2
  3914                           
  3915                           ;lcd_lib.c: 86: lcd_cmd(0x60);
  3916  0601  3060               	movlw	96
  3917  0602  3180  206E  3185   	fcall	_lcd_cmd
  3918                           
  3919                           ;lcd_lib.c: 87: lcd_cmd(0x64);
  3920  0605  3064               	movlw	100
  3921  0606  3180  206E  3185   	fcall	_lcd_cmd
  3922                           
  3923                           ;lcd_lib.c: 88: lcd_cmd(0x60);
  3924  0609  3060               	movlw	96
  3925  060A  3180  206E  3185   	fcall	_lcd_cmd
  3926                           
  3927                           ;lcd_lib.c: 92: lcd_cmd(0x00);
  3928  060D  3000               	movlw	0
  3929  060E  3180  206E  3185   	fcall	_lcd_cmd
  3930                           
  3931                           ;lcd_lib.c: 93: lcd_cmd(0x04);
  3932  0611  3004               	movlw	4
  3933  0612  3180  206E  3185   	fcall	_lcd_cmd
  3934                           
  3935                           ;lcd_lib.c: 94: lcd_cmd(0x00);
  3936  0615  3000               	movlw	0
  3937  0616  3180  206E  3185   	fcall	_lcd_cmd
  3938  0619                     l2041:
  3939                           
  3940                           ;lcd_lib.c: 96: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3941  0619  3042               	movlw	66
  3942  061A                     u1947:
  3943  061A  0B89               	decfsz	9,f
  3944  061B  2E1A               	goto	u1947
  3945  061C  3200               	nop2
  3946  061D                     l2043:
  3947                           
  3948                           ;lcd_lib.c: 98: lcd_cmd(0x20);
  3949  061D  3020               	movlw	32
  3950  061E  3180  206E  3185   	fcall	_lcd_cmd
  3951  0621                     l2045:
  3952                           
  3953                           ;lcd_lib.c: 99: lcd_cmd(0x24);
  3954  0621  3024               	movlw	36
  3955  0622  3180  206E  3185   	fcall	_lcd_cmd
  3956  0625                     l2047:
  3957                           
  3958                           ;lcd_lib.c: 100: lcd_cmd(0x20);
  3959  0625  3020               	movlw	32
  3960  0626  3180  206E  3185   	fcall	_lcd_cmd
  3961                           
  3962                           ;lcd_lib.c: 102: _delay((unsigned long)((3)*(8000000/4000.0)));
  3963  0629  3008               	movlw	8
  3964  062A  00F2               	movwf	??_lcd_init
  3965  062B  30CA               	movlw	202
  3966  062C                     u1957:
  3967  062C  0B89               	decfsz	9,f
  3968  062D  2E2C               	goto	u1957
  3969  062E  0BF2               	decfsz	??_lcd_init,f
  3970  062F  2E2C               	goto	u1957
  3971  0630                     l226:
  3972  0630  0008               	return
  3973  0631                     __end_of_lcd_init:
  3974                           
  3975                           	psect	text8
  3976  00D7                     __ptext8:	
  3977 ;; *************** function _lcd_clear *****************
  3978 ;; Defined at:
  3979 ;;		line 111 in file "lcd_lib.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  col             1    7[BANK0 ] unsigned char 
  3984 ;;  row             1    6[BANK0 ] unsigned char 
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3994 ;;      Params:         0       0       0       0       0       0
  3995 ;;      Locals:         0       2       0       0       0       0
  3996 ;;      Temps:          1       0       0       0       0       0
  3997 ;;      Totals:         1       2       0       0       0       0
  3998 ;;Total ram usage:        3 bytes
  3999 ;; Hardware stack levels used: 1
  4000 ;; Hardware stack levels required when called: 5
  4001 ;; This function calls:
  4002 ;;		_lcd_print
  4003 ;;		_lcd_set_cursor
  4004 ;; This function is called by:
  4005 ;;		_main
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           
  4010                           ;psect for function _lcd_clear
  4011  00D7                     _lcd_clear:
  4012  00D7                     l2119:	
  4013                           ;incstack = 0
  4014                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4015                           
  4016                           
  4017                           ;lcd_lib.c: 112: for(uint8_t row = 0; row < 2; row++){
  4018  00D7  0020               	movlb	0	; select bank0
  4019  00D8  01A6               	clrf	lcd_clear@row
  4020  00D9                     l2125:
  4021                           
  4022                           ;lcd_lib.c: 113: for(uint8_t col = 0; col < 16; col++){
  4023  00D9  01A7               	clrf	lcd_clear@col
  4024  00DA                     l2131:
  4025                           
  4026                           ;lcd_lib.c: 114: lcd_set_cursor(col, row);
  4027  00DA  0826               	movf	lcd_clear@row,w
  4028  00DB  00FC               	movwf	??_lcd_clear
  4029  00DC  087C               	movf	??_lcd_clear,w
  4030  00DD  00F8               	movwf	lcd_set_cursor@row
  4031  00DE  0827               	movf	lcd_clear@col,w
  4032  00DF  3180  20B5  3180   	fcall	_lcd_set_cursor
  4033  00E2                     l2133:
  4034                           
  4035                           ;lcd_lib.c: 115: lcd_print(" ");
  4036  00E2  302B               	movlw	low (STR_5| (0+32768))
  4037  00E3  00F8               	movwf	lcd_print@str
  4038  00E4  3088               	movlw	high (STR_5| (0+32768))
  4039  00E5  00F9               	movwf	lcd_print@str+1
  4040  00E6  3180  2098  3180   	fcall	_lcd_print
  4041  00E9                     l2135:
  4042  00E9  3001               	movlw	1
  4043  00EA  00FC               	movwf	??_lcd_clear
  4044  00EB  087C               	movf	??_lcd_clear,w
  4045  00EC  0020               	movlb	0	; select bank0
  4046  00ED  07A7               	addwf	lcd_clear@col,f
  4047  00EE                     l2137:
  4048  00EE  3010               	movlw	16
  4049  00EF  0227               	subwf	lcd_clear@col,w
  4050  00F0  1C03               	skipc
  4051  00F1  28F3               	goto	u1691
  4052  00F2  28F4               	goto	u1690
  4053  00F3                     u1691:
  4054  00F3  28DA               	goto	l2131
  4055  00F4                     u1690:
  4056  00F4                     l2139:
  4057  00F4  3001               	movlw	1
  4058  00F5  00FC               	movwf	??_lcd_clear
  4059  00F6  087C               	movf	??_lcd_clear,w
  4060  00F7  07A6               	addwf	lcd_clear@row,f
  4061  00F8                     l2141:
  4062  00F8  3002               	movlw	2
  4063  00F9  0226               	subwf	lcd_clear@row,w
  4064  00FA  1C03               	skipc
  4065  00FB  28FD               	goto	u1701
  4066  00FC  28FE               	goto	u1700
  4067  00FD                     u1701:
  4068  00FD  28D9               	goto	l2125
  4069  00FE                     u1700:
  4070  00FE                     l236:
  4071  00FE  0008               	return
  4072  00FF                     __end_of_lcd_clear:
  4073                           
  4074                           	psect	text9
  4075  00B5                     __ptext9:	
  4076 ;; *************** function _lcd_set_cursor *****************
  4077 ;; Defined at:
  4078 ;;		line 120 in file "lcd_lib.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  col             1    wreg     unsigned char 
  4081 ;;  row             1    8[COMMON] unsigned char 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  col             1    4[BANK0 ] unsigned char 
  4084 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
  4085 ;;  cmd             1    5[BANK0 ] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4095 ;;      Params:         1       0       0       0       0       0
  4096 ;;      Locals:         0       6       0       0       0       0
  4097 ;;      Temps:          1       0       0       0       0       0
  4098 ;;      Totals:         2       6       0       0       0       0
  4099 ;;Total ram usage:        8 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 4
  4102 ;; This function calls:
  4103 ;;		_command
  4104 ;; This function is called by:
  4105 ;;		_main
  4106 ;;		_lcd_clear
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           
  4111                           ;psect for function _lcd_set_cursor
  4112  00B5                     _lcd_set_cursor:
  4113                           
  4114                           ;incstack = 0
  4115                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4116                           ;lcd_set_cursor@col stored from wreg
  4117  00B5  0020               	movlb	0	; select bank0
  4118  00B6  00A4               	movwf	lcd_set_cursor@col
  4119  00B7                     l1665:
  4120                           
  4121                           ;lcd_lib.c: 121: uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  4122  00B7  085C               	movf	lcd_set_cursor@F2395+3,w
  4123  00B8  00A3               	movwf	lcd_set_cursor@row_offsets+3
  4124  00B9  085B               	movf	lcd_set_cursor@F2395+2,w
  4125  00BA  00A2               	movwf	lcd_set_cursor@row_offsets+2
  4126  00BB  085A               	movf	lcd_set_cursor@F2395+1,w
  4127  00BC  00A1               	movwf	lcd_set_cursor@row_offsets+1
  4128  00BD  0859               	movf	lcd_set_cursor@F2395,w
  4129  00BE  00A0               	movwf	lcd_set_cursor@row_offsets
  4130                           
  4131                           ;lcd_lib.c: 122: if(row > 2){
  4132  00BF  3003               	movlw	3
  4133  00C0  0278               	subwf	lcd_set_cursor@row,w
  4134  00C1  1C03               	skipc
  4135  00C2  28C4               	goto	u981
  4136  00C3  28C5               	goto	u980
  4137  00C4                     u981:
  4138  00C4  28C7               	goto	l1669
  4139  00C5                     u980:
  4140  00C5                     l1667:
  4141                           
  4142                           ;lcd_lib.c: 123: row = 2 - 1;
  4143  00C5  01F8               	clrf	lcd_set_cursor@row
  4144  00C6  0AF8               	incf	lcd_set_cursor@row,f
  4145  00C7                     l1669:
  4146                           
  4147                           ;lcd_lib.c: 124: };lcd_lib.c: 125: uint8_t cmd = 0x80 | (col + row_offsets[row]);
  4148  00C7  0878               	movf	lcd_set_cursor@row,w
  4149  00C8  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
  4150  00C9  0086               	movwf	6
  4151  00CA  0187               	clrf	7
  4152  00CB  0801               	movf	1,w
  4153  00CC  0724               	addwf	lcd_set_cursor@col,w
  4154  00CD  3880               	iorlw	128
  4155  00CE  00F9               	movwf	??_lcd_set_cursor
  4156  00CF  0879               	movf	??_lcd_set_cursor,w
  4157  00D0  00A5               	movwf	lcd_set_cursor@cmd
  4158  00D1                     l1671:
  4159                           
  4160                           ;lcd_lib.c: 126: command(cmd, 0);
  4161  00D1  01F2               	clrf	command@mode
  4162  00D2  0825               	movf	lcd_set_cursor@cmd,w
  4163  00D3  3181  2133  3180   	fcall	_command
  4164  00D6                     l242:
  4165  00D6  0008               	return
  4166  00D7                     __end_of_lcd_set_cursor:
  4167                           
  4168                           	psect	text10
  4169  0098                     __ptext10:	
  4170 ;; *************** function _lcd_print *****************
  4171 ;; Defined at:
  4172 ;;		line 129 in file "lcd_lib.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  str             2    8[COMMON] PTR unsigned char 
  4175 ;;		 -> STR_5(2), str(16), STR_2(17), STR_1(11), 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  cmd             1   11[COMMON] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4187 ;;      Params:         2       0       0       0       0       0
  4188 ;;      Locals:         1       0       0       0       0       0
  4189 ;;      Temps:          1       0       0       0       0       0
  4190 ;;      Totals:         4       0       0       0       0       0
  4191 ;;Total ram usage:        4 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; Hardware stack levels required when called: 4
  4194 ;; This function calls:
  4195 ;;		_command
  4196 ;; This function is called by:
  4197 ;;		_main
  4198 ;;		_lcd_clear
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           
  4203                           ;psect for function _lcd_print
  4204  0098                     _lcd_print:
  4205  0098                     l1673:	
  4206                           ;incstack = 0
  4207                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4208                           
  4209                           
  4210                           ;lcd_lib.c: 130: while (*str) {
  4211  0098  28AB               	goto	l1681
  4212  0099                     l1675:
  4213                           
  4214                           ;lcd_lib.c: 131: uint8_t cmd = *str++;
  4215  0099  0878               	movf	lcd_print@str,w
  4216  009A  0084               	movwf	4
  4217  009B  0879               	movf	lcd_print@str+1,w
  4218  009C  0085               	movwf	5
  4219  009D  0800               	movf	0,w	;code access
  4220  009E  00FA               	movwf	??_lcd_print
  4221  009F  087A               	movf	??_lcd_print,w
  4222  00A0  00FB               	movwf	lcd_print@cmd
  4223  00A1                     l1677:
  4224  00A1  3001               	movlw	1
  4225  00A2  07F8               	addwf	lcd_print@str,f
  4226  00A3  3000               	movlw	0
  4227  00A4  3DF9               	addwfc	lcd_print@str+1,f
  4228  00A5                     l1679:
  4229                           
  4230                           ;lcd_lib.c: 132: command(cmd, 0b00000001);
  4231  00A5  01F2               	clrf	command@mode
  4232  00A6  0AF2               	incf	command@mode,f
  4233  00A7  087B               	movf	lcd_print@cmd,w
  4234  00A8  3181  2133  3180   	fcall	_command
  4235  00AB                     l1681:
  4236  00AB  0878               	movf	lcd_print@str,w
  4237  00AC  0084               	movwf	4
  4238  00AD  0879               	movf	lcd_print@str+1,w
  4239  00AE  0085               	movwf	5
  4240  00AF  0012               	moviw fsr0++
  4241  00B0  1D03               	btfss	3,2
  4242  00B1  28B3               	goto	u991
  4243  00B2  28B4               	goto	u990
  4244  00B3                     u991:
  4245  00B3  2899               	goto	l1675
  4246  00B4                     u990:
  4247  00B4                     l248:
  4248  00B4  0008               	return
  4249  00B5                     __end_of_lcd_print:
  4250                           
  4251                           	psect	text11
  4252  0133                     __ptext11:	
  4253 ;; *************** function _command *****************
  4254 ;; Defined at:
  4255 ;;		line 136 in file "lcd_lib.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  val             1    wreg     unsigned char 
  4258 ;;  mode            1    2[COMMON] unsigned char 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  val             1    5[COMMON] unsigned char 
  4261 ;;  lownib          1    7[COMMON] unsigned char 
  4262 ;;  highnib         1    6[COMMON] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0, pclath, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4272 ;;      Params:         1       0       0       0       0       0
  4273 ;;      Locals:         3       0       0       0       0       0
  4274 ;;      Temps:          2       0       0       0       0       0
  4275 ;;      Totals:         6       0       0       0       0       0
  4276 ;;Total ram usage:        6 bytes
  4277 ;; Hardware stack levels used: 1
  4278 ;; Hardware stack levels required when called: 3
  4279 ;; This function calls:
  4280 ;;		_lcd_cmd
  4281 ;; This function is called by:
  4282 ;;		_lcd_set_cursor
  4283 ;;		_lcd_print
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           
  4288                           ;psect for function _command
  4289  0133                     _command:
  4290                           
  4291                           ;incstack = 0
  4292                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
  4293                           ;command@val stored from wreg
  4294  0133  00F5               	movwf	command@val
  4295  0134                     l1629:
  4296                           
  4297                           ;lcd_lib.c: 137: uint8_t highnib = (val & 0xf0) | _backlightval | mode;
  4298  0134  0875               	movf	command@val,w
  4299  0135  39F0               	andlw	240
  4300  0136  0020               	movlb	0	; select bank0
  4301  0137  0448               	iorwf	__backlightval,w
  4302  0138  0472               	iorwf	command@mode,w
  4303  0139  00F3               	movwf	??_command
  4304  013A  0873               	movf	??_command,w
  4305  013B  00F6               	movwf	command@highnib
  4306                           
  4307                           ;lcd_lib.c: 138: uint8_t lownib = ((val << 4) & 0xf0) | _backlightval | mode;
  4308  013C  0875               	movf	command@val,w
  4309  013D  00F3               	movwf	??_command
  4310  013E  3003               	movlw	3
  4311  013F                     u975:
  4312  013F  35F3               	lslf	??_command,f
  4313  0140  3EFF               	addlw	-1
  4314  0141  1D03               	skipz
  4315  0142  293F               	goto	u975
  4316  0143  3573               	lslf	??_command,w
  4317  0144  39F0               	andlw	240
  4318  0145  0448               	iorwf	__backlightval,w
  4319  0146  0472               	iorwf	command@mode,w
  4320  0147  00F4               	movwf	??_command+1
  4321  0148  0874               	movf	??_command+1,w
  4322  0149  00F7               	movwf	command@lownib
  4323  014A                     l1631:
  4324                           
  4325                           ;lcd_lib.c: 140: lcd_cmd(highnib);
  4326  014A  0876               	movf	command@highnib,w
  4327  014B  3180  206E  3181   	fcall	_lcd_cmd
  4328  014E                     l1633:
  4329                           
  4330                           ;lcd_lib.c: 141: lcd_cmd(highnib | 0b00000100);
  4331  014E  0876               	movf	command@highnib,w
  4332  014F  3804               	iorlw	4
  4333  0150  3180  206E  3181   	fcall	_lcd_cmd
  4334  0153                     l1635:
  4335                           
  4336                           ;lcd_lib.c: 142: lcd_cmd(highnib & ~0b00000100);
  4337  0153  0876               	movf	command@highnib,w
  4338  0154  39FB               	andlw	251
  4339  0155  3180  206E  3181   	fcall	_lcd_cmd
  4340  0158                     l1637:
  4341                           
  4342                           ;lcd_lib.c: 144: _delay((unsigned long)((100)*(8000000/4000000.0)));
  4343  0158  3042               	movlw	66
  4344  0159                     u1967:
  4345  0159  0B89               	decfsz	9,f
  4346  015A  2959               	goto	u1967
  4347  015B  3200               	nop2
  4348  015C                     l1639:
  4349                           
  4350                           ;lcd_lib.c: 146: lcd_cmd(lownib);
  4351  015C  0877               	movf	command@lownib,w
  4352  015D  3180  206E  3181   	fcall	_lcd_cmd
  4353  0160                     l1641:
  4354                           
  4355                           ;lcd_lib.c: 147: lcd_cmd(lownib | 0b00000100);
  4356  0160  0877               	movf	command@lownib,w
  4357  0161  3804               	iorlw	4
  4358  0162  3180  206E  3181   	fcall	_lcd_cmd
  4359  0165                     l1643:
  4360                           
  4361                           ;lcd_lib.c: 148: lcd_cmd(lownib & ~0b00000100);
  4362  0165  0877               	movf	command@lownib,w
  4363  0166  39FB               	andlw	251
  4364  0167  3180  206E  3181   	fcall	_lcd_cmd
  4365  016A                     l251:
  4366  016A  0008               	return
  4367  016B                     __end_of_command:
  4368                           
  4369                           	psect	text12
  4370  0050                     __ptext12:	
  4371 ;; *************** function _lcd_backlight *****************
  4372 ;; Defined at:
  4373 ;;		line 105 in file "lcd_lib.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  1    wreg      void 
  4380 ;; Registers used:
  4381 ;;		wreg, status,2, status,0, pclath, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4387 ;;      Params:         0       0       0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0
  4389 ;;      Temps:          1       0       0       0       0       0
  4390 ;;      Totals:         1       0       0       0       0       0
  4391 ;;Total ram usage:        1 bytes
  4392 ;; Hardware stack levels used: 1
  4393 ;; Hardware stack levels required when called: 3
  4394 ;; This function calls:
  4395 ;;		_lcd_cmd
  4396 ;; This function is called by:
  4397 ;;		_main
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           
  4402                           ;psect for function _lcd_backlight
  4403  0050                     _lcd_backlight:
  4404  0050                     l2049:	
  4405                           ;incstack = 0
  4406                           ; Regs used in _lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
  4407                           
  4408                           
  4409                           ;lcd_lib.c: 106: lcd_cmd(0x08);
  4410  0050  3008               	movlw	8
  4411  0051  3180  206E  3180   	fcall	_lcd_cmd
  4412  0054                     l2051:
  4413                           
  4414                           ;lcd_lib.c: 107: _backlightval = 0x08;
  4415  0054  3008               	movlw	8
  4416  0055  00F2               	movwf	??_lcd_backlight
  4417  0056  0872               	movf	??_lcd_backlight,w
  4418  0057  0020               	movlb	0	; select bank0
  4419  0058  00C8               	movwf	__backlightval
  4420  0059                     l2053:
  4421                           
  4422                           ;lcd_lib.c: 108: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4423  0059  3006               	movlw	6
  4424  005A                     u1977:
  4425  005A  0B89               	decfsz	9,f
  4426  005B  285A               	goto	u1977
  4427  005C  3200               	nop2
  4428  005D                     l229:
  4429  005D  0008               	return
  4430  005E                     __end_of_lcd_backlight:
  4431                           
  4432                           	psect	text13
  4433  006E                     __ptext13:	
  4434 ;; *************** function _lcd_cmd *****************
  4435 ;; Defined at:
  4436 ;;		line 11 in file "lcd_lib.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  cmd             1    wreg     unsigned char 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  cmd             1    1[COMMON] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0, pclath, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4450 ;;      Params:         0       0       0       0       0       0
  4451 ;;      Locals:         1       0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0
  4453 ;;      Totals:         1       0       0       0       0       0
  4454 ;;Total ram usage:        1 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; Hardware stack levels required when called: 2
  4457 ;; This function calls:
  4458 ;;		_i2c_start
  4459 ;;		_i2c_stop
  4460 ;;		_i2c_write
  4461 ;; This function is called by:
  4462 ;;		_lcd_init
  4463 ;;		_lcd_backlight
  4464 ;;		_command
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           
  4469                           ;psect for function _lcd_cmd
  4470  006E                     _lcd_cmd:
  4471                           
  4472                           ;incstack = 0
  4473                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  4474                           ;lcd_cmd@cmd stored from wreg
  4475  006E  00F1               	movwf	lcd_cmd@cmd
  4476  006F                     l1625:
  4477                           
  4478                           ;lcd_lib.c: 12: i2c_start();
  4479  006F  3180  203A  3180   	fcall	_i2c_start
  4480                           
  4481                           ;lcd_lib.c: 13: i2c_write(0x27 << 1);
  4482  0072  304E               	movlw	78
  4483  0073  3180  205E  3180   	fcall	_i2c_write
  4484                           
  4485                           ;lcd_lib.c: 14: i2c_write(cmd);
  4486  0076  0871               	movf	lcd_cmd@cmd,w
  4487  0077  3180  205E  3180   	fcall	_i2c_write
  4488  007A                     l1627:
  4489                           
  4490                           ;lcd_lib.c: 15: i2c_stop();
  4491  007A  3180  2029  3180   	fcall	_i2c_stop
  4492                           
  4493                           ;lcd_lib.c: 16: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4494  007D  3006               	movlw	6
  4495  007E                     u1987:
  4496  007E  0B89               	decfsz	9,f
  4497  007F  287E               	goto	u1987
  4498  0080  3200               	nop2
  4499  0081                     l223:
  4500  0081  0008               	return
  4501  0082                     __end_of_lcd_cmd:
  4502                           
  4503                           	psect	text14
  4504  005E                     __ptext14:	
  4505 ;; *************** function _i2c_write *****************
  4506 ;; Defined at:
  4507 ;;		line 25 in file "i2c.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  data            1    wreg     unsigned char 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  data            1    0[COMMON] unsigned char 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  1    wreg      void 
  4514 ;; Registers used:
  4515 ;;		wreg, status,2, status,0, pclath, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4521 ;;      Params:         0       0       0       0       0       0
  4522 ;;      Locals:         1       0       0       0       0       0
  4523 ;;      Temps:          0       0       0       0       0       0
  4524 ;;      Totals:         1       0       0       0       0       0
  4525 ;;Total ram usage:        1 bytes
  4526 ;; Hardware stack levels used: 1
  4527 ;; Hardware stack levels required when called: 1
  4528 ;; This function calls:
  4529 ;;		_i2c_wait
  4530 ;; This function is called by:
  4531 ;;		_lcd_cmd
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           
  4536                           ;psect for function _i2c_write
  4537  005E                     _i2c_write:
  4538                           
  4539                           ;incstack = 0
  4540                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  4541                           ;i2c_write@data stored from wreg
  4542  005E  00F0               	movwf	i2c_write@data
  4543  005F                     l1621:
  4544                           
  4545                           ;i2c.c: 26: SSP2BUF = data;
  4546  005F  0870               	movf	i2c_write@data,w
  4547  0060  0024               	movlb	4	; select bank4
  4548  0061  0099               	movwf	25	;volatile
  4549  0062                     l192:	
  4550                           ;i2c.c: 27: while(SSP2STATbits.BF);
  4551                           
  4552  0062  181C               	btfsc	28,0	;volatile
  4553  0063  2865               	goto	u951
  4554  0064  2866               	goto	u950
  4555  0065                     u951:
  4556  0065  2862               	goto	l192
  4557  0066                     u950:
  4558  0066                     l195:
  4559  0066  1B1E               	btfsc	30,6	;volatile
  4560  0067  2869               	goto	u961
  4561  0068  286A               	goto	u960
  4562  0069                     u961:
  4563  0069  2866               	goto	l195
  4564  006A                     u960:
  4565  006A                     l1623:
  4566                           
  4567                           ;i2c.c: 29: i2c_wait();
  4568  006A  3180  2044  3180   	fcall	_i2c_wait
  4569  006D                     l198:
  4570  006D  0008               	return
  4571  006E                     __end_of_i2c_write:
  4572                           
  4573                           	psect	text15
  4574  0029                     __ptext15:	
  4575 ;; *************** function _i2c_stop *****************
  4576 ;; Defined at:
  4577 ;;		line 14 in file "i2c.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;		None
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;		None
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      void 
  4584 ;; Registers used:
  4585 ;;		None
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4591 ;;      Params:         0       0       0       0       0       0
  4592 ;;      Locals:         0       0       0       0       0       0
  4593 ;;      Temps:          0       0       0       0       0       0
  4594 ;;      Totals:         0       0       0       0       0       0
  4595 ;;Total ram usage:        0 bytes
  4596 ;; Hardware stack levels used: 1
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_lcd_cmd
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           
  4605                           ;psect for function _i2c_stop
  4606  0029                     _i2c_stop:
  4607  0029                     l1619:	
  4608                           ;incstack = 0
  4609                           ; Regs used in _i2c_stop: []
  4610                           
  4611                           
  4612                           ;i2c.c: 15: SSP2CON2bits.PEN = 1;
  4613  0029  0024               	movlb	4	; select bank4
  4614  002A  151E               	bsf	30,2	;volatile
  4615  002B                     l180:	
  4616                           ;i2c.c: 16: while(SSP2CON2bits.PEN);
  4617                           
  4618  002B  191E               	btfsc	30,2	;volatile
  4619  002C  282E               	goto	u941
  4620  002D  282F               	goto	u940
  4621  002E                     u941:
  4622  002E  282B               	goto	l180
  4623  002F                     u940:
  4624  002F                     l183:
  4625  002F  0008               	return
  4626  0030                     __end_of_i2c_stop:
  4627                           
  4628                           	psect	text16
  4629  003A                     __ptext16:	
  4630 ;; *************** function _i2c_start *****************
  4631 ;; Defined at:
  4632 ;;		line 8 in file "i2c.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0, pclath, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4646 ;;      Params:         0       0       0       0       0       0
  4647 ;;      Locals:         0       0       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0
  4649 ;;      Totals:         0       0       0       0       0       0
  4650 ;;Total ram usage:        0 bytes
  4651 ;; Hardware stack levels used: 1
  4652 ;; Hardware stack levels required when called: 1
  4653 ;; This function calls:
  4654 ;;		_i2c_wait
  4655 ;; This function is called by:
  4656 ;;		_lcd_cmd
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           
  4661                           ;psect for function _i2c_start
  4662  003A                     _i2c_start:
  4663  003A                     l1615:	
  4664                           ;incstack = 0
  4665                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  4666                           
  4667                           
  4668                           ;i2c.c: 9: i2c_wait();
  4669  003A  3180  2044  3180   	fcall	_i2c_wait
  4670  003D                     l1617:
  4671                           
  4672                           ;i2c.c: 10: SSP2CON2bits.SEN = 1;
  4673  003D  0024               	movlb	4	; select bank4
  4674  003E  141E               	bsf	30,0	;volatile
  4675  003F                     l174:	
  4676                           ;i2c.c: 11: while(SSP2CON2bits.SEN);
  4677                           
  4678  003F  181E               	btfsc	30,0	;volatile
  4679  0040  2842               	goto	u931
  4680  0041  2843               	goto	u930
  4681  0042                     u931:
  4682  0042  283F               	goto	l174
  4683  0043                     u930:
  4684  0043                     l177:
  4685  0043  0008               	return
  4686  0044                     __end_of_i2c_start:
  4687                           
  4688                           	psect	text17
  4689  0044                     __ptext17:	
  4690 ;; *************** function _i2c_wait *****************
  4691 ;; Defined at:
  4692 ;;		line 4 in file "i2c.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;		None
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4706 ;;      Params:         0       0       0       0       0       0
  4707 ;;      Locals:         0       0       0       0       0       0
  4708 ;;      Temps:          0       0       0       0       0       0
  4709 ;;      Totals:         0       0       0       0       0       0
  4710 ;;Total ram usage:        0 bytes
  4711 ;; Hardware stack levels used: 1
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_i2c_start
  4716 ;;		_i2c_write
  4717 ;;		_i2c_repeated_start
  4718 ;;		_i2c_read
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           
  4723                           ;psect for function _i2c_wait
  4724  0044                     _i2c_wait:
  4725  0044                     l1609:	
  4726                           ;incstack = 0
  4727                           ; Regs used in _i2c_wait: [wreg+status,2]
  4728                           
  4729  0044                     l1611:	
  4730                           ;i2c.c: 5: while((SSP2CON2 & 0x1F) || (SSP2STAT & 0x04));
  4731                           
  4732  0044  0024               	movlb	4	; select bank4
  4733  0045  081E               	movf	30,w	;volatile
  4734  0046  391F               	andlw	31
  4735  0047  1D03               	btfss	3,2
  4736  0048  284A               	goto	u911
  4737  0049  284B               	goto	u910
  4738  004A                     u911:
  4739  004A  2844               	goto	l1611
  4740  004B                     u910:
  4741  004B                     l1613:
  4742  004B  191C               	btfsc	28,2	;volatile
  4743  004C  284E               	goto	u921
  4744  004D  284F               	goto	u920
  4745  004E                     u921:
  4746  004E  2844               	goto	l1611
  4747  004F                     u920:
  4748  004F                     l171:
  4749  004F  0008               	return
  4750  0050                     __end_of_i2c_wait:
  4751                           
  4752                           	psect	text18
  4753  0240                     __ptext18:	
  4754 ;; *************** function _get_scale_val *****************
  4755 ;; Defined at:
  4756 ;;		line 28 in file "loadcell.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  n               1    wreg     unsigned char 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;  n               1    7[BANK0 ] unsigned char 
  4761 ;;  i               1   11[BANK0 ] unsigned char 
  4762 ;;  j               1    6[BANK0 ] unsigned char 
  4763 ;;  weight_count    3    8[BANK0 ] unsigned um
  4764 ;;  weight_add      3    3[BANK0 ] unsigned um
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  3   11[COMMON] unsigned um
  4767 ;; Registers used:
  4768 ;;		wreg, status,2, status,0, pclath, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4774 ;;      Params:         3       0       0       0       0       0
  4775 ;;      Locals:         0       9       0       0       0       0
  4776 ;;      Temps:          0       3       0       0       0       0
  4777 ;;      Totals:         3      12       0       0       0       0
  4778 ;;Total ram usage:       15 bytes
  4779 ;; Hardware stack levels used: 1
  4780 ;; Hardware stack levels required when called: 1
  4781 ;; This function calls:
  4782 ;;		___ltdiv
  4783 ;;		_get_CELL_DAT_VAL
  4784 ;;		_set_CELL_CLK_HIGH
  4785 ;;		_set_CELL_CLK_LOW
  4786 ;; This function is called by:
  4787 ;;		_main
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           
  4792                           ;psect for function _get_scale_val
  4793  0240                     _get_scale_val:
  4794                           
  4795                           ;incstack = 0
  4796                           ; Regs used in _get_scale_val: [wreg+status,2+status,0+pclath+cstack]
  4797                           ;get_scale_val@n stored from wreg
  4798  0240  0020               	movlb	0	; select bank0
  4799  0241  00A7               	movwf	get_scale_val@n
  4800  0242                     l2055:
  4801                           
  4802                           ;loadcell.c: 30: set_CELL_CLK_LOW();
  4803  0242  3180  200F  3182   	fcall	_set_CELL_CLK_LOW
  4804  0245                     l2057:
  4805                           
  4806                           ;loadcell.c: 32: unsigned short long weight_count = 0;
  4807  0245  3000               	movlw	0
  4808  0246  0020               	movlb	0	; select bank0
  4809  0247  00A8               	movwf	get_scale_val@weight_count
  4810  0248  3000               	movlw	0
  4811  0249  00A9               	movwf	get_scale_val@weight_count+1
  4812  024A  3000               	movlw	0
  4813  024B  00AA               	movwf	get_scale_val@weight_count+2
  4814  024C                     l2059:
  4815                           
  4816                           ;loadcell.c: 33: unsigned short long weight_add = 0;
  4817  024C  3000               	movlw	0
  4818  024D  00A3               	movwf	get_scale_val@weight_add
  4819  024E  3000               	movlw	0
  4820  024F  00A4               	movwf	get_scale_val@weight_add+1
  4821  0250  3000               	movlw	0
  4822  0251  00A5               	movwf	get_scale_val@weight_add+2
  4823  0252                     l2061:
  4824                           
  4825                           ;loadcell.c: 34: for (uint8_t j = 0; j < n; j++)
  4826  0252  01A6               	clrf	get_scale_val@j
  4827  0253  2ABF               	goto	l2111
  4828  0254                     l2063:
  4829  0254  3180  2022  3182   	fcall	_get_CELL_DAT_VAL
  4830  0257  3A00               	xorlw	0
  4831  0258  1903               	skipnz
  4832  0259  2A5B               	goto	u1631
  4833  025A  2A5C               	goto	u1630
  4834  025B                     u1631:
  4835  025B  2A54               	goto	l2063
  4836  025C                     u1630:
  4837  025C                     l2065:
  4838  025C  3180  2022  3182   	fcall	_get_CELL_DAT_VAL
  4839  025F  3A01               	xorlw	1
  4840  0260  1903               	skipnz
  4841  0261  2A63               	goto	u1641
  4842  0262  2A64               	goto	u1640
  4843  0263                     u1641:
  4844  0263  2A5C               	goto	l2065
  4845  0264                     u1640:
  4846  0264                     l2067:
  4847                           
  4848                           ;loadcell.c: 38: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4849  0264  3006               	movlw	6
  4850  0265                     u1997:
  4851  0265  0B89               	decfsz	9,f
  4852  0266  2A65               	goto	u1997
  4853  0267  3200               	nop2
  4854  0268                     l2069:
  4855                           
  4856                           ;loadcell.c: 40: uint8_t i;;loadcell.c: 41: for (i = 0; i < 24; i++){
  4857  0268  0020               	movlb	0	; select bank0
  4858  0269  01AB               	clrf	get_scale_val@i
  4859  026A                     l2075:
  4860                           
  4861                           ;loadcell.c: 42: weight_count <<= 1;
  4862  026A  3001               	movlw	1
  4863  026B                     u1655:
  4864  026B  35A8               	lslf	get_scale_val@weight_count,f
  4865  026C  0DA9               	rlf	get_scale_val@weight_count+1,f
  4866  026D  0DAA               	rlf	get_scale_val@weight_count+2,f
  4867  026E  0B89               	decfsz	9,f
  4868  026F  2A6B               	goto	u1655
  4869  0270                     l2077:
  4870                           
  4871                           ;loadcell.c: 43: set_CELL_CLK_HIGH();
  4872  0270  3180  2004  3182   	fcall	_set_CELL_CLK_HIGH
  4873  0273                     l2079:
  4874                           
  4875                           ;loadcell.c: 44: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4876  0273  3006               	movlw	6
  4877  0274                     u2007:
  4878  0274  0B89               	decfsz	9,f
  4879  0275  2A74               	goto	u2007
  4880  0276  3200               	nop2
  4881  0277                     l2081:
  4882                           
  4883                           ;loadcell.c: 45: set_CELL_CLK_LOW();
  4884  0277  3180  200F  3182   	fcall	_set_CELL_CLK_LOW
  4885  027A                     l2083:
  4886                           
  4887                           ;loadcell.c: 46: weight_count += get_CELL_DAT_VAL();
  4888  027A  3180  2022  3182   	fcall	_get_CELL_DAT_VAL
  4889  027D  0020               	movlb	0	; select bank0
  4890  027E  00A0               	movwf	??_get_scale_val
  4891  027F  01A1               	clrf	??_get_scale_val+1
  4892  0280  01A2               	clrf	??_get_scale_val+2
  4893  0281  0820               	movf	??_get_scale_val,w
  4894  0282  07A8               	addwf	get_scale_val@weight_count,f
  4895  0283  0821               	movf	??_get_scale_val+1,w
  4896  0284  3DA9               	addwfc	get_scale_val@weight_count+1,f
  4897  0285  0822               	movf	??_get_scale_val+2,w
  4898  0286  3DAA               	addwfc	get_scale_val@weight_count+2,f
  4899  0287                     l2085:
  4900                           
  4901                           ;loadcell.c: 47: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4902  0287  3006               	movlw	6
  4903  0288                     u2017:
  4904  0288  0B89               	decfsz	9,f
  4905  0289  2A88               	goto	u2017
  4906  028A  3200               	nop2
  4907  028B                     l2087:
  4908  028B  3001               	movlw	1
  4909  028C  0020               	movlb	0	; select bank0
  4910  028D  00A0               	movwf	??_get_scale_val
  4911  028E  0820               	movf	??_get_scale_val,w
  4912  028F  07AB               	addwf	get_scale_val@i,f
  4913  0290                     l2089:
  4914  0290  3018               	movlw	24
  4915  0291  022B               	subwf	get_scale_val@i,w
  4916  0292  1C03               	skipc
  4917  0293  2A95               	goto	u1661
  4918  0294  2A96               	goto	u1660
  4919  0295                     u1661:
  4920  0295  2A6A               	goto	l2075
  4921  0296                     u1660:
  4922  0296                     l2091:
  4923                           
  4924                           ;loadcell.c: 48: };loadcell.c: 50: for (i = 0; i < 1; i++){
  4925  0296  01AB               	clrf	get_scale_val@i
  4926  0297                     l2097:
  4927                           
  4928                           ;loadcell.c: 51: set_CELL_CLK_HIGH();
  4929  0297  3180  2004  3182   	fcall	_set_CELL_CLK_HIGH
  4930  029A                     l2099:
  4931                           
  4932                           ;loadcell.c: 52: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4933  029A  3006               	movlw	6
  4934  029B                     u2027:
  4935  029B  0B89               	decfsz	9,f
  4936  029C  2A9B               	goto	u2027
  4937  029D  3200               	nop2
  4938                           
  4939                           ;loadcell.c: 53: set_CELL_CLK_LOW();
  4940  029E  3180  200F  3182   	fcall	_set_CELL_CLK_LOW
  4941  02A1                     l2101:
  4942                           
  4943                           ;loadcell.c: 54: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4944  02A1  3006               	movlw	6
  4945  02A2                     u2037:
  4946  02A2  0B89               	decfsz	9,f
  4947  02A3  2AA2               	goto	u2037
  4948  02A4  3200               	nop2
  4949  02A5                     l2103:
  4950  02A5  3001               	movlw	1
  4951  02A6  0020               	movlb	0	; select bank0
  4952  02A7  00A0               	movwf	??_get_scale_val
  4953  02A8  0820               	movf	??_get_scale_val,w
  4954  02A9  07AB               	addwf	get_scale_val@i,f
  4955  02AA                     l2105:
  4956  02AA  082B               	movf	get_scale_val@i,w
  4957  02AB  1903               	btfsc	3,2
  4958  02AC  2AAE               	goto	u1671
  4959  02AD  2AAF               	goto	u1670
  4960  02AE                     u1671:
  4961  02AE  2A97               	goto	l2097
  4962  02AF                     u1670:
  4963  02AF                     l2107:
  4964                           
  4965                           ;loadcell.c: 55: };loadcell.c: 57: weight_add += weight_count;
  4966  02AF  0828               	movf	get_scale_val@weight_count,w
  4967  02B0  07A3               	addwf	get_scale_val@weight_add,f
  4968  02B1  0829               	movf	get_scale_val@weight_count+1,w
  4969  02B2  3DA4               	addwfc	get_scale_val@weight_add+1,f
  4970  02B3  082A               	movf	get_scale_val@weight_count+2,w
  4971  02B4  3DA5               	addwfc	get_scale_val@weight_add+2,f
  4972                           
  4973                           ;loadcell.c: 58: weight_count = 0;
  4974  02B5  3000               	movlw	0
  4975  02B6  00A8               	movwf	get_scale_val@weight_count
  4976  02B7  3000               	movlw	0
  4977  02B8  00A9               	movwf	get_scale_val@weight_count+1
  4978  02B9  3000               	movlw	0
  4979  02BA  00AA               	movwf	get_scale_val@weight_count+2
  4980  02BB                     l2109:
  4981  02BB  3001               	movlw	1
  4982  02BC  00A0               	movwf	??_get_scale_val
  4983  02BD  0820               	movf	??_get_scale_val,w
  4984  02BE  07A6               	addwf	get_scale_val@j,f
  4985  02BF                     l2111:
  4986  02BF  0827               	movf	get_scale_val@n,w
  4987  02C0  0226               	subwf	get_scale_val@j,w
  4988  02C1  1C03               	skipc
  4989  02C2  2AC4               	goto	u1681
  4990  02C3  2AC5               	goto	u1680
  4991  02C4                     u1681:
  4992  02C4  2A54               	goto	l2063
  4993  02C5                     u1680:
  4994  02C5                     l2113:
  4995                           
  4996                           ;loadcell.c: 59: };loadcell.c: 60: weight_count = weight_add / n;
  4997  02C5  0827               	movf	get_scale_val@n,w
  4998  02C6  00A0               	movwf	??_get_scale_val
  4999  02C7  01A1               	clrf	??_get_scale_val+1
  5000  02C8  01A2               	clrf	??_get_scale_val+2
  5001  02C9  0820               	movf	??_get_scale_val,w
  5002  02CA  00F0               	movwf	___ltdiv@divisor
  5003  02CB  0821               	movf	??_get_scale_val+1,w
  5004  02CC  00F1               	movwf	___ltdiv@divisor+1
  5005  02CD  0822               	movf	??_get_scale_val+2,w
  5006  02CE  00F2               	movwf	___ltdiv@divisor+2
  5007  02CF  0823               	movf	get_scale_val@weight_add,w
  5008  02D0  00F3               	movwf	___ltdiv@dividend
  5009  02D1  0824               	movf	get_scale_val@weight_add+1,w
  5010  02D2  00F4               	movwf	___ltdiv@dividend+1
  5011  02D3  0825               	movf	get_scale_val@weight_add+2,w
  5012  02D4  00F5               	movwf	___ltdiv@dividend+2
  5013  02D5  3181  21A7  3182   	fcall	___ltdiv
  5014  02D8  0870               	movf	?___ltdiv,w
  5015  02D9  0020               	movlb	0	; select bank0
  5016  02DA  00A8               	movwf	get_scale_val@weight_count
  5017  02DB  0871               	movf	?___ltdiv+1,w
  5018  02DC  00A9               	movwf	get_scale_val@weight_count+1
  5019  02DD  0872               	movf	?___ltdiv+2,w
  5020  02DE  00AA               	movwf	get_scale_val@weight_count+2
  5021  02DF                     l2115:
  5022                           
  5023                           ;loadcell.c: 61: return weight_count;
  5024  02DF  0828               	movf	get_scale_val@weight_count,w
  5025  02E0  00FB               	movwf	?_get_scale_val
  5026  02E1  0829               	movf	get_scale_val@weight_count+1,w
  5027  02E2  00FC               	movwf	?_get_scale_val+1
  5028  02E3  082A               	movf	get_scale_val@weight_count+2,w
  5029  02E4  00FD               	movwf	?_get_scale_val+2
  5030  02E5                     l150:
  5031  02E5  0008               	return
  5032  02E6                     __end_of_get_scale_val:
  5033                           
  5034                           	psect	text19
  5035  000F                     __ptext19:	
  5036 ;; *************** function _set_CELL_CLK_LOW *****************
  5037 ;; Defined at:
  5038 ;;		line 7 in file "loadcell.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2, status,0
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5052 ;;      Params:         0       0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0
  5054 ;;      Temps:          1       0       0       0       0       0
  5055 ;;      Totals:         1       0       0       0       0       0
  5056 ;;Total ram usage:        1 bytes
  5057 ;; Hardware stack levels used: 1
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_get_scale_val
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           
  5066                           ;psect for function _set_CELL_CLK_LOW
  5067  000F                     _set_CELL_CLK_LOW:
  5068  000F                     l1683:	
  5069                           ;incstack = 0
  5070                           ; Regs used in _set_CELL_CLK_LOW: [wreg+status,2+status,0]
  5071                           
  5072  000F  30FD               	movlw	253
  5073  0010  00F0               	movwf	??_set_CELL_CLK_LOW
  5074  0011  0870               	movf	??_set_CELL_CLK_LOW,w
  5075  0012  0022               	movlb	2	; select bank2
  5076  0013  058C               	andwf	12,f	;volatile
  5077  0014                     l120:
  5078  0014  0008               	return
  5079  0015                     __end_of_set_CELL_CLK_LOW:
  5080                           
  5081                           	psect	text20
  5082  0004                     __ptext20:	
  5083 ;; *************** function _set_CELL_CLK_HIGH *****************
  5084 ;; Defined at:
  5085 ;;		line 12 in file "loadcell.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;		None
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;		None
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  1    wreg      void 
  5092 ;; Registers used:
  5093 ;;		None
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5099 ;;      Params:         0       0       0       0       0       0
  5100 ;;      Locals:         0       0       0       0       0       0
  5101 ;;      Temps:          0       0       0       0       0       0
  5102 ;;      Totals:         0       0       0       0       0       0
  5103 ;;Total ram usage:        0 bytes
  5104 ;; Hardware stack levels used: 1
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_get_scale_val
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           
  5113                           ;psect for function _set_CELL_CLK_HIGH
  5114  0004                     _set_CELL_CLK_HIGH:
  5115  0004                     l1685:	
  5116                           ;incstack = 0
  5117                           ; Regs used in _set_CELL_CLK_HIGH: []
  5118                           
  5119  0004  0022               	movlb	2	; select bank2
  5120  0005  148C               	bsf	12,1	;volatile
  5121  0006                     l123:
  5122  0006  0008               	return
  5123  0007                     __end_of_set_CELL_CLK_HIGH:
  5124                           
  5125                           	psect	text21
  5126  0022                     __ptext21:	
  5127 ;; *************** function _get_CELL_DAT_VAL *****************
  5128 ;; Defined at:
  5129 ;;		line 15 in file "loadcell.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;		None
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  1    wreg      unsigned char 
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5143 ;;      Params:         0       0       0       0       0       0
  5144 ;;      Locals:         0       0       0       0       0       0
  5145 ;;      Temps:          1       0       0       0       0       0
  5146 ;;      Totals:         1       0       0       0       0       0
  5147 ;;Total ram usage:        1 bytes
  5148 ;; Hardware stack levels used: 1
  5149 ;; This function calls:
  5150 ;;		Nothing
  5151 ;; This function is called by:
  5152 ;;		_get_scale_val
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           
  5157                           ;psect for function _get_CELL_DAT_VAL
  5158  0022                     _get_CELL_DAT_VAL:
  5159  0022                     l1687:	
  5160                           ;incstack = 0
  5161                           ; Regs used in _get_CELL_DAT_VAL: [wreg+status,2+status,0]
  5162                           
  5163  0022                     l1701:	
  5164                           ;loadcell.c: 16: if(0x08 == 0x01){ return PORTAbits.RA0; }
  5165                           
  5166  0022  0020               	movlb	0	; select bank0
  5167  0023  0C0C               	rrf	12,w	;volatile
  5168  0024  00F0               	movwf	??_get_CELL_DAT_VAL
  5169  0025  0CF0               	rrf	??_get_CELL_DAT_VAL,f
  5170  0026  0C70               	rrf	??_get_CELL_DAT_VAL,w
  5171  0027  3901               	andlw	1
  5172  0028                     l127:
  5173  0028  0008               	return
  5174  0029                     __end_of_get_CELL_DAT_VAL:
  5175                           
  5176                           	psect	text22
  5177  01A7                     __ptext22:	
  5178 ;; *************** function ___ltdiv *****************
  5179 ;; Defined at:
  5180 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ltdiv.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  divisor         3    0[COMMON] unsigned um
  5183 ;;  dividend        3    3[COMMON] unsigned um
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  quotient        3    7[COMMON] unsigned um
  5186 ;;  counter         1   10[COMMON] unsigned char 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  3    0[COMMON] unsigned um
  5189 ;; Registers used:
  5190 ;;		wreg, status,2, status,0
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5196 ;;      Params:         6       0       0       0       0       0
  5197 ;;      Locals:         4       0       0       0       0       0
  5198 ;;      Temps:          1       0       0       0       0       0
  5199 ;;      Totals:        11       0       0       0       0       0
  5200 ;;Total ram usage:       11 bytes
  5201 ;; Hardware stack levels used: 1
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_get_scale_val
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           
  5210                           ;psect for function ___ltdiv
  5211  01A7                     ___ltdiv:
  5212  01A7                     l1725:	
  5213                           ;incstack = 0
  5214                           ; Regs used in ___ltdiv: [wreg+status,2+status,0]
  5215                           
  5216  01A7  3000               	movlw	0
  5217  01A8  00F7               	movwf	___ltdiv@quotient
  5218  01A9  3000               	movlw	0
  5219  01AA  00F8               	movwf	___ltdiv@quotient+1
  5220  01AB  3000               	movlw	0
  5221  01AC  00F9               	movwf	___ltdiv@quotient+2
  5222  01AD  0872               	movf	___ltdiv@divisor+2,w
  5223  01AE  0471               	iorwf	___ltdiv@divisor+1,w
  5224  01AF  0470               	iorwf	___ltdiv@divisor,w
  5225  01B0  1903               	skipnz
  5226  01B1  29B3               	goto	u1001
  5227  01B2  29B4               	goto	u1000
  5228  01B3                     u1001:
  5229  01B3  29EC               	goto	l1745
  5230  01B4                     u1000:
  5231  01B4                     l1727:
  5232  01B4  01FA               	clrf	___ltdiv@counter
  5233  01B5  0AFA               	incf	___ltdiv@counter,f
  5234  01B6  29C1               	goto	l1731
  5235  01B7                     l1729:
  5236  01B7  3001               	movlw	1
  5237  01B8                     u1015:
  5238  01B8  35F0               	lslf	___ltdiv@divisor,f
  5239  01B9  0DF1               	rlf	___ltdiv@divisor+1,f
  5240  01BA  0DF2               	rlf	___ltdiv@divisor+2,f
  5241  01BB  0B89               	decfsz	9,f
  5242  01BC  29B8               	goto	u1015
  5243  01BD  3001               	movlw	1
  5244  01BE  00F6               	movwf	??___ltdiv
  5245  01BF  0876               	movf	??___ltdiv,w
  5246  01C0  07FA               	addwf	___ltdiv@counter,f
  5247  01C1                     l1731:
  5248  01C1  1FF2               	btfss	___ltdiv@divisor+2,7
  5249  01C2  29C4               	goto	u1021
  5250  01C3  29C5               	goto	u1020
  5251  01C4                     u1021:
  5252  01C4  29B7               	goto	l1729
  5253  01C5                     u1020:
  5254  01C5                     l1733:
  5255  01C5  3001               	movlw	1
  5256  01C6                     u1035:
  5257  01C6  35F7               	lslf	___ltdiv@quotient,f
  5258  01C7  0DF8               	rlf	___ltdiv@quotient+1,f
  5259  01C8  0DF9               	rlf	___ltdiv@quotient+2,f
  5260  01C9  0B89               	decfsz	9,f
  5261  01CA  29C6               	goto	u1035
  5262  01CB                     l1735:
  5263  01CB  0872               	movf	___ltdiv@divisor+2,w
  5264  01CC  0275               	subwf	___ltdiv@dividend+2,w
  5265  01CD  1D03               	skipz
  5266  01CE  29D5               	goto	u1045
  5267  01CF  0871               	movf	___ltdiv@divisor+1,w
  5268  01D0  0274               	subwf	___ltdiv@dividend+1,w
  5269  01D1  1D03               	skipz
  5270  01D2  29D5               	goto	u1045
  5271  01D3  0870               	movf	___ltdiv@divisor,w
  5272  01D4  0273               	subwf	___ltdiv@dividend,w
  5273  01D5                     u1045:
  5274  01D5  1C03               	skipc
  5275  01D6  29D8               	goto	u1041
  5276  01D7  29D9               	goto	u1040
  5277  01D8                     u1041:
  5278  01D8  29E0               	goto	l1741
  5279  01D9                     u1040:
  5280  01D9                     l1737:
  5281  01D9  0870               	movf	___ltdiv@divisor,w
  5282  01DA  02F3               	subwf	___ltdiv@dividend,f
  5283  01DB  0871               	movf	___ltdiv@divisor+1,w
  5284  01DC  3BF4               	subwfb	___ltdiv@dividend+1,f
  5285  01DD  0872               	movf	___ltdiv@divisor+2,w
  5286  01DE  3BF5               	subwfb	___ltdiv@dividend+2,f
  5287  01DF                     l1739:
  5288  01DF  1477               	bsf	___ltdiv@quotient,0
  5289  01E0                     l1741:
  5290  01E0  3001               	movlw	1
  5291  01E1                     u1055:
  5292  01E1  36F2               	lsrf	___ltdiv@divisor+2,f
  5293  01E2  0CF1               	rrf	___ltdiv@divisor+1,f
  5294  01E3  0CF0               	rrf	___ltdiv@divisor,f
  5295  01E4  0B89               	decfsz	9,f
  5296  01E5  29E1               	goto	u1055
  5297  01E6                     l1743:
  5298  01E6  3001               	movlw	1
  5299  01E7  02FA               	subwf	___ltdiv@counter,f
  5300  01E8  1D03               	btfss	3,2
  5301  01E9  29EB               	goto	u1061
  5302  01EA  29EC               	goto	u1060
  5303  01EB                     u1061:
  5304  01EB  29C5               	goto	l1733
  5305  01EC                     u1060:
  5306  01EC                     l1745:
  5307  01EC  0877               	movf	___ltdiv@quotient,w
  5308  01ED  00F0               	movwf	?___ltdiv
  5309  01EE  0878               	movf	___ltdiv@quotient+1,w
  5310  01EF  00F1               	movwf	?___ltdiv+1
  5311  01F0  0879               	movf	___ltdiv@quotient+2,w
  5312  01F1  00F2               	movwf	?___ltdiv+2
  5313  01F2                     l681:
  5314  01F2  0008               	return
  5315  01F3                     __end_of___ltdiv:
  5316                           
  5317                           	psect	text23
  5318  0030                     __ptext23:	
  5319 ;; *************** function _SYSTEM_Initialize *****************
  5320 ;; Defined at:
  5321 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;		None
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;		None
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  1    wreg      void 
  5328 ;; Registers used:
  5329 ;;		wreg, status,2, status,0, pclath, cstack
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5335 ;;      Params:         0       0       0       0       0       0
  5336 ;;      Locals:         0       0       0       0       0       0
  5337 ;;      Temps:          0       0       0       0       0       0
  5338 ;;      Totals:         0       0       0       0       0       0
  5339 ;;Total ram usage:        0 bytes
  5340 ;; Hardware stack levels used: 1
  5341 ;; Hardware stack levels required when called: 1
  5342 ;; This function calls:
  5343 ;;		_OSCILLATOR_Initialize
  5344 ;;		_PIN_MANAGER_Initialize
  5345 ;;		_WDT_Initialize
  5346 ;; This function is called by:
  5347 ;;		_main
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           
  5352                           ;psect for function _SYSTEM_Initialize
  5353  0030                     _SYSTEM_Initialize:
  5354  0030                     l1981:	
  5355                           ;incstack = 0
  5356                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5357                           
  5358                           
  5359                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  5360  0030  3180  2082  3180   	fcall	_PIN_MANAGER_Initialize
  5361                           
  5362                           ;mcc.c: 54: OSCILLATOR_Initialize();
  5363  0033  3180  201B  3180   	fcall	_OSCILLATOR_Initialize
  5364                           
  5365                           ;mcc.c: 55: WDT_Initialize();
  5366  0036  3180  2007  3180   	fcall	_WDT_Initialize
  5367  0039                     l17:
  5368  0039  0008               	return
  5369  003A                     __end_of_SYSTEM_Initialize:
  5370                           
  5371                           	psect	text24
  5372  0007                     __ptext24:	
  5373 ;; *************** function _WDT_Initialize *****************
  5374 ;; Defined at:
  5375 ;;		line 68 in file "mcc_generated_files/mcc.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;		None
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5389 ;;      Params:         0       0       0       0       0       0
  5390 ;;      Locals:         0       0       0       0       0       0
  5391 ;;      Temps:          0       0       0       0       0       0
  5392 ;;      Totals:         0       0       0       0       0       0
  5393 ;;Total ram usage:        0 bytes
  5394 ;; Hardware stack levels used: 1
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_SYSTEM_Initialize
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           
  5403                           ;psect for function _WDT_Initialize
  5404  0007                     _WDT_Initialize:
  5405  0007                     l1663:	
  5406                           ;incstack = 0
  5407                           ; Regs used in _WDT_Initialize: [wreg]
  5408                           
  5409                           
  5410                           ;mcc.c: 71: WDTCON = 0x16;
  5411  0007  3016               	movlw	22
  5412  0008  0021               	movlb	1	; select bank1
  5413  0009  0097               	movwf	23	;volatile
  5414  000A                     l23:
  5415  000A  0008               	return
  5416  000B                     __end_of_WDT_Initialize:
  5417                           
  5418                           	psect	text25
  5419  0082                     __ptext25:	
  5420 ;; *************** function _PIN_MANAGER_Initialize *****************
  5421 ;; Defined at:
  5422 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;		None
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  1    wreg      void 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5436 ;;      Params:         0       0       0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0       0
  5438 ;;      Temps:          0       0       0       0       0       0
  5439 ;;      Totals:         0       0       0       0       0       0
  5440 ;;Total ram usage:        0 bytes
  5441 ;; Hardware stack levels used: 1
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_SYSTEM_Initialize
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           
  5450                           ;psect for function _PIN_MANAGER_Initialize
  5451  0082                     _PIN_MANAGER_Initialize:
  5452  0082                     l1645:	
  5453                           ;incstack = 0
  5454                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5455                           
  5456                           
  5457                           ;pin_manager.c: 60: LATA = 0x00;
  5458  0082  0022               	movlb	2	; select bank2
  5459  0083  018C               	clrf	12	;volatile
  5460                           
  5461                           ;pin_manager.c: 61: LATB = 0x00;
  5462  0084  018D               	clrf	13	;volatile
  5463  0085                     l1647:
  5464                           
  5465                           ;pin_manager.c: 66: TRISA = 0xFF;
  5466  0085  30FF               	movlw	255
  5467  0086  0021               	movlb	1	; select bank1
  5468  0087  008C               	movwf	12	;volatile
  5469  0088                     l1649:
  5470                           
  5471                           ;pin_manager.c: 67: TRISB = 0xFF;
  5472  0088  30FF               	movlw	255
  5473  0089  008D               	movwf	13	;volatile
  5474  008A                     l1651:
  5475                           
  5476                           ;pin_manager.c: 72: ANSELB = 0xFE;
  5477  008A  30FE               	movlw	254
  5478  008B  0023               	movlb	3	; select bank3
  5479  008C  008D               	movwf	13	;volatile
  5480  008D                     l1653:
  5481                           
  5482                           ;pin_manager.c: 73: ANSELA = 0x1F;
  5483  008D  301F               	movlw	31
  5484  008E  008C               	movwf	12	;volatile
  5485                           
  5486                           ;pin_manager.c: 78: WPUB = 0x00;
  5487  008F  0024               	movlb	4	; select bank4
  5488  0090  018D               	clrf	13	;volatile
  5489                           
  5490                           ;pin_manager.c: 79: WPUA = 0x00;
  5491  0091  018C               	clrf	12	;volatile
  5492  0092                     l1655:
  5493                           
  5494                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  5495  0092  0021               	movlb	1	; select bank1
  5496  0093  1795               	bsf	21,7	;volatile
  5497                           
  5498                           ;pin_manager.c: 86: APFCON0 = 0x00;
  5499  0094  0022               	movlb	2	; select bank2
  5500  0095  019D               	clrf	29	;volatile
  5501                           
  5502                           ;pin_manager.c: 87: APFCON1 = 0x00;
  5503  0096  019E               	clrf	30	;volatile
  5504  0097                     l48:
  5505  0097  0008               	return
  5506  0098                     __end_of_PIN_MANAGER_Initialize:
  5507                           
  5508                           	psect	text26
  5509  001B                     __ptext26:	
  5510 ;; *************** function _OSCILLATOR_Initialize *****************
  5511 ;; Defined at:
  5512 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;		None
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      void 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5526 ;;      Params:         0       0       0       0       0       0
  5527 ;;      Locals:         0       0       0       0       0       0
  5528 ;;      Temps:          0       0       0       0       0       0
  5529 ;;      Totals:         0       0       0       0       0       0
  5530 ;;Total ram usage:        0 bytes
  5531 ;; Hardware stack levels used: 1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_SYSTEM_Initialize
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           
  5540                           ;psect for function _OSCILLATOR_Initialize
  5541  001B                     _OSCILLATOR_Initialize:
  5542  001B                     l1657:	
  5543                           ;incstack = 0
  5544                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5545                           
  5546                           
  5547                           ;mcc.c: 61: OSCCON = 0x70;
  5548  001B  3070               	movlw	112
  5549  001C  0021               	movlb	1	; select bank1
  5550  001D  0099               	movwf	25	;volatile
  5551  001E                     l1659:
  5552                           
  5553                           ;mcc.c: 63: OSCTUNE = 0x00;
  5554  001E  0198               	clrf	24	;volatile
  5555  001F                     l1661:
  5556                           
  5557                           ;mcc.c: 65: BORCON = 0x00;
  5558  001F  0022               	movlb	2	; select bank2
  5559  0020  0196               	clrf	22	;volatile
  5560  0021                     l20:
  5561  0021  0008               	return
  5562  0022                     __end_of_OSCILLATOR_Initialize:
  5563  007E                     btemp	set	126	;btemp
  5564  007E                     wtemp0	set	126
  5565                           
  5566                           	psect	config
  5567                           
  5568                           ;Config register CONFIG1 @ 0x8007
  5569                           ;	Oscillator Selection
  5570                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5571                           ;	Watchdog Timer Enable
  5572                           ;	WDTE = OFF, WDT disabled
  5573                           ;	Power-up Timer Enable
  5574                           ;	PWRTE = OFF, PWRT disabled
  5575                           ;	MCLR Pin Function Select
  5576                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5577                           ;	Flash Program Memory Code Protection
  5578                           ;	CP = OFF, Program memory code protection is disabled
  5579                           ;	Data Memory Code Protection
  5580                           ;	CPD = OFF, Data memory code protection is disabled
  5581                           ;	Brown-out Reset Enable
  5582                           ;	BOREN = ON, Brown-out Reset enabled
  5583                           ;	Clock Out Enable
  5584                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5585                           ;	Internal/External Switchover
  5586                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5587                           ;	Fail-Safe Clock Monitor Enable
  5588                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5589  8007                     	org	32775
  5590  8007  3FE4               	dw	16356
  5591                           
  5592                           ;Config register CONFIG2 @ 0x8008
  5593                           ;	Flash Memory Self-Write Protection
  5594                           ;	WRT = OFF, Write protection off
  5595                           ;	PLL Enable
  5596                           ;	PLLEN = OFF, 4x PLL disabled
  5597                           ;	Stack Overflow/Underflow Reset Enable
  5598                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5599                           ;	Brown-out Reset Voltage Selection
  5600                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5601                           ;	Low-Voltage Programming Enable
  5602                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5603  8008                     	org	32776
  5604  8008  1EFF               	dw	7935

Data Sizes:
    Strings     35
    Constant    10
    Data        4
    BSS         23
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     34      61
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> str(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[2]), str(BANK0[16]), STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_get_scale_val
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _scale_convert_gram->___xxtofl
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_print
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _get_scale_val->___ltdiv

Critical Paths under _main in BANK0

    _main->_scale_convert_gram
    _scale_convert_gram->___fldiv
    _lcd_clear->_lcd_set_cursor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    7584
                                             24 BANK0     10    10      0
                  _SYSTEM_Initialize
                      _get_scale_val
                      _lcd_backlight
                          _lcd_clear
                           _lcd_init
                          _lcd_print
                     _lcd_set_cursor
                 _scale_convert_gram
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    19      6    1320
                                              0 BANK0     17    11      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _scale_convert_gram                                  11     7      4    1891
                                             13 BANK0     11     7      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      44
                                              2 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            3     3      0    1914
                                             12 COMMON     1     1      0
                                              6 BANK0      2     2      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       8     7      1     912
                                              8 COMMON     2     1      1
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            4     2      2     866
                                              8 COMMON     4     2      2
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              6     5      1     418
                                              2 COMMON     6     5      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_backlight                                        1     1      0      44
                                              2 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_scale_val                                       15    12      3     547
                                             11 COMMON     3     0      3
                                              0 BANK0     12    12      0
                            ___ltdiv
                   _get_CELL_DAT_VAL
                  _set_CELL_CLK_HIGH
                   _set_CELL_CLK_LOW
 ---------------------------------------------------------------------------------
 (2) _set_CELL_CLK_LOW                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_CELL_CLK_HIGH                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_CELL_DAT_VAL                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___ltdiv                                             11     5      6     314
                                              0 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _get_scale_val
     ___ltdiv
     _get_CELL_DAT_VAL
     _set_CELL_CLK_HIGH
     _set_CELL_CLK_LOW
   _lcd_backlight
     _lcd_cmd
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _lcd_clear
     _lcd_print
       _command
         _lcd_cmd
     _lcd_set_cursor
       _command
   _lcd_init
     _lcd_cmd
   _lcd_print
   _lcd_set_cursor
   _scale_convert_gram
     ___fldiv
     ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     22      3D       6       76.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      4B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Oct 31 21:34:01 2021

                   ___fldiv@aexp 002C                     ___fldiv@bexp 002B                     ___fldiv@sign 0024  
                             l20 0021                               l23 000A                               l17 0039  
                             l48 0097                     lcd_clear@col 0027                     lcd_clear@row 0026  
                            l120 0014                              l123 0006                              l150 02E5  
                            l127 0028                              l223 0081                              l153 023F  
                            l242 00D6                              l226 0630                              l171 004F  
                            l251 016A                              l180 002B                              l236 00FE  
                            l229 005D                              l174 003F                              l183 002F  
                            l192 0062                              l248 00B4                              l177 0043  
                            l425 046A                              l195 0066                              l701 01A6  
                            l198 006D                              l711 0132                              l800 07CC  
                            l802 07DB                              l681 01F2                              l780 07E4  
                            l862 0308                              l864 0391                              l794 0766  
                            l778 0688                              l875 035D                              l876 0369  
                            l868 0343                              l799 07B2                              u910 004B  
                            u911 004A                              u920 004F                              u921 004E  
                            u930 0043                              u931 0042                              u940 002F  
                            u941 002E                              u950 0066                              u951 0065  
                            u960 006A                              u961 0069                              u980 00C5  
                            u981 00C4                              u990 00B4                              u975 013F  
                            u991 00B3                              _str 0049                              wreg 0009  
                    command@mode 0072        get_scale_val@weight_count 0028                  ?_lcd_set_cursor 0078  
                           l2001 0586                             l2011 05A6                             l2003 058A  
                           l2101 02A1                             l2021 05BA                             l2013 05AA  
                           l2005 058E                             l2103 02A5                             l2111 02BF  
                           l2031 05E6                             l2023 05BE                             l2015 05AE  
                           l2007 0592                             l2113 02C5                             l2105 02AA  
                           l2041 0619                             l2033 05F1                             l2025 05DA  
                           l2017 05B2                             l2009 05A2                             l2201 0452  
                           l2115 02DF                             l2107 02AF                             l2051 0054  
                           l2131 00DA                             l2043 061D                             l2035 05F5  
                           l2027 05DE                             l2019 05B6                             l2203 0466  
                           l2211 0471                             l2109 02BB                             l2061 0252  
                           l2053 0059                             l2141 00F8                             l2133 00E2  
                           l2125 00D9                             l2045 0621                             l2037 05F9  
                           l2029 05E2                             l2221 047B                             l2213 0473  
                           l2063 0254                             l2055 0242                             l2135 00E9  
                           l2119 00D7                             l2047 0625                             l2039 05FD  
                           l2143 01F3                             l2151 0399                             l2231 0489  
                           l2223 047C                             l2215 0475                             l2207 046B  
                           l2081 0277                             l2065 025C                             l2057 0245  
                           l2049 0050                             l2137 00EE                             l2145 0237  
                           l2161 03AC                             l2153 039F                             l2241 04B0  
                           l2233 048E                             l2225 047F                             l2217 0476  
                           l2209 046E                             l2091 0296                             l2083 027A  
                           l2075 026A                             l2067 0264                             l2059 024C  
                           l1611 0044                             l2139 00F4                             l2171 03D6  
                           l2163 03C3                             l2155 03A6                             l2251 04E5  
                           l2243 04B5                             l2235 0495                             l2227 0481  
                           l2219 0479                             l1701 0022                             l2085 0287  
                           l2077 0270                             l2069 0268                             l1613 004B  
                           l1621 005F                             l2173 03DB                             l2165 03CA  
                           l2157 03AB                             l2149 0394                             l2261 052E  
                           l2253 04EC                             l2245 04BC                             l2237 04A2  
                           l2229 0482                             l2087 028B                             l2079 0273  
                           l1615 003A                             l1623 006A                             l1631 014A  
                           l2191 0412                             l2183 03F7                             l2167 03CE  
                           l2263 0535                             l2255 04F9                             l2247 04C2  
                           l2239 04AD                             l2097 0297                             l2089 0290  
                           l1609 0044                             l1617 003D                             l1625 006F  
                           l1641 0160                             l1633 014E                             l1801 063B  
                           l2193 0417                             l2185 0401                             l2169 03D2  
                           l2257 0504                             l2249 04D5                             l1651 008A  
                           l1731 01C1                             l2099 029A                             l1619 0029  
                           l1627 007A                             l1643 0165                             l1635 0153  
                           l1811 0652                             l1803 063F                             l2195 043E  
                           l2187 0407                             l2179 03DD                             l2259 0529  
                           l1661 001F                             l1653 008D                             l1645 0082  
                           l1741 01E0                             l1733 01C5                             l1725 01A7  
                           l1637 0158                             l1629 0134                             l1901 074F  
                           l1821 0666                             l1813 0653                             l1805 0640  
                           l2197 0445                             l2189 040E                             l1655 0092  
                           l1647 0085                             l1663 0007                             l1743 01E6  
                           l1735 01CB                             l1727 01B4                             l1639 015C  
                           l1671 00D1                             l1911 0778                             l1903 0763  
                           l1831 067D                             l1823 066A                             l1807 0645  
                           l1815 0655                             l1751 016D                             l2199 0449  
                           l1657 001B                             l1649 0088                             l1737 01D9  
                           l1729 01B7                             l1745 01EC                             l1681 00AB  
                           l1673 0098                             l1665 00B7                             l1921 07C0  
                           l1913 077C                             l1841 06A0                             l1833 067E  
                           l1825 066B                             l1817 065D                             l1809 064A  
                           l1761 0183                             l1753 0173                             l1659 001E  
                           l1739 01DF                             l1683 000F                             l1675 0099  
                           l1667 00C5                             l1931 07D7                             l1923 07C3  
                           l1915 0794                             l1907 076B                             l1851 06B7  
                           l1827 0670                             l1835 0680                             l1819 0662  
                           l1763 0192                             l1755 0176                             l1771 01A2  
                           l1685 0004                             l1677 00A1                             l1669 00C7  
                           l1925 07CB                             l1909 0770                             l1917 0798  
                           l1861 06E1                             l1853 06C7                             l1837 0690  
                           l1845 06A9                             l1829 0675                             l1941 02F0  
                           l1765 0196                             l1757 017B                             l1749 016B  
                           l1781 010D                             l1687 0022                             l1679 00A5  
                           l1927 07D1                             l1919 07A5                             l1863 06E6  
                           l1871 0700                             l1855 06CF                             l1847 06AE  
                           l1839 069C                             l1951 031E                             l1943 0300  
                           l1767 0197                             l1759 017F                             l1791 0128  
                           l1783 0111                             l1775 00FF                             l1929 07D5  
                           l1881 0725                             l1873 0712                             l1865 06F4  
                           l1857 06D7                             l1961 034A                             l1953 0329  
                           l1945 0310                             l1937 02E7                             l1769 019C  
                           l1785 0115                             l1777 0105                             l1793 012E  
                           l1891 073B                             l1883 072D                             l1875 0713  
                           l1867 06F8                             l1859 06DF                             l1971 037F  
                           l1963 0353                             l1955 0330                             l1939 02EC  
                           l1787 011F                             l1779 0108                             l1981 0030  
                           l1893 0742                             l1885 072F                             l1877 071B  
                           l1869 06F9                             l1797 0631                             l1973 0384  
                           l1965 0357                             l1957 0334                             l1949 0319  
                           l1789 0123                             l1991 055D                             l1983 0545  
                           l1887 0736                             l1895 0746                             l1879 071F  
                           l1799 0637                             l1975 0388                             l1967 0361  
                           l1959 033C                             l1993 0570                             l1985 0551  
                           l1897 074A                             l1889 073A                             l1977 0389  
                           l1969 036B                             l1995 0577                             l1987 0555  
                           l1899 074B                             l1997 057B                             l1989 0559  
                           l1999 057F                             STR_1 081B                             STR_2 080A  
                           STR_3 0826                             STR_4 0826                             STR_5 082B  
                           u1000 01B4                             u1001 01B3                             u1020 01C5  
                           u1021 01C4                             u1110 0192                             u1015 01B8  
                           u1111 0191                             u1040 01D9                             u1200 063F  
                           u1041 01D8                             u1201 063E                             u1105 0184  
                           u1210 0645                             u1130 01A2                             u1035 01C6  
                           u1211 0644                             u1131 01A1                             u1115 018E  
                           u1060 01EC                             u1220 064A                             u1140 0105  
                           u1061 01EB                             u1045 01D5                             u1221 0649  
                           u1125 0198                             u1141 0104                             u1310 06F8  
                           u1230 066A                             u1070 0173                             u1055 01E1  
                           u2007 0274                             u1311 06F7                             u1231 0669  
                           u1071 0172                             u1400 074F                             u1240 0670  
                           u1160 0115                             u2017 0288                             u1401 074E  
                           u1305 06EE                             u1241 066F                             u1161 0114  
                           u1410 0763                             u1330 0712                             u1250 0675  
                           u1090 0183                             u1170 011F                             u2027 029B  
                           u1411 0762                             u1331 0711                             u1251 0674  
                           u1091 0182                             u1171 011E                             u1155 0109  
                           u1420 076A                             u1340 0725                             u1260 0690  
                           u1500 02F0                             u2037 02A2                             u1421 0769  
                           u1341 0724                             u1325 06FA                             u1261 068F  
                           u1501 02EF                             u1085 0177                             _LATA 010C  
                           u1430 0770                             u1350 072D                             u1270 06AE  
                           u1510 0310                             u1190 012E                             _LATB 010D  
                           u1431 076F                             u1351 072C                             u1335 070E  
                           u1271 06AD                             u1511 030F                             u1191 012D  
                           u1175 011B                             u1440 077C                             u1280 06E6  
                           u1600 0375                             u1441 077B                             u1281 06E5  
                           u1185 0124                             u1450 078A                             u1370 073A  
                           u1610 0384                             u1530 032F                             u1371 0739  
                           u1611 0383                             u1531 032E                             u1700 00FE  
                           u1460 07A5                             u1620 0388                             u1701 00FD  
                           u1461 07A4                             u1365 0730                             u1621 0387  
                           u1605 0371                             u1525 0323                             u1630 025C  
                           u1470 07C0                             u1390 074A                             u1550 0349  
                           u1631 025B                             u1471 07BF                             u1455 0786  
                           u1391 0749                             u1295 06E7                             u1551 0348  
                           u1711 01FE                             u1640 0264                             u1480 07D5  
                           u1712 01FF                             u1720 039F                             u1641 0263  
                           u1481 07D4                             u1465 07A1                             u1385 073C  
                           u1545 033D                             u1713 0206                             u1721 039E  
                           u1570 0357                             u1490 02EC                             u1714 0207  
                           u1730 03D2                             u1475 07BC                             u1571 0356  
                           u1491 02EB                             u1731 03D1                             u1660 0296  
                           u1580 035D                             u1740 03F6                             u1661 0295  
                           u1581 035C                             u1565 034D                             u1741 03F5  
                           u1670 02AF                             u1590 0361                             u1750 0401  
                           u1671 02AE                             u1655 026B                             u1591 0360  
                           u1751 0400                             u1680 02C5                             u1760 0407  
                           u1681 02C4                             u1761 0406                             u1745 03F2  
                           u1817 049B                             u1690 00F4                             u1770 0452  
                           u1691 00F3                             u1907 05BF                             u1771 0451  
                           u1827 04F2                             u1780 0466                             u1917 05DB  
                           u1781 0465                             u1837 053B                             u1927 05ED  
                           u1847 054A                             u1937 05FE                             u1857 0560  
                           u1947 061A                             u1867 0573                             u1957 062C  
                           u1877 0584                             u1967 0159                             u1887 0593  
                           u1977 005A                             u1897 05A3                             u1987 007E  
                           u1997 0265                             _WPUA 020C                             _WPUB 020D  
                ??_lcd_backlight 0072                             _main 046B                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           start 0002                  ___fldiv@new_exp 0025   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 0022                            ?_main 0070                  __end_of___fldiv 07E5  
                __end_of___ltdiv 01F3                  __end_of___lwdiv 01A7                  __end_of___lwmod 0133  
                          _TRISA 008C                            _TRISB 008D           scale_convert_gram@temp 0034  
                   lcd_print@cmd 007B                     lcd_print@str 0078                  __end_of_lcd_cmd 0082  
                __end_of_command 016B                  __end_of_dpowers 080A                   _WDT_Initialize 0007  
                          status 0003               _scale_convert_gram 01F3                            wtemp0 007E  
                __end_of_sprintf 046B       __size_of_set_CELL_CLK_HIGH 0003                  ??_get_scale_val 0020  
                __initialization 07E5              ?_scale_convert_gram 002D                     __end_of_main 0545  
                  command@lownib 0077                 __end_of_i2c_wait 0050                 __end_of_i2c_stop 0030  
                         ??_main 0038           __end_of_WDT_Initialize 000B             ??_scale_convert_gram 0031  
                         _ANSELA 018C                           _ANSELB 018D                           _BORCON 0116  
                         _OSCCON 0099                           _WDTCON 0097               __size_of_i2c_start 000A  
               __end_of___xxtofl 0392               __size_of_i2c_write 0010          scale_convert_gram@count 002D  
       __end_of_get_CELL_DAT_VAL 0029                 __end_of_lcd_init 0631                        ??___fldiv 0078  
                      ??___ltdiv 0076                        ??___lwdiv 0074                        ??___lwmod 007C  
                      ??_lcd_cmd 0071                        ??_command 0073                  ?_WDT_Initialize 0070  
                      ??_sprintf 0026                     ___xxtofl@arg 007A                     ___xxtofl@exp 0079  
              _SYSTEM_Initialize 0030                     ___xxtofl@val 0070          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070        __size_of_set_CELL_CLK_LOW 0006                   command@highnib 0076  
                 __pcstackCOMMON 0070                     __pidataBANK0 000B              ??_SYSTEM_Initialize 0070  
                 get_scale_val@i 002B                   get_scale_val@j 0026                   get_scale_val@n 0027  
              __end_of_i2c_start 0044                 ??_lcd_set_cursor 0079                __end_of_i2c_write 006E  
                 _OPTION_REGbits 0095               __size_of_lcd_clear 0028               __size_of_lcd_print 001D  
      __end_of_SYSTEM_Initialize 003A                       __pbssBANK0 0042                        ?_i2c_wait 0070  
                      ?_i2c_stop 0070                       __pmaintext 046B                          _APFCON0 011D  
                        _APFCON1 011E                        ?___xxtofl 0070                          _OSCTUNE 0098  
                        _SSP2ADD 021A                          _SSP2BUF 0219                        ?_lcd_init 0070  
                     ??_i2c_wait 0070                       ??_i2c_stop 0070            __end_of_lcd_backlight 005E  
              __end_of_lcd_clear 00FF                __end_of_lcd_print 00B5                          ___fldiv 0631  
                        ___ltdiv 01A7                          ___lwdiv 016B                          ___lwmod 00FF  
                        __ptext1 0392                          __ptext2 00FF                          __ptext3 016B  
                        __ptext4 01F3                          __ptext5 02E6                          __ptext6 0631  
                        __ptext7 0545                          __ptext8 00D7                          __ptext9 00B5  
                        _lcd_cmd 006E                          _command 0133                          _dpowers 0800  
          _OSCILLATOR_Initialize 001B                       ??___xxtofl 0074         ??_PIN_MANAGER_Initialize 0070  
     __size_of_SYSTEM_Initialize 000A                          _sprintf 0392                          clrloop0 0016  
                     ??_lcd_init 0072             end_of_initialization 07FD                 ___ltdiv@dividend 0073  
          __end_of_get_scale_val 02E6                 _set_CELL_CLK_LOW 000F                ?_get_CELL_DAT_VAL 0070  
            main@weight_gram_180 003E               ??_get_CELL_DAT_VAL 0070                 ??_WDT_Initialize 0070  
                      _PORTAbits 000C                       _weight_dat 0045                    i2c_write@data 0070  
      lcd_set_cursor@row_offsets 0020                    ___xxtofl@sign 0078                       lcd_cmd@cmd 0071  
               ___ltdiv@quotient 0077      __size_of_scale_convert_gram 004D                      ___fldiv@grs 0027  
                    ___fldiv@rem 0020                       command@val 0075           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07E5  __size_of_PIN_MANAGER_Initialize 0016                        _i2c_start 003A  
                      _i2c_write 005E                __size_of_i2c_wait 000C                __size_of_i2c_stop 0007  
        get_scale_val@weight_add 0023                      __pdataBANK0 0059                        ___fldiv@a 0070  
                      ___fldiv@b 0074              lcd_set_cursor@F2395 0059                        ___latbits 0001  
                  __pcstackBANK0 0020                       ?_i2c_start 0070                       ?_i2c_write 0070  
              __size_of___xxtofl 00AC                __size_of_lcd_init 00EC                      sprintf@flag 002B  
                    sprintf@prec 002C                 ___lwdiv@dividend 0072           _PIN_MANAGER_Initialize 0082  
                       ?___fldiv 0070                         ?___ltdiv 0070                         ?___lwdiv 0070  
                       ?___lwmod 0078                        _lcd_clear 00D7                        _lcd_print 0098  
                       ?_lcd_cmd 0070                         ?_command 0072         __end_of_set_CELL_CLK_LOW 0015  
               ___lwdiv@quotient 0075                         ?_sprintf 0020          __size_of_lcd_set_cursor 0022  
                      clear_ram0 0015                  ___ltdiv@divisor 0070                  ___ltdiv@counter 007A  
                       _SSP2CON1 021D                         _SSP2CON2 021E                         _SSP2STAT 021C  
                     ?_lcd_clear 0070                       ?_lcd_print 0078        __size_of_get_CELL_DAT_VAL 0007  
         __size_of_lcd_backlight 000E                      ??_i2c_start 0070                      ??_i2c_write 0070  
                       _i2c_wait 0044                         _i2c_stop 0029          ??_OSCILLATOR_Initialize 0070  
               __size_of___fldiv 01B4                 __size_of___ltdiv 004C                 __size_of___lwdiv 003C  
               __size_of___lwmod 0034                 __size_of_lcd_cmd 0014                 __size_of_command 0038  
     __end_of_scale_convert_gram 0240                       sprintf@val 002D                         ___xxtofl 02E6  
                ___lwdiv@divisor 0070                  ___lwdiv@counter 0077           __size_of_get_scale_val 00A6  
                       __ptext10 0098                         __ptext11 0133                         __ptext20 0004  
                       __ptext12 0050                         __ptext21 0022                         __ptext13 006E  
                       __ptext22 01A7                         __ptext14 005E                         __ptext23 0030  
                       __ptext15 0029                         __ptext24 0007                         __ptext16 003A  
                       __ptext25 0082                         __ptext17 0044                         __ptext26 001B  
                       __ptext18 0240                         __ptext19 000F                         _lcd_init 0545  
                   _SSP2CON1bits 021D                     _SSP2CON2bits 021E                 __size_of_sprintf 00D9  
                  __size_of_main 00DA                    _lcd_backlight 0050                      ??_lcd_clear 007C  
                   _SSP2STATbits 021C                      ??_lcd_print 007A                  main@weight_gram 003A  
        __size_of_WDT_Initialize 0004                   _lcd_set_cursor 00B5                lcd_set_cursor@cmd 0025  
              lcd_set_cursor@col 0024                        sprintf@ap 002A                        sprintf@sp 002F  
              lcd_set_cursor@row 0078                 ___lwmod@dividend 007A          ?_PIN_MANAGER_Initialize 0070  
                 ?_lcd_backlight 0070                _set_CELL_CLK_HIGH 0004                    _get_scale_val 0240  
             ?_set_CELL_CLK_HIGH 0070                    __pstringtext1 0800                    __pstringtext2 081B  
                  __pstringtext3 0826                    __pstringtext4 082B                    __pstringtext5 0000  
            ??_set_CELL_CLK_HIGH 0070                         sprintf@c 0030                         sprintf@f 0020  
                ___lwmod@divisor 0078                  ___lwmod@counter 007D                 _get_CELL_DAT_VAL 0022  
              ?_set_CELL_CLK_LOW 0070           __end_of_lcd_set_cursor 00D7                      _weight_zero 0042  
             ??_set_CELL_CLK_LOW 0070   __end_of_PIN_MANAGER_Initialize 0098        __end_of_set_CELL_CLK_HIGH 0007  
                 ?_get_scale_val 007B                    __backlightval 0048  

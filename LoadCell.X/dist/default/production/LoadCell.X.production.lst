

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Nov 04 23:21:24 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    65                           	dabs	1,0x7E,2
    66  0000                     
    67                           ; Version 2.20
    68                           ; Generated 12/02/2020 GMT
    69                           ; 
    70                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC16F1938 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  0008                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0013                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001B                     	;# 
   128  001C                     	;# 
   129  001E                     	;# 
   130  001F                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  0110                     	;# 
   153  0111                     	;# 
   154  0112                     	;# 
   155  0113                     	;# 
   156  0114                     	;# 
   157  0115                     	;# 
   158  0116                     	;# 
   159  0117                     	;# 
   160  0118                     	;# 
   161  0119                     	;# 
   162  011A                     	;# 
   163  011B                     	;# 
   164  011D                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0191                     	;# 
   168  0191                     	;# 
   169  0192                     	;# 
   170  0193                     	;# 
   171  0193                     	;# 
   172  0193                     	;# 
   173  0194                     	;# 
   174  0195                     	;# 
   175  0196                     	;# 
   176  0199                     	;# 
   177  019A                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019B                     	;# 
   181  019B                     	;# 
   182  019C                     	;# 
   183  019C                     	;# 
   184  019D                     	;# 
   185  019E                     	;# 
   186  019F                     	;# 
   187  020D                     	;# 
   188  0210                     	;# 
   189  0211                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0291                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0294                     	;# 
   202  0295                     	;# 
   203  0295                     	;# 
   204  0296                     	;# 
   205  0298                     	;# 
   206  0298                     	;# 
   207  0299                     	;# 
   208  029A                     	;# 
   209  029B                     	;# 
   210  029C                     	;# 
   211  029C                     	;# 
   212  029D                     	;# 
   213  029E                     	;# 
   214  029F                     	;# 
   215  0311                     	;# 
   216  0311                     	;# 
   217  0312                     	;# 
   218  0313                     	;# 
   219  0314                     	;# 
   220  0315                     	;# 
   221  0315                     	;# 
   222  0316                     	;# 
   223  0318                     	;# 
   224  0318                     	;# 
   225  0319                     	;# 
   226  031A                     	;# 
   227  031C                     	;# 
   228  031C                     	;# 
   229  031D                     	;# 
   230  031E                     	;# 
   231  0394                     	;# 
   232  0395                     	;# 
   233  0396                     	;# 
   234  0415                     	;# 
   235  0416                     	;# 
   236  0417                     	;# 
   237  041C                     	;# 
   238  041D                     	;# 
   239  041E                     	;# 
   240  0791                     	;# 
   241  0792                     	;# 
   242  0793                     	;# 
   243  0794                     	;# 
   244  0795                     	;# 
   245  0798                     	;# 
   246  0799                     	;# 
   247  07A0                     	;# 
   248  07A1                     	;# 
   249  07A3                     	;# 
   250  07A4                     	;# 
   251  07A6                     	;# 
   252  07A7                     	;# 
   253  07A9                     	;# 
   254  07AA                     	;# 
   255  0FE4                     	;# 
   256  0FE5                     	;# 
   257  0FE6                     	;# 
   258  0FE7                     	;# 
   259  0FE8                     	;# 
   260  0FE9                     	;# 
   261  0FEA                     	;# 
   262  0FEB                     	;# 
   263  0FED                     	;# 
   264  0FEE                     	;# 
   265  0FEF                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0006                     	;# 
   273  0007                     	;# 
   274  0008                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001E                     	;# 
   295  001F                     	;# 
   296  008C                     	;# 
   297  008D                     	;# 
   298  008E                     	;# 
   299  0090                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0093                     	;# 
   303  0095                     	;# 
   304  0096                     	;# 
   305  0097                     	;# 
   306  0098                     	;# 
   307  0099                     	;# 
   308  009A                     	;# 
   309  009B                     	;# 
   310  009B                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  0110                     	;# 
   318  0111                     	;# 
   319  0112                     	;# 
   320  0113                     	;# 
   321  0114                     	;# 
   322  0115                     	;# 
   323  0116                     	;# 
   324  0117                     	;# 
   325  0118                     	;# 
   326  0119                     	;# 
   327  011A                     	;# 
   328  011B                     	;# 
   329  011D                     	;# 
   330  018C                     	;# 
   331  018D                     	;# 
   332  0191                     	;# 
   333  0191                     	;# 
   334  0192                     	;# 
   335  0193                     	;# 
   336  0193                     	;# 
   337  0193                     	;# 
   338  0194                     	;# 
   339  0195                     	;# 
   340  0196                     	;# 
   341  0199                     	;# 
   342  019A                     	;# 
   343  019B                     	;# 
   344  019B                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019C                     	;# 
   348  019C                     	;# 
   349  019D                     	;# 
   350  019E                     	;# 
   351  019F                     	;# 
   352  020D                     	;# 
   353  0210                     	;# 
   354  0211                     	;# 
   355  0212                     	;# 
   356  0213                     	;# 
   357  0214                     	;# 
   358  0215                     	;# 
   359  0215                     	;# 
   360  0216                     	;# 
   361  0217                     	;# 
   362  0291                     	;# 
   363  0291                     	;# 
   364  0292                     	;# 
   365  0293                     	;# 
   366  0294                     	;# 
   367  0295                     	;# 
   368  0295                     	;# 
   369  0296                     	;# 
   370  0298                     	;# 
   371  0298                     	;# 
   372  0299                     	;# 
   373  029A                     	;# 
   374  029B                     	;# 
   375  029C                     	;# 
   376  029C                     	;# 
   377  029D                     	;# 
   378  029E                     	;# 
   379  029F                     	;# 
   380  0311                     	;# 
   381  0311                     	;# 
   382  0312                     	;# 
   383  0313                     	;# 
   384  0314                     	;# 
   385  0315                     	;# 
   386  0315                     	;# 
   387  0316                     	;# 
   388  0318                     	;# 
   389  0318                     	;# 
   390  0319                     	;# 
   391  031A                     	;# 
   392  031C                     	;# 
   393  031C                     	;# 
   394  031D                     	;# 
   395  031E                     	;# 
   396  0394                     	;# 
   397  0395                     	;# 
   398  0396                     	;# 
   399  0415                     	;# 
   400  0416                     	;# 
   401  0417                     	;# 
   402  041C                     	;# 
   403  041D                     	;# 
   404  041E                     	;# 
   405  0791                     	;# 
   406  0792                     	;# 
   407  0793                     	;# 
   408  0794                     	;# 
   409  0795                     	;# 
   410  0798                     	;# 
   411  0799                     	;# 
   412  07A0                     	;# 
   413  07A1                     	;# 
   414  07A3                     	;# 
   415  07A4                     	;# 
   416  07A6                     	;# 
   417  07A7                     	;# 
   418  07A9                     	;# 
   419  07AA                     	;# 
   420  0FE4                     	;# 
   421  0FE5                     	;# 
   422  0FE6                     	;# 
   423  0FE7                     	;# 
   424  0FE8                     	;# 
   425  0FE9                     	;# 
   426  0FEA                     	;# 
   427  0FEB                     	;# 
   428  0FED                     	;# 
   429  0FEE                     	;# 
   430  0FEF                     	;# 
   431  0000                     	;# 
   432  0001                     	;# 
   433  0002                     	;# 
   434  0003                     	;# 
   435  0004                     	;# 
   436  0005                     	;# 
   437  0006                     	;# 
   438  0007                     	;# 
   439  0008                     	;# 
   440  0009                     	;# 
   441  000A                     	;# 
   442  000B                     	;# 
   443  000C                     	;# 
   444  000D                     	;# 
   445  000E                     	;# 
   446  0010                     	;# 
   447  0011                     	;# 
   448  0012                     	;# 
   449  0013                     	;# 
   450  0015                     	;# 
   451  0016                     	;# 
   452  0016                     	;# 
   453  0017                     	;# 
   454  0018                     	;# 
   455  0019                     	;# 
   456  001A                     	;# 
   457  001B                     	;# 
   458  001C                     	;# 
   459  001E                     	;# 
   460  001F                     	;# 
   461  008C                     	;# 
   462  008D                     	;# 
   463  008E                     	;# 
   464  0090                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0095                     	;# 
   469  0096                     	;# 
   470  0097                     	;# 
   471  0098                     	;# 
   472  0099                     	;# 
   473  009A                     	;# 
   474  009B                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  0110                     	;# 
   483  0111                     	;# 
   484  0112                     	;# 
   485  0113                     	;# 
   486  0114                     	;# 
   487  0115                     	;# 
   488  0116                     	;# 
   489  0117                     	;# 
   490  0118                     	;# 
   491  0119                     	;# 
   492  011A                     	;# 
   493  011B                     	;# 
   494  011D                     	;# 
   495  018C                     	;# 
   496  018D                     	;# 
   497  0191                     	;# 
   498  0191                     	;# 
   499  0192                     	;# 
   500  0193                     	;# 
   501  0193                     	;# 
   502  0193                     	;# 
   503  0194                     	;# 
   504  0195                     	;# 
   505  0196                     	;# 
   506  0199                     	;# 
   507  019A                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019C                     	;# 
   513  019C                     	;# 
   514  019D                     	;# 
   515  019E                     	;# 
   516  019F                     	;# 
   517  020D                     	;# 
   518  0210                     	;# 
   519  0211                     	;# 
   520  0212                     	;# 
   521  0213                     	;# 
   522  0214                     	;# 
   523  0215                     	;# 
   524  0215                     	;# 
   525  0216                     	;# 
   526  0217                     	;# 
   527  0291                     	;# 
   528  0291                     	;# 
   529  0292                     	;# 
   530  0293                     	;# 
   531  0294                     	;# 
   532  0295                     	;# 
   533  0295                     	;# 
   534  0296                     	;# 
   535  0298                     	;# 
   536  0298                     	;# 
   537  0299                     	;# 
   538  029A                     	;# 
   539  029B                     	;# 
   540  029C                     	;# 
   541  029C                     	;# 
   542  029D                     	;# 
   543  029E                     	;# 
   544  029F                     	;# 
   545  0311                     	;# 
   546  0311                     	;# 
   547  0312                     	;# 
   548  0313                     	;# 
   549  0314                     	;# 
   550  0315                     	;# 
   551  0315                     	;# 
   552  0316                     	;# 
   553  0318                     	;# 
   554  0318                     	;# 
   555  0319                     	;# 
   556  031A                     	;# 
   557  031C                     	;# 
   558  031C                     	;# 
   559  031D                     	;# 
   560  031E                     	;# 
   561  0394                     	;# 
   562  0395                     	;# 
   563  0396                     	;# 
   564  0415                     	;# 
   565  0416                     	;# 
   566  0417                     	;# 
   567  041C                     	;# 
   568  041D                     	;# 
   569  041E                     	;# 
   570  0791                     	;# 
   571  0792                     	;# 
   572  0793                     	;# 
   573  0794                     	;# 
   574  0795                     	;# 
   575  0798                     	;# 
   576  0799                     	;# 
   577  07A0                     	;# 
   578  07A1                     	;# 
   579  07A3                     	;# 
   580  07A4                     	;# 
   581  07A6                     	;# 
   582  07A7                     	;# 
   583  07A9                     	;# 
   584  07AA                     	;# 
   585  0FE4                     	;# 
   586  0FE5                     	;# 
   587  0FE6                     	;# 
   588  0FE7                     	;# 
   589  0FE8                     	;# 
   590  0FE9                     	;# 
   591  0FEA                     	;# 
   592  0FEB                     	;# 
   593  0FED                     	;# 
   594  0FEE                     	;# 
   595  0FEF                     	;# 
   596  0000                     	;# 
   597  0001                     	;# 
   598  0002                     	;# 
   599  0003                     	;# 
   600  0004                     	;# 
   601  0005                     	;# 
   602  0006                     	;# 
   603  0007                     	;# 
   604  0008                     	;# 
   605  0009                     	;# 
   606  000A                     	;# 
   607  000B                     	;# 
   608  000C                     	;# 
   609  000D                     	;# 
   610  000E                     	;# 
   611  0010                     	;# 
   612  0011                     	;# 
   613  0012                     	;# 
   614  0013                     	;# 
   615  0015                     	;# 
   616  0016                     	;# 
   617  0016                     	;# 
   618  0017                     	;# 
   619  0018                     	;# 
   620  0019                     	;# 
   621  001A                     	;# 
   622  001B                     	;# 
   623  001C                     	;# 
   624  001E                     	;# 
   625  001F                     	;# 
   626  008C                     	;# 
   627  008D                     	;# 
   628  008E                     	;# 
   629  0090                     	;# 
   630  0091                     	;# 
   631  0092                     	;# 
   632  0093                     	;# 
   633  0095                     	;# 
   634  0096                     	;# 
   635  0097                     	;# 
   636  0098                     	;# 
   637  0099                     	;# 
   638  009A                     	;# 
   639  009B                     	;# 
   640  009B                     	;# 
   641  009C                     	;# 
   642  009D                     	;# 
   643  009E                     	;# 
   644  010C                     	;# 
   645  010D                     	;# 
   646  010E                     	;# 
   647  0110                     	;# 
   648  0111                     	;# 
   649  0112                     	;# 
   650  0113                     	;# 
   651  0114                     	;# 
   652  0115                     	;# 
   653  0116                     	;# 
   654  0117                     	;# 
   655  0118                     	;# 
   656  0119                     	;# 
   657  011A                     	;# 
   658  011B                     	;# 
   659  011D                     	;# 
   660  018C                     	;# 
   661  018D                     	;# 
   662  0191                     	;# 
   663  0191                     	;# 
   664  0192                     	;# 
   665  0193                     	;# 
   666  0193                     	;# 
   667  0193                     	;# 
   668  0194                     	;# 
   669  0195                     	;# 
   670  0196                     	;# 
   671  0199                     	;# 
   672  019A                     	;# 
   673  019B                     	;# 
   674  019B                     	;# 
   675  019B                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  019C                     	;# 
   679  019D                     	;# 
   680  019E                     	;# 
   681  019F                     	;# 
   682  020D                     	;# 
   683  0210                     	;# 
   684  0211                     	;# 
   685  0212                     	;# 
   686  0213                     	;# 
   687  0214                     	;# 
   688  0215                     	;# 
   689  0215                     	;# 
   690  0216                     	;# 
   691  0217                     	;# 
   692  0291                     	;# 
   693  0291                     	;# 
   694  0292                     	;# 
   695  0293                     	;# 
   696  0294                     	;# 
   697  0295                     	;# 
   698  0295                     	;# 
   699  0296                     	;# 
   700  0298                     	;# 
   701  0298                     	;# 
   702  0299                     	;# 
   703  029A                     	;# 
   704  029B                     	;# 
   705  029C                     	;# 
   706  029C                     	;# 
   707  029D                     	;# 
   708  029E                     	;# 
   709  029F                     	;# 
   710  0311                     	;# 
   711  0311                     	;# 
   712  0312                     	;# 
   713  0313                     	;# 
   714  0314                     	;# 
   715  0315                     	;# 
   716  0315                     	;# 
   717  0316                     	;# 
   718  0318                     	;# 
   719  0318                     	;# 
   720  0319                     	;# 
   721  031A                     	;# 
   722  031C                     	;# 
   723  031C                     	;# 
   724  031D                     	;# 
   725  031E                     	;# 
   726  0394                     	;# 
   727  0395                     	;# 
   728  0396                     	;# 
   729  0415                     	;# 
   730  0416                     	;# 
   731  0417                     	;# 
   732  041C                     	;# 
   733  041D                     	;# 
   734  041E                     	;# 
   735  0791                     	;# 
   736  0792                     	;# 
   737  0793                     	;# 
   738  0794                     	;# 
   739  0795                     	;# 
   740  0798                     	;# 
   741  0799                     	;# 
   742  07A0                     	;# 
   743  07A1                     	;# 
   744  07A3                     	;# 
   745  07A4                     	;# 
   746  07A6                     	;# 
   747  07A7                     	;# 
   748  07A9                     	;# 
   749  07AA                     	;# 
   750  0FE4                     	;# 
   751  0FE5                     	;# 
   752  0FE6                     	;# 
   753  0FE7                     	;# 
   754  0FE8                     	;# 
   755  0FE9                     	;# 
   756  0FEA                     	;# 
   757  0FEB                     	;# 
   758  0FED                     	;# 
   759  0FEE                     	;# 
   760  0FEF                     	;# 
   761  0000                     	;# 
   762  0001                     	;# 
   763  0002                     	;# 
   764  0003                     	;# 
   765  0004                     	;# 
   766  0005                     	;# 
   767  0006                     	;# 
   768  0007                     	;# 
   769  0008                     	;# 
   770  0009                     	;# 
   771  000A                     	;# 
   772  000B                     	;# 
   773  000C                     	;# 
   774  000D                     	;# 
   775  000E                     	;# 
   776  0010                     	;# 
   777  0011                     	;# 
   778  0012                     	;# 
   779  0013                     	;# 
   780  0015                     	;# 
   781  0016                     	;# 
   782  0016                     	;# 
   783  0017                     	;# 
   784  0018                     	;# 
   785  0019                     	;# 
   786  001A                     	;# 
   787  001B                     	;# 
   788  001C                     	;# 
   789  001E                     	;# 
   790  001F                     	;# 
   791  008C                     	;# 
   792  008D                     	;# 
   793  008E                     	;# 
   794  0090                     	;# 
   795  0091                     	;# 
   796  0092                     	;# 
   797  0093                     	;# 
   798  0095                     	;# 
   799  0096                     	;# 
   800  0097                     	;# 
   801  0098                     	;# 
   802  0099                     	;# 
   803  009A                     	;# 
   804  009B                     	;# 
   805  009B                     	;# 
   806  009C                     	;# 
   807  009D                     	;# 
   808  009E                     	;# 
   809  010C                     	;# 
   810  010D                     	;# 
   811  010E                     	;# 
   812  0110                     	;# 
   813  0111                     	;# 
   814  0112                     	;# 
   815  0113                     	;# 
   816  0114                     	;# 
   817  0115                     	;# 
   818  0116                     	;# 
   819  0117                     	;# 
   820  0118                     	;# 
   821  0119                     	;# 
   822  011A                     	;# 
   823  011B                     	;# 
   824  011D                     	;# 
   825  018C                     	;# 
   826  018D                     	;# 
   827  0191                     	;# 
   828  0191                     	;# 
   829  0192                     	;# 
   830  0193                     	;# 
   831  0193                     	;# 
   832  0193                     	;# 
   833  0194                     	;# 
   834  0195                     	;# 
   835  0196                     	;# 
   836  0199                     	;# 
   837  019A                     	;# 
   838  019B                     	;# 
   839  019B                     	;# 
   840  019B                     	;# 
   841  019B                     	;# 
   842  019C                     	;# 
   843  019C                     	;# 
   844  019D                     	;# 
   845  019E                     	;# 
   846  019F                     	;# 
   847  020D                     	;# 
   848  0210                     	;# 
   849  0211                     	;# 
   850  0212                     	;# 
   851  0213                     	;# 
   852  0214                     	;# 
   853  0215                     	;# 
   854  0215                     	;# 
   855  0216                     	;# 
   856  0217                     	;# 
   857  0291                     	;# 
   858  0291                     	;# 
   859  0292                     	;# 
   860  0293                     	;# 
   861  0294                     	;# 
   862  0295                     	;# 
   863  0295                     	;# 
   864  0296                     	;# 
   865  0298                     	;# 
   866  0298                     	;# 
   867  0299                     	;# 
   868  029A                     	;# 
   869  029B                     	;# 
   870  029C                     	;# 
   871  029C                     	;# 
   872  029D                     	;# 
   873  029E                     	;# 
   874  029F                     	;# 
   875  0311                     	;# 
   876  0311                     	;# 
   877  0312                     	;# 
   878  0313                     	;# 
   879  0314                     	;# 
   880  0315                     	;# 
   881  0315                     	;# 
   882  0316                     	;# 
   883  0318                     	;# 
   884  0318                     	;# 
   885  0319                     	;# 
   886  031A                     	;# 
   887  031C                     	;# 
   888  031C                     	;# 
   889  031D                     	;# 
   890  031E                     	;# 
   891  0394                     	;# 
   892  0395                     	;# 
   893  0396                     	;# 
   894  0415                     	;# 
   895  0416                     	;# 
   896  0417                     	;# 
   897  041C                     	;# 
   898  041D                     	;# 
   899  041E                     	;# 
   900  0791                     	;# 
   901  0792                     	;# 
   902  0793                     	;# 
   903  0794                     	;# 
   904  0795                     	;# 
   905  0798                     	;# 
   906  0799                     	;# 
   907  07A0                     	;# 
   908  07A1                     	;# 
   909  07A3                     	;# 
   910  07A4                     	;# 
   911  07A6                     	;# 
   912  07A7                     	;# 
   913  07A9                     	;# 
   914  07AA                     	;# 
   915  0FE4                     	;# 
   916  0FE5                     	;# 
   917  0FE6                     	;# 
   918  0FE7                     	;# 
   919  0FE8                     	;# 
   920  0FE9                     	;# 
   921  0FEA                     	;# 
   922  0FEB                     	;# 
   923  0FED                     	;# 
   924  0FEE                     	;# 
   925  0FEF                     	;# 
   926  0000                     	;# 
   927  0001                     	;# 
   928  0002                     	;# 
   929  0003                     	;# 
   930  0004                     	;# 
   931  0005                     	;# 
   932  0006                     	;# 
   933  0007                     	;# 
   934  0008                     	;# 
   935  0009                     	;# 
   936  000A                     	;# 
   937  000B                     	;# 
   938  000C                     	;# 
   939  000D                     	;# 
   940  000E                     	;# 
   941  0010                     	;# 
   942  0011                     	;# 
   943  0012                     	;# 
   944  0013                     	;# 
   945  0015                     	;# 
   946  0016                     	;# 
   947  0016                     	;# 
   948  0017                     	;# 
   949  0018                     	;# 
   950  0019                     	;# 
   951  001A                     	;# 
   952  001B                     	;# 
   953  001C                     	;# 
   954  001E                     	;# 
   955  001F                     	;# 
   956  008C                     	;# 
   957  008D                     	;# 
   958  008E                     	;# 
   959  0090                     	;# 
   960  0091                     	;# 
   961  0092                     	;# 
   962  0093                     	;# 
   963  0095                     	;# 
   964  0096                     	;# 
   965  0097                     	;# 
   966  0098                     	;# 
   967  0099                     	;# 
   968  009A                     	;# 
   969  009B                     	;# 
   970  009B                     	;# 
   971  009C                     	;# 
   972  009D                     	;# 
   973  009E                     	;# 
   974  010C                     	;# 
   975  010D                     	;# 
   976  010E                     	;# 
   977  0110                     	;# 
   978  0111                     	;# 
   979  0112                     	;# 
   980  0113                     	;# 
   981  0114                     	;# 
   982  0115                     	;# 
   983  0116                     	;# 
   984  0117                     	;# 
   985  0118                     	;# 
   986  0119                     	;# 
   987  011A                     	;# 
   988  011B                     	;# 
   989  011D                     	;# 
   990  018C                     	;# 
   991  018D                     	;# 
   992  0191                     	;# 
   993  0191                     	;# 
   994  0192                     	;# 
   995  0193                     	;# 
   996  0193                     	;# 
   997  0193                     	;# 
   998  0194                     	;# 
   999  0195                     	;# 
  1000  0196                     	;# 
  1001  0199                     	;# 
  1002  019A                     	;# 
  1003  019B                     	;# 
  1004  019B                     	;# 
  1005  019B                     	;# 
  1006  019B                     	;# 
  1007  019C                     	;# 
  1008  019C                     	;# 
  1009  019D                     	;# 
  1010  019E                     	;# 
  1011  019F                     	;# 
  1012  020D                     	;# 
  1013  0210                     	;# 
  1014  0211                     	;# 
  1015  0212                     	;# 
  1016  0213                     	;# 
  1017  0214                     	;# 
  1018  0215                     	;# 
  1019  0215                     	;# 
  1020  0216                     	;# 
  1021  0217                     	;# 
  1022  0291                     	;# 
  1023  0291                     	;# 
  1024  0292                     	;# 
  1025  0293                     	;# 
  1026  0294                     	;# 
  1027  0295                     	;# 
  1028  0295                     	;# 
  1029  0296                     	;# 
  1030  0298                     	;# 
  1031  0298                     	;# 
  1032  0299                     	;# 
  1033  029A                     	;# 
  1034  029B                     	;# 
  1035  029C                     	;# 
  1036  029C                     	;# 
  1037  029D                     	;# 
  1038  029E                     	;# 
  1039  029F                     	;# 
  1040  0311                     	;# 
  1041  0311                     	;# 
  1042  0312                     	;# 
  1043  0313                     	;# 
  1044  0314                     	;# 
  1045  0315                     	;# 
  1046  0315                     	;# 
  1047  0316                     	;# 
  1048  0318                     	;# 
  1049  0318                     	;# 
  1050  0319                     	;# 
  1051  031A                     	;# 
  1052  031C                     	;# 
  1053  031C                     	;# 
  1054  031D                     	;# 
  1055  031E                     	;# 
  1056  0394                     	;# 
  1057  0395                     	;# 
  1058  0396                     	;# 
  1059  0415                     	;# 
  1060  0416                     	;# 
  1061  0417                     	;# 
  1062  041C                     	;# 
  1063  041D                     	;# 
  1064  041E                     	;# 
  1065  0791                     	;# 
  1066  0792                     	;# 
  1067  0793                     	;# 
  1068  0794                     	;# 
  1069  0795                     	;# 
  1070  0798                     	;# 
  1071  0799                     	;# 
  1072  07A0                     	;# 
  1073  07A1                     	;# 
  1074  07A3                     	;# 
  1075  07A4                     	;# 
  1076  07A6                     	;# 
  1077  07A7                     	;# 
  1078  07A9                     	;# 
  1079  07AA                     	;# 
  1080  0FE4                     	;# 
  1081  0FE5                     	;# 
  1082  0FE6                     	;# 
  1083  0FE7                     	;# 
  1084  0FE8                     	;# 
  1085  0FE9                     	;# 
  1086  0FEA                     	;# 
  1087  0FEB                     	;# 
  1088  0FED                     	;# 
  1089  0FEE                     	;# 
  1090  0FEF                     	;# 
  1091  0000                     	;# 
  1092  0001                     	;# 
  1093  0002                     	;# 
  1094  0003                     	;# 
  1095  0004                     	;# 
  1096  0005                     	;# 
  1097  0006                     	;# 
  1098  0007                     	;# 
  1099  0008                     	;# 
  1100  0009                     	;# 
  1101  000A                     	;# 
  1102  000B                     	;# 
  1103  000C                     	;# 
  1104  000D                     	;# 
  1105  000E                     	;# 
  1106  0010                     	;# 
  1107  0011                     	;# 
  1108  0012                     	;# 
  1109  0013                     	;# 
  1110  0015                     	;# 
  1111  0016                     	;# 
  1112  0016                     	;# 
  1113  0017                     	;# 
  1114  0018                     	;# 
  1115  0019                     	;# 
  1116  001A                     	;# 
  1117  001B                     	;# 
  1118  001C                     	;# 
  1119  001E                     	;# 
  1120  001F                     	;# 
  1121  008C                     	;# 
  1122  008D                     	;# 
  1123  008E                     	;# 
  1124  0090                     	;# 
  1125  0091                     	;# 
  1126  0092                     	;# 
  1127  0093                     	;# 
  1128  0095                     	;# 
  1129  0096                     	;# 
  1130  0097                     	;# 
  1131  0098                     	;# 
  1132  0099                     	;# 
  1133  009A                     	;# 
  1134  009B                     	;# 
  1135  009B                     	;# 
  1136  009C                     	;# 
  1137  009D                     	;# 
  1138  009E                     	;# 
  1139  010C                     	;# 
  1140  010D                     	;# 
  1141  010E                     	;# 
  1142  0110                     	;# 
  1143  0111                     	;# 
  1144  0112                     	;# 
  1145  0113                     	;# 
  1146  0114                     	;# 
  1147  0115                     	;# 
  1148  0116                     	;# 
  1149  0117                     	;# 
  1150  0118                     	;# 
  1151  0119                     	;# 
  1152  011A                     	;# 
  1153  011B                     	;# 
  1154  011D                     	;# 
  1155  018C                     	;# 
  1156  018D                     	;# 
  1157  0191                     	;# 
  1158  0191                     	;# 
  1159  0192                     	;# 
  1160  0193                     	;# 
  1161  0193                     	;# 
  1162  0193                     	;# 
  1163  0194                     	;# 
  1164  0195                     	;# 
  1165  0196                     	;# 
  1166  0199                     	;# 
  1167  019A                     	;# 
  1168  019B                     	;# 
  1169  019B                     	;# 
  1170  019B                     	;# 
  1171  019B                     	;# 
  1172  019C                     	;# 
  1173  019C                     	;# 
  1174  019D                     	;# 
  1175  019E                     	;# 
  1176  019F                     	;# 
  1177  020D                     	;# 
  1178  0210                     	;# 
  1179  0211                     	;# 
  1180  0212                     	;# 
  1181  0213                     	;# 
  1182  0214                     	;# 
  1183  0215                     	;# 
  1184  0215                     	;# 
  1185  0216                     	;# 
  1186  0217                     	;# 
  1187  0291                     	;# 
  1188  0291                     	;# 
  1189  0292                     	;# 
  1190  0293                     	;# 
  1191  0294                     	;# 
  1192  0295                     	;# 
  1193  0295                     	;# 
  1194  0296                     	;# 
  1195  0298                     	;# 
  1196  0298                     	;# 
  1197  0299                     	;# 
  1198  029A                     	;# 
  1199  029B                     	;# 
  1200  029C                     	;# 
  1201  029C                     	;# 
  1202  029D                     	;# 
  1203  029E                     	;# 
  1204  029F                     	;# 
  1205  0311                     	;# 
  1206  0311                     	;# 
  1207  0312                     	;# 
  1208  0313                     	;# 
  1209  0314                     	;# 
  1210  0315                     	;# 
  1211  0315                     	;# 
  1212  0316                     	;# 
  1213  0318                     	;# 
  1214  0318                     	;# 
  1215  0319                     	;# 
  1216  031A                     	;# 
  1217  031C                     	;# 
  1218  031C                     	;# 
  1219  031D                     	;# 
  1220  031E                     	;# 
  1221  0394                     	;# 
  1222  0395                     	;# 
  1223  0396                     	;# 
  1224  0415                     	;# 
  1225  0416                     	;# 
  1226  0417                     	;# 
  1227  041C                     	;# 
  1228  041D                     	;# 
  1229  041E                     	;# 
  1230  0791                     	;# 
  1231  0792                     	;# 
  1232  0793                     	;# 
  1233  0794                     	;# 
  1234  0795                     	;# 
  1235  0798                     	;# 
  1236  0799                     	;# 
  1237  07A0                     	;# 
  1238  07A1                     	;# 
  1239  07A3                     	;# 
  1240  07A4                     	;# 
  1241  07A6                     	;# 
  1242  07A7                     	;# 
  1243  07A9                     	;# 
  1244  07AA                     	;# 
  1245  0FE4                     	;# 
  1246  0FE5                     	;# 
  1247  0FE6                     	;# 
  1248  0FE7                     	;# 
  1249  0FE8                     	;# 
  1250  0FE9                     	;# 
  1251  0FEA                     	;# 
  1252  0FEB                     	;# 
  1253  0FED                     	;# 
  1254  0FEE                     	;# 
  1255  0FEF                     	;# 
  1256                           
  1257                           	psect	idataBANK1
  1258  0004                     __pidataBANK1:
  1259                           
  1260                           ;initializer for lcd_set_cursor@F2624
  1261  0004  3400               	retlw	0
  1262  0005  3440               	retlw	64
  1263  0006  3414               	retlw	20
  1264  0007  3454               	retlw	84
  1265                           
  1266                           	psect	stringtext1
  1267  2000                     __pstringtext1:
  1268  2000                     __powers_:
  1269  2000  3400               	retlw	0
  1270  2001  3400               	retlw	0
  1271  2002  3480               	retlw	128
  1272  2003  343F               	retlw	63
  1273  2004  3400               	retlw	0
  1274  2005  3400               	retlw	0
  1275  2006  3420               	retlw	32
  1276  2007  3441               	retlw	65
  1277  2008  3400               	retlw	0
  1278  2009  3400               	retlw	0
  1279  200A  34C8               	retlw	200
  1280  200B  3442               	retlw	66
  1281  200C  3400               	retlw	0
  1282  200D  3400               	retlw	0
  1283  200E  347A               	retlw	122
  1284  200F  3444               	retlw	68
  1285  2010  3400               	retlw	0
  1286  2011  3440               	retlw	64
  1287  2012  341C               	retlw	28
  1288  2013  3446               	retlw	70
  1289  2014  3400               	retlw	0
  1290  2015  3450               	retlw	80
  1291  2016  34C3               	retlw	195
  1292  2017  3447               	retlw	71
  1293  2018  3400               	retlw	0
  1294  2019  3424               	retlw	36
  1295  201A  3474               	retlw	116
  1296  201B  3449               	retlw	73
  1297  201C  3480               	retlw	128
  1298  201D  3496               	retlw	150
  1299  201E  3418               	retlw	24
  1300  201F  344B               	retlw	75
  1301  2020  3420               	retlw	32
  1302  2021  34BC               	retlw	188
  1303  2022  34BE               	retlw	190
  1304  2023  344C               	retlw	76
  1305  2024  3428               	retlw	40
  1306  2025  346B               	retlw	107
  1307  2026  346E               	retlw	110
  1308  2027  344E               	retlw	78
  1309  2028  34F9               	retlw	249
  1310  2029  3402               	retlw	2
  1311  202A  3415               	retlw	21
  1312  202B  3450               	retlw	80
  1313  202C  34EC               	retlw	236
  1314  202D  3478               	retlw	120
  1315  202E  34AD               	retlw	173
  1316  202F  3460               	retlw	96
  1317  2030  34CA               	retlw	202
  1318  2031  34F2               	retlw	242
  1319  2032  3449               	retlw	73
  1320  2033  3471               	retlw	113
  1321  2034                     __end_of__powers_:
  1322                           
  1323                           	psect	stringtext2
  1324  2034                     __pstringtext2:
  1325  2034                     __npowers_:
  1326  2034  3400               	retlw	0
  1327  2035  3400               	retlw	0
  1328  2036  3480               	retlw	128
  1329  2037  343F               	retlw	63
  1330  2038  34CD               	retlw	205
  1331  2039  34CC               	retlw	204
  1332  203A  34CC               	retlw	204
  1333  203B  343D               	retlw	61
  1334  203C  340A               	retlw	10
  1335  203D  34D7               	retlw	215
  1336  203E  3423               	retlw	35
  1337  203F  343C               	retlw	60
  1338  2040  346F               	retlw	111
  1339  2041  3412               	retlw	18
  1340  2042  3483               	retlw	131
  1341  2043  343A               	retlw	58
  1342  2044  3417               	retlw	23
  1343  2045  34B7               	retlw	183
  1344  2046  34D1               	retlw	209
  1345  2047  3438               	retlw	56
  1346  2048  34AC               	retlw	172
  1347  2049  34C5               	retlw	197
  1348  204A  3427               	retlw	39
  1349  204B  3437               	retlw	55
  1350  204C  34BD               	retlw	189
  1351  204D  3437               	retlw	55
  1352  204E  3486               	retlw	134
  1353  204F  3435               	retlw	53
  1354  2050  3495               	retlw	149
  1355  2051  34BF               	retlw	191
  1356  2052  34D6               	retlw	214
  1357  2053  3433               	retlw	51
  1358  2054  3477               	retlw	119
  1359  2055  34CC               	retlw	204
  1360  2056  342B               	retlw	43
  1361  2057  3432               	retlw	50
  1362  2058  345F               	retlw	95
  1363  2059  3470               	retlw	112
  1364  205A  3489               	retlw	137
  1365  205B  3430               	retlw	48
  1366  205C  34FF               	retlw	255
  1367  205D  34E6               	retlw	230
  1368  205E  34DB               	retlw	219
  1369  205F  342E               	retlw	46
  1370  2060  3408               	retlw	8
  1371  2061  34E5               	retlw	229
  1372  2062  343C               	retlw	60
  1373  2063  341E               	retlw	30
  1374  2064  3460               	retlw	96
  1375  2065  3442               	retlw	66
  1376  2066  34A2               	retlw	162
  1377  2067  340D               	retlw	13
  1378  2068                     __end_of__npowers_:
  1379                           
  1380                           	psect	stringtext3
  1381  2068                     __pstringtext3:
  1382  2068                     _dpowers:
  1383  2068  3401               	retlw	1
  1384  2069  3400               	retlw	0
  1385  206A  3400               	retlw	0
  1386  206B  3400               	retlw	0
  1387  206C  340A               	retlw	10
  1388  206D  3400               	retlw	0
  1389  206E  3400               	retlw	0
  1390  206F  3400               	retlw	0
  1391  2070  3464               	retlw	100
  1392  2071  3400               	retlw	0
  1393  2072  3400               	retlw	0
  1394  2073  3400               	retlw	0
  1395  2074  34E8               	retlw	232
  1396  2075  3403               	retlw	3
  1397  2076  3400               	retlw	0
  1398  2077  3400               	retlw	0
  1399  2078  3410               	retlw	16
  1400  2079  3427               	retlw	39
  1401  207A  3400               	retlw	0
  1402  207B  3400               	retlw	0
  1403  207C  34A0               	retlw	160
  1404  207D  3486               	retlw	134
  1405  207E  3401               	retlw	1
  1406  207F  3400               	retlw	0
  1407  2080  3440               	retlw	64
  1408  2081  3442               	retlw	66
  1409  2082  340F               	retlw	15
  1410  2083  3400               	retlw	0
  1411  2084  3480               	retlw	128
  1412  2085  3496               	retlw	150
  1413  2086  3498               	retlw	152
  1414  2087  3400               	retlw	0
  1415  2088  3400               	retlw	0
  1416  2089  34E1               	retlw	225
  1417  208A  34F5               	retlw	245
  1418  208B  3405               	retlw	5
  1419  208C  3400               	retlw	0
  1420  208D  34CA               	retlw	202
  1421  208E  349A               	retlw	154
  1422  208F  343B               	retlw	59
  1423  2090                     __end_of_dpowers:
  1424  000C                     _PORTAbits	set	12
  1425  0095                     _OPTION_REGbits	set	149
  1426  008D                     _TRISB	set	141
  1427  008C                     _TRISA	set	140
  1428  0097                     _WDTCON	set	151
  1429  0098                     _OSCTUNE	set	152
  1430  0099                     _OSCCON	set	153
  1431  010D                     _LATB	set	269
  1432  010C                     _LATA	set	268
  1433  0116                     _BORCON	set	278
  1434  018C                     _ANSELA	set	396
  1435  018D                     _ANSELB	set	397
  1436  0215                     _SSPCON1bits	set	533
  1437  0214                     _SSPSTATbits	set	532
  1438  0211                     _SSPBUF	set	529
  1439  0216                     _SSPCON2bits	set	534
  1440  0214                     _SSPSTAT	set	532
  1441  0216                     _SSPCON2	set	534
  1442  0215                     _SSPCON1	set	533
  1443  0212                     _SSPADD	set	530
  1444  020D                     _WPUB	set	525
  1445  2090                     STR_1:
  1446  2090  3449               	retlw	73	;'I'
  1447  2091  346E               	retlw	110	;'n'
  1448  2092  3469               	retlw	105	;'i'
  1449  2093  3474               	retlw	116	;'t'
  1450  2094  3469               	retlw	105	;'i'
  1451  2095  3461               	retlw	97	;'a'
  1452  2096  346C               	retlw	108	;'l'
  1453  2097  3469               	retlw	105	;'i'
  1454  2098  347A               	retlw	122	;'z'
  1455  2099  3465               	retlw	101	;'e'
  1456  209A  3400               	retlw	0
  1457                           
  1458                           	psect	stringtext4
  1459  209B                     __pstringtext4:
  1460  209B                     STR_2:
  1461  209B  3425               	retlw	37	;'%'
  1462  209C  3433               	retlw	51	;'3'
  1463  209D  342E               	retlw	46	;'.'
  1464  209E  3432               	retlw	50	;'2'
  1465  209F  3466               	retlw	102	;'f'
  1466  20A0  3420               	retlw	32	;' '
  1467  20A1  3467               	retlw	103	;'g'
  1468  20A2  3400               	retlw	0
  1469                           
  1470                           	psect	stringtext5
  1471  20A3                     __pstringtext5:
  1472  20A3                     STR_3:
  1473  20A3  3420               	retlw	32	;' '
  1474  20A4  3400               	retlw	0
  1475                           
  1476                           	psect	stringtext6
  1477  0000                     __pstringtext6:
  1478                           
  1479                           	psect	cinit
  1480  07E2                     start_initialization:	
  1481                           ; #config settings
  1482                           
  1483  07E2                     __initialization:
  1484                           
  1485                           ; Initialize objects allocated to BANK1
  1486  07E2  0021               	movlb	1	; select bank1
  1487  07E3  3180  2004  3187   	fcall	__pidataBANK1	;fetch initializer
  1488  07E6  00E3               	movwf	__pdataBANK1& (0+127)
  1489  07E7  3180  2005  3187   	fcall	__pidataBANK1+1	;fetch initializer
  1490  07EA  00E4               	movwf	(__pdataBANK1+1)& (0+127)
  1491  07EB  3180  2006  3187   	fcall	__pidataBANK1+2	;fetch initializer
  1492  07EE  00E5               	movwf	(__pdataBANK1+2)& (0+127)
  1493  07EF  3180  2007  3187   	fcall	__pidataBANK1+3	;fetch initializer
  1494  07F2  00E6               	movwf	(__pdataBANK1+3)& (0+127)
  1495                           
  1496                           ; Clear objects allocated to BANK0
  1497  07F3  0020               	movlb	0	; select bank0
  1498  07F4  01EF               	clrf	__pbssBANK0& (0+127)
  1499                           
  1500                           ; Clear objects allocated to BANK1
  1501  07F5  30CB               	movlw	low __pbssBANK1
  1502  07F6  0084               	movwf	4
  1503  07F7  3000               	movlw	high __pbssBANK1
  1504  07F8  0085               	movwf	5
  1505  07F9  3018               	movlw	24
  1506  07FA  319D  2585  3187   	fcall	clear_ram0
  1507  07FD                     end_of_initialization:	
  1508                           ;End of C runtime variable initialization code
  1509                           
  1510  07FD                     __end_of__initialization:
  1511  07FD  0020               	movlb	0
  1512  07FE  3195  2D05         	ljmp	_main	;jump to C main() function
  1513                           
  1514                           	psect	bssBANK0
  1515  006F                     __pbssBANK0:
  1516  006F                     __backlightval:
  1517  006F                     	ds	1
  1518                           
  1519                           	psect	bssBANK1
  1520  00CB                     __pbssBANK1:
  1521  00CB                     _weight_zero:
  1522  00CB                     	ds	4
  1523  00CF                     _weight_dat:
  1524  00CF                     	ds	4
  1525  00D3                     _str:
  1526  00D3                     	ds	16
  1527                           
  1528                           	psect	dataBANK1
  1529  00E3                     __pdataBANK1:
  1530  00E3                     lcd_set_cursor@F2624:
  1531  00E3                     	ds	4
  1532                           
  1533                           	psect	clrtext
  1534  1D85                     clear_ram0:	
  1535                           ;	Called with FSR0 containing the base address, and
  1536                           ;	WREG with the size to clear
  1537                           
  1538  1D85  0064               	clrwdt	;clear the watchdog before getting into this loop
  1539  1D86                     clrloop0:
  1540  1D86  0180               	clrf	0	;clear RAM location pointed to by FSR
  1541  1D87  3101               	addfsr 0,1
  1542  1D88  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1543  1D89  2D86               	goto	clrloop0	;have we reached the end yet?
  1544  1D8A  3400               	retlw	0	;all done for this memory range, return
  1545                           
  1546                           	psect	cstackBANK1
  1547  00A0                     __pcstackBANK1:
  1548  00A0                     ?_sprintf:
  1549  00A0                     sprintf@f:	
  1550                           ; 2 bytes @ 0x0
  1551                           
  1552                           
  1553                           ; 2 bytes @ 0x0
  1554  00A0                     	ds	6
  1555  00A6                     ??_sprintf:
  1556                           
  1557                           ; 1 bytes @ 0x6
  1558  00A6                     	ds	6
  1559  00AC                     _sprintf$1077:
  1560                           
  1561                           ; 4 bytes @ 0xC
  1562  00AC                     	ds	4
  1563  00B0                     sprintf@ap:
  1564                           
  1565                           ; 1 bytes @ 0x10
  1566  00B0                     	ds	1
  1567  00B1                     sprintf@val:
  1568                           
  1569                           ; 4 bytes @ 0x11
  1570  00B1                     	ds	4
  1571  00B5                     sprintf@flag:
  1572                           
  1573                           ; 2 bytes @ 0x15
  1574  00B5                     	ds	2
  1575  00B7                     sprintf@width:
  1576                           
  1577                           ; 2 bytes @ 0x17
  1578  00B7                     	ds	2
  1579  00B9                     sprintf@tmpval:
  1580                           
  1581                           ; 4 bytes @ 0x19
  1582  00B9                     	ds	4
  1583  00BD                     sprintf@eexp:
  1584                           
  1585                           ; 2 bytes @ 0x1D
  1586  00BD                     	ds	2
  1587  00BF                     sprintf@fval:
  1588                           
  1589                           ; 4 bytes @ 0x1F
  1590  00BF                     	ds	4
  1591  00C3                     sprintf@sp:
  1592                           
  1593                           ; 1 bytes @ 0x23
  1594  00C3                     	ds	1
  1595  00C4                     sprintf@prec:
  1596                           
  1597                           ; 2 bytes @ 0x24
  1598  00C4                     	ds	2
  1599  00C6                     sprintf@c:
  1600                           
  1601                           ; 1 bytes @ 0x26
  1602  00C6                     	ds	1
  1603  00C7                     main@weight_gram:
  1604                           
  1605                           ; 4 bytes @ 0x27
  1606  00C7                     	ds	4
  1607                           
  1608                           	psect	cstackCOMMON
  1609  0070                     __pcstackCOMMON:
  1610  0070                     ?_isdigit:
  1611  0070                     ?___fleq:	
  1612                           ; 1 bit 
  1613                           
  1614  0070                     ?___flge:	
  1615                           ; 1 bit 
  1616                           
  1617  0070                     ?_PIN_MANAGER_Initialize:	
  1618                           ; 1 bit 
  1619                           
  1620  0070                     ??_PIN_MANAGER_Initialize:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623  0070                     ?_OSCILLATOR_Initialize:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626  0070                     ??_OSCILLATOR_Initialize:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0070                     ?_WDT_Initialize:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0070                     ??_WDT_Initialize:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635  0070                     ?_lcd_init:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638  0070                     ?_lcd_backlight:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0070                     ?_lcd_clear:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644  0070                     ??_isdigit:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647  0070                     ?_SYSTEM_Initialize:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650  0070                     ??_SYSTEM_Initialize:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653  0070                     ?_main:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656  0070                     ?_set_CELL_CLK_LOW:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659  0070                     ??_set_CELL_CLK_LOW:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662  0070                     ?_set_CELL_CLK_HIGH:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665  0070                     ??_set_CELL_CLK_HIGH:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668  0070                     ?_get_CELL_DAT_VAL:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671  0070                     ??_get_CELL_DAT_VAL:	
  1672                           ; 1 bytes @ 0x0
  1673                           
  1674  0070                     ?_i2c_wait:	
  1675                           ; 1 bytes @ 0x0
  1676                           
  1677  0070                     ??_i2c_wait:	
  1678                           ; 1 bytes @ 0x0
  1679                           
  1680  0070                     ?_i2c_start:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683  0070                     ??_i2c_start:	
  1684                           ; 1 bytes @ 0x0
  1685                           
  1686  0070                     ?_i2c_stop:	
  1687                           ; 1 bytes @ 0x0
  1688                           
  1689  0070                     ??_i2c_stop:	
  1690                           ; 1 bytes @ 0x0
  1691                           
  1692  0070                     ?_i2c_write:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695  0070                     ??_i2c_write:	
  1696                           ; 1 bytes @ 0x0
  1697                           
  1698  0070                     ?_lcd_cmd:	
  1699                           ; 1 bytes @ 0x0
  1700                           
  1701  0070                     ?__Umul8_16:	
  1702                           ; 1 bytes @ 0x0
  1703                           
  1704  0070                     ?___wmul:	
  1705                           ; 2 bytes @ 0x0
  1706                           
  1707  0070                     ?___awmod:	
  1708                           ; 2 bytes @ 0x0
  1709                           
  1710  0070                     ?___lwmod:	
  1711                           ; 2 bytes @ 0x0
  1712                           
  1713  0070                     ?__tdiv_to_l_:	
  1714                           ; 2 bytes @ 0x0
  1715                           
  1716  0070                     ?__div_to_l_:	
  1717                           ; 4 bytes @ 0x0
  1718                           
  1719  0070                     ?___lldiv:	
  1720                           ; 4 bytes @ 0x0
  1721                           
  1722  0070                     ?___aldiv:	
  1723                           ; 4 bytes @ 0x0
  1724                           
  1725  0070                     ?___flneg:	
  1726                           ; 4 bytes @ 0x0
  1727                           
  1728  0070                     ?___llmod:	
  1729                           ; 4 bytes @ 0x0
  1730                           
  1731  0070                     ?___fldiv:	
  1732                           ; 4 bytes @ 0x0
  1733                           
  1734  0070                     ?___xxtofl:	
  1735                           ; 4 bytes @ 0x0
  1736                           
  1737  0070                     i2c_write@data:	
  1738                           ; 4 bytes @ 0x0
  1739                           
  1740  0070                     __Umul8_16@multiplicand:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743  0070                     _isdigit$881:	
  1744                           ; 1 bytes @ 0x0
  1745                           
  1746  0070                     ___wmul@multiplier:	
  1747                           ; 1 bytes @ 0x0
  1748                           
  1749  0070                     ___awmod@divisor:	
  1750                           ; 2 bytes @ 0x0
  1751                           
  1752  0070                     ___lwmod@divisor:	
  1753                           ; 2 bytes @ 0x0
  1754                           
  1755  0070                     ___lldiv@divisor:	
  1756                           ; 2 bytes @ 0x0
  1757                           
  1758  0070                     ___aldiv@divisor:	
  1759                           ; 4 bytes @ 0x0
  1760                           
  1761  0070                     __div_to_l_@f1:	
  1762                           ; 4 bytes @ 0x0
  1763                           
  1764  0070                     ___fleq@ff1:	
  1765                           ; 4 bytes @ 0x0
  1766                           
  1767  0070                     ___flge@ff1:	
  1768                           ; 4 bytes @ 0x0
  1769                           
  1770  0070                     ___flneg@f1:	
  1771                           ; 4 bytes @ 0x0
  1772                           
  1773  0070                     __tdiv_to_l_@f1:	
  1774                           ; 4 bytes @ 0x0
  1775                           
  1776  0070                     ___llmod@divisor:	
  1777                           ; 4 bytes @ 0x0
  1778                           
  1779  0070                     ___fldiv@a:	
  1780                           ; 4 bytes @ 0x0
  1781                           
  1782  0070                     ___xxtofl@val:	
  1783                           ; 4 bytes @ 0x0
  1784                           
  1785                           
  1786                           ; 4 bytes @ 0x0
  1787  0070                     	ds	1
  1788  0071                     ??_lcd_cmd:
  1789  0071                     lcd_cmd@cmd:	
  1790                           ; 1 bytes @ 0x1
  1791                           
  1792  0071                     isdigit@c:	
  1793                           ; 1 bytes @ 0x1
  1794                           
  1795                           
  1796                           ; 1 bytes @ 0x1
  1797  0071                     	ds	1
  1798  0072                     ??_lcd_init:
  1799  0072                     ??_lcd_backlight:	
  1800                           ; 1 bytes @ 0x2
  1801                           
  1802  0072                     ?_command:	
  1803                           ; 1 bytes @ 0x2
  1804                           
  1805  0072                     ??__Umul8_16:	
  1806                           ; 1 bytes @ 0x2
  1807                           
  1808  0072                     command@mode:	
  1809                           ; 1 bytes @ 0x2
  1810                           
  1811  0072                     ___wmul@multiplicand:	
  1812                           ; 1 bytes @ 0x2
  1813                           
  1814  0072                     ___awmod@dividend:	
  1815                           ; 2 bytes @ 0x2
  1816                           
  1817  0072                     ___lwmod@dividend:	
  1818                           ; 2 bytes @ 0x2
  1819                           
  1820                           
  1821                           ; 2 bytes @ 0x2
  1822  0072                     	ds	1
  1823  0073                     ??_command:
  1824                           
  1825                           ; 1 bytes @ 0x3
  1826  0073                     	ds	1
  1827  0074                     ??___wmul:
  1828  0074                     ??___awmod:	
  1829                           ; 1 bytes @ 0x4
  1830                           
  1831  0074                     ??___flneg:	
  1832                           ; 1 bytes @ 0x4
  1833                           
  1834  0074                     ??___lwmod:	
  1835                           ; 1 bytes @ 0x4
  1836                           
  1837  0074                     ??___xxtofl:	
  1838                           ; 1 bytes @ 0x4
  1839                           
  1840  0074                     ___wmul@product:	
  1841                           ; 1 bytes @ 0x4
  1842                           
  1843  0074                     __Umul8_16@product:	
  1844                           ; 2 bytes @ 0x4
  1845                           
  1846  0074                     ___lldiv@dividend:	
  1847                           ; 2 bytes @ 0x4
  1848                           
  1849  0074                     ___aldiv@dividend:	
  1850                           ; 4 bytes @ 0x4
  1851                           
  1852  0074                     __div_to_l_@f2:	
  1853                           ; 4 bytes @ 0x4
  1854                           
  1855  0074                     ___fleq@ff2:	
  1856                           ; 4 bytes @ 0x4
  1857                           
  1858  0074                     ___flge@ff2:	
  1859                           ; 4 bytes @ 0x4
  1860                           
  1861  0074                     __tdiv_to_l_@f2:	
  1862                           ; 4 bytes @ 0x4
  1863                           
  1864  0074                     ___llmod@dividend:	
  1865                           ; 4 bytes @ 0x4
  1866                           
  1867  0074                     ___fldiv@b:	
  1868                           ; 4 bytes @ 0x4
  1869                           
  1870                           
  1871                           ; 4 bytes @ 0x4
  1872  0074                     	ds	1
  1873  0075                     command@val:
  1874  0075                     ___awmod@counter:	
  1875                           ; 1 bytes @ 0x5
  1876                           
  1877  0075                     ___lwmod@counter:	
  1878                           ; 1 bytes @ 0x5
  1879                           
  1880                           
  1881                           ; 1 bytes @ 0x5
  1882  0075                     	ds	1
  1883  0076                     ?___lwdiv:
  1884  0076                     command@highnib:	
  1885                           ; 2 bytes @ 0x6
  1886                           
  1887  0076                     ___awmod@sign:	
  1888                           ; 1 bytes @ 0x6
  1889                           
  1890  0076                     ___lwdiv@divisor:	
  1891                           ; 1 bytes @ 0x6
  1892                           
  1893  0076                     __Umul8_16@word_mpld:	
  1894                           ; 2 bytes @ 0x6
  1895                           
  1896                           
  1897                           ; 2 bytes @ 0x6
  1898  0076                     	ds	1
  1899  0077                     ?___awdiv:
  1900  0077                     command@lownib:	
  1901                           ; 2 bytes @ 0x7
  1902                           
  1903  0077                     ___awdiv@divisor:	
  1904                           ; 1 bytes @ 0x7
  1905                           
  1906                           
  1907                           ; 2 bytes @ 0x7
  1908  0077                     	ds	1
  1909  0078                     ?_lcd_set_cursor:
  1910  0078                     ?_lcd_print:	
  1911                           ; 1 bytes @ 0x8
  1912                           
  1913  0078                     ??__tdiv_to_l_:	
  1914                           ; 1 bytes @ 0x8
  1915                           
  1916  0078                     ??__div_to_l_:	
  1917                           ; 1 bytes @ 0x8
  1918                           
  1919  0078                     ??___lldiv:	
  1920                           ; 1 bytes @ 0x8
  1921                           
  1922  0078                     ??___aldiv:	
  1923                           ; 1 bytes @ 0x8
  1924                           
  1925  0078                     ??___fleq:	
  1926                           ; 1 bytes @ 0x8
  1927                           
  1928  0078                     ??___flge:	
  1929                           ; 1 bytes @ 0x8
  1930                           
  1931  0078                     ??___llmod:	
  1932                           ; 1 bytes @ 0x8
  1933                           
  1934  0078                     ??___fldiv:	
  1935                           ; 1 bytes @ 0x8
  1936                           
  1937  0078                     lcd_set_cursor@row:	
  1938                           ; 1 bytes @ 0x8
  1939                           
  1940  0078                     __Umul8_16@multiplier:	
  1941                           ; 1 bytes @ 0x8
  1942                           
  1943  0078                     ___xxtofl@sign:	
  1944                           ; 1 bytes @ 0x8
  1945                           
  1946  0078                     lcd_print@str:	
  1947                           ; 1 bytes @ 0x8
  1948                           
  1949  0078                     ___lwdiv@dividend:	
  1950                           ; 2 bytes @ 0x8
  1951                           
  1952                           
  1953                           ; 2 bytes @ 0x8
  1954  0078                     	ds	1
  1955  0079                     ??_lcd_set_cursor:
  1956  0079                     ??_get_scale_val:	
  1957                           ; 1 bytes @ 0x9
  1958                           
  1959  0079                     ___llmod@counter:	
  1960                           ; 1 bytes @ 0x9
  1961                           
  1962  0079                     ___xxtofl@exp:	
  1963                           ; 1 bytes @ 0x9
  1964                           
  1965  0079                     ___awdiv@dividend:	
  1966                           ; 1 bytes @ 0x9
  1967                           
  1968  0079                     ___lldiv@quotient:	
  1969                           ; 2 bytes @ 0x9
  1970                           
  1971                           
  1972                           ; 4 bytes @ 0x9
  1973  0079                     	ds	1
  1974  007A                     ??_lcd_print:
  1975  007A                     ??___lwdiv:	
  1976                           ; 1 bytes @ 0xA
  1977                           
  1978  007A                     ___xxtofl@arg:	
  1979                           ; 1 bytes @ 0xA
  1980                           
  1981                           
  1982                           ; 4 bytes @ 0xA
  1983  007A                     	ds	1
  1984  007B                     ??___awdiv:
  1985  007B                     lcd_print@cmd:	
  1986                           ; 1 bytes @ 0xB
  1987                           
  1988  007B                     ___lwdiv@quotient:	
  1989                           ; 1 bytes @ 0xB
  1990                           
  1991                           
  1992                           ; 2 bytes @ 0xB
  1993  007B                     	ds	1
  1994  007C                     ??_lcd_clear:
  1995                           
  1996                           ; 1 bytes @ 0xC
  1997  007C                     	ds	1
  1998  007D                     ___lldiv@counter:
  1999  007D                     ___lwdiv@counter:	
  2000                           ; 1 bytes @ 0xD
  2001                           
  2002                           
  2003                           ; 1 bytes @ 0xD
  2004  007D                     	ds	1
  2005  007E                     ??___flsub:
  2006                           
  2007                           	psect	cstackBANK0
  2008  0020                     __pcstackBANK0:	
  2009                           ; 1 bytes @ 0xE
  2010                           
  2011  0020                     ___aldiv@counter:
  2012  0020                     ___awdiv@counter:	
  2013                           ; 1 bytes @ 0x0
  2014                           
  2015  0020                     lcd_set_cursor@row_offsets:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018  0020                     __div_to_l_@quot:	
  2019                           ; 4 bytes @ 0x0
  2020                           
  2021  0020                     __tdiv_to_l_@quot:	
  2022                           ; 4 bytes @ 0x0
  2023                           
  2024  0020                     ___fldiv@rem:	
  2025                           ; 4 bytes @ 0x0
  2026                           
  2027                           
  2028                           ; 4 bytes @ 0x0
  2029  0020                     	ds	1
  2030  0021                     ___aldiv@sign:
  2031  0021                     ___awdiv@sign:	
  2032                           ; 1 bytes @ 0x1
  2033                           
  2034                           
  2035                           ; 1 bytes @ 0x1
  2036  0021                     	ds	1
  2037  0022                     ___awdiv@quotient:
  2038  0022                     ___aldiv@quotient:	
  2039                           ; 2 bytes @ 0x2
  2040                           
  2041                           
  2042                           ; 4 bytes @ 0x2
  2043  0022                     	ds	2
  2044  0024                     ?___flmul:
  2045  0024                     lcd_set_cursor@col:	
  2046                           ; 4 bytes @ 0x4
  2047                           
  2048  0024                     __div_to_l_@cntr:	
  2049                           ; 1 bytes @ 0x4
  2050                           
  2051  0024                     __tdiv_to_l_@cntr:	
  2052                           ; 1 bytes @ 0x4
  2053                           
  2054  0024                     ___fldiv@sign:	
  2055                           ; 1 bytes @ 0x4
  2056                           
  2057  0024                     ___flmul@b:	
  2058                           ; 1 bytes @ 0x4
  2059                           
  2060                           
  2061                           ; 4 bytes @ 0x4
  2062  0024                     	ds	1
  2063  0025                     lcd_set_cursor@cmd:
  2064  0025                     __div_to_l_@exp1:	
  2065                           ; 1 bytes @ 0x5
  2066                           
  2067  0025                     __tdiv_to_l_@exp1:	
  2068                           ; 1 bytes @ 0x5
  2069                           
  2070  0025                     ___fldiv@new_exp:	
  2071                           ; 1 bytes @ 0x5
  2072                           
  2073                           
  2074                           ; 2 bytes @ 0x5
  2075  0025                     	ds	1
  2076  0026                     ?_get_scale_val:
  2077  0026                     lcd_clear@row:	
  2078                           ; 4 bytes @ 0x6
  2079                           
  2080                           
  2081                           ; 1 bytes @ 0x6
  2082  0026                     	ds	1
  2083  0027                     lcd_clear@col:
  2084  0027                     ___fldiv@grs:	
  2085                           ; 1 bytes @ 0x7
  2086                           
  2087                           
  2088                           ; 4 bytes @ 0x7
  2089  0027                     	ds	1
  2090  0028                     ___flmul@a:
  2091                           
  2092                           ; 4 bytes @ 0x8
  2093  0028                     	ds	2
  2094  002A                     get_scale_val@weight_add:
  2095                           
  2096                           ; 4 bytes @ 0xA
  2097  002A                     	ds	1
  2098  002B                     ___fldiv@bexp:
  2099                           
  2100                           ; 1 bytes @ 0xB
  2101  002B                     	ds	1
  2102  002C                     ??___flmul:
  2103  002C                     ___fldiv@aexp:	
  2104                           ; 1 bytes @ 0xC
  2105                           
  2106                           
  2107                           ; 1 bytes @ 0xC
  2108  002C                     	ds	1
  2109  002D                     ?_scale_convert_gram:
  2110  002D                     scale_convert_gram@count:	
  2111                           ; 4 bytes @ 0xD
  2112                           
  2113                           
  2114                           ; 4 bytes @ 0xD
  2115  002D                     	ds	1
  2116  002E                     get_scale_val@j:
  2117                           
  2118                           ; 1 bytes @ 0xE
  2119  002E                     	ds	1
  2120  002F                     get_scale_val@n:
  2121                           
  2122                           ; 1 bytes @ 0xF
  2123  002F                     	ds	1
  2124  0030                     get_scale_val@weight_count:
  2125                           
  2126                           ; 4 bytes @ 0x10
  2127  0030                     	ds	1
  2128  0031                     ??_scale_convert_gram:
  2129  0031                     ___flmul@sign:	
  2130                           ; 1 bytes @ 0x11
  2131                           
  2132                           
  2133                           ; 1 bytes @ 0x11
  2134  0031                     	ds	1
  2135  0032                     ___flmul@grs:
  2136                           
  2137                           ; 4 bytes @ 0x12
  2138  0032                     	ds	2
  2139  0034                     get_scale_val@i:
  2140                           
  2141                           ; 1 bytes @ 0x14
  2142  0034                     	ds	1
  2143  0035                     scale_convert_gram@temp:
  2144                           
  2145                           ; 4 bytes @ 0x15
  2146  0035                     	ds	1
  2147  0036                     ___flmul@aexp:
  2148                           
  2149                           ; 1 bytes @ 0x16
  2150  0036                     	ds	1
  2151  0037                     ___flmul@bexp:
  2152                           
  2153                           ; 1 bytes @ 0x17
  2154  0037                     	ds	1
  2155  0038                     ___flmul@prod:
  2156                           
  2157                           ; 4 bytes @ 0x18
  2158  0038                     	ds	4
  2159  003C                     ___flmul@temp:
  2160                           
  2161                           ; 2 bytes @ 0x1C
  2162  003C                     	ds	2
  2163  003E                     ?_fround:
  2164  003E                     ?_scale:	
  2165                           ; 4 bytes @ 0x1E
  2166                           
  2167                           
  2168                           ; 4 bytes @ 0x1E
  2169  003E                     	ds	4
  2170  0042                     ??_fround:
  2171  0042                     ??_scale:	
  2172                           ; 1 bytes @ 0x22
  2173                           
  2174                           
  2175                           ; 1 bytes @ 0x22
  2176  0042                     	ds	6
  2177  0048                     _fround$1075:
  2178                           
  2179                           ; 4 bytes @ 0x28
  2180  0048                     	ds	4
  2181  004C                     _fround$1074:
  2182                           
  2183                           ; 4 bytes @ 0x2C
  2184  004C                     	ds	2
  2185  004E                     _scale$1076:
  2186                           
  2187                           ; 4 bytes @ 0x2E
  2188  004E                     	ds	2
  2189  0050                     fround@prec:
  2190                           
  2191                           ; 1 bytes @ 0x30
  2192  0050                     	ds	1
  2193  0051                     ?___fladd:
  2194  0051                     ___fladd@b:	
  2195                           ; 4 bytes @ 0x31
  2196                           
  2197                           
  2198                           ; 4 bytes @ 0x31
  2199  0051                     	ds	1
  2200  0052                     scale@scl:
  2201                           
  2202                           ; 1 bytes @ 0x32
  2203  0052                     	ds	1
  2204  0053                     ?___fltol:
  2205  0053                     ___fltol@f1:	
  2206                           ; 4 bytes @ 0x33
  2207                           
  2208                           
  2209                           ; 4 bytes @ 0x33
  2210  0053                     	ds	2
  2211  0055                     ___fladd@a:
  2212                           
  2213                           ; 4 bytes @ 0x35
  2214  0055                     	ds	2
  2215  0057                     ??___fltol:
  2216                           
  2217                           ; 1 bytes @ 0x37
  2218  0057                     	ds	2
  2219  0059                     ??___fladd:
  2220                           
  2221                           ; 1 bytes @ 0x39
  2222  0059                     	ds	3
  2223  005C                     ___fltol@sign1:
  2224                           
  2225                           ; 1 bytes @ 0x3C
  2226  005C                     	ds	1
  2227  005D                     ___fltol@exp1:
  2228                           
  2229                           ; 1 bytes @ 0x3D
  2230  005D                     	ds	4
  2231  0061                     ___fladd@signs:
  2232                           
  2233                           ; 1 bytes @ 0x41
  2234  0061                     	ds	1
  2235  0062                     ___fladd@aexp:
  2236                           
  2237                           ; 1 bytes @ 0x42
  2238  0062                     	ds	1
  2239  0063                     ___fladd@bexp:
  2240                           
  2241                           ; 1 bytes @ 0x43
  2242  0063                     	ds	1
  2243  0064                     ___fladd@grs:
  2244                           
  2245                           ; 1 bytes @ 0x44
  2246  0064                     	ds	1
  2247  0065                     ?___flsub:
  2248  0065                     ___flsub@a:	
  2249                           ; 4 bytes @ 0x45
  2250                           
  2251                           
  2252                           ; 4 bytes @ 0x45
  2253  0065                     	ds	4
  2254  0069                     ___flsub@b:
  2255                           
  2256                           ; 4 bytes @ 0x49
  2257  0069                     	ds	4
  2258  006D                     ??_main:
  2259                           
  2260                           ; 1 bytes @ 0x4D
  2261  006D                     	ds	2
  2262                           
  2263                           	psect	maintext
  2264  1505                     __pmaintext:	
  2265 ;;
  2266 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2267 ;;
  2268 ;; *************** function _main *****************
  2269 ;; Defined at:
  2270 ;;		line 8 in file "main.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  weight_gram     4   39[BANK1 ] float 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : B1F/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2285 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2286 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2287 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2288 ;;Total ram usage:        6 bytes
  2289 ;; Hardware stack levels required when called: 6
  2290 ;; This function calls:
  2291 ;;		_SYSTEM_Initialize
  2292 ;;		_get_scale_val
  2293 ;;		_lcd_backlight
  2294 ;;		_lcd_clear
  2295 ;;		_lcd_init
  2296 ;;		_lcd_print
  2297 ;;		_lcd_set_cursor
  2298 ;;		_scale_convert_gram
  2299 ;;		_sprintf
  2300 ;; This function is called by:
  2301 ;;		Startup code after reset
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           
  2306                           ;psect for function _main
  2307  1505                     _main:
  2308  1505                     l4262:	
  2309                           ;incstack = 0
  2310                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2311                           
  2312                           
  2313                           ;main.c: 10: SYSTEM_Initialize();
  2314  1505  319D  2592  3195   	fcall	_SYSTEM_Initialize
  2315  1508                     l4264:
  2316                           
  2317                           ;main.c: 13: ANSELA = 0x00;
  2318  1508  0023               	movlb	3	; select bank3
  2319  1509  018C               	clrf	12	;volatile
  2320  150A                     l4266:
  2321                           
  2322                           ;main.c: 14: ANSELB = 0x00;
  2323  150A  018D               	clrf	13	;volatile
  2324  150B                     l4268:
  2325                           
  2326                           ;main.c: 18: TRISA = 0x02;
  2327  150B  3002               	movlw	2
  2328  150C  0021               	movlb	1	; select bank1
  2329  150D  008C               	movwf	12	;volatile
  2330  150E                     l4270:
  2331                           
  2332                           ;main.c: 20: LATA = 0x00;
  2333  150E  0022               	movlb	2	; select bank2
  2334  150F  018C               	clrf	12	;volatile
  2335  1510                     l4272:
  2336                           
  2337                           ;main.c: 21: LATB = 0x00;
  2338  1510  018D               	clrf	13	;volatile
  2339  1511                     l4274:
  2340                           
  2341                           ;main.c: 25: SSPADD = 0x13;
  2342  1511  3013               	movlw	19
  2343  1512  0024               	movlb	4	; select bank4
  2344  1513  0092               	movwf	18	;volatile
  2345  1514                     l4276:
  2346                           
  2347                           ;main.c: 26: SSPCON1 = 0x28;
  2348  1514  3028               	movlw	40
  2349  1515  0095               	movwf	21	;volatile
  2350  1516                     l4278:
  2351                           
  2352                           ;main.c: 27: SSPCON2 = 0x0;
  2353  1516  0196               	clrf	22	;volatile
  2354  1517                     l4280:
  2355                           
  2356                           ;main.c: 28: SSPSTAT = 0;
  2357  1517  0194               	clrf	20	;volatile
  2358  1518                     l4282:
  2359                           
  2360                           ;main.c: 30: lcd_init();
  2361  1518  3188  2009  3195   	fcall	_lcd_init
  2362  151B                     l4284:
  2363                           
  2364                           ;main.c: 31: lcd_backlight();
  2365  151B  319D  25BD  3195   	fcall	_lcd_backlight
  2366  151E                     l4286:
  2367                           
  2368                           ;main.c: 32: lcd_set_cursor(0, 0);
  2369  151E  01F8               	clrf	lcd_set_cursor@row
  2370  151F  3000               	movlw	0
  2371  1520  319E  2696  3195   	fcall	_lcd_set_cursor
  2372  1523                     l4288:
  2373                           
  2374                           ;main.c: 35: lcd_print("Initialize");
  2375  1523  3090               	movlw	low (STR_1| (0+32768))
  2376  1524  00F8               	movwf	lcd_print@str
  2377  1525  30A0               	movlw	high (STR_1| (0+32768))
  2378  1526  00F9               	movwf	lcd_print@str+1
  2379  1527  319D  25EF  3195   	fcall	_lcd_print
  2380  152A                     l4290:
  2381                           
  2382                           ;main.c: 37: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2383  152A  300B               	movlw	11
  2384  152B  0020               	movlb	0	; select bank0
  2385  152C  00EE               	movwf	??_main+1
  2386  152D  3026               	movlw	38
  2387  152E  00ED               	movwf	??_main
  2388  152F  305D               	movlw	93
  2389  1530                     u5817:
  2390  1530  0B89               	decfsz	9,f
  2391  1531  2D30               	goto	u5817
  2392  1532  0BED               	decfsz	??_main,f
  2393  1533  2D30               	goto	u5817
  2394  1534  0BEE               	decfsz	??_main+1,f
  2395  1535  2D30               	goto	u5817
  2396  1536  3200               	nop2
  2397  1537                     l4292:
  2398                           
  2399                           ;main.c: 39: weight_zero = get_scale_val(50);
  2400  1537  3032               	movlw	50
  2401  1538  3195  25BD  3195   	fcall	_get_scale_val
  2402  153B  0020               	movlb	0	; select bank0
  2403  153C  0829               	movf	?_get_scale_val+3,w
  2404  153D  0021               	movlb	1	; select bank1
  2405  153E  00CE               	movwf	(_weight_zero+3)^(0+128)
  2406  153F  0020               	movlb	0	; select bank0
  2407  1540  0828               	movf	?_get_scale_val+2,w
  2408  1541  0021               	movlb	1	; select bank1
  2409  1542  00CD               	movwf	(_weight_zero+2)^(0+128)
  2410  1543  0020               	movlb	0	; select bank0
  2411  1544  0827               	movf	?_get_scale_val+1,w
  2412  1545  0021               	movlb	1	; select bank1
  2413  1546  00CC               	movwf	(_weight_zero+1)^(0+128)
  2414  1547  0020               	movlb	0	; select bank0
  2415  1548  0826               	movf	?_get_scale_val,w
  2416  1549  0021               	movlb	1	; select bank1
  2417  154A  00CB               	movwf	_weight_zero^(0+128)
  2418  154B                     l4294:
  2419                           
  2420                           ;main.c: 41: _delay((unsigned long)((3000)*(8000000/4000.0)));
  2421  154B  301F               	movlw	31
  2422  154C  0020               	movlb	0	; select bank0
  2423  154D  00EE               	movwf	??_main+1
  2424  154E  3071               	movlw	113
  2425  154F  00ED               	movwf	??_main
  2426  1550  301E               	movlw	30
  2427  1551                     u5827:
  2428  1551  0B89               	decfsz	9,f
  2429  1552  2D51               	goto	u5827
  2430  1553  0BED               	decfsz	??_main,f
  2431  1554  2D51               	goto	u5827
  2432  1555  0BEE               	decfsz	??_main+1,f
  2433  1556  2D51               	goto	u5827
  2434  1557  0000               	nop
  2435  1558                     l4296:
  2436                           
  2437                           ;main.c: 44: {;main.c: 45: weight_dat = get_scale_val(8);
  2438  1558  3008               	movlw	8
  2439  1559  3195  25BD  3195   	fcall	_get_scale_val
  2440  155C  0020               	movlb	0	; select bank0
  2441  155D  0829               	movf	?_get_scale_val+3,w
  2442  155E  0021               	movlb	1	; select bank1
  2443  155F  00D2               	movwf	(_weight_dat+3)^(0+128)
  2444  1560  0020               	movlb	0	; select bank0
  2445  1561  0828               	movf	?_get_scale_val+2,w
  2446  1562  0021               	movlb	1	; select bank1
  2447  1563  00D1               	movwf	(_weight_dat+2)^(0+128)
  2448  1564  0020               	movlb	0	; select bank0
  2449  1565  0827               	movf	?_get_scale_val+1,w
  2450  1566  0021               	movlb	1	; select bank1
  2451  1567  00D0               	movwf	(_weight_dat+1)^(0+128)
  2452  1568  0020               	movlb	0	; select bank0
  2453  1569  0826               	movf	?_get_scale_val,w
  2454  156A  0021               	movlb	1	; select bank1
  2455  156B  00CF               	movwf	_weight_dat^(0+128)
  2456  156C                     l4298:
  2457                           
  2458                           ;main.c: 46: float weight_gram = scale_convert_gram(weight_dat);
  2459  156C  0852               	movf	(_weight_dat+3)^(0+128),w
  2460  156D  0020               	movlb	0	; select bank0
  2461  156E  00B0               	movwf	scale_convert_gram@count+3
  2462  156F  0021               	movlb	1	; select bank1
  2463  1570  0851               	movf	(_weight_dat+2)^(0+128),w
  2464  1571  0020               	movlb	0	; select bank0
  2465  1572  00AF               	movwf	scale_convert_gram@count+2
  2466  1573  0021               	movlb	1	; select bank1
  2467  1574  0850               	movf	(_weight_dat+1)^(0+128),w
  2468  1575  0020               	movlb	0	; select bank0
  2469  1576  00AE               	movwf	scale_convert_gram@count+1
  2470  1577  0021               	movlb	1	; select bank1
  2471  1578  084F               	movf	_weight_dat^(0+128),w
  2472  1579  0020               	movlb	0	; select bank0
  2473  157A  00AD               	movwf	scale_convert_gram@count
  2474  157B  319F  27B2  3195   	fcall	_scale_convert_gram
  2475  157E  0020               	movlb	0	; select bank0
  2476  157F  0830               	movf	?_scale_convert_gram+3,w
  2477  1580  0021               	movlb	1	; select bank1
  2478  1581  00CA               	movwf	(main@weight_gram+3)^(0+128)
  2479  1582  0020               	movlb	0	; select bank0
  2480  1583  082F               	movf	?_scale_convert_gram+2,w
  2481  1584  0021               	movlb	1	; select bank1
  2482  1585  00C9               	movwf	(main@weight_gram+2)^(0+128)
  2483  1586  0020               	movlb	0	; select bank0
  2484  1587  082E               	movf	?_scale_convert_gram+1,w
  2485  1588  0021               	movlb	1	; select bank1
  2486  1589  00C8               	movwf	(main@weight_gram+1)^(0+128)
  2487  158A  0020               	movlb	0	; select bank0
  2488  158B  082D               	movf	?_scale_convert_gram,w
  2489  158C  0021               	movlb	1	; select bank1
  2490  158D  00C7               	movwf	main@weight_gram^(0+128)
  2491  158E                     l4300:
  2492                           
  2493                           ;main.c: 48: sprintf(str, "%3.2f g", weight_gram);
  2494  158E  309B               	movlw	low (STR_2| (0+32768))
  2495  158F  00A0               	movwf	sprintf@f^(0+128)
  2496  1590  30A0               	movlw	high (STR_2| (0+32768))
  2497  1591  00A1               	movwf	(sprintf@f^(0+128)+1)
  2498  1592  084A               	movf	(main@weight_gram+3)^(0+128),w
  2499  1593  00A5               	movwf	((?_sprintf+3)^(0+128)+2)
  2500  1594  0849               	movf	(main@weight_gram+2)^(0+128),w
  2501  1595  00A4               	movwf	((?_sprintf+2)^(0+128)+2)
  2502  1596  0848               	movf	(main@weight_gram+1)^(0+128),w
  2503  1597  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  2504  1598  0847               	movf	main@weight_gram^(0+128),w
  2505  1599  00A2               	movwf	(?_sprintf^(0+128)+2)
  2506  159A  30D3               	movlw	(low (_str| 0))& (0+255)
  2507  159B  3181  21D0  3195   	fcall	_sprintf
  2508  159E                     l4302:
  2509                           
  2510                           ;main.c: 50: lcd_clear();
  2511  159E  319E  266E  3195   	fcall	_lcd_clear
  2512  15A1                     l4304:
  2513                           
  2514                           ;main.c: 51: lcd_set_cursor(0, 0);
  2515  15A1  01F8               	clrf	lcd_set_cursor@row
  2516  15A2  3000               	movlw	0
  2517  15A3  319E  2696  3195   	fcall	_lcd_set_cursor
  2518  15A6                     l4306:
  2519                           
  2520                           ;main.c: 52: lcd_print(str);
  2521  15A6  30D3               	movlw	low _str
  2522  15A7  00F8               	movwf	lcd_print@str
  2523  15A8  3000               	movlw	high _str
  2524  15A9  00F9               	movwf	lcd_print@str+1
  2525  15AA  319D  25EF  3195   	fcall	_lcd_print
  2526                           
  2527                           ;main.c: 54: _delay((unsigned long)((100)*(8000000/4000.0)));
  2528  15AD  3002               	movlw	2
  2529  15AE  0020               	movlb	0	; select bank0
  2530  15AF  00EE               	movwf	??_main+1
  2531  15B0  3004               	movlw	4
  2532  15B1  00ED               	movwf	??_main
  2533  15B2  30BA               	movlw	186
  2534  15B3                     u5837:
  2535  15B3  0B89               	decfsz	9,f
  2536  15B4  2DB3               	goto	u5837
  2537  15B5  0BED               	decfsz	??_main,f
  2538  15B6  2DB3               	goto	u5837
  2539  15B7  0BEE               	decfsz	??_main+1,f
  2540  15B8  2DB3               	goto	u5837
  2541  15B9  0000               	nop
  2542  15BA  2D58               	goto	l4296
  2543  15BB  3180  2802         	ljmp	start
  2544  15BD                     __end_of_main:
  2545                           
  2546                           	psect	text1
  2547  01D0                     __ptext1:	
  2548 ;; *************** function _sprintf *****************
  2549 ;; Defined at:
  2550 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  sp              1    wreg     PTR unsigned char 
  2553 ;;		 -> str(16), 
  2554 ;;  f               2    0[BANK1 ] PTR const unsigned char 
  2555 ;;		 -> STR_2(8), 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  sp              1   35[BANK1 ] PTR unsigned char 
  2558 ;;		 -> str(16), 
  2559 ;;  fval            4   31[BANK1 ] PTR unsigned char 
  2560 ;;  tmpval          4   25[BANK1 ] struct .
  2561 ;;  val             4   17[BANK1 ] unsigned long 
  2562 ;;  prec            2   36[BANK1 ] int 
  2563 ;;  eexp            2   29[BANK1 ] int 
  2564 ;;  width           2   23[BANK1 ] int 
  2565 ;;  flag            2   21[BANK1 ] unsigned short 
  2566 ;;  cp              2    0        PTR const unsigned char 
  2567 ;;  len             2    0        unsigned int 
  2568 ;;  c               1   38[BANK1 ] unsigned char 
  2569 ;;  ap              1   16[BANK1 ] PTR void [1]
  2570 ;;		 -> ?_sprintf(2), 
  2571 ;;  d               1    0        unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  2    0[BANK1 ] int 
  2574 ;; Registers used:
  2575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2581 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2582 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0
  2583 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2584 ;;      Totals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0
  2585 ;;Total ram usage:       39 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; Hardware stack levels required when called: 3
  2588 ;; This function calls:
  2589 ;;		___awdiv
  2590 ;;		___fladd
  2591 ;;		___fleq
  2592 ;;		___flge
  2593 ;;		___flmul
  2594 ;;		___flneg
  2595 ;;		___flsub
  2596 ;;		___fltol
  2597 ;;		___lldiv
  2598 ;;		___llmod
  2599 ;;		___wmul
  2600 ;;		___xxtofl
  2601 ;;		__div_to_l_
  2602 ;;		__tdiv_to_l_
  2603 ;;		_fround
  2604 ;;		_isdigit
  2605 ;;		_scale
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           
  2612                           ;psect for function _sprintf
  2613  01D0                     _sprintf:
  2614                           
  2615                           ;incstack = 0
  2616                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2617                           ;sprintf@sp stored from wreg
  2618  01D0  0021               	movlb	1	; select bank1
  2619  01D1  00C3               	movwf	sprintf@sp^(0+128)
  2620  01D2                     l3980:
  2621                           
  2622                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  2623  01D2  30A2               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2624  01D3  00A6               	movwf	??_sprintf^(0+128)
  2625  01D4  0826               	movf	??_sprintf^(0+128),w
  2626  01D5  00B0               	movwf	sprintf@ap^(0+128)
  2627                           
  2628                           ;doprnt.c: 553: while((c = *f++)) {
  2629  01D6  2FC9               	goto	l4232
  2630  01D7                     l3982:
  2631                           
  2632                           ;doprnt.c: 555: if(c != '%')
  2633  01D7  3025               	movlw	37
  2634  01D8  0646               	xorwf	sprintf@c^(0+128),w
  2635  01D9  1903               	btfsc	3,2
  2636  01DA  29DC               	goto	u5341
  2637  01DB  29DD               	goto	u5340
  2638  01DC                     u5341:
  2639  01DC  29E9               	goto	l3988
  2640  01DD                     u5340:
  2641  01DD                     l3984:
  2642                           
  2643                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2644  01DD  0846               	movf	sprintf@c^(0+128),w
  2645  01DE  00A6               	movwf	??_sprintf^(0+128)
  2646  01DF  0843               	movf	sprintf@sp^(0+128),w
  2647  01E0  0086               	movwf	6
  2648  01E1  0187               	clrf	7
  2649  01E2  0826               	movf	??_sprintf^(0+128),w
  2650  01E3  0081               	movwf	1
  2651  01E4                     l3986:
  2652  01E4  3001               	movlw	1
  2653  01E5  00A6               	movwf	??_sprintf^(0+128)
  2654  01E6  0826               	movf	??_sprintf^(0+128),w
  2655  01E7  07C3               	addwf	sprintf@sp^(0+128),f
  2656                           
  2657                           ;doprnt.c: 559: continue;
  2658  01E8  2FC9               	goto	l4232
  2659  01E9                     l3988:
  2660                           
  2661                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  2662  01E9  01B7               	clrf	sprintf@width^(0+128)
  2663  01EA  01B8               	clrf	(sprintf@width+1)^(0+128)
  2664                           
  2665                           ;doprnt.c: 565: flag = 0;
  2666  01EB  01B5               	clrf	sprintf@flag^(0+128)
  2667  01EC  01B6               	clrf	(sprintf@flag+1)^(0+128)
  2668  01ED                     l3990:
  2669                           
  2670                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  2671  01ED  0820               	movf	sprintf@f^(0+128),w
  2672  01EE  0084               	movwf	4
  2673  01EF  0821               	movf	(sprintf@f+1)^(0+128),w
  2674  01F0  0085               	movwf	5
  2675  01F1  0800               	movf	0,w	;code access
  2676  01F2  319D  25DD  3181   	fcall	_isdigit
  2677  01F5  1C03               	btfss	3,0
  2678  01F6  29F8               	goto	u5351
  2679  01F7  29F9               	goto	u5350
  2680  01F8                     u5351:
  2681  01F8  2A2C               	goto	l4002
  2682  01F9                     u5350:
  2683  01F9                     l3992:
  2684                           
  2685                           ;doprnt.c: 615: width = 0;
  2686  01F9  0021               	movlb	1	; select bank1
  2687  01FA  01B7               	clrf	sprintf@width^(0+128)
  2688  01FB  01B8               	clrf	(sprintf@width+1)^(0+128)
  2689  01FC                     l3994:
  2690                           
  2691                           ;doprnt.c: 617: width *= 10;
  2692  01FC  300A               	movlw	10
  2693  01FD  00F0               	movwf	___wmul@multiplier
  2694  01FE  3000               	movlw	0
  2695  01FF  00F1               	movwf	___wmul@multiplier+1
  2696  0200  0021               	movlb	1	; select bank1
  2697  0201  0838               	movf	(sprintf@width+1)^(0+128),w
  2698  0202  00F3               	movwf	___wmul@multiplicand+1
  2699  0203  0837               	movf	sprintf@width^(0+128),w
  2700  0204  00F2               	movwf	___wmul@multiplicand
  2701  0205  319E  260C  3181   	fcall	___wmul
  2702  0208  0871               	movf	?___wmul+1,w
  2703  0209  0021               	movlb	1	; select bank1
  2704  020A  00B8               	movwf	(sprintf@width+1)^(0+128)
  2705  020B  0870               	movf	?___wmul,w
  2706  020C  00B7               	movwf	sprintf@width^(0+128)
  2707  020D                     l3996:
  2708                           
  2709                           ;doprnt.c: 618: width += *f++ - '0';
  2710  020D  0820               	movf	sprintf@f^(0+128),w
  2711  020E  0084               	movwf	4
  2712  020F  0821               	movf	(sprintf@f+1)^(0+128),w
  2713  0210  0085               	movwf	5
  2714  0211  0800               	movf	0,w	;code access
  2715  0212  3ED0               	addlw	208
  2716  0213  00A6               	movwf	??_sprintf^(0+128)
  2717  0214  30FF               	movlw	255
  2718  0215  1803               	skipnc
  2719  0216  3000               	movlw	0
  2720  0217  00A7               	movwf	(??_sprintf^(0+128)+1)
  2721  0218  0826               	movf	??_sprintf^(0+128),w
  2722  0219  07B7               	addwf	sprintf@width^(0+128),f
  2723  021A  0827               	movf	(??_sprintf+1)^(0+128),w
  2724  021B  3DB8               	addwfc	(sprintf@width+1)^(0+128),f
  2725  021C                     l3998:
  2726  021C  3001               	movlw	1
  2727  021D  07A0               	addwf	sprintf@f^(0+128),f
  2728  021E  3000               	movlw	0
  2729  021F  3DA1               	addwfc	(sprintf@f+1)^(0+128),f
  2730  0220                     l4000:
  2731                           
  2732                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  2733  0220  0820               	movf	sprintf@f^(0+128),w
  2734  0221  0084               	movwf	4
  2735  0222  0821               	movf	(sprintf@f+1)^(0+128),w
  2736  0223  0085               	movwf	5
  2737  0224  0800               	movf	0,w	;code access
  2738  0225  319D  25DD  3181   	fcall	_isdigit
  2739  0228  1803               	btfsc	3,0
  2740  0229  2A2B               	goto	u5361
  2741  022A  2A2C               	goto	u5360
  2742  022B                     u5361:
  2743  022B  29FC               	goto	l3994
  2744  022C                     u5360:
  2745  022C                     l4002:
  2746                           
  2747                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  2748  022C  0021               	movlb	1	; select bank1
  2749  022D  0820               	movf	sprintf@f^(0+128),w
  2750  022E  0084               	movwf	4
  2751  022F  0821               	movf	(sprintf@f+1)^(0+128),w
  2752  0230  0085               	movwf	5
  2753  0231  0012               	moviw fsr0++
  2754  0232  3A2E               	xorlw	46
  2755  0233  1D03               	btfss	3,2
  2756  0234  2A36               	goto	u5371
  2757  0235  2A37               	goto	u5370
  2758  0236                     u5371:
  2759  0236  2A70               	goto	l4018
  2760  0237                     u5370:
  2761  0237                     l4004:
  2762                           
  2763                           ;doprnt.c: 629: flag |= 0x4000;
  2764  0237  1736               	bsf	(sprintf@flag^(0+128)+1),6
  2765  0238                     l4006:
  2766                           
  2767                           ;doprnt.c: 630: f++;
  2768  0238  3001               	movlw	1
  2769  0239  07A0               	addwf	sprintf@f^(0+128),f
  2770  023A  3000               	movlw	0
  2771  023B  3DA1               	addwfc	(sprintf@f+1)^(0+128),f
  2772  023C                     l4008:
  2773                           
  2774                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  2775  023C  01C4               	clrf	sprintf@prec^(0+128)
  2776  023D  01C5               	clrf	(sprintf@prec+1)^(0+128)
  2777                           
  2778                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  2779  023E  2A63               	goto	l4016
  2780  023F                     l4010:
  2781                           
  2782                           ;doprnt.c: 647: prec *= 10;
  2783  023F  300A               	movlw	10
  2784  0240  00F0               	movwf	___wmul@multiplier
  2785  0241  3000               	movlw	0
  2786  0242  00F1               	movwf	___wmul@multiplier+1
  2787  0243  0021               	movlb	1	; select bank1
  2788  0244  0845               	movf	(sprintf@prec+1)^(0+128),w
  2789  0245  00F3               	movwf	___wmul@multiplicand+1
  2790  0246  0844               	movf	sprintf@prec^(0+128),w
  2791  0247  00F2               	movwf	___wmul@multiplicand
  2792  0248  319E  260C  3181   	fcall	___wmul
  2793  024B  0871               	movf	?___wmul+1,w
  2794  024C  0021               	movlb	1	; select bank1
  2795  024D  00C5               	movwf	(sprintf@prec+1)^(0+128)
  2796  024E  0870               	movf	?___wmul,w
  2797  024F  00C4               	movwf	sprintf@prec^(0+128)
  2798  0250                     l4012:
  2799                           
  2800                           ;doprnt.c: 648: prec += *f++ - '0';
  2801  0250  0820               	movf	sprintf@f^(0+128),w
  2802  0251  0084               	movwf	4
  2803  0252  0821               	movf	(sprintf@f+1)^(0+128),w
  2804  0253  0085               	movwf	5
  2805  0254  0800               	movf	0,w	;code access
  2806  0255  3ED0               	addlw	208
  2807  0256  00A6               	movwf	??_sprintf^(0+128)
  2808  0257  30FF               	movlw	255
  2809  0258  1803               	skipnc
  2810  0259  3000               	movlw	0
  2811  025A  00A7               	movwf	(??_sprintf^(0+128)+1)
  2812  025B  0826               	movf	??_sprintf^(0+128),w
  2813  025C  07C4               	addwf	sprintf@prec^(0+128),f
  2814  025D  0827               	movf	(??_sprintf+1)^(0+128),w
  2815  025E  3DC5               	addwfc	(sprintf@prec+1)^(0+128),f
  2816  025F                     l4014:
  2817  025F  3001               	movlw	1
  2818  0260  07A0               	addwf	sprintf@f^(0+128),f
  2819  0261  3000               	movlw	0
  2820  0262  3DA1               	addwfc	(sprintf@f+1)^(0+128),f
  2821  0263                     l4016:
  2822  0263  0820               	movf	sprintf@f^(0+128),w
  2823  0264  0084               	movwf	4
  2824  0265  0821               	movf	(sprintf@f+1)^(0+128),w
  2825  0266  0085               	movwf	5
  2826  0267  0800               	movf	0,w	;code access
  2827  0268  319D  25DD  3181   	fcall	_isdigit
  2828  026B  1803               	btfsc	3,0
  2829  026C  2A6E               	goto	u5381
  2830  026D  2A6F               	goto	u5380
  2831  026E                     u5381:
  2832  026E  2A3F               	goto	l4010
  2833  026F                     u5380:
  2834  026F  2A76               	goto	l4024
  2835  0270                     l4018:
  2836                           
  2837                           ;doprnt.c: 652: prec = 0;
  2838  0270  01C4               	clrf	sprintf@prec^(0+128)
  2839  0271  01C5               	clrf	(sprintf@prec+1)^(0+128)
  2840  0272                     l4020:
  2841                           
  2842                           ;doprnt.c: 654: flag |= 0x1000;
  2843  0272  1636               	bsf	(sprintf@flag^(0+128)+1),4
  2844  0273  2A76               	goto	l4024
  2845  0274                     l436:	
  2846                           ;doprnt.c: 688: case 'f':
  2847                           
  2848                           
  2849                           ;doprnt.c: 689: flag |= 0x400;
  2850  0274  1536               	bsf	(sprintf@flag^(0+128)+1),2
  2851                           
  2852                           ;doprnt.c: 690: break;
  2853  0275  2A8B               	goto	l4026
  2854  0276                     l4024:
  2855  0276  0021               	movlb	1	; select bank1
  2856  0277  0821               	movf	(sprintf@f+1)^(0+128),w
  2857  0278  00A7               	movwf	(??_sprintf^(0+128)+1)
  2858  0279  0820               	movf	sprintf@f^(0+128),w
  2859  027A  00A6               	movwf	??_sprintf^(0+128)
  2860  027B  0AA0               	incf	sprintf@f^(0+128),f
  2861  027C  1903               	skipnz
  2862  027D  0AA1               	incf	(sprintf@f+1)^(0+128),f
  2863  027E  0826               	movf	??_sprintf^(0+128),w
  2864  027F  0084               	movwf	4
  2865  0280  0827               	movf	(??_sprintf+1)^(0+128),w
  2866  0281  0085               	movwf	5
  2867  0282  0800               	movf	0,w	;code access
  2868  0283  00C6               	movwf	sprintf@c^(0+128)
  2869                           
  2870                           ; Switch size 1, requested type "simple"
  2871                           ; Number of cases is 2, Range of values is 0 to 102
  2872                           ; switch strategies available:
  2873                           ; Name         Instructions Cycles
  2874                           ; simple_byte            7     4 (average)
  2875                           ; direct_byte          212     6 (fixed)
  2876                           ; jumptable            260     6 (fixed)
  2877                           ;	Chosen strategy is simple_byte
  2878  0284  3A00               	xorlw	0	; case 0
  2879  0285  1903               	skipnz
  2880  0286  2FDD               	goto	l4234
  2881  0287  3A66               	xorlw	102	; case 102
  2882  0288  1903               	skipnz
  2883  0289  2A74               	goto	l436
  2884  028A  2FC9               	goto	l4232
  2885  028B                     l4026:
  2886                           
  2887                           ;doprnt.c: 851: if(flag & (0x700)) {
  2888  028B  3000               	movlw	0
  2889  028C  0535               	andwf	sprintf@flag^(0+128),w
  2890  028D  00A6               	movwf	??_sprintf^(0+128)
  2891  028E  3007               	movlw	7
  2892  028F  0536               	andwf	(sprintf@flag+1)^(0+128),w
  2893  0290  00A7               	movwf	(??_sprintf+1)^(0+128)
  2894  0291  0826               	movf	??_sprintf^(0+128),w
  2895  0292  0427               	iorwf	(??_sprintf^(0+128)+1),w
  2896  0293  1903               	btfsc	3,2
  2897  0294  2A96               	goto	u5391
  2898  0295  2A97               	goto	u5390
  2899  0296                     u5391:
  2900  0296  2F18               	goto	l4186
  2901  0297                     u5390:
  2902  0297                     l4028:
  2903                           
  2904                           ;doprnt.c: 853: if(flag & 0x1000)
  2905  0297  1E36               	btfss	(sprintf@flag+1)^(0+128),4
  2906  0298  2A9A               	goto	u5401
  2907  0299  2A9B               	goto	u5400
  2908  029A                     u5401:
  2909  029A  2A9F               	goto	l4032
  2910  029B                     u5400:
  2911  029B                     l4030:
  2912                           
  2913                           ;doprnt.c: 855: prec = 6;
  2914  029B  3006               	movlw	6
  2915  029C  00C4               	movwf	sprintf@prec^(0+128)
  2916  029D  3000               	movlw	0
  2917  029E  00C5               	movwf	(sprintf@prec^(0+128)+1)
  2918  029F                     l4032:
  2919                           
  2920                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2921  029F  0830               	movf	sprintf@ap^(0+128),w
  2922  02A0  0086               	movwf	6
  2923  02A1  0187               	clrf	7
  2924  02A2  3F40               	moviw [0]fsr1
  2925  02A3  00BF               	movwf	sprintf@fval^(0+128)
  2926  02A4  3F41               	moviw [1]fsr1
  2927  02A5  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2928  02A6  3F42               	moviw [2]fsr1
  2929  02A7  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2930  02A8  3F43               	moviw [3]fsr1
  2931  02A9  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2932  02AA                     l4034:
  2933  02AA  3004               	movlw	4
  2934  02AB  00A6               	movwf	??_sprintf^(0+128)
  2935  02AC  0826               	movf	??_sprintf^(0+128),w
  2936  02AD  07B0               	addwf	sprintf@ap^(0+128),f
  2937  02AE                     l4036:
  2938                           
  2939                           ;doprnt.c: 857: if(fval < 0.0) {
  2940  02AE  0842               	movf	(sprintf@fval+3)^(0+128),w
  2941  02AF  00F3               	movwf	___flge@ff1+3
  2942  02B0  0841               	movf	(sprintf@fval+2)^(0+128),w
  2943  02B1  00F2               	movwf	___flge@ff1+2
  2944  02B2  0840               	movf	(sprintf@fval+1)^(0+128),w
  2945  02B3  00F1               	movwf	___flge@ff1+1
  2946  02B4  083F               	movf	sprintf@fval^(0+128),w
  2947  02B5  00F0               	movwf	___flge@ff1
  2948  02B6  3000               	movlw	0
  2949  02B7  00F7               	movwf	___flge@ff2+3
  2950  02B8  3000               	movlw	0
  2951  02B9  00F6               	movwf	___flge@ff2+2
  2952  02BA  3000               	movlw	0
  2953  02BB  00F5               	movwf	___flge@ff2+1
  2954  02BC  3000               	movlw	0
  2955  02BD  00F4               	movwf	___flge@ff2
  2956  02BE  3191  21E0  3181   	fcall	___flge
  2957  02C1  1803               	btfsc	3,0
  2958  02C2  2AC4               	goto	u5411
  2959  02C3  2AC5               	goto	u5410
  2960  02C4                     u5411:
  2961  02C4  2ADE               	goto	l4042
  2962  02C5                     u5410:
  2963  02C5                     l4038:
  2964                           
  2965                           ;doprnt.c: 858: fval = -fval;
  2966  02C5  0021               	movlb	1	; select bank1
  2967  02C6  0842               	movf	(sprintf@fval+3)^(0+128),w
  2968  02C7  00F3               	movwf	___flneg@f1+3
  2969  02C8  0841               	movf	(sprintf@fval+2)^(0+128),w
  2970  02C9  00F2               	movwf	___flneg@f1+2
  2971  02CA  0840               	movf	(sprintf@fval+1)^(0+128),w
  2972  02CB  00F1               	movwf	___flneg@f1+1
  2973  02CC  083F               	movf	sprintf@fval^(0+128),w
  2974  02CD  00F0               	movwf	___flneg@f1
  2975  02CE  319D  25A6  3181   	fcall	___flneg
  2976  02D1  0873               	movf	?___flneg+3,w
  2977  02D2  0021               	movlb	1	; select bank1
  2978  02D3  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2979  02D4  0872               	movf	?___flneg+2,w
  2980  02D5  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2981  02D6  0871               	movf	?___flneg+1,w
  2982  02D7  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2983  02D8  0870               	movf	?___flneg,w
  2984  02D9  00BF               	movwf	sprintf@fval^(0+128)
  2985  02DA                     l4040:
  2986                           
  2987                           ;doprnt.c: 859: flag |= 0x03;
  2988  02DA  3003               	movlw	3
  2989  02DB  04B5               	iorwf	sprintf@flag^(0+128),f
  2990  02DC  3000               	movlw	0
  2991  02DD  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  2992  02DE                     l4042:
  2993                           
  2994                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  2995  02DE  0021               	movlb	1	; select bank1
  2996  02DF  01BD               	clrf	sprintf@eexp^(0+128)
  2997  02E0  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2998  02E1                     l4044:
  2999                           
  3000                           ;doprnt.c: 862: if( fval!=0) {
  3001  02E1  0842               	movf	(sprintf@fval+3)^(0+128),w
  3002  02E2  00F3               	movwf	___fleq@ff1+3
  3003  02E3  0841               	movf	(sprintf@fval+2)^(0+128),w
  3004  02E4  00F2               	movwf	___fleq@ff1+2
  3005  02E5  0840               	movf	(sprintf@fval+1)^(0+128),w
  3006  02E6  00F1               	movwf	___fleq@ff1+1
  3007  02E7  083F               	movf	sprintf@fval^(0+128),w
  3008  02E8  00F0               	movwf	___fleq@ff1
  3009  02E9  3000               	movlw	0
  3010  02EA  00F7               	movwf	___fleq@ff2+3
  3011  02EB  3000               	movlw	0
  3012  02EC  00F6               	movwf	___fleq@ff2+2
  3013  02ED  3000               	movlw	0
  3014  02EE  00F5               	movwf	___fleq@ff2+1
  3015  02EF  3000               	movlw	0
  3016  02F0  00F4               	movwf	___fleq@ff2
  3017  02F1  3190  2010  3181   	fcall	___fleq
  3018  02F4  1803               	btfsc	3,0
  3019  02F5  2AF7               	goto	u5421
  3020  02F6  2AF8               	goto	u5420
  3021  02F7                     u5421:
  3022  02F7  2BAF               	goto	l442
  3023  02F8                     u5420:
  3024  02F8                     l4046:
  3025                           
  3026                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  3027  02F8  1003               	clrc
  3028  02F9  0021               	movlb	1	; select bank1
  3029  02FA  0D41               	rlf	(sprintf@fval+2)^(0+128),w
  3030  02FB  0D42               	rlf	(sprintf@fval+3)^(0+128),w
  3031  02FC  3E82               	addlw	130
  3032  02FD  00BD               	movwf	sprintf@eexp^(0+128)
  3033  02FE  30FF               	movlw	255
  3034  02FF  1803               	skipnc
  3035  0300  3000               	movlw	0
  3036  0301  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  3037  0302                     l4048:
  3038                           
  3039                           ;doprnt.c: 864: eexp--;
  3040  0302  30FF               	movlw	255
  3041  0303  07BD               	addwf	sprintf@eexp^(0+128),f
  3042  0304  30FF               	movlw	255
  3043  0305  3DBE               	addwfc	(sprintf@eexp+1)^(0+128),f
  3044  0306                     l4050:
  3045                           
  3046                           ;doprnt.c: 865: eexp *= 3;
  3047  0306  3003               	movlw	3
  3048  0307  00F0               	movwf	___wmul@multiplier
  3049  0308  3000               	movlw	0
  3050  0309  00F1               	movwf	___wmul@multiplier+1
  3051  030A  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3052  030B  00F3               	movwf	___wmul@multiplicand+1
  3053  030C  083D               	movf	sprintf@eexp^(0+128),w
  3054  030D  00F2               	movwf	___wmul@multiplicand
  3055  030E  319E  260C  3181   	fcall	___wmul
  3056  0311  0871               	movf	?___wmul+1,w
  3057  0312  0021               	movlb	1	; select bank1
  3058  0313  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  3059  0314  0870               	movf	?___wmul,w
  3060  0315  00BD               	movwf	sprintf@eexp^(0+128)
  3061  0316                     l4052:
  3062                           
  3063                           ;doprnt.c: 866: eexp /= 10;
  3064  0316  300A               	movlw	10
  3065  0317  00F7               	movwf	___awdiv@divisor
  3066  0318  3000               	movlw	0
  3067  0319  00F8               	movwf	___awdiv@divisor+1
  3068  031A  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3069  031B  00FA               	movwf	___awdiv@dividend+1
  3070  031C  083D               	movf	sprintf@eexp^(0+128),w
  3071  031D  00F9               	movwf	___awdiv@dividend
  3072  031E  3191  210B  3181   	fcall	___awdiv
  3073  0321  0878               	movf	?___awdiv+1,w
  3074  0322  0021               	movlb	1	; select bank1
  3075  0323  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  3076  0324  0877               	movf	?___awdiv,w
  3077  0325  00BD               	movwf	sprintf@eexp^(0+128)
  3078  0326                     l4054:
  3079                           
  3080                           ;doprnt.c: 867: if(eexp < 0)
  3081  0326  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  3082  0327  2B29               	goto	u5431
  3083  0328  2B2A               	goto	u5430
  3084  0329                     u5431:
  3085  0329  2B2E               	goto	l4058
  3086  032A                     u5430:
  3087  032A                     l4056:
  3088                           
  3089                           ;doprnt.c: 868: eexp--;
  3090  032A  30FF               	movlw	255
  3091  032B  07BD               	addwf	sprintf@eexp^(0+128),f
  3092  032C  30FF               	movlw	255
  3093  032D  3DBE               	addwfc	(sprintf@eexp+1)^(0+128),f
  3094  032E                     l4058:
  3095                           
  3096                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  3097  032E  033D               	decf	sprintf@eexp^(0+128),w
  3098  032F  3AFF               	xorlw	255
  3099  0330  318D  2584  3181   	fcall	_scale
  3100  0333  0020               	movlb	0	; select bank0
  3101  0334  0841               	movf	?_scale+3,w
  3102  0335  0021               	movlb	1	; select bank1
  3103  0336  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3104  0337  0020               	movlb	0	; select bank0
  3105  0338  0840               	movf	?_scale+2,w
  3106  0339  0021               	movlb	1	; select bank1
  3107  033A  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3108  033B  0020               	movlb	0	; select bank0
  3109  033C  083F               	movf	?_scale+1,w
  3110  033D  0021               	movlb	1	; select bank1
  3111  033E  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3112  033F  0020               	movlb	0	; select bank0
  3113  0340  083E               	movf	?_scale,w
  3114  0341  0021               	movlb	1	; select bank1
  3115  0342  00B9               	movwf	sprintf@tmpval^(0+128)
  3116  0343                     l4060:
  3117                           
  3118                           ;doprnt.c: 873: tmpval.integ *= fval;
  3119  0343  0842               	movf	(sprintf@fval+3)^(0+128),w
  3120  0344  0020               	movlb	0	; select bank0
  3121  0345  00A7               	movwf	___flmul@b+3
  3122  0346  0021               	movlb	1	; select bank1
  3123  0347  0841               	movf	(sprintf@fval+2)^(0+128),w
  3124  0348  0020               	movlb	0	; select bank0
  3125  0349  00A6               	movwf	___flmul@b+2
  3126  034A  0021               	movlb	1	; select bank1
  3127  034B  0840               	movf	(sprintf@fval+1)^(0+128),w
  3128  034C  0020               	movlb	0	; select bank0
  3129  034D  00A5               	movwf	___flmul@b+1
  3130  034E  0021               	movlb	1	; select bank1
  3131  034F  083F               	movf	sprintf@fval^(0+128),w
  3132  0350  0020               	movlb	0	; select bank0
  3133  0351  00A4               	movwf	___flmul@b
  3134  0352  0021               	movlb	1	; select bank1
  3135  0353  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3136  0354  0020               	movlb	0	; select bank0
  3137  0355  00AB               	movwf	___flmul@a+3
  3138  0356  0021               	movlb	1	; select bank1
  3139  0357  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3140  0358  0020               	movlb	0	; select bank0
  3141  0359  00AA               	movwf	___flmul@a+2
  3142  035A  0021               	movlb	1	; select bank1
  3143  035B  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3144  035C  0020               	movlb	0	; select bank0
  3145  035D  00A9               	movwf	___flmul@a+1
  3146  035E  0021               	movlb	1	; select bank1
  3147  035F  0839               	movf	sprintf@tmpval^(0+128),w
  3148  0360  0020               	movlb	0	; select bank0
  3149  0361  00A8               	movwf	___flmul@a
  3150  0362  318B  232D  3181   	fcall	___flmul
  3151  0365  0020               	movlb	0	; select bank0
  3152  0366  0827               	movf	?___flmul+3,w
  3153  0367  0021               	movlb	1	; select bank1
  3154  0368  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3155  0369  0020               	movlb	0	; select bank0
  3156  036A  0826               	movf	?___flmul+2,w
  3157  036B  0021               	movlb	1	; select bank1
  3158  036C  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3159  036D  0020               	movlb	0	; select bank0
  3160  036E  0825               	movf	?___flmul+1,w
  3161  036F  0021               	movlb	1	; select bank1
  3162  0370  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3163  0371  0020               	movlb	0	; select bank0
  3164  0372  0824               	movf	?___flmul,w
  3165  0373  0021               	movlb	1	; select bank1
  3166  0374  00B9               	movwf	sprintf@tmpval^(0+128)
  3167  0375                     l4062:
  3168                           
  3169                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  3170  0375  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3171  0376  00F3               	movwf	___flge@ff1+3
  3172  0377  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3173  0378  00F2               	movwf	___flge@ff1+2
  3174  0379  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3175  037A  00F1               	movwf	___flge@ff1+1
  3176  037B  0839               	movf	sprintf@tmpval^(0+128),w
  3177  037C  00F0               	movwf	___flge@ff1
  3178  037D  303F               	movlw	63
  3179  037E  00F7               	movwf	___flge@ff2+3
  3180  037F  3080               	movlw	128
  3181  0380  00F6               	movwf	___flge@ff2+2
  3182  0381  3000               	movlw	0
  3183  0382  00F5               	movwf	___flge@ff2+1
  3184  0383  3000               	movlw	0
  3185  0384  00F4               	movwf	___flge@ff2
  3186  0385  3191  21E0  3181   	fcall	___flge
  3187  0388  1803               	btfsc	3,0
  3188  0389  2B8B               	goto	u5441
  3189  038A  2B8C               	goto	u5440
  3190  038B                     u5441:
  3191  038B  2B92               	goto	l4066
  3192  038C                     u5440:
  3193  038C                     l4064:
  3194                           
  3195                           ;doprnt.c: 875: eexp--;
  3196  038C  30FF               	movlw	255
  3197  038D  0021               	movlb	1	; select bank1
  3198  038E  07BD               	addwf	sprintf@eexp^(0+128),f
  3199  038F  30FF               	movlw	255
  3200  0390  3DBE               	addwfc	(sprintf@eexp+1)^(0+128),f
  3201  0391  2BAF               	goto	l442
  3202  0392                     l4066:
  3203                           
  3204                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  3205  0392  0021               	movlb	1	; select bank1
  3206  0393  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3207  0394  00F3               	movwf	___flge@ff1+3
  3208  0395  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3209  0396  00F2               	movwf	___flge@ff1+2
  3210  0397  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3211  0398  00F1               	movwf	___flge@ff1+1
  3212  0399  0839               	movf	sprintf@tmpval^(0+128),w
  3213  039A  00F0               	movwf	___flge@ff1
  3214  039B  3041               	movlw	65
  3215  039C  00F7               	movwf	___flge@ff2+3
  3216  039D  3020               	movlw	32
  3217  039E  00F6               	movwf	___flge@ff2+2
  3218  039F  3000               	movlw	0
  3219  03A0  00F5               	movwf	___flge@ff2+1
  3220  03A1  3000               	movlw	0
  3221  03A2  00F4               	movwf	___flge@ff2
  3222  03A3  3191  21E0  3181   	fcall	___flge
  3223  03A6  1C03               	btfss	3,0
  3224  03A7  2BA9               	goto	u5451
  3225  03A8  2BAA               	goto	u5450
  3226  03A9                     u5451:
  3227  03A9  2BAF               	goto	l442
  3228  03AA                     u5450:
  3229  03AA                     l4068:
  3230                           
  3231                           ;doprnt.c: 877: eexp++;
  3232  03AA  3001               	movlw	1
  3233  03AB  0021               	movlb	1	; select bank1
  3234  03AC  07BD               	addwf	sprintf@eexp^(0+128),f
  3235  03AD  3000               	movlw	0
  3236  03AE  3DBE               	addwfc	(sprintf@eexp+1)^(0+128),f
  3237  03AF                     l442:
  3238                           
  3239                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  3240  03AF  0021               	movlb	1	; select bank1
  3241  03B0  0845               	movf	(sprintf@prec+1)^(0+128),w
  3242  03B1  3A80               	xorlw	128
  3243  03B2  00A6               	movwf	??_sprintf^(0+128)
  3244  03B3  3080               	movlw	128
  3245  03B4  0226               	subwf	??_sprintf^(0+128),w
  3246  03B5  1D03               	skipz
  3247  03B6  2BB9               	goto	u5465
  3248  03B7  300D               	movlw	13
  3249  03B8  0244               	subwf	sprintf@prec^(0+128),w
  3250  03B9                     u5465:
  3251  03B9  1803               	skipnc
  3252  03BA  2BBC               	goto	u5461
  3253  03BB  2BBD               	goto	u5460
  3254  03BC                     u5461:
  3255  03BC  2BEE               	goto	l4072
  3256  03BD                     u5460:
  3257  03BD                     l4070:
  3258                           
  3259                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  3260  03BD  0021               	movlb	1	; select bank1
  3261  03BE  0844               	movf	sprintf@prec^(0+128),w
  3262  03BF  3196  2678  3181   	fcall	_fround
  3263  03C2  0020               	movlb	0	; select bank0
  3264  03C3  0841               	movf	?_fround+3,w
  3265  03C4  00D4               	movwf	___fladd@b+3
  3266  03C5  0840               	movf	?_fround+2,w
  3267  03C6  00D3               	movwf	___fladd@b+2
  3268  03C7  083F               	movf	?_fround+1,w
  3269  03C8  00D2               	movwf	___fladd@b+1
  3270  03C9  083E               	movf	?_fround,w
  3271  03CA  00D1               	movwf	___fladd@b
  3272  03CB  0021               	movlb	1	; select bank1
  3273  03CC  0842               	movf	(sprintf@fval+3)^(0+128),w
  3274  03CD  0020               	movlb	0	; select bank0
  3275  03CE  00D8               	movwf	___fladd@a+3
  3276  03CF  0021               	movlb	1	; select bank1
  3277  03D0  0841               	movf	(sprintf@fval+2)^(0+128),w
  3278  03D1  0020               	movlb	0	; select bank0
  3279  03D2  00D7               	movwf	___fladd@a+2
  3280  03D3  0021               	movlb	1	; select bank1
  3281  03D4  0840               	movf	(sprintf@fval+1)^(0+128),w
  3282  03D5  0020               	movlb	0	; select bank0
  3283  03D6  00D6               	movwf	___fladd@a+1
  3284  03D7  0021               	movlb	1	; select bank1
  3285  03D8  083F               	movf	sprintf@fval^(0+128),w
  3286  03D9  0020               	movlb	0	; select bank0
  3287  03DA  00D5               	movwf	___fladd@a
  3288  03DB  3188  20F5  3181   	fcall	___fladd
  3289  03DE  0020               	movlb	0	; select bank0
  3290  03DF  0854               	movf	?___fladd+3,w
  3291  03E0  0021               	movlb	1	; select bank1
  3292  03E1  00C2               	movwf	(sprintf@fval+3)^(0+128)
  3293  03E2  0020               	movlb	0	; select bank0
  3294  03E3  0853               	movf	?___fladd+2,w
  3295  03E4  0021               	movlb	1	; select bank1
  3296  03E5  00C1               	movwf	(sprintf@fval+2)^(0+128)
  3297  03E6  0020               	movlb	0	; select bank0
  3298  03E7  0852               	movf	?___fladd+1,w
  3299  03E8  0021               	movlb	1	; select bank1
  3300  03E9  00C0               	movwf	(sprintf@fval+1)^(0+128)
  3301  03EA  0020               	movlb	0	; select bank0
  3302  03EB  0851               	movf	?___fladd,w
  3303  03EC  0021               	movlb	1	; select bank1
  3304  03ED  00BF               	movwf	sprintf@fval^(0+128)
  3305  03EE                     l4072:
  3306                           
  3307                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3308  03EE  0021               	movlb	1	; select bank1
  3309  03EF  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3310  03F0  3A80               	xorlw	128
  3311  03F1  00A6               	movwf	??_sprintf^(0+128)
  3312  03F2  3080               	movlw	128
  3313  03F3  0226               	subwf	??_sprintf^(0+128),w
  3314  03F4  1D03               	skipz
  3315  03F5  2BF8               	goto	u5475
  3316  03F6  300A               	movlw	10
  3317  03F7  023D               	subwf	sprintf@eexp^(0+128),w
  3318  03F8                     u5475:
  3319  03F8  1803               	skipnc
  3320  03F9  2BFB               	goto	u5471
  3321  03FA  2BFC               	goto	u5470
  3322  03FB                     u5471:
  3323  03FB  2C3E               	goto	l4080
  3324  03FC                     u5470:
  3325  03FC                     l4074:
  3326  03FC  0021               	movlb	1	; select bank1
  3327  03FD  0842               	movf	(sprintf@fval+3)^(0+128),w
  3328  03FE  00F3               	movwf	___fleq@ff1+3
  3329  03FF  0841               	movf	(sprintf@fval+2)^(0+128),w
  3330  0400  00F2               	movwf	___fleq@ff1+2
  3331  0401  0840               	movf	(sprintf@fval+1)^(0+128),w
  3332  0402  00F1               	movwf	___fleq@ff1+1
  3333  0403  083F               	movf	sprintf@fval^(0+128),w
  3334  0404  00F0               	movwf	___fleq@ff1
  3335  0405  3000               	movlw	0
  3336  0406  00F7               	movwf	___fleq@ff2+3
  3337  0407  3000               	movlw	0
  3338  0408  00F6               	movwf	___fleq@ff2+2
  3339  0409  3000               	movlw	0
  3340  040A  00F5               	movwf	___fleq@ff2+1
  3341  040B  3000               	movlw	0
  3342  040C  00F4               	movwf	___fleq@ff2
  3343  040D  3190  2010  3181   	fcall	___fleq
  3344  0410  1803               	btfsc	3,0
  3345  0411  2C13               	goto	u5481
  3346  0412  2C14               	goto	u5480
  3347  0413                     u5481:
  3348  0413  2C9A               	goto	l4094
  3349  0414                     u5480:
  3350  0414                     l4076:
  3351  0414  0021               	movlb	1	; select bank1
  3352  0415  0842               	movf	(sprintf@fval+3)^(0+128),w
  3353  0416  0020               	movlb	0	; select bank0
  3354  0417  00D6               	movwf	___fltol@f1+3
  3355  0418  0021               	movlb	1	; select bank1
  3356  0419  0841               	movf	(sprintf@fval+2)^(0+128),w
  3357  041A  0020               	movlb	0	; select bank0
  3358  041B  00D5               	movwf	___fltol@f1+2
  3359  041C  0021               	movlb	1	; select bank1
  3360  041D  0840               	movf	(sprintf@fval+1)^(0+128),w
  3361  041E  0020               	movlb	0	; select bank0
  3362  041F  00D4               	movwf	___fltol@f1+1
  3363  0420  0021               	movlb	1	; select bank1
  3364  0421  083F               	movf	sprintf@fval^(0+128),w
  3365  0422  0020               	movlb	0	; select bank0
  3366  0423  00D3               	movwf	___fltol@f1
  3367  0424  3191  216B  3181   	fcall	___fltol
  3368  0427  0020               	movlb	0	; select bank0
  3369  0428  0856               	movf	?___fltol+3,w
  3370  0429  0455               	iorwf	?___fltol+2,w
  3371  042A  0454               	iorwf	?___fltol+1,w
  3372  042B  0453               	iorwf	?___fltol,w
  3373  042C  1D03               	skipz
  3374  042D  2C2F               	goto	u5491
  3375  042E  2C30               	goto	u5490
  3376  042F                     u5491:
  3377  042F  2C9A               	goto	l4094
  3378  0430                     u5490:
  3379  0430                     l4078:
  3380  0430  0021               	movlb	1	; select bank1
  3381  0431  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3382  0432  3A80               	xorlw	128
  3383  0433  00A6               	movwf	??_sprintf^(0+128)
  3384  0434  3080               	movlw	128
  3385  0435  0226               	subwf	??_sprintf^(0+128),w
  3386  0436  1D03               	skipz
  3387  0437  2C3A               	goto	u5505
  3388  0438  3002               	movlw	2
  3389  0439  023D               	subwf	sprintf@eexp^(0+128),w
  3390  043A                     u5505:
  3391  043A  1C03               	skipc
  3392  043B  2C3D               	goto	u5501
  3393  043C  2C3E               	goto	u5500
  3394  043D                     u5501:
  3395  043D  2C9A               	goto	l4094
  3396  043E                     u5500:
  3397  043E                     l4080:
  3398                           
  3399                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  3400  043E  0021               	movlb	1	; select bank1
  3401  043F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3402  0440  00F3               	movwf	___flge@ff1+3
  3403  0441  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3404  0442  00F2               	movwf	___flge@ff1+2
  3405  0443  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3406  0444  00F1               	movwf	___flge@ff1+1
  3407  0445  0839               	movf	sprintf@tmpval^(0+128),w
  3408  0446  00F0               	movwf	___flge@ff1
  3409  0447  3040               	movlw	64
  3410  0448  00F7               	movwf	___flge@ff2+3
  3411  0449  3089               	movlw	137
  3412  044A  00F6               	movwf	___flge@ff2+2
  3413  044B  3070               	movlw	112
  3414  044C  00F5               	movwf	___flge@ff2+1
  3415  044D  305F               	movlw	95
  3416  044E  00F4               	movwf	___flge@ff2
  3417  044F  3191  21E0  3181   	fcall	___flge
  3418  0452  1803               	btfsc	3,0
  3419  0453  2C55               	goto	u5511
  3420  0454  2C56               	goto	u5510
  3421  0455                     u5511:
  3422  0455  2C5C               	goto	l4084
  3423  0456                     u5510:
  3424  0456                     l4082:
  3425                           
  3426                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3427  0456  30F7               	movlw	247
  3428  0457  0021               	movlb	1	; select bank1
  3429  0458  07BD               	addwf	sprintf@eexp^(0+128),f
  3430  0459  30FF               	movlw	255
  3431  045A  3DBE               	addwfc	(sprintf@eexp+1)^(0+128),f
  3432                           
  3433                           ;doprnt.c: 1148: }else{
  3434  045B  2C61               	goto	l4086
  3435  045C                     l4084:
  3436                           
  3437                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3438  045C  30F8               	movlw	248
  3439  045D  0021               	movlb	1	; select bank1
  3440  045E  07BD               	addwf	sprintf@eexp^(0+128),f
  3441  045F  30FF               	movlw	255
  3442  0460  3DBE               	addwfc	(sprintf@eexp+1)^(0+128),f
  3443  0461                     l4086:
  3444                           
  3445                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3446  0461  083D               	movf	sprintf@eexp^(0+128),w
  3447  0462  318D  2584  3181   	fcall	_scale
  3448  0465  0020               	movlb	0	; select bank0
  3449  0466  0841               	movf	?_scale+3,w
  3450  0467  0021               	movlb	1	; select bank1
  3451  0468  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3452  0469  0020               	movlb	0	; select bank0
  3453  046A  0840               	movf	?_scale+2,w
  3454  046B  0021               	movlb	1	; select bank1
  3455  046C  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3456  046D  0020               	movlb	0	; select bank0
  3457  046E  083F               	movf	?_scale+1,w
  3458  046F  0021               	movlb	1	; select bank1
  3459  0470  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3460  0471  0020               	movlb	0	; select bank0
  3461  0472  083E               	movf	?_scale,w
  3462  0473  0021               	movlb	1	; select bank1
  3463  0474  00B9               	movwf	sprintf@tmpval^(0+128)
  3464  0475                     l4088:
  3465  0475  0842               	movf	(sprintf@fval+3)^(0+128),w
  3466  0476  00F3               	movwf	__div_to_l_@f1+3
  3467  0477  0841               	movf	(sprintf@fval+2)^(0+128),w
  3468  0478  00F2               	movwf	__div_to_l_@f1+2
  3469  0479  0840               	movf	(sprintf@fval+1)^(0+128),w
  3470  047A  00F1               	movwf	__div_to_l_@f1+1
  3471  047B  083F               	movf	sprintf@fval^(0+128),w
  3472  047C  00F0               	movwf	__div_to_l_@f1
  3473  047D  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3474  047E  00F7               	movwf	__div_to_l_@f2+3
  3475  047F  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3476  0480  00F6               	movwf	__div_to_l_@f2+2
  3477  0481  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3478  0482  00F5               	movwf	__div_to_l_@f2+1
  3479  0483  0839               	movf	sprintf@tmpval^(0+128),w
  3480  0484  00F4               	movwf	__div_to_l_@f2
  3481  0485  3193  23A6  3181   	fcall	__div_to_l_
  3482  0488  0873               	movf	?__div_to_l_+3,w
  3483  0489  0021               	movlb	1	; select bank1
  3484  048A  00B4               	movwf	(sprintf@val+3)^(0+128)
  3485  048B  0872               	movf	?__div_to_l_+2,w
  3486  048C  00B3               	movwf	(sprintf@val+2)^(0+128)
  3487  048D  0871               	movf	?__div_to_l_+1,w
  3488  048E  00B2               	movwf	(sprintf@val+1)^(0+128)
  3489  048F  0870               	movf	?__div_to_l_,w
  3490  0490  00B1               	movwf	sprintf@val^(0+128)
  3491  0491                     l4092:
  3492                           
  3493                           ;doprnt.c: 1155: fval = 0.0;
  3494  0491  3000               	movlw	0
  3495  0492  00C2               	movwf	(sprintf@fval+3)^(0+128)
  3496  0493  3000               	movlw	0
  3497  0494  00C1               	movwf	(sprintf@fval+2)^(0+128)
  3498  0495  3000               	movlw	0
  3499  0496  00C0               	movwf	(sprintf@fval+1)^(0+128)
  3500  0497  3000               	movlw	0
  3501  0498  00BF               	movwf	sprintf@fval^(0+128)
  3502                           
  3503                           ;doprnt.c: 1156: } else {
  3504  0499  2CF7               	goto	l4098
  3505  049A                     l4094:
  3506                           
  3507                           ;doprnt.c: 1157: val = (unsigned long)fval;
  3508  049A  0021               	movlb	1	; select bank1
  3509  049B  0842               	movf	(sprintf@fval+3)^(0+128),w
  3510  049C  0020               	movlb	0	; select bank0
  3511  049D  00D6               	movwf	___fltol@f1+3
  3512  049E  0021               	movlb	1	; select bank1
  3513  049F  0841               	movf	(sprintf@fval+2)^(0+128),w
  3514  04A0  0020               	movlb	0	; select bank0
  3515  04A1  00D5               	movwf	___fltol@f1+2
  3516  04A2  0021               	movlb	1	; select bank1
  3517  04A3  0840               	movf	(sprintf@fval+1)^(0+128),w
  3518  04A4  0020               	movlb	0	; select bank0
  3519  04A5  00D4               	movwf	___fltol@f1+1
  3520  04A6  0021               	movlb	1	; select bank1
  3521  04A7  083F               	movf	sprintf@fval^(0+128),w
  3522  04A8  0020               	movlb	0	; select bank0
  3523  04A9  00D3               	movwf	___fltol@f1
  3524  04AA  3191  216B  3181   	fcall	___fltol
  3525  04AD  0020               	movlb	0	; select bank0
  3526  04AE  0856               	movf	?___fltol+3,w
  3527  04AF  0021               	movlb	1	; select bank1
  3528  04B0  00B4               	movwf	(sprintf@val+3)^(0+128)
  3529  04B1  0020               	movlb	0	; select bank0
  3530  04B2  0855               	movf	?___fltol+2,w
  3531  04B3  0021               	movlb	1	; select bank1
  3532  04B4  00B3               	movwf	(sprintf@val+2)^(0+128)
  3533  04B5  0020               	movlb	0	; select bank0
  3534  04B6  0854               	movf	?___fltol+1,w
  3535  04B7  0021               	movlb	1	; select bank1
  3536  04B8  00B2               	movwf	(sprintf@val+1)^(0+128)
  3537  04B9  0020               	movlb	0	; select bank0
  3538  04BA  0853               	movf	?___fltol,w
  3539  04BB  0021               	movlb	1	; select bank1
  3540  04BC  00B1               	movwf	sprintf@val^(0+128)
  3541                           
  3542                           ;doprnt.c: 1158: fval -= (double)val;
  3543  04BD  0834               	movf	(sprintf@val+3)^(0+128),w
  3544  04BE  00F3               	movwf	___xxtofl@val+3
  3545  04BF  0833               	movf	(sprintf@val+2)^(0+128),w
  3546  04C0  00F2               	movwf	___xxtofl@val+2
  3547  04C1  0832               	movf	(sprintf@val+1)^(0+128),w
  3548  04C2  00F1               	movwf	___xxtofl@val+1
  3549  04C3  0831               	movf	sprintf@val^(0+128),w
  3550  04C4  00F0               	movwf	___xxtofl@val
  3551  04C5  3000               	movlw	0
  3552  04C6  3192  22FA  3181   	fcall	___xxtofl
  3553  04C9  0873               	movf	?___xxtofl+3,w
  3554  04CA  0020               	movlb	0	; select bank0
  3555  04CB  00E8               	movwf	___flsub@a+3
  3556  04CC  0872               	movf	?___xxtofl+2,w
  3557  04CD  00E7               	movwf	___flsub@a+2
  3558  04CE  0871               	movf	?___xxtofl+1,w
  3559  04CF  00E6               	movwf	___flsub@a+1
  3560  04D0  0870               	movf	?___xxtofl,w
  3561  04D1  00E5               	movwf	___flsub@a
  3562  04D2  0021               	movlb	1	; select bank1
  3563  04D3  0842               	movf	(sprintf@fval+3)^(0+128),w
  3564  04D4  0020               	movlb	0	; select bank0
  3565  04D5  00EC               	movwf	___flsub@b+3
  3566  04D6  0021               	movlb	1	; select bank1
  3567  04D7  0841               	movf	(sprintf@fval+2)^(0+128),w
  3568  04D8  0020               	movlb	0	; select bank0
  3569  04D9  00EB               	movwf	___flsub@b+2
  3570  04DA  0021               	movlb	1	; select bank1
  3571  04DB  0840               	movf	(sprintf@fval+1)^(0+128),w
  3572  04DC  0020               	movlb	0	; select bank0
  3573  04DD  00EA               	movwf	___flsub@b+1
  3574  04DE  0021               	movlb	1	; select bank1
  3575  04DF  083F               	movf	sprintf@fval^(0+128),w
  3576  04E0  0020               	movlb	0	; select bank0
  3577  04E1  00E9               	movwf	___flsub@b
  3578  04E2  319E  262B  3181   	fcall	___flsub
  3579  04E5  0020               	movlb	0	; select bank0
  3580  04E6  0868               	movf	?___flsub+3,w
  3581  04E7  0021               	movlb	1	; select bank1
  3582  04E8  00C2               	movwf	(sprintf@fval+3)^(0+128)
  3583  04E9  0020               	movlb	0	; select bank0
  3584  04EA  0867               	movf	?___flsub+2,w
  3585  04EB  0021               	movlb	1	; select bank1
  3586  04EC  00C1               	movwf	(sprintf@fval+2)^(0+128)
  3587  04ED  0020               	movlb	0	; select bank0
  3588  04EE  0866               	movf	?___flsub+1,w
  3589  04EF  0021               	movlb	1	; select bank1
  3590  04F0  00C0               	movwf	(sprintf@fval+1)^(0+128)
  3591  04F1  0020               	movlb	0	; select bank0
  3592  04F2  0865               	movf	?___flsub,w
  3593  04F3  0021               	movlb	1	; select bank1
  3594  04F4  00BF               	movwf	sprintf@fval^(0+128)
  3595  04F5                     l4096:
  3596                           
  3597                           ;doprnt.c: 1159: eexp = 0;
  3598  04F5  01BD               	clrf	sprintf@eexp^(0+128)
  3599  04F6  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  3600  04F7                     l4098:
  3601                           
  3602                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  3603  04F7  01C6               	clrf	sprintf@c^(0+128)
  3604  04F8  0AC6               	incf	sprintf@c^(0+128),f
  3605  04F9                     l4104:
  3606                           
  3607                           ;doprnt.c: 1163: if(val < dpowers[c])
  3608  04F9  0846               	movf	sprintf@c^(0+128),w
  3609  04FA  00A6               	movwf	??_sprintf^(0+128)
  3610  04FB  01A7               	clrf	(??_sprintf^(0+128)+1)
  3611  04FC  35A6               	lslf	??_sprintf^(0+128),f
  3612  04FD  0DA7               	rlf	(??_sprintf^(0+128)+1),f
  3613  04FE  35A6               	lslf	??_sprintf^(0+128),f
  3614  04FF  0DA7               	rlf	(??_sprintf^(0+128)+1),f
  3615  0500  3068               	movlw	low (_dpowers| (0+32768))
  3616  0501  0726               	addwf	??_sprintf^(0+128),w
  3617  0502  0084               	movwf	4
  3618  0503  30A0               	movlw	high (_dpowers| (0+32768))
  3619  0504  3D27               	addwfc	(??_sprintf+1)^(0+128),w
  3620  0505  0085               	movwf	5
  3621  0506  3F00               	moviw [0]fsr0
  3622  0507  00A8               	movwf	(??_sprintf+2)^(0+128)
  3623  0508  3F01               	moviw [1]fsr0
  3624  0509  00A9               	movwf	((??_sprintf+2)^(0+128)+1)
  3625  050A  3F02               	moviw [2]fsr0
  3626  050B  00AA               	movwf	((??_sprintf+2)^(0+128)+2)
  3627  050C  3F03               	moviw [3]fsr0
  3628  050D  00AB               	movwf	((??_sprintf+2)^(0+128)+3)
  3629  050E  082B               	movf	(??_sprintf+5)^(0+128),w
  3630  050F  0234               	subwf	(sprintf@val+3)^(0+128),w
  3631  0510  1D03               	skipz
  3632  0511  2D1C               	goto	u5525
  3633  0512  082A               	movf	(??_sprintf+4)^(0+128),w
  3634  0513  0233               	subwf	(sprintf@val+2)^(0+128),w
  3635  0514  1D03               	skipz
  3636  0515  2D1C               	goto	u5525
  3637  0516  0829               	movf	(??_sprintf+3)^(0+128),w
  3638  0517  0232               	subwf	(sprintf@val+1)^(0+128),w
  3639  0518  1D03               	skipz
  3640  0519  2D1C               	goto	u5525
  3641  051A  0828               	movf	(??_sprintf+2)^(0+128),w
  3642  051B  0231               	subwf	sprintf@val^(0+128),w
  3643  051C                     u5525:
  3644  051C  1803               	skipnc
  3645  051D  2D1F               	goto	u5521
  3646  051E  2D20               	goto	u5520
  3647  051F                     u5521:
  3648  051F  2D21               	goto	l4108
  3649  0520                     u5520:
  3650  0520  2D2B               	goto	l4110
  3651  0521                     l4108:
  3652  0521  3001               	movlw	1
  3653  0522  00A6               	movwf	??_sprintf^(0+128)
  3654  0523  0826               	movf	??_sprintf^(0+128),w
  3655  0524  07C6               	addwf	sprintf@c^(0+128),f
  3656  0525  300A               	movlw	10
  3657  0526  0646               	xorwf	sprintf@c^(0+128),w
  3658  0527  1D03               	btfss	3,2
  3659  0528  2D2A               	goto	u5531
  3660  0529  2D2B               	goto	u5530
  3661  052A                     u5531:
  3662  052A  2CF9               	goto	l4104
  3663  052B                     u5530:
  3664  052B                     l4110:
  3665                           
  3666                           ;doprnt.c: 1168: width -= prec + c + eexp;
  3667  052B  0846               	movf	sprintf@c^(0+128),w
  3668  052C  0744               	addwf	sprintf@prec^(0+128),w
  3669  052D  00A6               	movwf	??_sprintf^(0+128)
  3670  052E  0845               	movf	(sprintf@prec+1)^(0+128),w
  3671  052F  1803               	skipnc
  3672  0530  0A45               	incf	(sprintf@prec+1)^(0+128),w
  3673  0531  00A7               	movwf	(??_sprintf^(0+128)+1)
  3674  0532  083D               	movf	sprintf@eexp^(0+128),w
  3675  0533  0726               	addwf	??_sprintf^(0+128),w
  3676  0534  00A8               	movwf	(??_sprintf+2)^(0+128)
  3677  0535  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3678  0536  3D27               	addwfc	(??_sprintf+1)^(0+128),w
  3679  0537  00A9               	movwf	(??_sprintf+3)^(0+128)
  3680  0538  0828               	movf	(??_sprintf+2)^(0+128),w
  3681  0539  02B7               	subwf	sprintf@width^(0+128),f
  3682  053A  0829               	movf	(??_sprintf+3)^(0+128),w
  3683  053B  3BB8               	subwfb	(sprintf@width+1)^(0+128),f
  3684                           
  3685                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  3686  053C  0844               	movf	sprintf@prec^(0+128),w
  3687  053D  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3688  053E  1903               	btfsc	3,2
  3689  053F  2D41               	goto	u5541
  3690  0540  2D42               	goto	u5540
  3691  0541                     u5541:
  3692  0541  2D46               	goto	l4114
  3693  0542                     u5540:
  3694  0542                     l4112:
  3695                           
  3696                           ;doprnt.c: 1174: width--;
  3697  0542  30FF               	movlw	255
  3698  0543  07B7               	addwf	sprintf@width^(0+128),f
  3699  0544  30FF               	movlw	255
  3700  0545  3DB8               	addwfc	(sprintf@width+1)^(0+128),f
  3701  0546                     l4114:
  3702                           
  3703                           ;doprnt.c: 1175: if(flag & 0x03)
  3704  0546  3003               	movlw	3
  3705  0547  0535               	andwf	sprintf@flag^(0+128),w
  3706  0548  00A6               	movwf	??_sprintf^(0+128)
  3707  0549  3000               	movlw	0
  3708  054A  0536               	andwf	(sprintf@flag+1)^(0+128),w
  3709  054B  00A7               	movwf	(??_sprintf+1)^(0+128)
  3710  054C  0826               	movf	??_sprintf^(0+128),w
  3711  054D  0427               	iorwf	(??_sprintf^(0+128)+1),w
  3712  054E  1903               	btfsc	3,2
  3713  054F  2D51               	goto	u5551
  3714  0550  2D52               	goto	u5550
  3715  0551                     u5551:
  3716  0551  2D64               	goto	l4124
  3717  0552                     u5550:
  3718  0552                     l4116:
  3719                           
  3720                           ;doprnt.c: 1176: width--;
  3721  0552  30FF               	movlw	255
  3722  0553  07B7               	addwf	sprintf@width^(0+128),f
  3723  0554  30FF               	movlw	255
  3724  0555  3DB8               	addwfc	(sprintf@width+1)^(0+128),f
  3725  0556  2D64               	goto	l4124
  3726  0557                     l4118:
  3727                           
  3728                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  3729  0557  3020               	movlw	32
  3730  0558  0021               	movlb	1	; select bank1
  3731  0559  00A6               	movwf	??_sprintf^(0+128)
  3732  055A  0843               	movf	sprintf@sp^(0+128),w
  3733  055B  0086               	movwf	6
  3734  055C  0187               	clrf	7
  3735  055D  0826               	movf	??_sprintf^(0+128),w
  3736  055E  0081               	movwf	1
  3737  055F                     l4120:
  3738  055F  3001               	movlw	1
  3739  0560  00A6               	movwf	??_sprintf^(0+128)
  3740  0561  0826               	movf	??_sprintf^(0+128),w
  3741  0562  07C3               	addwf	sprintf@sp^(0+128),f
  3742  0563  2D52               	goto	l4116
  3743  0564                     l4124:
  3744  0564  0838               	movf	(sprintf@width+1)^(0+128),w
  3745  0565  3A80               	xorlw	128
  3746  0566  00A6               	movwf	??_sprintf^(0+128)
  3747  0567  3080               	movlw	128
  3748  0568  0226               	subwf	??_sprintf^(0+128),w
  3749  0569  1D03               	skipz
  3750  056A  2D6D               	goto	u5565
  3751  056B  3001               	movlw	1
  3752  056C  0237               	subwf	sprintf@width^(0+128),w
  3753  056D                     u5565:
  3754  056D  1803               	skipnc
  3755  056E  2D70               	goto	u5561
  3756  056F  2D71               	goto	u5560
  3757  0570                     u5561:
  3758  0570  2D57               	goto	l4118
  3759  0571                     u5560:
  3760  0571                     l4126:
  3761                           
  3762                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  3763  0571  3003               	movlw	3
  3764  0572  0021               	movlb	1	; select bank1
  3765  0573  0535               	andwf	sprintf@flag^(0+128),w
  3766  0574  00A6               	movwf	??_sprintf^(0+128)
  3767  0575  3000               	movlw	0
  3768  0576  0536               	andwf	(sprintf@flag+1)^(0+128),w
  3769  0577  00A7               	movwf	(??_sprintf+1)^(0+128)
  3770  0578  0826               	movf	??_sprintf^(0+128),w
  3771  0579  0427               	iorwf	(??_sprintf^(0+128)+1),w
  3772  057A  1903               	btfsc	3,2
  3773  057B  2D7D               	goto	u5571
  3774  057C  2D7E               	goto	u5570
  3775  057D                     u5571:
  3776  057D  2DD8               	goto	l4140
  3777  057E                     u5570:
  3778  057E                     l4128:
  3779                           
  3780                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  3781  057E  302D               	movlw	45
  3782  057F  00A6               	movwf	??_sprintf^(0+128)
  3783  0580  0843               	movf	sprintf@sp^(0+128),w
  3784  0581  0086               	movwf	6
  3785  0582  0187               	clrf	7
  3786  0583  0826               	movf	??_sprintf^(0+128),w
  3787  0584  0081               	movwf	1
  3788  0585                     l4130:
  3789  0585  3001               	movlw	1
  3790  0586  00A6               	movwf	??_sprintf^(0+128)
  3791  0587  0826               	movf	??_sprintf^(0+128),w
  3792  0588  07C3               	addwf	sprintf@sp^(0+128),f
  3793  0589  2DD8               	goto	l4140
  3794  058A                     l4132:
  3795                           
  3796                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  3797  058A  0846               	movf	sprintf@c^(0+128),w
  3798  058B  00A6               	movwf	??_sprintf^(0+128)
  3799  058C  01A7               	clrf	(??_sprintf^(0+128)+1)
  3800  058D  35A6               	lslf	??_sprintf^(0+128),f
  3801  058E  0DA7               	rlf	(??_sprintf^(0+128)+1),f
  3802  058F  35A6               	lslf	??_sprintf^(0+128),f
  3803  0590  0DA7               	rlf	(??_sprintf^(0+128)+1),f
  3804  0591  3068               	movlw	low (_dpowers| (0+32768))
  3805  0592  0726               	addwf	??_sprintf^(0+128),w
  3806  0593  0084               	movwf	4
  3807  0594  30A0               	movlw	high (_dpowers| (0+32768))
  3808  0595  3D27               	addwfc	(??_sprintf+1)^(0+128),w
  3809  0596  0085               	movwf	5
  3810  0597  3F00               	moviw [0]fsr0
  3811  0598  00F0               	movwf	___lldiv@divisor
  3812  0599  3F01               	moviw [1]fsr0
  3813  059A  00F1               	movwf	___lldiv@divisor+1
  3814  059B  3F02               	moviw [2]fsr0
  3815  059C  00F2               	movwf	___lldiv@divisor+2
  3816  059D  3F03               	moviw [3]fsr0
  3817  059E  00F3               	movwf	___lldiv@divisor+3
  3818  059F  0834               	movf	(sprintf@val+3)^(0+128),w
  3819  05A0  00F7               	movwf	___lldiv@dividend+3
  3820  05A1  0833               	movf	(sprintf@val+2)^(0+128),w
  3821  05A2  00F6               	movwf	___lldiv@dividend+2
  3822  05A3  0832               	movf	(sprintf@val+1)^(0+128),w
  3823  05A4  00F5               	movwf	___lldiv@dividend+1
  3824  05A5  0831               	movf	sprintf@val^(0+128),w
  3825  05A6  00F4               	movwf	___lldiv@dividend
  3826  05A7  3190  20B1  3181   	fcall	___lldiv
  3827  05AA  0873               	movf	?___lldiv+3,w
  3828  05AB  0021               	movlb	1	; select bank1
  3829  05AC  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3830  05AD  0872               	movf	?___lldiv+2,w
  3831  05AE  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3832  05AF  0871               	movf	?___lldiv+1,w
  3833  05B0  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3834  05B1  0870               	movf	?___lldiv,w
  3835  05B2  00B9               	movwf	sprintf@tmpval^(0+128)
  3836  05B3                     l4134:
  3837                           
  3838                           ;doprnt.c: 1228: tmpval.vd %= 10;
  3839  05B3  3000               	movlw	0
  3840  05B4  00F3               	movwf	___llmod@divisor+3
  3841  05B5  3000               	movlw	0
  3842  05B6  00F2               	movwf	___llmod@divisor+2
  3843  05B7  3000               	movlw	0
  3844  05B8  00F1               	movwf	___llmod@divisor+1
  3845  05B9  300A               	movlw	10
  3846  05BA  00F0               	movwf	___llmod@divisor
  3847  05BB  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3848  05BC  00F7               	movwf	___llmod@dividend+3
  3849  05BD  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3850  05BE  00F6               	movwf	___llmod@dividend+2
  3851  05BF  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3852  05C0  00F5               	movwf	___llmod@dividend+1
  3853  05C1  0839               	movf	sprintf@tmpval^(0+128),w
  3854  05C2  00F4               	movwf	___llmod@dividend
  3855  05C3  319F  2768  3181   	fcall	___llmod
  3856  05C6  0873               	movf	?___llmod+3,w
  3857  05C7  0021               	movlb	1	; select bank1
  3858  05C8  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3859  05C9  0872               	movf	?___llmod+2,w
  3860  05CA  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3861  05CB  0871               	movf	?___llmod+1,w
  3862  05CC  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3863  05CD  0870               	movf	?___llmod,w
  3864  05CE  00B9               	movwf	sprintf@tmpval^(0+128)
  3865  05CF                     l4136:
  3866                           
  3867                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  3868  05CF  0839               	movf	sprintf@tmpval^(0+128),w
  3869  05D0  3E30               	addlw	48
  3870  05D1  00A6               	movwf	??_sprintf^(0+128)
  3871  05D2  0843               	movf	sprintf@sp^(0+128),w
  3872  05D3  0086               	movwf	6
  3873  05D4  0187               	clrf	7
  3874  05D5  0826               	movf	??_sprintf^(0+128),w
  3875  05D6  0081               	movwf	1
  3876  05D7  2D85               	goto	l4130
  3877  05D8                     l4140:
  3878  05D8  3001               	movlw	1
  3879  05D9  02C6               	subwf	sprintf@c^(0+128),f
  3880  05DA  0A46               	incf	sprintf@c^(0+128),w
  3881  05DB  1D03               	btfss	3,2
  3882  05DC  2DDE               	goto	u5581
  3883  05DD  2DDF               	goto	u5580
  3884  05DE                     u5581:
  3885  05DE  2D8A               	goto	l4132
  3886  05DF                     u5580:
  3887  05DF  2DF0               	goto	l4148
  3888  05E0                     l4142:
  3889                           
  3890                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  3891  05E0  3030               	movlw	48
  3892  05E1  0021               	movlb	1	; select bank1
  3893  05E2  00A6               	movwf	??_sprintf^(0+128)
  3894  05E3  0843               	movf	sprintf@sp^(0+128),w
  3895  05E4  0086               	movwf	6
  3896  05E5  0187               	clrf	7
  3897  05E6  0826               	movf	??_sprintf^(0+128),w
  3898  05E7  0081               	movwf	1
  3899  05E8                     l4144:
  3900  05E8  3001               	movlw	1
  3901  05E9  00A6               	movwf	??_sprintf^(0+128)
  3902  05EA  0826               	movf	??_sprintf^(0+128),w
  3903  05EB  07C3               	addwf	sprintf@sp^(0+128),f
  3904  05EC                     l4146:
  3905                           
  3906                           ;doprnt.c: 1235: eexp--;
  3907  05EC  30FF               	movlw	255
  3908  05ED  07BD               	addwf	sprintf@eexp^(0+128),f
  3909  05EE  30FF               	movlw	255
  3910  05EF  3DBE               	addwfc	(sprintf@eexp+1)^(0+128),f
  3911  05F0                     l4148:
  3912  05F0  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3913  05F1  3A80               	xorlw	128
  3914  05F2  00A6               	movwf	??_sprintf^(0+128)
  3915  05F3  3080               	movlw	128
  3916  05F4  0226               	subwf	??_sprintf^(0+128),w
  3917  05F5  1D03               	skipz
  3918  05F6  2DF9               	goto	u5595
  3919  05F7  3001               	movlw	1
  3920  05F8  023D               	subwf	sprintf@eexp^(0+128),w
  3921  05F9                     u5595:
  3922  05F9  1803               	skipnc
  3923  05FA  2DFC               	goto	u5591
  3924  05FB  2DFD               	goto	u5590
  3925  05FC                     u5591:
  3926  05FC  2DE0               	goto	l4142
  3927  05FD                     u5590:
  3928  05FD                     l4150:
  3929                           
  3930                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  3931  05FD  0021               	movlb	1	; select bank1
  3932  05FE  0845               	movf	(sprintf@prec+1)^(0+128),w
  3933  05FF  3A80               	xorlw	128
  3934  0600  00A6               	movwf	??_sprintf^(0+128)
  3935  0601  3080               	movlw	128
  3936  0602  0226               	subwf	??_sprintf^(0+128),w
  3937  0603  1D03               	skipz
  3938  0604  2E07               	goto	u5605
  3939  0605  3009               	movlw	9
  3940  0606  0244               	subwf	sprintf@prec^(0+128),w
  3941  0607                     u5605:
  3942  0607  1C03               	skipc
  3943  0608  2E0A               	goto	u5601
  3944  0609  2E0B               	goto	u5600
  3945  060A                     u5601:
  3946  060A  2E11               	goto	l4154
  3947  060B                     u5600:
  3948  060B                     l4152:
  3949                           
  3950                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3951  060B  3008               	movlw	8
  3952  060C  0021               	movlb	1	; select bank1
  3953  060D  00A6               	movwf	??_sprintf^(0+128)
  3954  060E  0826               	movf	??_sprintf^(0+128),w
  3955  060F  00C6               	movwf	sprintf@c^(0+128)
  3956  0610  2E16               	goto	l474
  3957  0611                     l4154:
  3958                           
  3959                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  3960  0611  0021               	movlb	1	; select bank1
  3961  0612  0844               	movf	sprintf@prec^(0+128),w
  3962  0613  00A6               	movwf	??_sprintf^(0+128)
  3963  0614  0826               	movf	??_sprintf^(0+128),w
  3964  0615  00C6               	movwf	sprintf@c^(0+128)
  3965  0616                     l474:
  3966                           
  3967                           ;doprnt.c: 1241: prec -= (int)c;
  3968  0616  0846               	movf	sprintf@c^(0+128),w
  3969  0617  00A6               	movwf	??_sprintf^(0+128)
  3970  0618  01A7               	clrf	(??_sprintf^(0+128)+1)
  3971  0619  0826               	movf	??_sprintf^(0+128),w
  3972  061A  02C4               	subwf	sprintf@prec^(0+128),f
  3973  061B  0827               	movf	(??_sprintf+1)^(0+128),w
  3974  061C  3BC5               	subwfb	(sprintf@prec+1)^(0+128),f
  3975  061D                     l4156:
  3976                           
  3977                           ;doprnt.c: 1245: if(c)
  3978  061D  0846               	movf	sprintf@c^(0+128),w
  3979  061E  1903               	btfsc	3,2
  3980  061F  2E21               	goto	u5611
  3981  0620  2E22               	goto	u5610
  3982  0621                     u5611:
  3983  0621  2E2D               	goto	l4162
  3984  0622                     u5610:
  3985  0622                     l4158:
  3986                           
  3987                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  3988  0622  302E               	movlw	46
  3989  0623  00A6               	movwf	??_sprintf^(0+128)
  3990  0624  0843               	movf	sprintf@sp^(0+128),w
  3991  0625  0086               	movwf	6
  3992  0626  0187               	clrf	7
  3993  0627  0826               	movf	??_sprintf^(0+128),w
  3994  0628  0081               	movwf	1
  3995  0629                     l4160:
  3996  0629  3001               	movlw	1
  3997  062A  00A6               	movwf	??_sprintf^(0+128)
  3998  062B  0826               	movf	??_sprintf^(0+128),w
  3999  062C  07C3               	addwf	sprintf@sp^(0+128),f
  4000  062D                     l4162:
  4001                           
  4002                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4003  062D  0846               	movf	sprintf@c^(0+128),w
  4004  062E  318D  2584  3181   	fcall	_scale
  4005  0631  0020               	movlb	0	; select bank0
  4006  0632  0841               	movf	?_scale+3,w
  4007  0633  0021               	movlb	1	; select bank1
  4008  0634  00AF               	movwf	(_sprintf$1077+3)^(0+128)
  4009  0635  0020               	movlb	0	; select bank0
  4010  0636  0840               	movf	?_scale+2,w
  4011  0637  0021               	movlb	1	; select bank1
  4012  0638  00AE               	movwf	(_sprintf$1077+2)^(0+128)
  4013  0639  0020               	movlb	0	; select bank0
  4014  063A  083F               	movf	?_scale+1,w
  4015  063B  0021               	movlb	1	; select bank1
  4016  063C  00AD               	movwf	(_sprintf$1077+1)^(0+128)
  4017  063D  0020               	movlb	0	; select bank0
  4018  063E  083E               	movf	?_scale,w
  4019  063F  0021               	movlb	1	; select bank1
  4020  0640  00AC               	movwf	_sprintf$1077^(0+128)
  4021  0641                     l4164:
  4022                           
  4023                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4024  0641  082F               	movf	(_sprintf$1077+3)^(0+128),w
  4025  0642  0020               	movlb	0	; select bank0
  4026  0643  00AB               	movwf	___flmul@a+3
  4027  0644  0021               	movlb	1	; select bank1
  4028  0645  082E               	movf	(_sprintf$1077+2)^(0+128),w
  4029  0646  0020               	movlb	0	; select bank0
  4030  0647  00AA               	movwf	___flmul@a+2
  4031  0648  0021               	movlb	1	; select bank1
  4032  0649  082D               	movf	(_sprintf$1077+1)^(0+128),w
  4033  064A  0020               	movlb	0	; select bank0
  4034  064B  00A9               	movwf	___flmul@a+1
  4035  064C  0021               	movlb	1	; select bank1
  4036  064D  082C               	movf	_sprintf$1077^(0+128),w
  4037  064E  0020               	movlb	0	; select bank0
  4038  064F  00A8               	movwf	___flmul@a
  4039  0650  0021               	movlb	1	; select bank1
  4040  0651  0842               	movf	(sprintf@fval+3)^(0+128),w
  4041  0652  0020               	movlb	0	; select bank0
  4042  0653  00A7               	movwf	___flmul@b+3
  4043  0654  0021               	movlb	1	; select bank1
  4044  0655  0841               	movf	(sprintf@fval+2)^(0+128),w
  4045  0656  0020               	movlb	0	; select bank0
  4046  0657  00A6               	movwf	___flmul@b+2
  4047  0658  0021               	movlb	1	; select bank1
  4048  0659  0840               	movf	(sprintf@fval+1)^(0+128),w
  4049  065A  0020               	movlb	0	; select bank0
  4050  065B  00A5               	movwf	___flmul@b+1
  4051  065C  0021               	movlb	1	; select bank1
  4052  065D  083F               	movf	sprintf@fval^(0+128),w
  4053  065E  0020               	movlb	0	; select bank0
  4054  065F  00A4               	movwf	___flmul@b
  4055  0660  318B  232D  3181   	fcall	___flmul
  4056  0663  0020               	movlb	0	; select bank0
  4057  0664  0827               	movf	?___flmul+3,w
  4058  0665  00D6               	movwf	___fltol@f1+3
  4059  0666  0826               	movf	?___flmul+2,w
  4060  0667  00D5               	movwf	___fltol@f1+2
  4061  0668  0825               	movf	?___flmul+1,w
  4062  0669  00D4               	movwf	___fltol@f1+1
  4063  066A  0824               	movf	?___flmul,w
  4064  066B  00D3               	movwf	___fltol@f1
  4065  066C  3191  216B  3181   	fcall	___fltol
  4066  066F  0020               	movlb	0	; select bank0
  4067  0670  0856               	movf	?___fltol+3,w
  4068  0671  0021               	movlb	1	; select bank1
  4069  0672  00B4               	movwf	(sprintf@val+3)^(0+128)
  4070  0673  0020               	movlb	0	; select bank0
  4071  0674  0855               	movf	?___fltol+2,w
  4072  0675  0021               	movlb	1	; select bank1
  4073  0676  00B3               	movwf	(sprintf@val+2)^(0+128)
  4074  0677  0020               	movlb	0	; select bank0
  4075  0678  0854               	movf	?___fltol+1,w
  4076  0679  0021               	movlb	1	; select bank1
  4077  067A  00B2               	movwf	(sprintf@val+1)^(0+128)
  4078  067B  0020               	movlb	0	; select bank0
  4079  067C  0853               	movf	?___fltol,w
  4080  067D  0021               	movlb	1	; select bank1
  4081  067E  00B1               	movwf	sprintf@val^(0+128)
  4082                           
  4083                           ;doprnt.c: 1254: while(c--) {
  4084  067F  2EFA               	goto	l4176
  4085  0680                     l4166:
  4086                           
  4087                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  4088  0680  0846               	movf	sprintf@c^(0+128),w
  4089  0681  00A6               	movwf	??_sprintf^(0+128)
  4090  0682  01A7               	clrf	(??_sprintf^(0+128)+1)
  4091  0683  35A6               	lslf	??_sprintf^(0+128),f
  4092  0684  0DA7               	rlf	(??_sprintf^(0+128)+1),f
  4093  0685  35A6               	lslf	??_sprintf^(0+128),f
  4094  0686  0DA7               	rlf	(??_sprintf^(0+128)+1),f
  4095  0687  3068               	movlw	low (_dpowers| (0+32768))
  4096  0688  0726               	addwf	??_sprintf^(0+128),w
  4097  0689  0084               	movwf	4
  4098  068A  30A0               	movlw	high (_dpowers| (0+32768))
  4099  068B  3D27               	addwfc	(??_sprintf+1)^(0+128),w
  4100  068C  0085               	movwf	5
  4101  068D  3F00               	moviw [0]fsr0
  4102  068E  00F0               	movwf	___lldiv@divisor
  4103  068F  3F01               	moviw [1]fsr0
  4104  0690  00F1               	movwf	___lldiv@divisor+1
  4105  0691  3F02               	moviw [2]fsr0
  4106  0692  00F2               	movwf	___lldiv@divisor+2
  4107  0693  3F03               	moviw [3]fsr0
  4108  0694  00F3               	movwf	___lldiv@divisor+3
  4109  0695  0834               	movf	(sprintf@val+3)^(0+128),w
  4110  0696  00F7               	movwf	___lldiv@dividend+3
  4111  0697  0833               	movf	(sprintf@val+2)^(0+128),w
  4112  0698  00F6               	movwf	___lldiv@dividend+2
  4113  0699  0832               	movf	(sprintf@val+1)^(0+128),w
  4114  069A  00F5               	movwf	___lldiv@dividend+1
  4115  069B  0831               	movf	sprintf@val^(0+128),w
  4116  069C  00F4               	movwf	___lldiv@dividend
  4117  069D  3190  20B1  3181   	fcall	___lldiv
  4118  06A0  0873               	movf	?___lldiv+3,w
  4119  06A1  0021               	movlb	1	; select bank1
  4120  06A2  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  4121  06A3  0872               	movf	?___lldiv+2,w
  4122  06A4  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  4123  06A5  0871               	movf	?___lldiv+1,w
  4124  06A6  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  4125  06A7  0870               	movf	?___lldiv,w
  4126  06A8  00B9               	movwf	sprintf@tmpval^(0+128)
  4127  06A9                     l4168:
  4128                           
  4129                           ;doprnt.c: 1256: tmpval.vd %= 10;
  4130  06A9  3000               	movlw	0
  4131  06AA  00F3               	movwf	___llmod@divisor+3
  4132  06AB  3000               	movlw	0
  4133  06AC  00F2               	movwf	___llmod@divisor+2
  4134  06AD  3000               	movlw	0
  4135  06AE  00F1               	movwf	___llmod@divisor+1
  4136  06AF  300A               	movlw	10
  4137  06B0  00F0               	movwf	___llmod@divisor
  4138  06B1  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  4139  06B2  00F7               	movwf	___llmod@dividend+3
  4140  06B3  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  4141  06B4  00F6               	movwf	___llmod@dividend+2
  4142  06B5  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  4143  06B6  00F5               	movwf	___llmod@dividend+1
  4144  06B7  0839               	movf	sprintf@tmpval^(0+128),w
  4145  06B8  00F4               	movwf	___llmod@dividend
  4146  06B9  319F  2768  3181   	fcall	___llmod
  4147  06BC  0873               	movf	?___llmod+3,w
  4148  06BD  0021               	movlb	1	; select bank1
  4149  06BE  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  4150  06BF  0872               	movf	?___llmod+2,w
  4151  06C0  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  4152  06C1  0871               	movf	?___llmod+1,w
  4153  06C2  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  4154  06C3  0870               	movf	?___llmod,w
  4155  06C4  00B9               	movwf	sprintf@tmpval^(0+128)
  4156  06C5                     l4170:
  4157                           
  4158                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  4159  06C5  0839               	movf	sprintf@tmpval^(0+128),w
  4160  06C6  3E30               	addlw	48
  4161  06C7  00A6               	movwf	??_sprintf^(0+128)
  4162  06C8  0843               	movf	sprintf@sp^(0+128),w
  4163  06C9  0086               	movwf	6
  4164  06CA  0187               	clrf	7
  4165  06CB  0826               	movf	??_sprintf^(0+128),w
  4166  06CC  0081               	movwf	1
  4167  06CD                     l4172:
  4168  06CD  3001               	movlw	1
  4169  06CE  00A6               	movwf	??_sprintf^(0+128)
  4170  06CF  0826               	movf	??_sprintf^(0+128),w
  4171  06D0  07C3               	addwf	sprintf@sp^(0+128),f
  4172  06D1                     l4174:
  4173                           
  4174                           ;doprnt.c: 1258: val %= dpowers[c];
  4175  06D1  0846               	movf	sprintf@c^(0+128),w
  4176  06D2  00A6               	movwf	??_sprintf^(0+128)
  4177  06D3  01A7               	clrf	(??_sprintf^(0+128)+1)
  4178  06D4  35A6               	lslf	??_sprintf^(0+128),f
  4179  06D5  0DA7               	rlf	(??_sprintf^(0+128)+1),f
  4180  06D6  35A6               	lslf	??_sprintf^(0+128),f
  4181  06D7  0DA7               	rlf	(??_sprintf^(0+128)+1),f
  4182  06D8  3068               	movlw	low (_dpowers| (0+32768))
  4183  06D9  0726               	addwf	??_sprintf^(0+128),w
  4184  06DA  0084               	movwf	4
  4185  06DB  30A0               	movlw	high (_dpowers| (0+32768))
  4186  06DC  3D27               	addwfc	(??_sprintf+1)^(0+128),w
  4187  06DD  0085               	movwf	5
  4188  06DE  3F00               	moviw [0]fsr0
  4189  06DF  00F0               	movwf	___llmod@divisor
  4190  06E0  3F01               	moviw [1]fsr0
  4191  06E1  00F1               	movwf	___llmod@divisor+1
  4192  06E2  3F02               	moviw [2]fsr0
  4193  06E3  00F2               	movwf	___llmod@divisor+2
  4194  06E4  3F03               	moviw [3]fsr0
  4195  06E5  00F3               	movwf	___llmod@divisor+3
  4196  06E6  0834               	movf	(sprintf@val+3)^(0+128),w
  4197  06E7  00F7               	movwf	___llmod@dividend+3
  4198  06E8  0833               	movf	(sprintf@val+2)^(0+128),w
  4199  06E9  00F6               	movwf	___llmod@dividend+2
  4200  06EA  0832               	movf	(sprintf@val+1)^(0+128),w
  4201  06EB  00F5               	movwf	___llmod@dividend+1
  4202  06EC  0831               	movf	sprintf@val^(0+128),w
  4203  06ED  00F4               	movwf	___llmod@dividend
  4204  06EE  319F  2768  3181   	fcall	___llmod
  4205  06F1  0873               	movf	?___llmod+3,w
  4206  06F2  0021               	movlb	1	; select bank1
  4207  06F3  00B4               	movwf	(sprintf@val+3)^(0+128)
  4208  06F4  0872               	movf	?___llmod+2,w
  4209  06F5  00B3               	movwf	(sprintf@val+2)^(0+128)
  4210  06F6  0871               	movf	?___llmod+1,w
  4211  06F7  00B2               	movwf	(sprintf@val+1)^(0+128)
  4212  06F8  0870               	movf	?___llmod,w
  4213  06F9  00B1               	movwf	sprintf@val^(0+128)
  4214  06FA                     l4176:
  4215  06FA  3001               	movlw	1
  4216  06FB  02C6               	subwf	sprintf@c^(0+128),f
  4217  06FC  0A46               	incf	sprintf@c^(0+128),w
  4218  06FD  1D03               	btfss	3,2
  4219  06FE  2F00               	goto	u5621
  4220  06FF  2F01               	goto	u5620
  4221  0700                     u5621:
  4222  0700  2E80               	goto	l4166
  4223  0701                     u5620:
  4224  0701  2F11               	goto	l4184
  4225  0702                     l4178:
  4226                           
  4227                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  4228  0702  3030               	movlw	48
  4229  0703  00A6               	movwf	??_sprintf^(0+128)
  4230  0704  0843               	movf	sprintf@sp^(0+128),w
  4231  0705  0086               	movwf	6
  4232  0706  0187               	clrf	7
  4233  0707  0826               	movf	??_sprintf^(0+128),w
  4234  0708  0081               	movwf	1
  4235  0709                     l4180:
  4236  0709  3001               	movlw	1
  4237  070A  00A6               	movwf	??_sprintf^(0+128)
  4238  070B  0826               	movf	??_sprintf^(0+128),w
  4239  070C  07C3               	addwf	sprintf@sp^(0+128),f
  4240  070D                     l4182:
  4241                           
  4242                           ;doprnt.c: 1263: prec--;
  4243  070D  30FF               	movlw	255
  4244  070E  07C4               	addwf	sprintf@prec^(0+128),f
  4245  070F  30FF               	movlw	255
  4246  0710  3DC5               	addwfc	(sprintf@prec+1)^(0+128),f
  4247  0711                     l4184:
  4248  0711  0844               	movf	sprintf@prec^(0+128),w
  4249  0712  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  4250  0713  1D03               	btfss	3,2
  4251  0714  2F16               	goto	u5631
  4252  0715  2F17               	goto	u5630
  4253  0716                     u5631:
  4254  0716  2F02               	goto	l4178
  4255  0717                     u5630:
  4256  0717  2FC9               	goto	l4232
  4257  0718                     l4186:
  4258                           
  4259                           ;doprnt.c: 1272: };doprnt.c: 1316: if(prec == 0 && val == 0)
  4260  0718  0844               	movf	sprintf@prec^(0+128),w
  4261  0719  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  4262  071A  1D03               	btfss	3,2
  4263  071B  2F1D               	goto	u5641
  4264  071C  2F1E               	goto	u5640
  4265  071D                     u5641:
  4266  071D  2F2A               	goto	l482
  4267  071E                     u5640:
  4268  071E                     l4188:
  4269  071E  0834               	movf	(sprintf@val+3)^(0+128),w
  4270  071F  0433               	iorwf	(sprintf@val+2)^(0+128),w
  4271  0720  0432               	iorwf	(sprintf@val+1)^(0+128),w
  4272  0721  0431               	iorwf	sprintf@val^(0+128),w
  4273  0722  1D03               	skipz
  4274  0723  2F25               	goto	u5651
  4275  0724  2F26               	goto	u5650
  4276  0725                     u5651:
  4277  0725  2F2A               	goto	l482
  4278  0726                     u5650:
  4279  0726                     l4190:
  4280                           
  4281                           ;doprnt.c: 1317: prec++;
  4282  0726  3001               	movlw	1
  4283  0727  07C4               	addwf	sprintf@prec^(0+128),f
  4284  0728  3000               	movlw	0
  4285  0729  3DC5               	addwfc	(sprintf@prec+1)^(0+128),f
  4286  072A                     l482:
  4287                           
  4288                           ;doprnt.c: 1365: if(c < prec)
  4289  072A  0845               	movf	(sprintf@prec+1)^(0+128),w
  4290  072B  3A80               	xorlw	128
  4291  072C  3C80               	sublw	128
  4292  072D  1D03               	skipz
  4293  072E  2F31               	goto	u5665
  4294  072F  0844               	movf	sprintf@prec^(0+128),w
  4295  0730  0246               	subwf	sprintf@c^(0+128),w
  4296  0731                     u5665:
  4297  0731  1803               	skipnc
  4298  0732  2F34               	goto	u5661
  4299  0733  2F35               	goto	u5660
  4300  0734                     u5661:
  4301  0734  2F3B               	goto	l4194
  4302  0735                     u5660:
  4303  0735                     l4192:
  4304                           
  4305                           ;doprnt.c: 1366: c = (char)prec;
  4306  0735  0021               	movlb	1	; select bank1
  4307  0736  0844               	movf	sprintf@prec^(0+128),w
  4308  0737  00A6               	movwf	??_sprintf^(0+128)
  4309  0738  0826               	movf	??_sprintf^(0+128),w
  4310  0739  00C6               	movwf	sprintf@c^(0+128)
  4311  073A  2F51               	goto	l4198
  4312  073B                     l4194:
  4313                           
  4314                           ;doprnt.c: 1367: else if(prec < c)
  4315  073B  0021               	movlb	1	; select bank1
  4316  073C  0845               	movf	(sprintf@prec+1)^(0+128),w
  4317  073D  3A80               	xorlw	128
  4318  073E  00A6               	movwf	??_sprintf^(0+128)
  4319  073F  3080               	movlw	128
  4320  0740  0226               	subwf	??_sprintf^(0+128),w
  4321  0741  1D03               	skipz
  4322  0742  2F45               	goto	u5675
  4323  0743  0846               	movf	sprintf@c^(0+128),w
  4324  0744  0244               	subwf	sprintf@prec^(0+128),w
  4325  0745                     u5675:
  4326  0745  1803               	skipnc
  4327  0746  2F48               	goto	u5671
  4328  0747  2F49               	goto	u5670
  4329  0748                     u5671:
  4330  0748  2F51               	goto	l4198
  4331  0749                     u5670:
  4332  0749                     l4196:
  4333                           
  4334                           ;doprnt.c: 1368: prec = c;
  4335  0749  0021               	movlb	1	; select bank1
  4336  074A  0846               	movf	sprintf@c^(0+128),w
  4337  074B  00A6               	movwf	??_sprintf^(0+128)
  4338  074C  01A7               	clrf	(??_sprintf^(0+128)+1)
  4339  074D  0826               	movf	??_sprintf^(0+128),w
  4340  074E  00C4               	movwf	sprintf@prec^(0+128)
  4341  074F  0827               	movf	(??_sprintf+1)^(0+128),w
  4342  0750  00C5               	movwf	(sprintf@prec+1)^(0+128)
  4343  0751                     l4198:
  4344                           
  4345                           ;doprnt.c: 1371: if(width && flag & 0x03)
  4346  0751  0021               	movlb	1	; select bank1
  4347  0752  0837               	movf	sprintf@width^(0+128),w
  4348  0753  0438               	iorwf	(sprintf@width+1)^(0+128),w
  4349  0754  1903               	btfsc	3,2
  4350  0755  2F57               	goto	u5681
  4351  0756  2F58               	goto	u5680
  4352  0757                     u5681:
  4353  0757  2F68               	goto	l4204
  4354  0758                     u5680:
  4355  0758                     l4200:
  4356  0758  3003               	movlw	3
  4357  0759  0535               	andwf	sprintf@flag^(0+128),w
  4358  075A  00A6               	movwf	??_sprintf^(0+128)
  4359  075B  3000               	movlw	0
  4360  075C  0536               	andwf	(sprintf@flag+1)^(0+128),w
  4361  075D  00A7               	movwf	(??_sprintf+1)^(0+128)
  4362  075E  0826               	movf	??_sprintf^(0+128),w
  4363  075F  0427               	iorwf	(??_sprintf^(0+128)+1),w
  4364  0760  1903               	btfsc	3,2
  4365  0761  2F63               	goto	u5691
  4366  0762  2F64               	goto	u5690
  4367  0763                     u5691:
  4368  0763  2F68               	goto	l4204
  4369  0764                     u5690:
  4370  0764                     l4202:
  4371                           
  4372                           ;doprnt.c: 1372: width--;
  4373  0764  30FF               	movlw	255
  4374  0765  07B7               	addwf	sprintf@width^(0+128),f
  4375  0766  30FF               	movlw	255
  4376  0767  3DB8               	addwfc	(sprintf@width+1)^(0+128),f
  4377  0768                     l4204:
  4378                           
  4379                           ;doprnt.c: 1374: if(flag & 0x4000) {
  4380  0768  1F36               	btfss	(sprintf@flag+1)^(0+128),6
  4381  0769  2F6B               	goto	u5701
  4382  076A  2F6C               	goto	u5700
  4383  076B                     u5701:
  4384  076B  2F83               	goto	l4212
  4385  076C                     u5700:
  4386  076C                     l4206:
  4387                           
  4388                           ;doprnt.c: 1375: if(width > prec)
  4389  076C  0845               	movf	(sprintf@prec+1)^(0+128),w
  4390  076D  3A80               	xorlw	128
  4391  076E  00A6               	movwf	??_sprintf^(0+128)
  4392  076F  0838               	movf	(sprintf@width+1)^(0+128),w
  4393  0770  3A80               	xorlw	128
  4394  0771  0226               	subwf	??_sprintf^(0+128),w
  4395  0772  1D03               	skipz
  4396  0773  2F76               	goto	u5715
  4397  0774  0837               	movf	sprintf@width^(0+128),w
  4398  0775  0244               	subwf	sprintf@prec^(0+128),w
  4399  0776                     u5715:
  4400  0776  1803               	skipnc
  4401  0777  2F79               	goto	u5711
  4402  0778  2F7A               	goto	u5710
  4403  0779                     u5711:
  4404  0779  2F80               	goto	l4210
  4405  077A                     u5710:
  4406  077A                     l4208:
  4407                           
  4408                           ;doprnt.c: 1376: width -= prec;
  4409  077A  0021               	movlb	1	; select bank1
  4410  077B  0844               	movf	sprintf@prec^(0+128),w
  4411  077C  02B7               	subwf	sprintf@width^(0+128),f
  4412  077D  0845               	movf	(sprintf@prec+1)^(0+128),w
  4413  077E  3BB8               	subwfb	(sprintf@width+1)^(0+128),f
  4414  077F  2F83               	goto	l4212
  4415  0780                     l4210:
  4416                           
  4417                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  4418  0780  0021               	movlb	1	; select bank1
  4419  0781  01B7               	clrf	sprintf@width^(0+128)
  4420  0782  01B8               	clrf	(sprintf@width+1)^(0+128)
  4421  0783                     l4212:
  4422                           
  4423                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  4424  0783  0838               	movf	(sprintf@width+1)^(0+128),w
  4425  0784  3A80               	xorlw	128
  4426  0785  3C80               	sublw	128
  4427  0786  1D03               	skipz
  4428  0787  2F8A               	goto	u5725
  4429  0788  0837               	movf	sprintf@width^(0+128),w
  4430  0789  0246               	subwf	sprintf@c^(0+128),w
  4431  078A                     u5725:
  4432  078A  1803               	skipnc
  4433  078B  2F8D               	goto	u5721
  4434  078C  2F8E               	goto	u5720
  4435  078D                     u5721:
  4436  078D  2F97               	goto	l4216
  4437  078E                     u5720:
  4438  078E                     l4214:
  4439                           
  4440                           ;doprnt.c: 1408: width -= c;
  4441  078E  0021               	movlb	1	; select bank1
  4442  078F  0846               	movf	sprintf@c^(0+128),w
  4443  0790  00A6               	movwf	??_sprintf^(0+128)
  4444  0791  01A7               	clrf	(??_sprintf^(0+128)+1)
  4445  0792  0826               	movf	??_sprintf^(0+128),w
  4446  0793  02B7               	subwf	sprintf@width^(0+128),f
  4447  0794  0827               	movf	(??_sprintf+1)^(0+128),w
  4448  0795  3BB8               	subwfb	(sprintf@width+1)^(0+128),f
  4449  0796  2F9A               	goto	l4218
  4450  0797                     l4216:
  4451                           
  4452                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  4453  0797  0021               	movlb	1	; select bank1
  4454  0798  01B7               	clrf	sprintf@width^(0+128)
  4455  0799  01B8               	clrf	(sprintf@width+1)^(0+128)
  4456  079A                     l4218:
  4457                           
  4458                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  4459  079A  0837               	movf	sprintf@width^(0+128),w
  4460  079B  0438               	iorwf	(sprintf@width+1)^(0+128),w
  4461  079C  1903               	btfsc	3,2
  4462  079D  2F9F               	goto	u5731
  4463  079E  2FA0               	goto	u5730
  4464  079F                     u5731:
  4465  079F  2FB5               	goto	l4226
  4466  07A0                     u5730:
  4467  07A0                     l4220:
  4468                           
  4469                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  4470  07A0  3020               	movlw	32
  4471  07A1  00A6               	movwf	??_sprintf^(0+128)
  4472  07A2  0843               	movf	sprintf@sp^(0+128),w
  4473  07A3  0086               	movwf	6
  4474  07A4  0187               	clrf	7
  4475  07A5  0826               	movf	??_sprintf^(0+128),w
  4476  07A6  0081               	movwf	1
  4477  07A7                     l4222:
  4478  07A7  3001               	movlw	1
  4479  07A8  00A6               	movwf	??_sprintf^(0+128)
  4480  07A9  0826               	movf	??_sprintf^(0+128),w
  4481  07AA  07C3               	addwf	sprintf@sp^(0+128),f
  4482  07AB                     l4224:
  4483                           
  4484                           ;doprnt.c: 1457: while(--width);
  4485  07AB  30FF               	movlw	255
  4486  07AC  07B7               	addwf	sprintf@width^(0+128),f
  4487  07AD  30FF               	movlw	255
  4488  07AE  3DB8               	addwfc	(sprintf@width+1)^(0+128),f
  4489  07AF  0837               	movf	sprintf@width^(0+128),w
  4490  07B0  0438               	iorwf	(sprintf@width+1)^(0+128),w
  4491  07B1  1D03               	btfss	3,2
  4492  07B2  2FB4               	goto	u5741
  4493  07B3  2FB5               	goto	u5740
  4494  07B4                     u5741:
  4495  07B4  2FA0               	goto	l4220
  4496  07B5                     u5740:
  4497  07B5                     l4226:
  4498                           
  4499                           ;doprnt.c: 1464: if(flag & 0x03)
  4500  07B5  3003               	movlw	3
  4501  07B6  0535               	andwf	sprintf@flag^(0+128),w
  4502  07B7  00A6               	movwf	??_sprintf^(0+128)
  4503  07B8  3000               	movlw	0
  4504  07B9  0536               	andwf	(sprintf@flag+1)^(0+128),w
  4505  07BA  00A7               	movwf	(??_sprintf+1)^(0+128)
  4506  07BB  0826               	movf	??_sprintf^(0+128),w
  4507  07BC  0427               	iorwf	(??_sprintf^(0+128)+1),w
  4508  07BD  1903               	btfsc	3,2
  4509  07BE  2FC0               	goto	u5751
  4510  07BF  2FC1               	goto	u5750
  4511  07C0                     u5751:
  4512  07C0  2FC9               	goto	l4232
  4513  07C1                     u5750:
  4514  07C1                     l4228:
  4515                           
  4516                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  4517  07C1  302D               	movlw	45
  4518  07C2  00A6               	movwf	??_sprintf^(0+128)
  4519  07C3  0843               	movf	sprintf@sp^(0+128),w
  4520  07C4  0086               	movwf	6
  4521  07C5  0187               	clrf	7
  4522  07C6  0826               	movf	??_sprintf^(0+128),w
  4523  07C7  0081               	movwf	1
  4524  07C8  29E4               	goto	l3986
  4525  07C9                     l4232:
  4526  07C9  0821               	movf	(sprintf@f+1)^(0+128),w
  4527  07CA  00A7               	movwf	(??_sprintf^(0+128)+1)
  4528  07CB  0820               	movf	sprintf@f^(0+128),w
  4529  07CC  00A6               	movwf	??_sprintf^(0+128)
  4530  07CD  0AA0               	incf	sprintf@f^(0+128),f
  4531  07CE  1903               	skipnz
  4532  07CF  0AA1               	incf	(sprintf@f+1)^(0+128),f
  4533  07D0  0826               	movf	??_sprintf^(0+128),w
  4534  07D1  0084               	movwf	4
  4535  07D2  0827               	movf	(??_sprintf+1)^(0+128),w
  4536  07D3  0085               	movwf	5
  4537  07D4  0800               	movf	0,w	;code access
  4538  07D5  00A8               	movwf	(??_sprintf+2)^(0+128)
  4539  07D6  0828               	movf	(??_sprintf+2)^(0+128),w
  4540  07D7  00C6               	movwf	sprintf@c^(0+128)
  4541  07D8  0846               	movf	sprintf@c^(0+128),w
  4542  07D9  1D03               	btfss	3,2
  4543  07DA  2FDC               	goto	u5761
  4544  07DB  2FDD               	goto	u5760
  4545  07DC                     u5761:
  4546  07DC  29D7               	goto	l3982
  4547  07DD                     u5760:
  4548  07DD                     l4234:
  4549                           
  4550                           ;doprnt.c: 1564: *sp = 0;
  4551  07DD  0843               	movf	sprintf@sp^(0+128),w
  4552  07DE  0086               	movwf	6
  4553  07DF  0187               	clrf	7
  4554  07E0  0181               	clrf	1
  4555  07E1                     l497:
  4556  07E1  0008               	return
  4557  07E2                     __end_of_sprintf:
  4558                           
  4559                           	psect	text2
  4560  0D84                     __ptext2:	
  4561 ;; *************** function _scale *****************
  4562 ;; Defined at:
  4563 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  scl             1    wreg     char 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  scl             1   50[BANK0 ] char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  4   30[BANK0 ] char 
  4570 ;; Registers used:
  4571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4577 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;Total ram usage:       21 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; Hardware stack levels required when called: 2
  4584 ;; This function calls:
  4585 ;;		___awdiv
  4586 ;;		___awmod
  4587 ;;		___flmul
  4588 ;; This function is called by:
  4589 ;;		_sprintf
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           
  4594                           ;psect for function _scale
  4595  0D84                     _scale:
  4596                           
  4597                           ;incstack = 0
  4598                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4599                           ;scale@scl stored from wreg
  4600  0D84  0020               	movlb	0	; select bank0
  4601  0D85  00D2               	movwf	scale@scl
  4602  0D86                     l3316:
  4603                           
  4604                           ;doprnt.c: 436: if(scl < 0) {
  4605  0D86  1FD2               	btfss	scale@scl,7
  4606  0D87  2D89               	goto	u4061
  4607  0D88  2D8A               	goto	u4060
  4608  0D89                     u4061:
  4609  0D89  2EC6               	goto	l3338
  4610  0D8A                     u4060:
  4611  0D8A                     l3318:
  4612                           
  4613                           ;doprnt.c: 437: scl = -scl;
  4614  0D8A  09D2               	comf	scale@scl,f
  4615  0D8B  0AD2               	incf	scale@scl,f
  4616  0D8C                     l3320:
  4617                           
  4618                           ;doprnt.c: 438: if(scl>=110)
  4619  0D8C  0852               	movf	scale@scl,w
  4620  0D8D  3A80               	xorlw	128
  4621  0D8E  3E12               	addlw	-238
  4622  0D8F  1C03               	skipc
  4623  0D90  2D92               	goto	u4071
  4624  0D91  2D93               	goto	u4070
  4625  0D92                     u4071:
  4626  0D92  2E3F               	goto	l3328
  4627  0D93                     u4070:
  4628  0D93                     l3322:
  4629                           
  4630                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4631  0D93  300A               	movlw	10
  4632  0D94  00F7               	movwf	___awdiv@divisor
  4633  0D95  3000               	movlw	0
  4634  0D96  00F8               	movwf	___awdiv@divisor+1
  4635  0D97  0852               	movf	scale@scl,w
  4636  0D98  00F2               	movwf	___awmod@dividend
  4637  0D99  01F3               	clrf	___awmod@dividend+1
  4638  0D9A  1BF2               	btfsc	___awmod@dividend,7
  4639  0D9B  03F3               	decf	___awmod@dividend+1,f
  4640  0D9C  3064               	movlw	100
  4641  0D9D  00F0               	movwf	___awmod@divisor
  4642  0D9E  3000               	movlw	0
  4643  0D9F  00F1               	movwf	___awmod@divisor+1
  4644  0DA0  3190  205E  318D   	fcall	___awmod
  4645  0DA3  0871               	movf	?___awmod+1,w
  4646  0DA4  00FA               	movwf	___awdiv@dividend+1
  4647  0DA5  0870               	movf	?___awmod,w
  4648  0DA6  00F9               	movwf	___awdiv@dividend
  4649  0DA7  3191  210B  318D   	fcall	___awdiv
  4650  0DAA  0877               	movf	?___awdiv,w
  4651  0DAB  3E09               	addlw	9
  4652  0DAC  0020               	movlb	0	; select bank0
  4653  0DAD  00C2               	movwf	??_scale
  4654  0DAE  01C3               	clrf	??_scale+1
  4655  0DAF  35C2               	lslf	??_scale,f
  4656  0DB0  0DC3               	rlf	??_scale+1,f
  4657  0DB1  35C2               	lslf	??_scale,f
  4658  0DB2  0DC3               	rlf	??_scale+1,f
  4659  0DB3  3034               	movlw	low (__npowers_| (0+32768))
  4660  0DB4  0742               	addwf	??_scale,w
  4661  0DB5  0084               	movwf	4
  4662  0DB6  30A0               	movlw	high (__npowers_| (0+32768))
  4663  0DB7  3D43               	addwfc	??_scale+1,w
  4664  0DB8  0085               	movwf	5
  4665  0DB9  3F00               	moviw [0]fsr0
  4666  0DBA  00C4               	movwf	??_scale+2
  4667  0DBB  3F01               	moviw [1]fsr0
  4668  0DBC  00C5               	movwf	??_scale+3
  4669  0DBD  3F02               	moviw [2]fsr0
  4670  0DBE  00C6               	movwf	??_scale+4
  4671  0DBF  3F03               	moviw [3]fsr0
  4672  0DC0  00C7               	movwf	??_scale+5
  4673  0DC1  0847               	movf	??_scale+5,w
  4674  0DC2  00A7               	movwf	___flmul@b+3
  4675  0DC3  0846               	movf	??_scale+4,w
  4676  0DC4  00A6               	movwf	___flmul@b+2
  4677  0DC5  0845               	movf	??_scale+3,w
  4678  0DC6  00A5               	movwf	___flmul@b+1
  4679  0DC7  0844               	movf	??_scale+2,w
  4680  0DC8  00A4               	movwf	___flmul@b
  4681  0DC9  3064               	movlw	100
  4682  0DCA  00F7               	movwf	___awdiv@divisor
  4683  0DCB  3000               	movlw	0
  4684  0DCC  00F8               	movwf	___awdiv@divisor+1
  4685  0DCD  0852               	movf	scale@scl,w
  4686  0DCE  00F9               	movwf	___awdiv@dividend
  4687  0DCF  01FA               	clrf	___awdiv@dividend+1
  4688  0DD0  1BF9               	btfsc	___awdiv@dividend,7
  4689  0DD1  03FA               	decf	___awdiv@dividend+1,f
  4690  0DD2  3191  210B  318D   	fcall	___awdiv
  4691  0DD5  0877               	movf	?___awdiv,w
  4692  0DD6  3E12               	addlw	18
  4693  0DD7  0020               	movlb	0	; select bank0
  4694  0DD8  00C8               	movwf	??_scale+6
  4695  0DD9  01C9               	clrf	??_scale+7
  4696  0DDA  35C8               	lslf	??_scale+6,f
  4697  0DDB  0DC9               	rlf	??_scale+7,f
  4698  0DDC  35C8               	lslf	??_scale+6,f
  4699  0DDD  0DC9               	rlf	??_scale+7,f
  4700  0DDE  3034               	movlw	low (__npowers_| (0+32768))
  4701  0DDF  0748               	addwf	??_scale+6,w
  4702  0DE0  0084               	movwf	4
  4703  0DE1  30A0               	movlw	high (__npowers_| (0+32768))
  4704  0DE2  3D49               	addwfc	??_scale+7,w
  4705  0DE3  0085               	movwf	5
  4706  0DE4  3F00               	moviw [0]fsr0
  4707  0DE5  00CA               	movwf	??_scale+8
  4708  0DE6  3F01               	moviw [1]fsr0
  4709  0DE7  00CB               	movwf	??_scale+9
  4710  0DE8  3F02               	moviw [2]fsr0
  4711  0DE9  00CC               	movwf	??_scale+10
  4712  0DEA  3F03               	moviw [3]fsr0
  4713  0DEB  00CD               	movwf	??_scale+11
  4714  0DEC  084D               	movf	??_scale+11,w
  4715  0DED  00AB               	movwf	___flmul@a+3
  4716  0DEE  084C               	movf	??_scale+10,w
  4717  0DEF  00AA               	movwf	___flmul@a+2
  4718  0DF0  084B               	movf	??_scale+9,w
  4719  0DF1  00A9               	movwf	___flmul@a+1
  4720  0DF2  084A               	movf	??_scale+8,w
  4721  0DF3  00A8               	movwf	___flmul@a
  4722  0DF4  318B  232D  318D   	fcall	___flmul
  4723  0DF7  0020               	movlb	0	; select bank0
  4724  0DF8  0827               	movf	?___flmul+3,w
  4725  0DF9  00D1               	movwf	_scale$1076+3
  4726  0DFA  0826               	movf	?___flmul+2,w
  4727  0DFB  00D0               	movwf	_scale$1076+2
  4728  0DFC  0825               	movf	?___flmul+1,w
  4729  0DFD  00CF               	movwf	_scale$1076+1
  4730  0DFE  0824               	movf	?___flmul,w
  4731  0DFF  00CE               	movwf	_scale$1076
  4732                           
  4733                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4734  0E00  300A               	movlw	10
  4735  0E01  00F0               	movwf	___awmod@divisor
  4736  0E02  3000               	movlw	0
  4737  0E03  00F1               	movwf	___awmod@divisor+1
  4738  0E04  0852               	movf	scale@scl,w
  4739  0E05  00F2               	movwf	___awmod@dividend
  4740  0E06  01F3               	clrf	___awmod@dividend+1
  4741  0E07  1BF2               	btfsc	___awmod@dividend,7
  4742  0E08  03F3               	decf	___awmod@dividend+1,f
  4743  0E09  3190  205E  318D   	fcall	___awmod
  4744  0E0C  0870               	movf	?___awmod,w
  4745  0E0D  0020               	movlb	0	; select bank0
  4746  0E0E  00C2               	movwf	??_scale
  4747  0E0F  01C3               	clrf	??_scale+1
  4748  0E10  35C2               	lslf	??_scale,f
  4749  0E11  0DC3               	rlf	??_scale+1,f
  4750  0E12  35C2               	lslf	??_scale,f
  4751  0E13  0DC3               	rlf	??_scale+1,f
  4752  0E14  3034               	movlw	low (__npowers_| (0+32768))
  4753  0E15  0742               	addwf	??_scale,w
  4754  0E16  0084               	movwf	4
  4755  0E17  30A0               	movlw	high (__npowers_| (0+32768))
  4756  0E18  3D43               	addwfc	??_scale+1,w
  4757  0E19  0085               	movwf	5
  4758  0E1A  3F00               	moviw [0]fsr0
  4759  0E1B  00C4               	movwf	??_scale+2
  4760  0E1C  3F01               	moviw [1]fsr0
  4761  0E1D  00C5               	movwf	??_scale+3
  4762  0E1E  3F02               	moviw [2]fsr0
  4763  0E1F  00C6               	movwf	??_scale+4
  4764  0E20  3F03               	moviw [3]fsr0
  4765  0E21  00C7               	movwf	??_scale+5
  4766  0E22  0847               	movf	??_scale+5,w
  4767  0E23  00A7               	movwf	___flmul@b+3
  4768  0E24  0846               	movf	??_scale+4,w
  4769  0E25  00A6               	movwf	___flmul@b+2
  4770  0E26  0845               	movf	??_scale+3,w
  4771  0E27  00A5               	movwf	___flmul@b+1
  4772  0E28  0844               	movf	??_scale+2,w
  4773  0E29  00A4               	movwf	___flmul@b
  4774  0E2A  0851               	movf	_scale$1076+3,w
  4775  0E2B  00AB               	movwf	___flmul@a+3
  4776  0E2C  0850               	movf	_scale$1076+2,w
  4777  0E2D  00AA               	movwf	___flmul@a+2
  4778  0E2E  084F               	movf	_scale$1076+1,w
  4779  0E2F  00A9               	movwf	___flmul@a+1
  4780  0E30  084E               	movf	_scale$1076,w
  4781  0E31  00A8               	movwf	___flmul@a
  4782  0E32  318B  232D  318D   	fcall	___flmul
  4783  0E35  0020               	movlb	0	; select bank0
  4784  0E36  0827               	movf	?___flmul+3,w
  4785  0E37  00C1               	movwf	?_scale+3
  4786  0E38  0826               	movf	?___flmul+2,w
  4787  0E39  00C0               	movwf	?_scale+2
  4788  0E3A  0825               	movf	?___flmul+1,w
  4789  0E3B  00BF               	movwf	?_scale+1
  4790  0E3C  0824               	movf	?___flmul,w
  4791  0E3D  00BE               	movwf	?_scale
  4792  0E3E  2FFF               	goto	l414
  4793  0E3F                     l3328:
  4794                           
  4795                           ;doprnt.c: 440: else if(scl > 10)
  4796  0E3F  0852               	movf	scale@scl,w
  4797  0E40  3A80               	xorlw	128
  4798  0E41  3E75               	addlw	-139
  4799  0E42  1C03               	skipc
  4800  0E43  2E45               	goto	u4081
  4801  0E44  2E46               	goto	u4080
  4802  0E45                     u4081:
  4803  0E45  2EA8               	goto	l3334
  4804  0E46                     u4080:
  4805  0E46                     l3330:
  4806                           
  4807                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  4808  0E46  300A               	movlw	10
  4809  0E47  00F0               	movwf	___awmod@divisor
  4810  0E48  3000               	movlw	0
  4811  0E49  00F1               	movwf	___awmod@divisor+1
  4812  0E4A  0852               	movf	scale@scl,w
  4813  0E4B  00F2               	movwf	___awmod@dividend
  4814  0E4C  01F3               	clrf	___awmod@dividend+1
  4815  0E4D  1BF2               	btfsc	___awmod@dividend,7
  4816  0E4E  03F3               	decf	___awmod@dividend+1,f
  4817  0E4F  3190  205E  318D   	fcall	___awmod
  4818  0E52  0870               	movf	?___awmod,w
  4819  0E53  0020               	movlb	0	; select bank0
  4820  0E54  00C2               	movwf	??_scale
  4821  0E55  01C3               	clrf	??_scale+1
  4822  0E56  35C2               	lslf	??_scale,f
  4823  0E57  0DC3               	rlf	??_scale+1,f
  4824  0E58  35C2               	lslf	??_scale,f
  4825  0E59  0DC3               	rlf	??_scale+1,f
  4826  0E5A  3034               	movlw	low (__npowers_| (0+32768))
  4827  0E5B  0742               	addwf	??_scale,w
  4828  0E5C  0084               	movwf	4
  4829  0E5D  30A0               	movlw	high (__npowers_| (0+32768))
  4830  0E5E  3D43               	addwfc	??_scale+1,w
  4831  0E5F  0085               	movwf	5
  4832  0E60  3F00               	moviw [0]fsr0
  4833  0E61  00C4               	movwf	??_scale+2
  4834  0E62  3F01               	moviw [1]fsr0
  4835  0E63  00C5               	movwf	??_scale+3
  4836  0E64  3F02               	moviw [2]fsr0
  4837  0E65  00C6               	movwf	??_scale+4
  4838  0E66  3F03               	moviw [3]fsr0
  4839  0E67  00C7               	movwf	??_scale+5
  4840  0E68  0847               	movf	??_scale+5,w
  4841  0E69  00A7               	movwf	___flmul@b+3
  4842  0E6A  0846               	movf	??_scale+4,w
  4843  0E6B  00A6               	movwf	___flmul@b+2
  4844  0E6C  0845               	movf	??_scale+3,w
  4845  0E6D  00A5               	movwf	___flmul@b+1
  4846  0E6E  0844               	movf	??_scale+2,w
  4847  0E6F  00A4               	movwf	___flmul@b
  4848  0E70  300A               	movlw	10
  4849  0E71  00F7               	movwf	___awdiv@divisor
  4850  0E72  3000               	movlw	0
  4851  0E73  00F8               	movwf	___awdiv@divisor+1
  4852  0E74  0852               	movf	scale@scl,w
  4853  0E75  00F9               	movwf	___awdiv@dividend
  4854  0E76  01FA               	clrf	___awdiv@dividend+1
  4855  0E77  1BF9               	btfsc	___awdiv@dividend,7
  4856  0E78  03FA               	decf	___awdiv@dividend+1,f
  4857  0E79  3191  210B  318D   	fcall	___awdiv
  4858  0E7C  0877               	movf	?___awdiv,w
  4859  0E7D  3E09               	addlw	9
  4860  0E7E  0020               	movlb	0	; select bank0
  4861  0E7F  00C8               	movwf	??_scale+6
  4862  0E80  01C9               	clrf	??_scale+7
  4863  0E81  35C8               	lslf	??_scale+6,f
  4864  0E82  0DC9               	rlf	??_scale+7,f
  4865  0E83  35C8               	lslf	??_scale+6,f
  4866  0E84  0DC9               	rlf	??_scale+7,f
  4867  0E85  3034               	movlw	low (__npowers_| (0+32768))
  4868  0E86  0748               	addwf	??_scale+6,w
  4869  0E87  0084               	movwf	4
  4870  0E88  30A0               	movlw	high (__npowers_| (0+32768))
  4871  0E89  3D49               	addwfc	??_scale+7,w
  4872  0E8A  0085               	movwf	5
  4873  0E8B  3F00               	moviw [0]fsr0
  4874  0E8C  00CA               	movwf	??_scale+8
  4875  0E8D  3F01               	moviw [1]fsr0
  4876  0E8E  00CB               	movwf	??_scale+9
  4877  0E8F  3F02               	moviw [2]fsr0
  4878  0E90  00CC               	movwf	??_scale+10
  4879  0E91  3F03               	moviw [3]fsr0
  4880  0E92  00CD               	movwf	??_scale+11
  4881  0E93  084D               	movf	??_scale+11,w
  4882  0E94  00AB               	movwf	___flmul@a+3
  4883  0E95  084C               	movf	??_scale+10,w
  4884  0E96  00AA               	movwf	___flmul@a+2
  4885  0E97  084B               	movf	??_scale+9,w
  4886  0E98  00A9               	movwf	___flmul@a+1
  4887  0E99  084A               	movf	??_scale+8,w
  4888  0E9A  00A8               	movwf	___flmul@a
  4889  0E9B  318B  232D  318D   	fcall	___flmul
  4890  0E9E  0020               	movlb	0	; select bank0
  4891  0E9F  0827               	movf	?___flmul+3,w
  4892  0EA0  00C1               	movwf	?_scale+3
  4893  0EA1  0826               	movf	?___flmul+2,w
  4894  0EA2  00C0               	movwf	?_scale+2
  4895  0EA3  0825               	movf	?___flmul+1,w
  4896  0EA4  00BF               	movwf	?_scale+1
  4897  0EA5  0824               	movf	?___flmul,w
  4898  0EA6  00BE               	movwf	?_scale
  4899  0EA7  2FFF               	goto	l414
  4900  0EA8                     l3334:
  4901                           
  4902                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  4903  0EA8  0852               	movf	scale@scl,w
  4904  0EA9  00C2               	movwf	??_scale
  4905  0EAA  01C3               	clrf	??_scale+1
  4906  0EAB  35C2               	lslf	??_scale,f
  4907  0EAC  0DC3               	rlf	??_scale+1,f
  4908  0EAD  35C2               	lslf	??_scale,f
  4909  0EAE  0DC3               	rlf	??_scale+1,f
  4910  0EAF  3034               	movlw	low (__npowers_| (0+32768))
  4911  0EB0  0742               	addwf	??_scale,w
  4912  0EB1  0084               	movwf	4
  4913  0EB2  30A0               	movlw	high (__npowers_| (0+32768))
  4914  0EB3  3D43               	addwfc	??_scale+1,w
  4915  0EB4  0085               	movwf	5
  4916  0EB5  3F00               	moviw [0]fsr0
  4917  0EB6  00C4               	movwf	??_scale+2
  4918  0EB7  3F01               	moviw [1]fsr0
  4919  0EB8  00C5               	movwf	??_scale+3
  4920  0EB9  3F02               	moviw [2]fsr0
  4921  0EBA  00C6               	movwf	??_scale+4
  4922  0EBB  3F03               	moviw [3]fsr0
  4923  0EBC  00C7               	movwf	??_scale+5
  4924  0EBD  0847               	movf	??_scale+5,w
  4925  0EBE  00C1               	movwf	?_scale+3
  4926  0EBF  0846               	movf	??_scale+4,w
  4927  0EC0  00C0               	movwf	?_scale+2
  4928  0EC1  0845               	movf	??_scale+3,w
  4929  0EC2  00BF               	movwf	?_scale+1
  4930  0EC3  0844               	movf	??_scale+2,w
  4931  0EC4  00BE               	movwf	?_scale
  4932  0EC5  2FFF               	goto	l414
  4933  0EC6                     l3338:
  4934                           
  4935                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  4936  0EC6  0852               	movf	scale@scl,w
  4937  0EC7  3A80               	xorlw	128
  4938  0EC8  3E12               	addlw	-238
  4939  0EC9  1C03               	skipc
  4940  0ECA  2ECC               	goto	u4091
  4941  0ECB  2ECD               	goto	u4090
  4942  0ECC                     u4091:
  4943  0ECC  2F79               	goto	l3346
  4944  0ECD                     u4090:
  4945  0ECD                     l3340:
  4946                           
  4947                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  4948  0ECD  300A               	movlw	10
  4949  0ECE  00F7               	movwf	___awdiv@divisor
  4950  0ECF  3000               	movlw	0
  4951  0ED0  00F8               	movwf	___awdiv@divisor+1
  4952  0ED1  0852               	movf	scale@scl,w
  4953  0ED2  00F2               	movwf	___awmod@dividend
  4954  0ED3  01F3               	clrf	___awmod@dividend+1
  4955  0ED4  1BF2               	btfsc	___awmod@dividend,7
  4956  0ED5  03F3               	decf	___awmod@dividend+1,f
  4957  0ED6  3064               	movlw	100
  4958  0ED7  00F0               	movwf	___awmod@divisor
  4959  0ED8  3000               	movlw	0
  4960  0ED9  00F1               	movwf	___awmod@divisor+1
  4961  0EDA  3190  205E  318D   	fcall	___awmod
  4962  0EDD  0871               	movf	?___awmod+1,w
  4963  0EDE  00FA               	movwf	___awdiv@dividend+1
  4964  0EDF  0870               	movf	?___awmod,w
  4965  0EE0  00F9               	movwf	___awdiv@dividend
  4966  0EE1  3191  210B  318D   	fcall	___awdiv
  4967  0EE4  0877               	movf	?___awdiv,w
  4968  0EE5  3E09               	addlw	9
  4969  0EE6  0020               	movlb	0	; select bank0
  4970  0EE7  00C2               	movwf	??_scale
  4971  0EE8  01C3               	clrf	??_scale+1
  4972  0EE9  35C2               	lslf	??_scale,f
  4973  0EEA  0DC3               	rlf	??_scale+1,f
  4974  0EEB  35C2               	lslf	??_scale,f
  4975  0EEC  0DC3               	rlf	??_scale+1,f
  4976  0EED  3000               	movlw	low (__powers_| (0+32768))
  4977  0EEE  0742               	addwf	??_scale,w
  4978  0EEF  0084               	movwf	4
  4979  0EF0  30A0               	movlw	high (__powers_| (0+32768))
  4980  0EF1  3D43               	addwfc	??_scale+1,w
  4981  0EF2  0085               	movwf	5
  4982  0EF3  3F00               	moviw [0]fsr0
  4983  0EF4  00C4               	movwf	??_scale+2
  4984  0EF5  3F01               	moviw [1]fsr0
  4985  0EF6  00C5               	movwf	??_scale+3
  4986  0EF7  3F02               	moviw [2]fsr0
  4987  0EF8  00C6               	movwf	??_scale+4
  4988  0EF9  3F03               	moviw [3]fsr0
  4989  0EFA  00C7               	movwf	??_scale+5
  4990  0EFB  0847               	movf	??_scale+5,w
  4991  0EFC  00A7               	movwf	___flmul@b+3
  4992  0EFD  0846               	movf	??_scale+4,w
  4993  0EFE  00A6               	movwf	___flmul@b+2
  4994  0EFF  0845               	movf	??_scale+3,w
  4995  0F00  00A5               	movwf	___flmul@b+1
  4996  0F01  0844               	movf	??_scale+2,w
  4997  0F02  00A4               	movwf	___flmul@b
  4998  0F03  3064               	movlw	100
  4999  0F04  00F7               	movwf	___awdiv@divisor
  5000  0F05  3000               	movlw	0
  5001  0F06  00F8               	movwf	___awdiv@divisor+1
  5002  0F07  0852               	movf	scale@scl,w
  5003  0F08  00F9               	movwf	___awdiv@dividend
  5004  0F09  01FA               	clrf	___awdiv@dividend+1
  5005  0F0A  1BF9               	btfsc	___awdiv@dividend,7
  5006  0F0B  03FA               	decf	___awdiv@dividend+1,f
  5007  0F0C  3191  210B  318D   	fcall	___awdiv
  5008  0F0F  0877               	movf	?___awdiv,w
  5009  0F10  3E12               	addlw	18
  5010  0F11  0020               	movlb	0	; select bank0
  5011  0F12  00C8               	movwf	??_scale+6
  5012  0F13  01C9               	clrf	??_scale+7
  5013  0F14  35C8               	lslf	??_scale+6,f
  5014  0F15  0DC9               	rlf	??_scale+7,f
  5015  0F16  35C8               	lslf	??_scale+6,f
  5016  0F17  0DC9               	rlf	??_scale+7,f
  5017  0F18  3000               	movlw	low (__powers_| (0+32768))
  5018  0F19  0748               	addwf	??_scale+6,w
  5019  0F1A  0084               	movwf	4
  5020  0F1B  30A0               	movlw	high (__powers_| (0+32768))
  5021  0F1C  3D49               	addwfc	??_scale+7,w
  5022  0F1D  0085               	movwf	5
  5023  0F1E  3F00               	moviw [0]fsr0
  5024  0F1F  00CA               	movwf	??_scale+8
  5025  0F20  3F01               	moviw [1]fsr0
  5026  0F21  00CB               	movwf	??_scale+9
  5027  0F22  3F02               	moviw [2]fsr0
  5028  0F23  00CC               	movwf	??_scale+10
  5029  0F24  3F03               	moviw [3]fsr0
  5030  0F25  00CD               	movwf	??_scale+11
  5031  0F26  084D               	movf	??_scale+11,w
  5032  0F27  00AB               	movwf	___flmul@a+3
  5033  0F28  084C               	movf	??_scale+10,w
  5034  0F29  00AA               	movwf	___flmul@a+2
  5035  0F2A  084B               	movf	??_scale+9,w
  5036  0F2B  00A9               	movwf	___flmul@a+1
  5037  0F2C  084A               	movf	??_scale+8,w
  5038  0F2D  00A8               	movwf	___flmul@a
  5039  0F2E  318B  232D  318D   	fcall	___flmul
  5040  0F31  0020               	movlb	0	; select bank0
  5041  0F32  0827               	movf	?___flmul+3,w
  5042  0F33  00D1               	movwf	_scale$1076+3
  5043  0F34  0826               	movf	?___flmul+2,w
  5044  0F35  00D0               	movwf	_scale$1076+2
  5045  0F36  0825               	movf	?___flmul+1,w
  5046  0F37  00CF               	movwf	_scale$1076+1
  5047  0F38  0824               	movf	?___flmul,w
  5048  0F39  00CE               	movwf	_scale$1076
  5049                           
  5050                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5051  0F3A  300A               	movlw	10
  5052  0F3B  00F0               	movwf	___awmod@divisor
  5053  0F3C  3000               	movlw	0
  5054  0F3D  00F1               	movwf	___awmod@divisor+1
  5055  0F3E  0852               	movf	scale@scl,w
  5056  0F3F  00F2               	movwf	___awmod@dividend
  5057  0F40  01F3               	clrf	___awmod@dividend+1
  5058  0F41  1BF2               	btfsc	___awmod@dividend,7
  5059  0F42  03F3               	decf	___awmod@dividend+1,f
  5060  0F43  3190  205E  318D   	fcall	___awmod
  5061  0F46  0870               	movf	?___awmod,w
  5062  0F47  0020               	movlb	0	; select bank0
  5063  0F48  00C2               	movwf	??_scale
  5064  0F49  01C3               	clrf	??_scale+1
  5065  0F4A  35C2               	lslf	??_scale,f
  5066  0F4B  0DC3               	rlf	??_scale+1,f
  5067  0F4C  35C2               	lslf	??_scale,f
  5068  0F4D  0DC3               	rlf	??_scale+1,f
  5069  0F4E  3000               	movlw	low (__powers_| (0+32768))
  5070  0F4F  0742               	addwf	??_scale,w
  5071  0F50  0084               	movwf	4
  5072  0F51  30A0               	movlw	high (__powers_| (0+32768))
  5073  0F52  3D43               	addwfc	??_scale+1,w
  5074  0F53  0085               	movwf	5
  5075  0F54  3F00               	moviw [0]fsr0
  5076  0F55  00C4               	movwf	??_scale+2
  5077  0F56  3F01               	moviw [1]fsr0
  5078  0F57  00C5               	movwf	??_scale+3
  5079  0F58  3F02               	moviw [2]fsr0
  5080  0F59  00C6               	movwf	??_scale+4
  5081  0F5A  3F03               	moviw [3]fsr0
  5082  0F5B  00C7               	movwf	??_scale+5
  5083  0F5C  0847               	movf	??_scale+5,w
  5084  0F5D  00A7               	movwf	___flmul@b+3
  5085  0F5E  0846               	movf	??_scale+4,w
  5086  0F5F  00A6               	movwf	___flmul@b+2
  5087  0F60  0845               	movf	??_scale+3,w
  5088  0F61  00A5               	movwf	___flmul@b+1
  5089  0F62  0844               	movf	??_scale+2,w
  5090  0F63  00A4               	movwf	___flmul@b
  5091  0F64  0851               	movf	_scale$1076+3,w
  5092  0F65  00AB               	movwf	___flmul@a+3
  5093  0F66  0850               	movf	_scale$1076+2,w
  5094  0F67  00AA               	movwf	___flmul@a+2
  5095  0F68  084F               	movf	_scale$1076+1,w
  5096  0F69  00A9               	movwf	___flmul@a+1
  5097  0F6A  084E               	movf	_scale$1076,w
  5098  0F6B  00A8               	movwf	___flmul@a
  5099  0F6C  318B  232D  318D   	fcall	___flmul
  5100  0F6F  0020               	movlb	0	; select bank0
  5101  0F70  0827               	movf	?___flmul+3,w
  5102  0F71  00C1               	movwf	?_scale+3
  5103  0F72  0826               	movf	?___flmul+2,w
  5104  0F73  00C0               	movwf	?_scale+2
  5105  0F74  0825               	movf	?___flmul+1,w
  5106  0F75  00BF               	movwf	?_scale+1
  5107  0F76  0824               	movf	?___flmul,w
  5108  0F77  00BE               	movwf	?_scale
  5109  0F78  2FFF               	goto	l414
  5110  0F79                     l3346:
  5111                           
  5112                           ;doprnt.c: 446: else if(scl > 10)
  5113  0F79  0852               	movf	scale@scl,w
  5114  0F7A  3A80               	xorlw	128
  5115  0F7B  3E75               	addlw	-139
  5116  0F7C  1C03               	skipc
  5117  0F7D  2F7F               	goto	u4101
  5118  0F7E  2F80               	goto	u4100
  5119  0F7F                     u4101:
  5120  0F7F  2FE2               	goto	l3352
  5121  0F80                     u4100:
  5122  0F80                     l3348:
  5123                           
  5124                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  5125  0F80  300A               	movlw	10
  5126  0F81  00F0               	movwf	___awmod@divisor
  5127  0F82  3000               	movlw	0
  5128  0F83  00F1               	movwf	___awmod@divisor+1
  5129  0F84  0852               	movf	scale@scl,w
  5130  0F85  00F2               	movwf	___awmod@dividend
  5131  0F86  01F3               	clrf	___awmod@dividend+1
  5132  0F87  1BF2               	btfsc	___awmod@dividend,7
  5133  0F88  03F3               	decf	___awmod@dividend+1,f
  5134  0F89  3190  205E  318D   	fcall	___awmod
  5135  0F8C  0870               	movf	?___awmod,w
  5136  0F8D  0020               	movlb	0	; select bank0
  5137  0F8E  00C2               	movwf	??_scale
  5138  0F8F  01C3               	clrf	??_scale+1
  5139  0F90  35C2               	lslf	??_scale,f
  5140  0F91  0DC3               	rlf	??_scale+1,f
  5141  0F92  35C2               	lslf	??_scale,f
  5142  0F93  0DC3               	rlf	??_scale+1,f
  5143  0F94  3000               	movlw	low (__powers_| (0+32768))
  5144  0F95  0742               	addwf	??_scale,w
  5145  0F96  0084               	movwf	4
  5146  0F97  30A0               	movlw	high (__powers_| (0+32768))
  5147  0F98  3D43               	addwfc	??_scale+1,w
  5148  0F99  0085               	movwf	5
  5149  0F9A  3F00               	moviw [0]fsr0
  5150  0F9B  00C4               	movwf	??_scale+2
  5151  0F9C  3F01               	moviw [1]fsr0
  5152  0F9D  00C5               	movwf	??_scale+3
  5153  0F9E  3F02               	moviw [2]fsr0
  5154  0F9F  00C6               	movwf	??_scale+4
  5155  0FA0  3F03               	moviw [3]fsr0
  5156  0FA1  00C7               	movwf	??_scale+5
  5157  0FA2  0847               	movf	??_scale+5,w
  5158  0FA3  00A7               	movwf	___flmul@b+3
  5159  0FA4  0846               	movf	??_scale+4,w
  5160  0FA5  00A6               	movwf	___flmul@b+2
  5161  0FA6  0845               	movf	??_scale+3,w
  5162  0FA7  00A5               	movwf	___flmul@b+1
  5163  0FA8  0844               	movf	??_scale+2,w
  5164  0FA9  00A4               	movwf	___flmul@b
  5165  0FAA  300A               	movlw	10
  5166  0FAB  00F7               	movwf	___awdiv@divisor
  5167  0FAC  3000               	movlw	0
  5168  0FAD  00F8               	movwf	___awdiv@divisor+1
  5169  0FAE  0852               	movf	scale@scl,w
  5170  0FAF  00F9               	movwf	___awdiv@dividend
  5171  0FB0  01FA               	clrf	___awdiv@dividend+1
  5172  0FB1  1BF9               	btfsc	___awdiv@dividend,7
  5173  0FB2  03FA               	decf	___awdiv@dividend+1,f
  5174  0FB3  3191  210B  318D   	fcall	___awdiv
  5175  0FB6  0877               	movf	?___awdiv,w
  5176  0FB7  3E09               	addlw	9
  5177  0FB8  0020               	movlb	0	; select bank0
  5178  0FB9  00C8               	movwf	??_scale+6
  5179  0FBA  01C9               	clrf	??_scale+7
  5180  0FBB  35C8               	lslf	??_scale+6,f
  5181  0FBC  0DC9               	rlf	??_scale+7,f
  5182  0FBD  35C8               	lslf	??_scale+6,f
  5183  0FBE  0DC9               	rlf	??_scale+7,f
  5184  0FBF  3000               	movlw	low (__powers_| (0+32768))
  5185  0FC0  0748               	addwf	??_scale+6,w
  5186  0FC1  0084               	movwf	4
  5187  0FC2  30A0               	movlw	high (__powers_| (0+32768))
  5188  0FC3  3D49               	addwfc	??_scale+7,w
  5189  0FC4  0085               	movwf	5
  5190  0FC5  3F00               	moviw [0]fsr0
  5191  0FC6  00CA               	movwf	??_scale+8
  5192  0FC7  3F01               	moviw [1]fsr0
  5193  0FC8  00CB               	movwf	??_scale+9
  5194  0FC9  3F02               	moviw [2]fsr0
  5195  0FCA  00CC               	movwf	??_scale+10
  5196  0FCB  3F03               	moviw [3]fsr0
  5197  0FCC  00CD               	movwf	??_scale+11
  5198  0FCD  084D               	movf	??_scale+11,w
  5199  0FCE  00AB               	movwf	___flmul@a+3
  5200  0FCF  084C               	movf	??_scale+10,w
  5201  0FD0  00AA               	movwf	___flmul@a+2
  5202  0FD1  084B               	movf	??_scale+9,w
  5203  0FD2  00A9               	movwf	___flmul@a+1
  5204  0FD3  084A               	movf	??_scale+8,w
  5205  0FD4  00A8               	movwf	___flmul@a
  5206  0FD5  318B  232D  318D   	fcall	___flmul
  5207  0FD8  0020               	movlb	0	; select bank0
  5208  0FD9  0827               	movf	?___flmul+3,w
  5209  0FDA  00C1               	movwf	?_scale+3
  5210  0FDB  0826               	movf	?___flmul+2,w
  5211  0FDC  00C0               	movwf	?_scale+2
  5212  0FDD  0825               	movf	?___flmul+1,w
  5213  0FDE  00BF               	movwf	?_scale+1
  5214  0FDF  0824               	movf	?___flmul,w
  5215  0FE0  00BE               	movwf	?_scale
  5216  0FE1  2FFF               	goto	l414
  5217  0FE2                     l3352:
  5218                           
  5219                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  5220  0FE2  0852               	movf	scale@scl,w
  5221  0FE3  00C2               	movwf	??_scale
  5222  0FE4  01C3               	clrf	??_scale+1
  5223  0FE5  35C2               	lslf	??_scale,f
  5224  0FE6  0DC3               	rlf	??_scale+1,f
  5225  0FE7  35C2               	lslf	??_scale,f
  5226  0FE8  0DC3               	rlf	??_scale+1,f
  5227  0FE9  3000               	movlw	low (__powers_| (0+32768))
  5228  0FEA  0742               	addwf	??_scale,w
  5229  0FEB  0084               	movwf	4
  5230  0FEC  30A0               	movlw	high (__powers_| (0+32768))
  5231  0FED  3D43               	addwfc	??_scale+1,w
  5232  0FEE  0085               	movwf	5
  5233  0FEF  3F00               	moviw [0]fsr0
  5234  0FF0  00C4               	movwf	??_scale+2
  5235  0FF1  3F01               	moviw [1]fsr0
  5236  0FF2  00C5               	movwf	??_scale+3
  5237  0FF3  3F02               	moviw [2]fsr0
  5238  0FF4  00C6               	movwf	??_scale+4
  5239  0FF5  3F03               	moviw [3]fsr0
  5240  0FF6  00C7               	movwf	??_scale+5
  5241  0FF7  0847               	movf	??_scale+5,w
  5242  0FF8  00C1               	movwf	?_scale+3
  5243  0FF9  0846               	movf	??_scale+4,w
  5244  0FFA  00C0               	movwf	?_scale+2
  5245  0FFB  0845               	movf	??_scale+3,w
  5246  0FFC  00BF               	movwf	?_scale+1
  5247  0FFD  0844               	movf	??_scale+2,w
  5248  0FFE  00BE               	movwf	?_scale
  5249  0FFF                     l414:
  5250  0FFF  0008               	return
  5251  1000                     __end_of_scale:
  5252                           
  5253                           	psect	text3
  5254  105E                     __ptext3:	
  5255 ;; *************** function ___awmod *****************
  5256 ;; Defined at:
  5257 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  divisor         2    0[COMMON] int 
  5260 ;;  dividend        2    2[COMMON] int 
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  sign            1    6[COMMON] unsigned char 
  5263 ;;  counter         1    5[COMMON] unsigned char 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  2    0[COMMON] int 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2, status,0
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5276 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;Total ram usage:        7 bytes
  5278 ;; Hardware stack levels used: 1
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_scale
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           
  5287                           ;psect for function ___awmod
  5288  105E                     ___awmod:
  5289  105E                     l2798:	
  5290                           ;incstack = 0
  5291                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5292                           
  5293  105E  01F6               	clrf	___awmod@sign
  5294  105F                     l2800:
  5295  105F  1FF3               	btfss	___awmod@dividend+1,7
  5296  1060  2862               	goto	u3111
  5297  1061  2863               	goto	u3110
  5298  1062                     u3111:
  5299  1062  286A               	goto	l2806
  5300  1063                     u3110:
  5301  1063                     l2802:
  5302  1063  09F2               	comf	___awmod@dividend,f
  5303  1064  09F3               	comf	___awmod@dividend+1,f
  5304  1065  0AF2               	incf	___awmod@dividend,f
  5305  1066  1903               	skipnz
  5306  1067  0AF3               	incf	___awmod@dividend+1,f
  5307  1068                     l2804:
  5308  1068  01F6               	clrf	___awmod@sign
  5309  1069  0AF6               	incf	___awmod@sign,f
  5310  106A                     l2806:
  5311  106A  1FF1               	btfss	___awmod@divisor+1,7
  5312  106B  286D               	goto	u3121
  5313  106C  286E               	goto	u3120
  5314  106D                     u3121:
  5315  106D  2873               	goto	l2810
  5316  106E                     u3120:
  5317  106E                     l2808:
  5318  106E  09F0               	comf	___awmod@divisor,f
  5319  106F  09F1               	comf	___awmod@divisor+1,f
  5320  1070  0AF0               	incf	___awmod@divisor,f
  5321  1071  1903               	skipnz
  5322  1072  0AF1               	incf	___awmod@divisor+1,f
  5323  1073                     l2810:
  5324  1073  0870               	movf	___awmod@divisor,w
  5325  1074  0471               	iorwf	___awmod@divisor+1,w
  5326  1075  1903               	btfsc	3,2
  5327  1076  2878               	goto	u3131
  5328  1077  2879               	goto	u3130
  5329  1078                     u3131:
  5330  1078  28A2               	goto	l2828
  5331  1079                     u3130:
  5332  1079                     l2812:
  5333  1079  01F5               	clrf	___awmod@counter
  5334  107A  0AF5               	incf	___awmod@counter,f
  5335  107B  2885               	goto	l2818
  5336  107C                     l2814:
  5337  107C  3001               	movlw	1
  5338  107D                     u3145:
  5339  107D  35F0               	lslf	___awmod@divisor,f
  5340  107E  0DF1               	rlf	___awmod@divisor+1,f
  5341  107F  0B89               	decfsz	9,f
  5342  1080  287D               	goto	u3145
  5343  1081                     l2816:
  5344  1081  3001               	movlw	1
  5345  1082  00F4               	movwf	??___awmod
  5346  1083  0874               	movf	??___awmod,w
  5347  1084  07F5               	addwf	___awmod@counter,f
  5348  1085                     l2818:
  5349  1085  1FF1               	btfss	___awmod@divisor+1,7
  5350  1086  2888               	goto	u3151
  5351  1087  2889               	goto	u3150
  5352  1088                     u3151:
  5353  1088  287C               	goto	l2814
  5354  1089                     u3150:
  5355  1089                     l2820:
  5356  1089  0871               	movf	___awmod@divisor+1,w
  5357  108A  0273               	subwf	___awmod@dividend+1,w
  5358  108B  1D03               	skipz
  5359  108C  288F               	goto	u3165
  5360  108D  0870               	movf	___awmod@divisor,w
  5361  108E  0272               	subwf	___awmod@dividend,w
  5362  108F                     u3165:
  5363  108F  1C03               	skipc
  5364  1090  2892               	goto	u3161
  5365  1091  2893               	goto	u3160
  5366  1092                     u3161:
  5367  1092  2897               	goto	l2824
  5368  1093                     u3160:
  5369  1093                     l2822:
  5370  1093  0870               	movf	___awmod@divisor,w
  5371  1094  02F2               	subwf	___awmod@dividend,f
  5372  1095  0871               	movf	___awmod@divisor+1,w
  5373  1096  3BF3               	subwfb	___awmod@dividend+1,f
  5374  1097                     l2824:
  5375  1097  3001               	movlw	1
  5376  1098                     u3175:
  5377  1098  36F1               	lsrf	___awmod@divisor+1,f
  5378  1099  0CF0               	rrf	___awmod@divisor,f
  5379  109A  0B89               	decfsz	9,f
  5380  109B  2898               	goto	u3175
  5381  109C                     l2826:
  5382  109C  3001               	movlw	1
  5383  109D  02F5               	subwf	___awmod@counter,f
  5384  109E  1D03               	btfss	3,2
  5385  109F  28A1               	goto	u3181
  5386  10A0  28A2               	goto	u3180
  5387  10A1                     u3181:
  5388  10A1  2889               	goto	l2820
  5389  10A2                     u3180:
  5390  10A2                     l2828:
  5391  10A2  0876               	movf	___awmod@sign,w
  5392  10A3  1903               	btfsc	3,2
  5393  10A4  28A6               	goto	u3191
  5394  10A5  28A7               	goto	u3190
  5395  10A6                     u3191:
  5396  10A6  28AC               	goto	l2832
  5397  10A7                     u3190:
  5398  10A7                     l2830:
  5399  10A7  09F2               	comf	___awmod@dividend,f
  5400  10A8  09F3               	comf	___awmod@dividend+1,f
  5401  10A9  0AF2               	incf	___awmod@dividend,f
  5402  10AA  1903               	skipnz
  5403  10AB  0AF3               	incf	___awmod@dividend+1,f
  5404  10AC                     l2832:
  5405  10AC  0873               	movf	___awmod@dividend+1,w
  5406  10AD  00F1               	movwf	?___awmod+1
  5407  10AE  0872               	movf	___awmod@dividend,w
  5408  10AF  00F0               	movwf	?___awmod
  5409  10B0                     l667:
  5410  10B0  0008               	return
  5411  10B1                     __end_of___awmod:
  5412                           
  5413                           	psect	text4
  5414  110B                     __ptext4:	
  5415 ;; *************** function ___awdiv *****************
  5416 ;; Defined at:
  5417 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  divisor         2    7[COMMON] int 
  5420 ;;  dividend        2    9[COMMON] int 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  quotient        2    2[BANK0 ] int 
  5423 ;;  sign            1    1[BANK0 ] unsigned char 
  5424 ;;  counter         1    0[BANK0 ] unsigned char 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  2    7[COMMON] int 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5435 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5437 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5438 ;;Total ram usage:        9 bytes
  5439 ;; Hardware stack levels used: 1
  5440 ;; This function calls:
  5441 ;;		Nothing
  5442 ;; This function is called by:
  5443 ;;		_scale
  5444 ;;		_sprintf
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           
  5449                           ;psect for function ___awdiv
  5450  110B                     ___awdiv:
  5451  110B                     l2754:	
  5452                           ;incstack = 0
  5453                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5454                           
  5455  110B  0020               	movlb	0	; select bank0
  5456  110C  01A1               	clrf	___awdiv@sign
  5457  110D                     l2756:
  5458  110D  1FF8               	btfss	___awdiv@divisor+1,7
  5459  110E  2910               	goto	u3011
  5460  110F  2911               	goto	u3010
  5461  1110                     u3011:
  5462  1110  2918               	goto	l2762
  5463  1111                     u3010:
  5464  1111                     l2758:
  5465  1111  09F7               	comf	___awdiv@divisor,f
  5466  1112  09F8               	comf	___awdiv@divisor+1,f
  5467  1113  0AF7               	incf	___awdiv@divisor,f
  5468  1114  1903               	skipnz
  5469  1115  0AF8               	incf	___awdiv@divisor+1,f
  5470  1116                     l2760:
  5471  1116  01A1               	clrf	___awdiv@sign
  5472  1117  0AA1               	incf	___awdiv@sign,f
  5473  1118                     l2762:
  5474  1118  1FFA               	btfss	___awdiv@dividend+1,7
  5475  1119  291B               	goto	u3021
  5476  111A  291C               	goto	u3020
  5477  111B                     u3021:
  5478  111B  2925               	goto	l2768
  5479  111C                     u3020:
  5480  111C                     l2764:
  5481  111C  09F9               	comf	___awdiv@dividend,f
  5482  111D  09FA               	comf	___awdiv@dividend+1,f
  5483  111E  0AF9               	incf	___awdiv@dividend,f
  5484  111F  1903               	skipnz
  5485  1120  0AFA               	incf	___awdiv@dividend+1,f
  5486  1121                     l2766:
  5487  1121  3001               	movlw	1
  5488  1122  00FB               	movwf	??___awdiv
  5489  1123  087B               	movf	??___awdiv,w
  5490  1124  06A1               	xorwf	___awdiv@sign,f
  5491  1125                     l2768:
  5492  1125  01A2               	clrf	___awdiv@quotient
  5493  1126  01A3               	clrf	___awdiv@quotient+1
  5494  1127                     l2770:
  5495  1127  0877               	movf	___awdiv@divisor,w
  5496  1128  0478               	iorwf	___awdiv@divisor+1,w
  5497  1129  1903               	btfsc	3,2
  5498  112A  292C               	goto	u3031
  5499  112B  292D               	goto	u3030
  5500  112C                     u3031:
  5501  112C  295C               	goto	l2790
  5502  112D                     u3030:
  5503  112D                     l2772:
  5504  112D  01A0               	clrf	___awdiv@counter
  5505  112E  0AA0               	incf	___awdiv@counter,f
  5506  112F  2939               	goto	l2778
  5507  1130                     l2774:
  5508  1130  3001               	movlw	1
  5509  1131                     u3045:
  5510  1131  35F7               	lslf	___awdiv@divisor,f
  5511  1132  0DF8               	rlf	___awdiv@divisor+1,f
  5512  1133  0B89               	decfsz	9,f
  5513  1134  2931               	goto	u3045
  5514  1135                     l2776:
  5515  1135  3001               	movlw	1
  5516  1136  00FB               	movwf	??___awdiv
  5517  1137  087B               	movf	??___awdiv,w
  5518  1138  07A0               	addwf	___awdiv@counter,f
  5519  1139                     l2778:
  5520  1139  1FF8               	btfss	___awdiv@divisor+1,7
  5521  113A  293C               	goto	u3051
  5522  113B  293D               	goto	u3050
  5523  113C                     u3051:
  5524  113C  2930               	goto	l2774
  5525  113D                     u3050:
  5526  113D                     l2780:
  5527  113D  3001               	movlw	1
  5528  113E                     u3065:
  5529  113E  35A2               	lslf	___awdiv@quotient,f
  5530  113F  0DA3               	rlf	___awdiv@quotient+1,f
  5531  1140  0B89               	decfsz	9,f
  5532  1141  293E               	goto	u3065
  5533  1142  0878               	movf	___awdiv@divisor+1,w
  5534  1143  027A               	subwf	___awdiv@dividend+1,w
  5535  1144  1D03               	skipz
  5536  1145  2948               	goto	u3075
  5537  1146  0877               	movf	___awdiv@divisor,w
  5538  1147  0279               	subwf	___awdiv@dividend,w
  5539  1148                     u3075:
  5540  1148  1C03               	skipc
  5541  1149  294B               	goto	u3071
  5542  114A  294C               	goto	u3070
  5543  114B                     u3071:
  5544  114B  2951               	goto	l2786
  5545  114C                     u3070:
  5546  114C                     l2782:
  5547  114C  0877               	movf	___awdiv@divisor,w
  5548  114D  02F9               	subwf	___awdiv@dividend,f
  5549  114E  0878               	movf	___awdiv@divisor+1,w
  5550  114F  3BFA               	subwfb	___awdiv@dividend+1,f
  5551  1150                     l2784:
  5552  1150  1422               	bsf	___awdiv@quotient,0
  5553  1151                     l2786:
  5554  1151  3001               	movlw	1
  5555  1152                     u3085:
  5556  1152  36F8               	lsrf	___awdiv@divisor+1,f
  5557  1153  0CF7               	rrf	___awdiv@divisor,f
  5558  1154  0B89               	decfsz	9,f
  5559  1155  2952               	goto	u3085
  5560  1156                     l2788:
  5561  1156  3001               	movlw	1
  5562  1157  02A0               	subwf	___awdiv@counter,f
  5563  1158  1D03               	btfss	3,2
  5564  1159  295B               	goto	u3091
  5565  115A  295C               	goto	u3090
  5566  115B                     u3091:
  5567  115B  293D               	goto	l2780
  5568  115C                     u3090:
  5569  115C                     l2790:
  5570  115C  0821               	movf	___awdiv@sign,w
  5571  115D  1903               	btfsc	3,2
  5572  115E  2960               	goto	u3101
  5573  115F  2961               	goto	u3100
  5574  1160                     u3101:
  5575  1160  2966               	goto	l2794
  5576  1161                     u3100:
  5577  1161                     l2792:
  5578  1161  09A2               	comf	___awdiv@quotient,f
  5579  1162  09A3               	comf	___awdiv@quotient+1,f
  5580  1163  0AA2               	incf	___awdiv@quotient,f
  5581  1164  1903               	skipnz
  5582  1165  0AA3               	incf	___awdiv@quotient+1,f
  5583  1166                     l2794:
  5584  1166  0823               	movf	___awdiv@quotient+1,w
  5585  1167  00F8               	movwf	?___awdiv+1
  5586  1168  0822               	movf	___awdiv@quotient,w
  5587  1169  00F7               	movwf	?___awdiv
  5588  116A                     l654:
  5589  116A  0008               	return
  5590  116B                     __end_of___awdiv:
  5591                           
  5592                           	psect	text5
  5593  1DDD                     __ptext5:	
  5594 ;; *************** function _isdigit *****************
  5595 ;; Defined at:
  5596 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  c               1    wreg     unsigned char 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  c               1    1[COMMON] unsigned char 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;		None               void
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, status,0
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5614 ;;Total ram usage:        2 bytes
  5615 ;; Hardware stack levels used: 1
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_sprintf
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           
  5624                           ;psect for function _isdigit
  5625  1DDD                     _isdigit:
  5626                           
  5627                           ;incstack = 0
  5628                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5629                           ;isdigit@c stored from wreg
  5630  1DDD  00F1               	movwf	isdigit@c
  5631  1DDE                     l3356:
  5632  1DDE  01F0               	clrf	_isdigit$881
  5633  1DDF                     l3358:
  5634  1DDF  303A               	movlw	58
  5635  1DE0  0271               	subwf	isdigit@c,w
  5636  1DE1  1803               	skipnc
  5637  1DE2  2DE4               	goto	u4111
  5638  1DE3  2DE5               	goto	u4110
  5639  1DE4                     u4111:
  5640  1DE4  2DED               	goto	l3364
  5641  1DE5                     u4110:
  5642  1DE5                     l3360:
  5643  1DE5  3030               	movlw	48
  5644  1DE6  0271               	subwf	isdigit@c,w
  5645  1DE7  1C03               	skipc
  5646  1DE8  2DEA               	goto	u4121
  5647  1DE9  2DEB               	goto	u4120
  5648  1DEA                     u4121:
  5649  1DEA  2DED               	goto	l3364
  5650  1DEB                     u4120:
  5651  1DEB                     l3362:
  5652  1DEB  01F0               	clrf	_isdigit$881
  5653  1DEC  0AF0               	incf	_isdigit$881,f
  5654  1DED                     l3364:
  5655  1DED  0C70               	rrf	_isdigit$881,w
  5656  1DEE                     l988:
  5657  1DEE  0008               	return
  5658  1DEF                     __end_of_isdigit:
  5659                           
  5660                           	psect	text6
  5661  1678                     __ptext6:	
  5662 ;; *************** function _fround *****************
  5663 ;; Defined at:
  5664 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  prec            1    wreg     unsigned char 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;  prec            1   48[BANK0 ] unsigned char 
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  4   30[BANK0 ] unsigned char 
  5671 ;; Registers used:
  5672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5678 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5681 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;Total ram usage:       19 bytes
  5683 ;; Hardware stack levels used: 1
  5684 ;; Hardware stack levels required when called: 2
  5685 ;; This function calls:
  5686 ;;		___flmul
  5687 ;;		___lwdiv
  5688 ;;		___lwmod
  5689 ;; This function is called by:
  5690 ;;		_sprintf
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           
  5695                           ;psect for function _fround
  5696  1678                     _fround:
  5697                           
  5698                           ;incstack = 0
  5699                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5700                           ;fround@prec stored from wreg
  5701  1678  0020               	movlb	0	; select bank0
  5702  1679  00D0               	movwf	fround@prec
  5703  167A                     l3298:
  5704                           
  5705                           ;doprnt.c: 421: if(prec>=110)
  5706  167A  306E               	movlw	110
  5707  167B  0250               	subwf	fround@prec,w
  5708  167C  1C03               	skipc
  5709  167D  2E7F               	goto	u4041
  5710  167E  2E80               	goto	u4040
  5711  167F                     u4041:
  5712  167F  2F49               	goto	l3306
  5713  1680                     u4040:
  5714  1680                     l3300:
  5715                           
  5716                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  5717  1680  303F               	movlw	63
  5718  1681  00A7               	movwf	___flmul@b+3
  5719  1682  3000               	movlw	0
  5720  1683  00A6               	movwf	___flmul@b+2
  5721  1684  3000               	movlw	0
  5722  1685  00A5               	movwf	___flmul@b+1
  5723  1686  3000               	movlw	0
  5724  1687  00A4               	movwf	___flmul@b
  5725  1688  3064               	movlw	100
  5726  1689  00F6               	movwf	___lwdiv@divisor
  5727  168A  3000               	movlw	0
  5728  168B  00F7               	movwf	___lwdiv@divisor+1
  5729  168C  0850               	movf	fround@prec,w
  5730  168D  00C2               	movwf	??_fround
  5731  168E  01C3               	clrf	??_fround+1
  5732  168F  0842               	movf	??_fround,w
  5733  1690  00F8               	movwf	___lwdiv@dividend
  5734  1691  0843               	movf	??_fround+1,w
  5735  1692  00F9               	movwf	___lwdiv@dividend+1
  5736  1693  319F  272C  3196   	fcall	___lwdiv
  5737  1696  0877               	movf	?___lwdiv+1,w
  5738  1697  0085               	movwf	5
  5739  1698  0876               	movf	?___lwdiv,w
  5740  1699  0084               	movwf	4
  5741  169A  3584               	lslf	4,f
  5742  169B  0D85               	rlf	5,f
  5743  169C  3584               	lslf	4,f
  5744  169D  0D85               	rlf	5,f
  5745  169E  307C               	movlw	low ((__npowers_+72)| (0+32768))
  5746  169F  0784               	addwf	4,f
  5747  16A0  30A0               	movlw	high ((__npowers_+72)| (0+32768))
  5748  16A1  3D85               	addwfc	5,f
  5749  16A2  3F00               	moviw [0]fsr0
  5750  16A3  0020               	movlb	0	; select bank0
  5751  16A4  00C4               	movwf	??_fround+2
  5752  16A5  3F01               	moviw [1]fsr0
  5753  16A6  00C5               	movwf	??_fround+3
  5754  16A7  3F02               	moviw [2]fsr0
  5755  16A8  00C6               	movwf	??_fround+4
  5756  16A9  3F03               	moviw [3]fsr0
  5757  16AA  00C7               	movwf	??_fround+5
  5758  16AB  0847               	movf	??_fround+5,w
  5759  16AC  00AB               	movwf	___flmul@a+3
  5760  16AD  0846               	movf	??_fround+4,w
  5761  16AE  00AA               	movwf	___flmul@a+2
  5762  16AF  0845               	movf	??_fround+3,w
  5763  16B0  00A9               	movwf	___flmul@a+1
  5764  16B1  0844               	movf	??_fround+2,w
  5765  16B2  00A8               	movwf	___flmul@a
  5766  16B3  318B  232D  3196   	fcall	___flmul
  5767  16B6  0020               	movlb	0	; select bank0
  5768  16B7  0827               	movf	?___flmul+3,w
  5769  16B8  00CF               	movwf	_fround$1074+3
  5770  16B9  0826               	movf	?___flmul+2,w
  5771  16BA  00CE               	movwf	_fround$1074+2
  5772  16BB  0825               	movf	?___flmul+1,w
  5773  16BC  00CD               	movwf	_fround$1074+1
  5774  16BD  0824               	movf	?___flmul,w
  5775  16BE  00CC               	movwf	_fround$1074
  5776                           
  5777                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  5778  16BF  300A               	movlw	10
  5779  16C0  00F6               	movwf	___lwdiv@divisor
  5780  16C1  3000               	movlw	0
  5781  16C2  00F7               	movwf	___lwdiv@divisor+1
  5782  16C3  0850               	movf	fround@prec,w
  5783  16C4  00C2               	movwf	??_fround
  5784  16C5  01C3               	clrf	??_fround+1
  5785  16C6  0842               	movf	??_fround,w
  5786  16C7  00F2               	movwf	___lwmod@dividend
  5787  16C8  0843               	movf	??_fround+1,w
  5788  16C9  00F3               	movwf	___lwmod@dividend+1
  5789  16CA  3064               	movlw	100
  5790  16CB  00F0               	movwf	___lwmod@divisor
  5791  16CC  3000               	movlw	0
  5792  16CD  00F1               	movwf	___lwmod@divisor+1
  5793  16CE  319E  26C0  3196   	fcall	___lwmod
  5794  16D1  0871               	movf	?___lwmod+1,w
  5795  16D2  00F9               	movwf	___lwdiv@dividend+1
  5796  16D3  0870               	movf	?___lwmod,w
  5797  16D4  00F8               	movwf	___lwdiv@dividend
  5798  16D5  319F  272C  3196   	fcall	___lwdiv
  5799  16D8  0877               	movf	?___lwdiv+1,w
  5800  16D9  0085               	movwf	5
  5801  16DA  0876               	movf	?___lwdiv,w
  5802  16DB  0084               	movwf	4
  5803  16DC  3584               	lslf	4,f
  5804  16DD  0D85               	rlf	5,f
  5805  16DE  3584               	lslf	4,f
  5806  16DF  0D85               	rlf	5,f
  5807  16E0  3058               	movlw	low ((__npowers_+36)| (0+32768))
  5808  16E1  0784               	addwf	4,f
  5809  16E2  30A0               	movlw	high ((__npowers_+36)| (0+32768))
  5810  16E3  3D85               	addwfc	5,f
  5811  16E4  3F00               	moviw [0]fsr0
  5812  16E5  0020               	movlb	0	; select bank0
  5813  16E6  00C4               	movwf	??_fround+2
  5814  16E7  3F01               	moviw [1]fsr0
  5815  16E8  00C5               	movwf	??_fround+3
  5816  16E9  3F02               	moviw [2]fsr0
  5817  16EA  00C6               	movwf	??_fround+4
  5818  16EB  3F03               	moviw [3]fsr0
  5819  16EC  00C7               	movwf	??_fround+5
  5820  16ED  0847               	movf	??_fround+5,w
  5821  16EE  00A7               	movwf	___flmul@b+3
  5822  16EF  0846               	movf	??_fround+4,w
  5823  16F0  00A6               	movwf	___flmul@b+2
  5824  16F1  0845               	movf	??_fround+3,w
  5825  16F2  00A5               	movwf	___flmul@b+1
  5826  16F3  0844               	movf	??_fround+2,w
  5827  16F4  00A4               	movwf	___flmul@b
  5828  16F5  084F               	movf	_fround$1074+3,w
  5829  16F6  00AB               	movwf	___flmul@a+3
  5830  16F7  084E               	movf	_fround$1074+2,w
  5831  16F8  00AA               	movwf	___flmul@a+2
  5832  16F9  084D               	movf	_fround$1074+1,w
  5833  16FA  00A9               	movwf	___flmul@a+1
  5834  16FB  084C               	movf	_fround$1074,w
  5835  16FC  00A8               	movwf	___flmul@a
  5836  16FD  318B  232D  3196   	fcall	___flmul
  5837  1700  0020               	movlb	0	; select bank0
  5838  1701  0827               	movf	?___flmul+3,w
  5839  1702  00CB               	movwf	_fround$1075+3
  5840  1703  0826               	movf	?___flmul+2,w
  5841  1704  00CA               	movwf	_fround$1075+2
  5842  1705  0825               	movf	?___flmul+1,w
  5843  1706  00C9               	movwf	_fround$1075+1
  5844  1707  0824               	movf	?___flmul,w
  5845  1708  00C8               	movwf	_fround$1075
  5846                           
  5847                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  5848  1709  300A               	movlw	10
  5849  170A  00F0               	movwf	___lwmod@divisor
  5850  170B  3000               	movlw	0
  5851  170C  00F1               	movwf	___lwmod@divisor+1
  5852  170D  0850               	movf	fround@prec,w
  5853  170E  00C2               	movwf	??_fround
  5854  170F  01C3               	clrf	??_fround+1
  5855  1710  0842               	movf	??_fround,w
  5856  1711  00F2               	movwf	___lwmod@dividend
  5857  1712  0843               	movf	??_fround+1,w
  5858  1713  00F3               	movwf	___lwmod@dividend+1
  5859  1714  319E  26C0  3196   	fcall	___lwmod
  5860  1717  0871               	movf	?___lwmod+1,w
  5861  1718  0085               	movwf	5
  5862  1719  0870               	movf	?___lwmod,w
  5863  171A  0084               	movwf	4
  5864  171B  3584               	lslf	4,f
  5865  171C  0D85               	rlf	5,f
  5866  171D  3584               	lslf	4,f
  5867  171E  0D85               	rlf	5,f
  5868  171F  3034               	movlw	low (__npowers_| (0+32768))
  5869  1720  0784               	addwf	4,f
  5870  1721  30A0               	movlw	high (__npowers_| (0+32768))
  5871  1722  3D85               	addwfc	5,f
  5872  1723  3F00               	moviw [0]fsr0
  5873  1724  0020               	movlb	0	; select bank0
  5874  1725  00C4               	movwf	??_fround+2
  5875  1726  3F01               	moviw [1]fsr0
  5876  1727  00C5               	movwf	??_fround+3
  5877  1728  3F02               	moviw [2]fsr0
  5878  1729  00C6               	movwf	??_fround+4
  5879  172A  3F03               	moviw [3]fsr0
  5880  172B  00C7               	movwf	??_fround+5
  5881  172C  0847               	movf	??_fround+5,w
  5882  172D  00A7               	movwf	___flmul@b+3
  5883  172E  0846               	movf	??_fround+4,w
  5884  172F  00A6               	movwf	___flmul@b+2
  5885  1730  0845               	movf	??_fround+3,w
  5886  1731  00A5               	movwf	___flmul@b+1
  5887  1732  0844               	movf	??_fround+2,w
  5888  1733  00A4               	movwf	___flmul@b
  5889  1734  084B               	movf	_fround$1075+3,w
  5890  1735  00AB               	movwf	___flmul@a+3
  5891  1736  084A               	movf	_fround$1075+2,w
  5892  1737  00AA               	movwf	___flmul@a+2
  5893  1738  0849               	movf	_fround$1075+1,w
  5894  1739  00A9               	movwf	___flmul@a+1
  5895  173A  0848               	movf	_fround$1075,w
  5896  173B  00A8               	movwf	___flmul@a
  5897  173C  318B  232D  3196   	fcall	___flmul
  5898  173F  0020               	movlb	0	; select bank0
  5899  1740  0827               	movf	?___flmul+3,w
  5900  1741  00C1               	movwf	?_fround+3
  5901  1742  0826               	movf	?___flmul+2,w
  5902  1743  00C0               	movwf	?_fround+2
  5903  1744  0825               	movf	?___flmul+1,w
  5904  1745  00BF               	movwf	?_fround+1
  5905  1746  0824               	movf	?___flmul,w
  5906  1747  00BE               	movwf	?_fround
  5907  1748  2FFF               	goto	l407
  5908  1749                     l3306:
  5909                           
  5910                           ;doprnt.c: 423: else if(prec > 10)
  5911  1749  300B               	movlw	11
  5912  174A  0250               	subwf	fround@prec,w
  5913  174B  1C03               	skipc
  5914  174C  2F4E               	goto	u4051
  5915  174D  2F4F               	goto	u4050
  5916  174E                     u4051:
  5917  174E  2FCE               	goto	l3312
  5918  174F                     u4050:
  5919  174F                     l3308:
  5920                           
  5921                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5922  174F  303F               	movlw	63
  5923  1750  00A7               	movwf	___flmul@b+3
  5924  1751  3000               	movlw	0
  5925  1752  00A6               	movwf	___flmul@b+2
  5926  1753  3000               	movlw	0
  5927  1754  00A5               	movwf	___flmul@b+1
  5928  1755  3000               	movlw	0
  5929  1756  00A4               	movwf	___flmul@b
  5930  1757  300A               	movlw	10
  5931  1758  00F6               	movwf	___lwdiv@divisor
  5932  1759  3000               	movlw	0
  5933  175A  00F7               	movwf	___lwdiv@divisor+1
  5934  175B  0850               	movf	fround@prec,w
  5935  175C  00C2               	movwf	??_fround
  5936  175D  01C3               	clrf	??_fround+1
  5937  175E  0842               	movf	??_fround,w
  5938  175F  00F8               	movwf	___lwdiv@dividend
  5939  1760  0843               	movf	??_fround+1,w
  5940  1761  00F9               	movwf	___lwdiv@dividend+1
  5941  1762  319F  272C  3196   	fcall	___lwdiv
  5942  1765  0877               	movf	?___lwdiv+1,w
  5943  1766  0085               	movwf	5
  5944  1767  0876               	movf	?___lwdiv,w
  5945  1768  0084               	movwf	4
  5946  1769  3584               	lslf	4,f
  5947  176A  0D85               	rlf	5,f
  5948  176B  3584               	lslf	4,f
  5949  176C  0D85               	rlf	5,f
  5950  176D  3058               	movlw	low ((__npowers_+36)| (0+32768))
  5951  176E  0784               	addwf	4,f
  5952  176F  30A0               	movlw	high ((__npowers_+36)| (0+32768))
  5953  1770  3D85               	addwfc	5,f
  5954  1771  3F00               	moviw [0]fsr0
  5955  1772  0020               	movlb	0	; select bank0
  5956  1773  00C4               	movwf	??_fround+2
  5957  1774  3F01               	moviw [1]fsr0
  5958  1775  00C5               	movwf	??_fround+3
  5959  1776  3F02               	moviw [2]fsr0
  5960  1777  00C6               	movwf	??_fround+4
  5961  1778  3F03               	moviw [3]fsr0
  5962  1779  00C7               	movwf	??_fround+5
  5963  177A  0847               	movf	??_fround+5,w
  5964  177B  00AB               	movwf	___flmul@a+3
  5965  177C  0846               	movf	??_fround+4,w
  5966  177D  00AA               	movwf	___flmul@a+2
  5967  177E  0845               	movf	??_fround+3,w
  5968  177F  00A9               	movwf	___flmul@a+1
  5969  1780  0844               	movf	??_fround+2,w
  5970  1781  00A8               	movwf	___flmul@a
  5971  1782  318B  232D  3196   	fcall	___flmul
  5972  1785  0020               	movlb	0	; select bank0
  5973  1786  0827               	movf	?___flmul+3,w
  5974  1787  00CF               	movwf	_fround$1074+3
  5975  1788  0826               	movf	?___flmul+2,w
  5976  1789  00CE               	movwf	_fround$1074+2
  5977  178A  0825               	movf	?___flmul+1,w
  5978  178B  00CD               	movwf	_fround$1074+1
  5979  178C  0824               	movf	?___flmul,w
  5980  178D  00CC               	movwf	_fround$1074
  5981                           
  5982                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5983  178E  300A               	movlw	10
  5984  178F  00F0               	movwf	___lwmod@divisor
  5985  1790  3000               	movlw	0
  5986  1791  00F1               	movwf	___lwmod@divisor+1
  5987  1792  0850               	movf	fround@prec,w
  5988  1793  00C2               	movwf	??_fround
  5989  1794  01C3               	clrf	??_fround+1
  5990  1795  0842               	movf	??_fround,w
  5991  1796  00F2               	movwf	___lwmod@dividend
  5992  1797  0843               	movf	??_fround+1,w
  5993  1798  00F3               	movwf	___lwmod@dividend+1
  5994  1799  319E  26C0  3196   	fcall	___lwmod
  5995  179C  0871               	movf	?___lwmod+1,w
  5996  179D  0085               	movwf	5
  5997  179E  0870               	movf	?___lwmod,w
  5998  179F  0084               	movwf	4
  5999  17A0  3584               	lslf	4,f
  6000  17A1  0D85               	rlf	5,f
  6001  17A2  3584               	lslf	4,f
  6002  17A3  0D85               	rlf	5,f
  6003  17A4  3034               	movlw	low (__npowers_| (0+32768))
  6004  17A5  0784               	addwf	4,f
  6005  17A6  30A0               	movlw	high (__npowers_| (0+32768))
  6006  17A7  3D85               	addwfc	5,f
  6007  17A8  3F00               	moviw [0]fsr0
  6008  17A9  0020               	movlb	0	; select bank0
  6009  17AA  00C4               	movwf	??_fround+2
  6010  17AB  3F01               	moviw [1]fsr0
  6011  17AC  00C5               	movwf	??_fround+3
  6012  17AD  3F02               	moviw [2]fsr0
  6013  17AE  00C6               	movwf	??_fround+4
  6014  17AF  3F03               	moviw [3]fsr0
  6015  17B0  00C7               	movwf	??_fround+5
  6016  17B1  0847               	movf	??_fround+5,w
  6017  17B2  00A7               	movwf	___flmul@b+3
  6018  17B3  0846               	movf	??_fround+4,w
  6019  17B4  00A6               	movwf	___flmul@b+2
  6020  17B5  0845               	movf	??_fround+3,w
  6021  17B6  00A5               	movwf	___flmul@b+1
  6022  17B7  0844               	movf	??_fround+2,w
  6023  17B8  00A4               	movwf	___flmul@b
  6024  17B9  084F               	movf	_fround$1074+3,w
  6025  17BA  00AB               	movwf	___flmul@a+3
  6026  17BB  084E               	movf	_fround$1074+2,w
  6027  17BC  00AA               	movwf	___flmul@a+2
  6028  17BD  084D               	movf	_fround$1074+1,w
  6029  17BE  00A9               	movwf	___flmul@a+1
  6030  17BF  084C               	movf	_fround$1074,w
  6031  17C0  00A8               	movwf	___flmul@a
  6032  17C1  318B  232D  3196   	fcall	___flmul
  6033  17C4  0020               	movlb	0	; select bank0
  6034  17C5  0827               	movf	?___flmul+3,w
  6035  17C6  00C1               	movwf	?_fround+3
  6036  17C7  0826               	movf	?___flmul+2,w
  6037  17C8  00C0               	movwf	?_fround+2
  6038  17C9  0825               	movf	?___flmul+1,w
  6039  17CA  00BF               	movwf	?_fround+1
  6040  17CB  0824               	movf	?___flmul,w
  6041  17CC  00BE               	movwf	?_fround
  6042  17CD  2FFF               	goto	l407
  6043  17CE                     l3312:
  6044                           
  6045                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  6046  17CE  303F               	movlw	63
  6047  17CF  00A7               	movwf	___flmul@b+3
  6048  17D0  3000               	movlw	0
  6049  17D1  00A6               	movwf	___flmul@b+2
  6050  17D2  3000               	movlw	0
  6051  17D3  00A5               	movwf	___flmul@b+1
  6052  17D4  3000               	movlw	0
  6053  17D5  00A4               	movwf	___flmul@b
  6054  17D6  0850               	movf	fround@prec,w
  6055  17D7  00C2               	movwf	??_fround
  6056  17D8  01C3               	clrf	??_fround+1
  6057  17D9  35C2               	lslf	??_fround,f
  6058  17DA  0DC3               	rlf	??_fround+1,f
  6059  17DB  35C2               	lslf	??_fround,f
  6060  17DC  0DC3               	rlf	??_fround+1,f
  6061  17DD  3034               	movlw	low (__npowers_| (0+32768))
  6062  17DE  0742               	addwf	??_fround,w
  6063  17DF  0084               	movwf	4
  6064  17E0  30A0               	movlw	high (__npowers_| (0+32768))
  6065  17E1  3D43               	addwfc	??_fround+1,w
  6066  17E2  0085               	movwf	5
  6067  17E3  3F00               	moviw [0]fsr0
  6068  17E4  00C4               	movwf	??_fround+2
  6069  17E5  3F01               	moviw [1]fsr0
  6070  17E6  00C5               	movwf	??_fround+3
  6071  17E7  3F02               	moviw [2]fsr0
  6072  17E8  00C6               	movwf	??_fround+4
  6073  17E9  3F03               	moviw [3]fsr0
  6074  17EA  00C7               	movwf	??_fround+5
  6075  17EB  0847               	movf	??_fround+5,w
  6076  17EC  00AB               	movwf	___flmul@a+3
  6077  17ED  0846               	movf	??_fround+4,w
  6078  17EE  00AA               	movwf	___flmul@a+2
  6079  17EF  0845               	movf	??_fround+3,w
  6080  17F0  00A9               	movwf	___flmul@a+1
  6081  17F1  0844               	movf	??_fround+2,w
  6082  17F2  00A8               	movwf	___flmul@a
  6083  17F3  318B  232D  3196   	fcall	___flmul
  6084  17F6  0020               	movlb	0	; select bank0
  6085  17F7  0827               	movf	?___flmul+3,w
  6086  17F8  00C1               	movwf	?_fround+3
  6087  17F9  0826               	movf	?___flmul+2,w
  6088  17FA  00C0               	movwf	?_fround+2
  6089  17FB  0825               	movf	?___flmul+1,w
  6090  17FC  00BF               	movwf	?_fround+1
  6091  17FD  0824               	movf	?___flmul,w
  6092  17FE  00BE               	movwf	?_fround
  6093  17FF                     l407:
  6094  17FF  0008               	return
  6095  1800                     __end_of_fround:
  6096                           
  6097                           	psect	text7
  6098  1EC0                     __ptext7:	
  6099 ;; *************** function ___lwmod *****************
  6100 ;; Defined at:
  6101 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  divisor         2    0[COMMON] unsigned int 
  6104 ;;  dividend        2    2[COMMON] unsigned int 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  counter         1    5[COMMON] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  2    0[COMMON] unsigned int 
  6109 ;; Registers used:
  6110 ;;		wreg, status,2, status,0
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6116 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;Total ram usage:        6 bytes
  6121 ;; Hardware stack levels used: 1
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_fround
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           
  6130                           ;psect for function ___lwmod
  6131  1EC0                     ___lwmod:
  6132  1EC0                     l2862:	
  6133                           ;incstack = 0
  6134                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6135                           
  6136  1EC0  0870               	movf	___lwmod@divisor,w
  6137  1EC1  0471               	iorwf	___lwmod@divisor+1,w
  6138  1EC2  1903               	btfsc	3,2
  6139  1EC3  2EC5               	goto	u3271
  6140  1EC4  2EC6               	goto	u3270
  6141  1EC5                     u3271:
  6142  1EC5  2EEF               	goto	l2880
  6143  1EC6                     u3270:
  6144  1EC6                     l2864:
  6145  1EC6  01F5               	clrf	___lwmod@counter
  6146  1EC7  0AF5               	incf	___lwmod@counter,f
  6147  1EC8  2ED2               	goto	l2870
  6148  1EC9                     l2866:
  6149  1EC9  3001               	movlw	1
  6150  1ECA                     u3285:
  6151  1ECA  35F0               	lslf	___lwmod@divisor,f
  6152  1ECB  0DF1               	rlf	___lwmod@divisor+1,f
  6153  1ECC  0B89               	decfsz	9,f
  6154  1ECD  2ECA               	goto	u3285
  6155  1ECE                     l2868:
  6156  1ECE  3001               	movlw	1
  6157  1ECF  00F4               	movwf	??___lwmod
  6158  1ED0  0874               	movf	??___lwmod,w
  6159  1ED1  07F5               	addwf	___lwmod@counter,f
  6160  1ED2                     l2870:
  6161  1ED2  1FF1               	btfss	___lwmod@divisor+1,7
  6162  1ED3  2ED5               	goto	u3291
  6163  1ED4  2ED6               	goto	u3290
  6164  1ED5                     u3291:
  6165  1ED5  2EC9               	goto	l2866
  6166  1ED6                     u3290:
  6167  1ED6                     l2872:
  6168  1ED6  0871               	movf	___lwmod@divisor+1,w
  6169  1ED7  0273               	subwf	___lwmod@dividend+1,w
  6170  1ED8  1D03               	skipz
  6171  1ED9  2EDC               	goto	u3305
  6172  1EDA  0870               	movf	___lwmod@divisor,w
  6173  1EDB  0272               	subwf	___lwmod@dividend,w
  6174  1EDC                     u3305:
  6175  1EDC  1C03               	skipc
  6176  1EDD  2EDF               	goto	u3301
  6177  1EDE  2EE0               	goto	u3300
  6178  1EDF                     u3301:
  6179  1EDF  2EE4               	goto	l2876
  6180  1EE0                     u3300:
  6181  1EE0                     l2874:
  6182  1EE0  0870               	movf	___lwmod@divisor,w
  6183  1EE1  02F2               	subwf	___lwmod@dividend,f
  6184  1EE2  0871               	movf	___lwmod@divisor+1,w
  6185  1EE3  3BF3               	subwfb	___lwmod@dividend+1,f
  6186  1EE4                     l2876:
  6187  1EE4  3001               	movlw	1
  6188  1EE5                     u3315:
  6189  1EE5  36F1               	lsrf	___lwmod@divisor+1,f
  6190  1EE6  0CF0               	rrf	___lwmod@divisor,f
  6191  1EE7  0B89               	decfsz	9,f
  6192  1EE8  2EE5               	goto	u3315
  6193  1EE9                     l2878:
  6194  1EE9  3001               	movlw	1
  6195  1EEA  02F5               	subwf	___lwmod@counter,f
  6196  1EEB  1D03               	btfss	3,2
  6197  1EEC  2EEE               	goto	u3321
  6198  1EED  2EEF               	goto	u3320
  6199  1EEE                     u3321:
  6200  1EEE  2ED6               	goto	l2872
  6201  1EEF                     u3320:
  6202  1EEF                     l2880:
  6203  1EEF  0873               	movf	___lwmod@dividend+1,w
  6204  1EF0  00F1               	movwf	?___lwmod+1
  6205  1EF1  0872               	movf	___lwmod@dividend,w
  6206  1EF2  00F0               	movwf	?___lwmod
  6207  1EF3                     l817:
  6208  1EF3  0008               	return
  6209  1EF4                     __end_of___lwmod:
  6210                           
  6211                           	psect	text8
  6212  1F2C                     __ptext8:	
  6213 ;; *************** function ___lwdiv *****************
  6214 ;; Defined at:
  6215 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  divisor         2    6[COMMON] unsigned int 
  6218 ;;  dividend        2    8[COMMON] unsigned int 
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;  quotient        2   11[COMMON] unsigned int 
  6221 ;;  counter         1   13[COMMON] unsigned char 
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  2    6[COMMON] unsigned int 
  6224 ;; Registers used:
  6225 ;;		wreg, status,2, status,0
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;Total ram usage:        8 bytes
  6236 ;; Hardware stack levels used: 1
  6237 ;; This function calls:
  6238 ;;		Nothing
  6239 ;; This function is called by:
  6240 ;;		_fround
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           
  6245                           ;psect for function ___lwdiv
  6246  1F2C                     ___lwdiv:
  6247  1F2C                     l2836:	
  6248                           ;incstack = 0
  6249                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6250                           
  6251  1F2C  01FB               	clrf	___lwdiv@quotient
  6252  1F2D  01FC               	clrf	___lwdiv@quotient+1
  6253  1F2E                     l2838:
  6254  1F2E  0876               	movf	___lwdiv@divisor,w
  6255  1F2F  0477               	iorwf	___lwdiv@divisor+1,w
  6256  1F30  1903               	btfsc	3,2
  6257  1F31  2F33               	goto	u3201
  6258  1F32  2F34               	goto	u3200
  6259  1F33                     u3201:
  6260  1F33  2F63               	goto	l2858
  6261  1F34                     u3200:
  6262  1F34                     l2840:
  6263  1F34  01FD               	clrf	___lwdiv@counter
  6264  1F35  0AFD               	incf	___lwdiv@counter,f
  6265  1F36  2F40               	goto	l2846
  6266  1F37                     l2842:
  6267  1F37  3001               	movlw	1
  6268  1F38                     u3215:
  6269  1F38  35F6               	lslf	___lwdiv@divisor,f
  6270  1F39  0DF7               	rlf	___lwdiv@divisor+1,f
  6271  1F3A  0B89               	decfsz	9,f
  6272  1F3B  2F38               	goto	u3215
  6273  1F3C                     l2844:
  6274  1F3C  3001               	movlw	1
  6275  1F3D  00FA               	movwf	??___lwdiv
  6276  1F3E  087A               	movf	??___lwdiv,w
  6277  1F3F  07FD               	addwf	___lwdiv@counter,f
  6278  1F40                     l2846:
  6279  1F40  1FF7               	btfss	___lwdiv@divisor+1,7
  6280  1F41  2F43               	goto	u3221
  6281  1F42  2F44               	goto	u3220
  6282  1F43                     u3221:
  6283  1F43  2F37               	goto	l2842
  6284  1F44                     u3220:
  6285  1F44                     l2848:
  6286  1F44  3001               	movlw	1
  6287  1F45                     u3235:
  6288  1F45  35FB               	lslf	___lwdiv@quotient,f
  6289  1F46  0DFC               	rlf	___lwdiv@quotient+1,f
  6290  1F47  0B89               	decfsz	9,f
  6291  1F48  2F45               	goto	u3235
  6292  1F49  0877               	movf	___lwdiv@divisor+1,w
  6293  1F4A  0279               	subwf	___lwdiv@dividend+1,w
  6294  1F4B  1D03               	skipz
  6295  1F4C  2F4F               	goto	u3245
  6296  1F4D  0876               	movf	___lwdiv@divisor,w
  6297  1F4E  0278               	subwf	___lwdiv@dividend,w
  6298  1F4F                     u3245:
  6299  1F4F  1C03               	skipc
  6300  1F50  2F52               	goto	u3241
  6301  1F51  2F53               	goto	u3240
  6302  1F52                     u3241:
  6303  1F52  2F58               	goto	l2854
  6304  1F53                     u3240:
  6305  1F53                     l2850:
  6306  1F53  0876               	movf	___lwdiv@divisor,w
  6307  1F54  02F8               	subwf	___lwdiv@dividend,f
  6308  1F55  0877               	movf	___lwdiv@divisor+1,w
  6309  1F56  3BF9               	subwfb	___lwdiv@dividend+1,f
  6310  1F57                     l2852:
  6311  1F57  147B               	bsf	___lwdiv@quotient,0
  6312  1F58                     l2854:
  6313  1F58  3001               	movlw	1
  6314  1F59                     u3255:
  6315  1F59  36F7               	lsrf	___lwdiv@divisor+1,f
  6316  1F5A  0CF6               	rrf	___lwdiv@divisor,f
  6317  1F5B  0B89               	decfsz	9,f
  6318  1F5C  2F59               	goto	u3255
  6319  1F5D                     l2856:
  6320  1F5D  3001               	movlw	1
  6321  1F5E  02FD               	subwf	___lwdiv@counter,f
  6322  1F5F  1D03               	btfss	3,2
  6323  1F60  2F62               	goto	u3261
  6324  1F61  2F63               	goto	u3260
  6325  1F62                     u3261:
  6326  1F62  2F44               	goto	l2848
  6327  1F63                     u3260:
  6328  1F63                     l2858:
  6329  1F63  087C               	movf	___lwdiv@quotient+1,w
  6330  1F64  00F7               	movwf	?___lwdiv+1
  6331  1F65  087B               	movf	___lwdiv@quotient,w
  6332  1F66  00F6               	movwf	?___lwdiv
  6333  1F67                     l807:
  6334  1F67  0008               	return
  6335  1F68                     __end_of___lwdiv:
  6336                           
  6337                           	psect	text9
  6338  0B2D                     __ptext9:	
  6339 ;; *************** function ___flmul *****************
  6340 ;; Defined at:
  6341 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  b               4    4[BANK0 ] unsigned int 
  6344 ;;  a               4    8[BANK0 ] unsigned int 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  prod            4   24[BANK0 ] struct .
  6347 ;;  grs             4   18[BANK0 ] unsigned long 
  6348 ;;  temp            2   28[BANK0 ] struct .
  6349 ;;  bexp            1   23[BANK0 ] unsigned char 
  6350 ;;  aexp            1   22[BANK0 ] unsigned char 
  6351 ;;  sign            1   17[BANK0 ] unsigned char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  4    4[BANK0 ] unsigned char 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0, pclath, cstack
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6361 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6362 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6363 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6364 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6365 ;;Total ram usage:       26 bytes
  6366 ;; Hardware stack levels used: 1
  6367 ;; Hardware stack levels required when called: 1
  6368 ;; This function calls:
  6369 ;;		__Umul8_16
  6370 ;; This function is called by:
  6371 ;;		_fround
  6372 ;;		_scale
  6373 ;;		_sprintf
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           
  6378                           ;psect for function ___flmul
  6379  0B2D                     ___flmul:
  6380  0B2D                     l3078:	
  6381                           ;incstack = 0
  6382                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  6383                           
  6384  0B2D  0020               	movlb	0	; select bank0
  6385  0B2E  0827               	movf	___flmul@b+3,w
  6386  0B2F  3980               	andlw	128
  6387  0B30  00AC               	movwf	??___flmul
  6388  0B31  082C               	movf	??___flmul,w
  6389  0B32  00B1               	movwf	___flmul@sign
  6390  0B33                     l3080:
  6391  0B33  3527               	lslf	___flmul@b+3,w
  6392  0B34  00AC               	movwf	??___flmul
  6393  0B35  082C               	movf	??___flmul,w
  6394  0B36  00B7               	movwf	___flmul@bexp
  6395  0B37                     l3082:
  6396  0B37  1FA6               	btfss	___flmul@b+2,7
  6397  0B38  2B3A               	goto	u3761
  6398  0B39  2B3B               	goto	u3760
  6399  0B3A                     u3761:
  6400  0B3A  2B3C               	goto	l3086
  6401  0B3B                     u3760:
  6402  0B3B                     l3084:
  6403  0B3B  1437               	bsf	___flmul@bexp,0
  6404  0B3C                     l3086:
  6405  0B3C  0837               	movf	___flmul@bexp,w
  6406  0B3D  1903               	btfsc	3,2
  6407  0B3E  2B40               	goto	u3771
  6408  0B3F  2B41               	goto	u3770
  6409  0B40                     u3771:
  6410  0B40  2B50               	goto	l3094
  6411  0B41                     u3770:
  6412  0B41                     l3088:
  6413  0B41  0A37               	incf	___flmul@bexp,w
  6414  0B42  1D03               	btfss	3,2
  6415  0B43  2B45               	goto	u3781
  6416  0B44  2B46               	goto	u3780
  6417  0B45                     u3781:
  6418  0B45  2B4E               	goto	l3092
  6419  0B46                     u3780:
  6420  0B46                     l3090:
  6421  0B46  3000               	movlw	0
  6422  0B47  00A7               	movwf	___flmul@b+3
  6423  0B48  3000               	movlw	0
  6424  0B49  00A6               	movwf	___flmul@b+2
  6425  0B4A  3000               	movlw	0
  6426  0B4B  00A5               	movwf	___flmul@b+1
  6427  0B4C  3000               	movlw	0
  6428  0B4D  00A4               	movwf	___flmul@b
  6429  0B4E                     l3092:
  6430  0B4E  17A6               	bsf	___flmul@b+2,7
  6431  0B4F  2B58               	goto	l3096
  6432  0B50                     l3094:
  6433  0B50  3000               	movlw	0
  6434  0B51  00A7               	movwf	___flmul@b+3
  6435  0B52  3000               	movlw	0
  6436  0B53  00A6               	movwf	___flmul@b+2
  6437  0B54  3000               	movlw	0
  6438  0B55  00A5               	movwf	___flmul@b+1
  6439  0B56  3000               	movlw	0
  6440  0B57  00A4               	movwf	___flmul@b
  6441  0B58                     l3096:
  6442  0B58  082B               	movf	___flmul@a+3,w
  6443  0B59  3980               	andlw	128
  6444  0B5A  00AC               	movwf	??___flmul
  6445  0B5B  082C               	movf	??___flmul,w
  6446  0B5C  06B1               	xorwf	___flmul@sign,f
  6447  0B5D                     l3098:
  6448  0B5D  352B               	lslf	___flmul@a+3,w
  6449  0B5E  00AC               	movwf	??___flmul
  6450  0B5F  082C               	movf	??___flmul,w
  6451  0B60  00B6               	movwf	___flmul@aexp
  6452  0B61                     l3100:
  6453  0B61  1FAA               	btfss	___flmul@a+2,7
  6454  0B62  2B64               	goto	u3791
  6455  0B63  2B65               	goto	u3790
  6456  0B64                     u3791:
  6457  0B64  2B66               	goto	l3104
  6458  0B65                     u3790:
  6459  0B65                     l3102:
  6460  0B65  1436               	bsf	___flmul@aexp,0
  6461  0B66                     l3104:
  6462  0B66  0836               	movf	___flmul@aexp,w
  6463  0B67  1903               	btfsc	3,2
  6464  0B68  2B6A               	goto	u3801
  6465  0B69  2B6B               	goto	u3800
  6466  0B6A                     u3801:
  6467  0B6A  2B7A               	goto	l3112
  6468  0B6B                     u3800:
  6469  0B6B                     l3106:
  6470  0B6B  0A36               	incf	___flmul@aexp,w
  6471  0B6C  1D03               	btfss	3,2
  6472  0B6D  2B6F               	goto	u3811
  6473  0B6E  2B70               	goto	u3810
  6474  0B6F                     u3811:
  6475  0B6F  2B78               	goto	l3110
  6476  0B70                     u3810:
  6477  0B70                     l3108:
  6478  0B70  3000               	movlw	0
  6479  0B71  00AB               	movwf	___flmul@a+3
  6480  0B72  3000               	movlw	0
  6481  0B73  00AA               	movwf	___flmul@a+2
  6482  0B74  3000               	movlw	0
  6483  0B75  00A9               	movwf	___flmul@a+1
  6484  0B76  3000               	movlw	0
  6485  0B77  00A8               	movwf	___flmul@a
  6486  0B78                     l3110:
  6487  0B78  17AA               	bsf	___flmul@a+2,7
  6488  0B79  2B82               	goto	l3114
  6489  0B7A                     l3112:
  6490  0B7A  3000               	movlw	0
  6491  0B7B  00AB               	movwf	___flmul@a+3
  6492  0B7C  3000               	movlw	0
  6493  0B7D  00AA               	movwf	___flmul@a+2
  6494  0B7E  3000               	movlw	0
  6495  0B7F  00A9               	movwf	___flmul@a+1
  6496  0B80  3000               	movlw	0
  6497  0B81  00A8               	movwf	___flmul@a
  6498  0B82                     l3114:
  6499  0B82  0836               	movf	___flmul@aexp,w
  6500  0B83  1903               	btfsc	3,2
  6501  0B84  2B86               	goto	u3821
  6502  0B85  2B87               	goto	u3820
  6503  0B86                     u3821:
  6504  0B86  2B8C               	goto	l3118
  6505  0B87                     u3820:
  6506  0B87                     l3116:
  6507  0B87  0837               	movf	___flmul@bexp,w
  6508  0B88  1D03               	btfss	3,2
  6509  0B89  2B8B               	goto	u3831
  6510  0B8A  2B8C               	goto	u3830
  6511  0B8B                     u3831:
  6512  0B8B  2B95               	goto	l3122
  6513  0B8C                     u3830:
  6514  0B8C                     l3118:
  6515  0B8C  3000               	movlw	0
  6516  0B8D  00A7               	movwf	?___flmul+3
  6517  0B8E  3000               	movlw	0
  6518  0B8F  00A6               	movwf	?___flmul+2
  6519  0B90  3000               	movlw	0
  6520  0B91  00A5               	movwf	?___flmul+1
  6521  0B92  3000               	movlw	0
  6522  0B93  00A4               	movwf	?___flmul
  6523  0B94  2D83               	goto	l924
  6524  0B95                     l3122:
  6525  0B95  0824               	movf	___flmul@b,w
  6526  0B96  00AC               	movwf	??___flmul
  6527  0B97  082C               	movf	??___flmul,w
  6528  0B98  00F0               	movwf	__Umul8_16@multiplicand
  6529  0B99  082A               	movf	___flmul@a+2,w
  6530  0B9A  319E  264B  318B   	fcall	__Umul8_16
  6531  0B9D  0871               	movf	?__Umul8_16+1,w
  6532  0B9E  0020               	movlb	0	; select bank0
  6533  0B9F  00BD               	movwf	___flmul@temp+1
  6534  0BA0  0870               	movf	?__Umul8_16,w
  6535  0BA1  00BC               	movwf	___flmul@temp
  6536  0BA2                     l3124:
  6537  0BA2  083C               	movf	___flmul@temp,w
  6538  0BA3  00AC               	movwf	??___flmul
  6539  0BA4  01AD               	clrf	??___flmul+1
  6540  0BA5  01AE               	clrf	??___flmul+2
  6541  0BA6  01AF               	clrf	??___flmul+3
  6542  0BA7  082F               	movf	??___flmul+3,w
  6543  0BA8  00B5               	movwf	___flmul@grs+3
  6544  0BA9  082E               	movf	??___flmul+2,w
  6545  0BAA  00B4               	movwf	___flmul@grs+2
  6546  0BAB  082D               	movf	??___flmul+1,w
  6547  0BAC  00B3               	movwf	___flmul@grs+1
  6548  0BAD  082C               	movf	??___flmul,w
  6549  0BAE  00B2               	movwf	___flmul@grs
  6550  0BAF                     l3126:
  6551  0BAF  083D               	movf	___flmul@temp+1,w
  6552  0BB0  00AC               	movwf	??___flmul
  6553  0BB1  01AD               	clrf	??___flmul+1
  6554  0BB2  01AE               	clrf	??___flmul+2
  6555  0BB3  01AF               	clrf	??___flmul+3
  6556  0BB4  082F               	movf	??___flmul+3,w
  6557  0BB5  00BB               	movwf	___flmul@prod+3
  6558  0BB6  082E               	movf	??___flmul+2,w
  6559  0BB7  00BA               	movwf	___flmul@prod+2
  6560  0BB8  082D               	movf	??___flmul+1,w
  6561  0BB9  00B9               	movwf	___flmul@prod+1
  6562  0BBA  082C               	movf	??___flmul,w
  6563  0BBB  00B8               	movwf	___flmul@prod
  6564  0BBC  0825               	movf	___flmul@b+1,w
  6565  0BBD  00AC               	movwf	??___flmul
  6566  0BBE  082C               	movf	??___flmul,w
  6567  0BBF  00F0               	movwf	__Umul8_16@multiplicand
  6568  0BC0  0829               	movf	___flmul@a+1,w
  6569  0BC1  319E  264B  318B   	fcall	__Umul8_16
  6570  0BC4  0871               	movf	?__Umul8_16+1,w
  6571  0BC5  0020               	movlb	0	; select bank0
  6572  0BC6  00BD               	movwf	___flmul@temp+1
  6573  0BC7  0870               	movf	?__Umul8_16,w
  6574  0BC8  00BC               	movwf	___flmul@temp
  6575  0BC9                     l3128:
  6576  0BC9  083C               	movf	___flmul@temp,w
  6577  0BCA  00AC               	movwf	??___flmul
  6578  0BCB  01AD               	clrf	??___flmul+1
  6579  0BCC  01AE               	clrf	??___flmul+2
  6580  0BCD  01AF               	clrf	??___flmul+3
  6581  0BCE  082C               	movf	??___flmul,w
  6582  0BCF  07B2               	addwf	___flmul@grs,f
  6583  0BD0  082D               	movf	??___flmul+1,w
  6584  0BD1  3DB3               	addwfc	___flmul@grs+1,f
  6585  0BD2  082E               	movf	??___flmul+2,w
  6586  0BD3  3DB4               	addwfc	___flmul@grs+2,f
  6587  0BD4  082F               	movf	??___flmul+3,w
  6588  0BD5  3DB5               	addwfc	___flmul@grs+3,f
  6589  0BD6                     l3130:
  6590  0BD6  083D               	movf	___flmul@temp+1,w
  6591  0BD7  00AC               	movwf	??___flmul
  6592  0BD8  01AD               	clrf	??___flmul+1
  6593  0BD9  01AE               	clrf	??___flmul+2
  6594  0BDA  01AF               	clrf	??___flmul+3
  6595  0BDB  082C               	movf	??___flmul,w
  6596  0BDC  07B8               	addwf	___flmul@prod,f
  6597  0BDD  082D               	movf	??___flmul+1,w
  6598  0BDE  3DB9               	addwfc	___flmul@prod+1,f
  6599  0BDF  082E               	movf	??___flmul+2,w
  6600  0BE0  3DBA               	addwfc	___flmul@prod+2,f
  6601  0BE1  082F               	movf	??___flmul+3,w
  6602  0BE2  3DBB               	addwfc	___flmul@prod+3,f
  6603  0BE3  0826               	movf	___flmul@b+2,w
  6604  0BE4  00AC               	movwf	??___flmul
  6605  0BE5  082C               	movf	??___flmul,w
  6606  0BE6  00F0               	movwf	__Umul8_16@multiplicand
  6607  0BE7  0828               	movf	___flmul@a,w
  6608  0BE8  319E  264B  318B   	fcall	__Umul8_16
  6609  0BEB  0871               	movf	?__Umul8_16+1,w
  6610  0BEC  0020               	movlb	0	; select bank0
  6611  0BED  00BD               	movwf	___flmul@temp+1
  6612  0BEE  0870               	movf	?__Umul8_16,w
  6613  0BEF  00BC               	movwf	___flmul@temp
  6614  0BF0                     l3132:
  6615  0BF0  083C               	movf	___flmul@temp,w
  6616  0BF1  00AC               	movwf	??___flmul
  6617  0BF2  01AD               	clrf	??___flmul+1
  6618  0BF3  01AE               	clrf	??___flmul+2
  6619  0BF4  01AF               	clrf	??___flmul+3
  6620  0BF5  082C               	movf	??___flmul,w
  6621  0BF6  07B2               	addwf	___flmul@grs,f
  6622  0BF7  082D               	movf	??___flmul+1,w
  6623  0BF8  3DB3               	addwfc	___flmul@grs+1,f
  6624  0BF9  082E               	movf	??___flmul+2,w
  6625  0BFA  3DB4               	addwfc	___flmul@grs+2,f
  6626  0BFB  082F               	movf	??___flmul+3,w
  6627  0BFC  3DB5               	addwfc	___flmul@grs+3,f
  6628  0BFD                     l3134:
  6629  0BFD  083D               	movf	___flmul@temp+1,w
  6630  0BFE  00AC               	movwf	??___flmul
  6631  0BFF  01AD               	clrf	??___flmul+1
  6632  0C00  01AE               	clrf	??___flmul+2
  6633  0C01  01AF               	clrf	??___flmul+3
  6634  0C02  082C               	movf	??___flmul,w
  6635  0C03  07B8               	addwf	___flmul@prod,f
  6636  0C04  082D               	movf	??___flmul+1,w
  6637  0C05  3DB9               	addwfc	___flmul@prod+1,f
  6638  0C06  082E               	movf	??___flmul+2,w
  6639  0C07  3DBA               	addwfc	___flmul@prod+2,f
  6640  0C08  082F               	movf	??___flmul+3,w
  6641  0C09  3DBB               	addwfc	___flmul@prod+3,f
  6642  0C0A                     l3136:
  6643  0C0A  3008               	movlw	8
  6644  0C0B                     u3845:
  6645  0C0B  35B2               	lslf	___flmul@grs,f
  6646  0C0C  0DB3               	rlf	___flmul@grs+1,f
  6647  0C0D  0DB4               	rlf	___flmul@grs+2,f
  6648  0C0E  0DB5               	rlf	___flmul@grs+3,f
  6649  0C0F  0B89               	decfsz	9,f
  6650  0C10  2C0B               	goto	u3845
  6651  0C11                     l3138:
  6652  0C11  0825               	movf	___flmul@b+1,w
  6653  0C12  00AC               	movwf	??___flmul
  6654  0C13  082C               	movf	??___flmul,w
  6655  0C14  00F0               	movwf	__Umul8_16@multiplicand
  6656  0C15  0828               	movf	___flmul@a,w
  6657  0C16  319E  264B  318B   	fcall	__Umul8_16
  6658  0C19  0871               	movf	?__Umul8_16+1,w
  6659  0C1A  0020               	movlb	0	; select bank0
  6660  0C1B  00BD               	movwf	___flmul@temp+1
  6661  0C1C  0870               	movf	?__Umul8_16,w
  6662  0C1D  00BC               	movwf	___flmul@temp
  6663  0C1E                     l3140:
  6664  0C1E  083C               	movf	___flmul@temp,w
  6665  0C1F  07B2               	addwf	___flmul@grs,f
  6666  0C20  083D               	movf	___flmul@temp+1,w
  6667  0C21  3DB3               	addwfc	___flmul@grs+1,f
  6668  0C22  3000               	movlw	0
  6669  0C23  3DB4               	addwfc	___flmul@grs+2,f
  6670  0C24  3DB5               	addwfc	___flmul@grs+3,f
  6671  0C25                     l3142:
  6672  0C25  0824               	movf	___flmul@b,w
  6673  0C26  00AC               	movwf	??___flmul
  6674  0C27  082C               	movf	??___flmul,w
  6675  0C28  00F0               	movwf	__Umul8_16@multiplicand
  6676  0C29  0829               	movf	___flmul@a+1,w
  6677  0C2A  319E  264B  318B   	fcall	__Umul8_16
  6678  0C2D  0871               	movf	?__Umul8_16+1,w
  6679  0C2E  0020               	movlb	0	; select bank0
  6680  0C2F  00BD               	movwf	___flmul@temp+1
  6681  0C30  0870               	movf	?__Umul8_16,w
  6682  0C31  00BC               	movwf	___flmul@temp
  6683  0C32                     l3144:
  6684  0C32  083C               	movf	___flmul@temp,w
  6685  0C33  07B2               	addwf	___flmul@grs,f
  6686  0C34  083D               	movf	___flmul@temp+1,w
  6687  0C35  3DB3               	addwfc	___flmul@grs+1,f
  6688  0C36  3000               	movlw	0
  6689  0C37  3DB4               	addwfc	___flmul@grs+2,f
  6690  0C38  3DB5               	addwfc	___flmul@grs+3,f
  6691  0C39                     l3146:
  6692  0C39  3008               	movlw	8
  6693  0C3A                     u3855:
  6694  0C3A  35B2               	lslf	___flmul@grs,f
  6695  0C3B  0DB3               	rlf	___flmul@grs+1,f
  6696  0C3C  0DB4               	rlf	___flmul@grs+2,f
  6697  0C3D  0DB5               	rlf	___flmul@grs+3,f
  6698  0C3E  0B89               	decfsz	9,f
  6699  0C3F  2C3A               	goto	u3855
  6700  0C40  0824               	movf	___flmul@b,w
  6701  0C41  00AC               	movwf	??___flmul
  6702  0C42  082C               	movf	??___flmul,w
  6703  0C43  00F0               	movwf	__Umul8_16@multiplicand
  6704  0C44  0828               	movf	___flmul@a,w
  6705  0C45  319E  264B  318B   	fcall	__Umul8_16
  6706  0C48  0871               	movf	?__Umul8_16+1,w
  6707  0C49  0020               	movlb	0	; select bank0
  6708  0C4A  00BD               	movwf	___flmul@temp+1
  6709  0C4B  0870               	movf	?__Umul8_16,w
  6710  0C4C  00BC               	movwf	___flmul@temp
  6711  0C4D                     l3148:
  6712  0C4D  083C               	movf	___flmul@temp,w
  6713  0C4E  07B2               	addwf	___flmul@grs,f
  6714  0C4F  083D               	movf	___flmul@temp+1,w
  6715  0C50  3DB3               	addwfc	___flmul@grs+1,f
  6716  0C51  3000               	movlw	0
  6717  0C52  3DB4               	addwfc	___flmul@grs+2,f
  6718  0C53  3DB5               	addwfc	___flmul@grs+3,f
  6719  0C54                     l3150:
  6720  0C54  0825               	movf	___flmul@b+1,w
  6721  0C55  00AC               	movwf	??___flmul
  6722  0C56  082C               	movf	??___flmul,w
  6723  0C57  00F0               	movwf	__Umul8_16@multiplicand
  6724  0C58  082A               	movf	___flmul@a+2,w
  6725  0C59  319E  264B  318B   	fcall	__Umul8_16
  6726  0C5C  0871               	movf	?__Umul8_16+1,w
  6727  0C5D  0020               	movlb	0	; select bank0
  6728  0C5E  00BD               	movwf	___flmul@temp+1
  6729  0C5F  0870               	movf	?__Umul8_16,w
  6730  0C60  00BC               	movwf	___flmul@temp
  6731  0C61  083C               	movf	___flmul@temp,w
  6732  0C62  07B8               	addwf	___flmul@prod,f
  6733  0C63  083D               	movf	___flmul@temp+1,w
  6734  0C64  3DB9               	addwfc	___flmul@prod+1,f
  6735  0C65  3000               	movlw	0
  6736  0C66  3DBA               	addwfc	___flmul@prod+2,f
  6737  0C67  3DBB               	addwfc	___flmul@prod+3,f
  6738  0C68                     l3152:
  6739  0C68  0826               	movf	___flmul@b+2,w
  6740  0C69  00AC               	movwf	??___flmul
  6741  0C6A  082C               	movf	??___flmul,w
  6742  0C6B  00F0               	movwf	__Umul8_16@multiplicand
  6743  0C6C  0829               	movf	___flmul@a+1,w
  6744  0C6D  319E  264B  318B   	fcall	__Umul8_16
  6745  0C70  0871               	movf	?__Umul8_16+1,w
  6746  0C71  0020               	movlb	0	; select bank0
  6747  0C72  00BD               	movwf	___flmul@temp+1
  6748  0C73  0870               	movf	?__Umul8_16,w
  6749  0C74  00BC               	movwf	___flmul@temp
  6750  0C75                     l3154:
  6751  0C75  083C               	movf	___flmul@temp,w
  6752  0C76  07B8               	addwf	___flmul@prod,f
  6753  0C77  083D               	movf	___flmul@temp+1,w
  6754  0C78  3DB9               	addwfc	___flmul@prod+1,f
  6755  0C79  3000               	movlw	0
  6756  0C7A  3DBA               	addwfc	___flmul@prod+2,f
  6757  0C7B  3DBB               	addwfc	___flmul@prod+3,f
  6758  0C7C  0826               	movf	___flmul@b+2,w
  6759  0C7D  00AC               	movwf	??___flmul
  6760  0C7E  082C               	movf	??___flmul,w
  6761  0C7F  00F0               	movwf	__Umul8_16@multiplicand
  6762  0C80  082A               	movf	___flmul@a+2,w
  6763  0C81  319E  264B  318B   	fcall	__Umul8_16
  6764  0C84  0871               	movf	?__Umul8_16+1,w
  6765  0C85  0020               	movlb	0	; select bank0
  6766  0C86  00BD               	movwf	___flmul@temp+1
  6767  0C87  0870               	movf	?__Umul8_16,w
  6768  0C88  00BC               	movwf	___flmul@temp
  6769  0C89                     l3156:
  6770  0C89  083C               	movf	___flmul@temp,w
  6771  0C8A  00AC               	movwf	??___flmul
  6772  0C8B  083D               	movf	___flmul@temp+1,w
  6773  0C8C  00AD               	movwf	??___flmul+1
  6774  0C8D  01AE               	clrf	??___flmul+2
  6775  0C8E  01AF               	clrf	??___flmul+3
  6776  0C8F  3008               	movlw	8
  6777  0C90                     u3865:
  6778  0C90  35AC               	lslf	??___flmul,f
  6779  0C91  0DAD               	rlf	??___flmul+1,f
  6780  0C92  0DAE               	rlf	??___flmul+2,f
  6781  0C93  0DAF               	rlf	??___flmul+3,f
  6782  0C94                     u3860:
  6783  0C94  0B89               	decfsz	9,f
  6784  0C95  2C90               	goto	u3865
  6785  0C96  082C               	movf	??___flmul,w
  6786  0C97  07B8               	addwf	___flmul@prod,f
  6787  0C98  082D               	movf	??___flmul+1,w
  6788  0C99  3DB9               	addwfc	___flmul@prod+1,f
  6789  0C9A  082E               	movf	??___flmul+2,w
  6790  0C9B  3DBA               	addwfc	___flmul@prod+2,f
  6791  0C9C  082F               	movf	??___flmul+3,w
  6792  0C9D  3DBB               	addwfc	___flmul@prod+3,f
  6793  0C9E                     l3158:
  6794  0C9E  0832               	movf	___flmul@grs,w
  6795  0C9F  00AC               	movwf	??___flmul
  6796  0CA0  0833               	movf	___flmul@grs+1,w
  6797  0CA1  00AD               	movwf	??___flmul+1
  6798  0CA2  0834               	movf	___flmul@grs+2,w
  6799  0CA3  00AE               	movwf	??___flmul+2
  6800  0CA4  0835               	movf	___flmul@grs+3,w
  6801  0CA5  00AF               	movwf	??___flmul+3
  6802  0CA6  3018               	movlw	24
  6803  0CA7                     u3875:
  6804  0CA7  36AF               	lsrf	??___flmul+3,f
  6805  0CA8  0CAE               	rrf	??___flmul+2,f
  6806  0CA9  0CAD               	rrf	??___flmul+1,f
  6807  0CAA  0CAC               	rrf	??___flmul,f
  6808  0CAB                     u3870:
  6809  0CAB  0B89               	decfsz	9,f
  6810  0CAC  2CA7               	goto	u3875
  6811  0CAD  082C               	movf	??___flmul,w
  6812  0CAE  07B8               	addwf	___flmul@prod,f
  6813  0CAF  082D               	movf	??___flmul+1,w
  6814  0CB0  3DB9               	addwfc	___flmul@prod+1,f
  6815  0CB1  082E               	movf	??___flmul+2,w
  6816  0CB2  3DBA               	addwfc	___flmul@prod+2,f
  6817  0CB3  082F               	movf	??___flmul+3,w
  6818  0CB4  3DBB               	addwfc	___flmul@prod+3,f
  6819  0CB5                     l3160:
  6820  0CB5  3008               	movlw	8
  6821  0CB6                     u3885:
  6822  0CB6  35B2               	lslf	___flmul@grs,f
  6823  0CB7  0DB3               	rlf	___flmul@grs+1,f
  6824  0CB8  0DB4               	rlf	___flmul@grs+2,f
  6825  0CB9  0DB5               	rlf	___flmul@grs+3,f
  6826  0CBA  0B89               	decfsz	9,f
  6827  0CBB  2CB6               	goto	u3885
  6828  0CBC                     l3162:
  6829  0CBC  0837               	movf	___flmul@bexp,w
  6830  0CBD  0736               	addwf	___flmul@aexp,w
  6831  0CBE  00AC               	movwf	??___flmul
  6832  0CBF  01AD               	clrf	??___flmul+1
  6833  0CC0  0DAD               	rlf	??___flmul+1,f
  6834  0CC1  082C               	movf	??___flmul,w
  6835  0CC2  3E82               	addlw	130
  6836  0CC3  00BC               	movwf	___flmul@temp
  6837  0CC4  30FF               	movlw	255
  6838  0CC5  3D2D               	addwfc	??___flmul+1,w
  6839  0CC6  00BD               	movwf	___flmul@temp+1
  6840  0CC7  2CDF               	goto	l3174
  6841  0CC8                     l3164:
  6842  0CC8  3001               	movlw	1
  6843  0CC9                     u3895:
  6844  0CC9  35B8               	lslf	___flmul@prod,f
  6845  0CCA  0DB9               	rlf	___flmul@prod+1,f
  6846  0CCB  0DBA               	rlf	___flmul@prod+2,f
  6847  0CCC  0DBB               	rlf	___flmul@prod+3,f
  6848  0CCD  0B89               	decfsz	9,f
  6849  0CCE  2CC9               	goto	u3895
  6850  0CCF                     l3166:
  6851  0CCF  1FB5               	btfss	___flmul@grs+3,7
  6852  0CD0  2CD2               	goto	u3901
  6853  0CD1  2CD3               	goto	u3900
  6854  0CD2                     u3901:
  6855  0CD2  2CD4               	goto	l3170
  6856  0CD3                     u3900:
  6857  0CD3                     l3168:
  6858  0CD3  1438               	bsf	___flmul@prod,0
  6859  0CD4                     l3170:
  6860  0CD4  3001               	movlw	1
  6861  0CD5                     u3915:
  6862  0CD5  35B2               	lslf	___flmul@grs,f
  6863  0CD6  0DB3               	rlf	___flmul@grs+1,f
  6864  0CD7  0DB4               	rlf	___flmul@grs+2,f
  6865  0CD8  0DB5               	rlf	___flmul@grs+3,f
  6866  0CD9  0B89               	decfsz	9,f
  6867  0CDA  2CD5               	goto	u3915
  6868  0CDB                     l3172:
  6869  0CDB  30FF               	movlw	255
  6870  0CDC  07BC               	addwf	___flmul@temp,f
  6871  0CDD  30FF               	movlw	255
  6872  0CDE  3DBD               	addwfc	___flmul@temp+1,f
  6873  0CDF                     l3174:
  6874  0CDF  1FBA               	btfss	___flmul@prod+2,7
  6875  0CE0  2CE2               	goto	u3921
  6876  0CE1  2CE3               	goto	u3920
  6877  0CE2                     u3921:
  6878  0CE2  2CC8               	goto	l3164
  6879  0CE3                     u3920:
  6880  0CE3                     l3176:
  6881  0CE3  01B6               	clrf	___flmul@aexp
  6882  0CE4                     l3178:
  6883  0CE4  1FB5               	btfss	___flmul@grs+3,7
  6884  0CE5  2CE7               	goto	u3931
  6885  0CE6  2CE8               	goto	u3930
  6886  0CE7                     u3931:
  6887  0CE7  2D04               	goto	l3186
  6888  0CE8                     u3930:
  6889  0CE8                     l3180:
  6890  0CE8  30FF               	movlw	255
  6891  0CE9  0532               	andwf	___flmul@grs,w
  6892  0CEA  00AC               	movwf	??___flmul
  6893  0CEB  30FF               	movlw	255
  6894  0CEC  0533               	andwf	___flmul@grs+1,w
  6895  0CED  00AD               	movwf	??___flmul+1
  6896  0CEE  30FF               	movlw	255
  6897  0CEF  0534               	andwf	___flmul@grs+2,w
  6898  0CF0  00AE               	movwf	??___flmul+2
  6899  0CF1  307F               	movlw	127
  6900  0CF2  0535               	andwf	___flmul@grs+3,w
  6901  0CF3  00AF               	movwf	??___flmul+3
  6902  0CF4  082F               	movf	??___flmul+3,w
  6903  0CF5  042E               	iorwf	??___flmul+2,w
  6904  0CF6  042D               	iorwf	??___flmul+1,w
  6905  0CF7  042C               	iorwf	??___flmul,w
  6906  0CF8  1903               	skipnz
  6907  0CF9  2CFB               	goto	u3941
  6908  0CFA  2CFC               	goto	u3940
  6909  0CFB                     u3941:
  6910  0CFB  2CFF               	goto	l930
  6911  0CFC                     u3940:
  6912  0CFC                     l3182:
  6913  0CFC  01B6               	clrf	___flmul@aexp
  6914  0CFD  0AB6               	incf	___flmul@aexp,f
  6915  0CFE  2D04               	goto	l3186
  6916  0CFF                     l930:
  6917  0CFF  1C38               	btfss	___flmul@prod,0
  6918  0D00  2D02               	goto	u3951
  6919  0D01  2D03               	goto	u3950
  6920  0D02                     u3951:
  6921  0D02  2D04               	goto	l3186
  6922  0D03                     u3950:
  6923  0D03  2CFC               	goto	l3182
  6924  0D04                     l3186:
  6925  0D04  0836               	movf	___flmul@aexp,w
  6926  0D05  1903               	btfsc	3,2
  6927  0D06  2D08               	goto	u3961
  6928  0D07  2D09               	goto	u3960
  6929  0D08                     u3961:
  6930  0D08  2D31               	goto	l3196
  6931  0D09                     u3960:
  6932  0D09                     l3188:
  6933  0D09  3001               	movlw	1
  6934  0D0A  07B8               	addwf	___flmul@prod,f
  6935  0D0B  3000               	movlw	0
  6936  0D0C  3DB9               	addwfc	___flmul@prod+1,f
  6937  0D0D  3000               	movlw	0
  6938  0D0E  3DBA               	addwfc	___flmul@prod+2,f
  6939  0D0F  3000               	movlw	0
  6940  0D10  3DBB               	addwfc	___flmul@prod+3,f
  6941  0D11                     l3190:
  6942  0D11  1C3B               	btfss	___flmul@prod+3,0
  6943  0D12  2D14               	goto	u3971
  6944  0D13  2D15               	goto	u3970
  6945  0D14                     u3971:
  6946  0D14  2D31               	goto	l3196
  6947  0D15                     u3970:
  6948  0D15                     l3192:
  6949  0D15  0838               	movf	___flmul@prod,w
  6950  0D16  00AC               	movwf	??___flmul
  6951  0D17  0839               	movf	___flmul@prod+1,w
  6952  0D18  00AD               	movwf	??___flmul+1
  6953  0D19  083A               	movf	___flmul@prod+2,w
  6954  0D1A  00AE               	movwf	??___flmul+2
  6955  0D1B  083B               	movf	___flmul@prod+3,w
  6956  0D1C  00AF               	movwf	??___flmul+3
  6957  0D1D  3001               	movlw	1
  6958  0D1E  00B0               	movwf	??___flmul+4
  6959  0D1F                     u3985:
  6960  0D1F  37AF               	asrf	??___flmul+3,f
  6961  0D20  0CAE               	rrf	??___flmul+2,f
  6962  0D21  0CAD               	rrf	??___flmul+1,f
  6963  0D22  0CAC               	rrf	??___flmul,f
  6964  0D23                     u3980:
  6965  0D23  0BB0               	decfsz	??___flmul+4,f
  6966  0D24  2D1F               	goto	u3985
  6967  0D25  082F               	movf	??___flmul+3,w
  6968  0D26  00BB               	movwf	___flmul@prod+3
  6969  0D27  082E               	movf	??___flmul+2,w
  6970  0D28  00BA               	movwf	___flmul@prod+2
  6971  0D29  082D               	movf	??___flmul+1,w
  6972  0D2A  00B9               	movwf	___flmul@prod+1
  6973  0D2B  082C               	movf	??___flmul,w
  6974  0D2C  00B8               	movwf	___flmul@prod
  6975  0D2D                     l3194:
  6976  0D2D  3001               	movlw	1
  6977  0D2E  07BC               	addwf	___flmul@temp,f
  6978  0D2F  3000               	movlw	0
  6979  0D30  3DBD               	addwfc	___flmul@temp+1,f
  6980  0D31                     l3196:
  6981  0D31  083D               	movf	___flmul@temp+1,w
  6982  0D32  3A80               	xorlw	128
  6983  0D33  00AC               	movwf	??___flmul
  6984  0D34  3080               	movlw	128
  6985  0D35  022C               	subwf	??___flmul,w
  6986  0D36  1D03               	skipz
  6987  0D37  2D3A               	goto	u3995
  6988  0D38  30FF               	movlw	255
  6989  0D39  023C               	subwf	___flmul@temp,w
  6990  0D3A                     u3995:
  6991  0D3A  1C03               	skipc
  6992  0D3B  2D3D               	goto	u3991
  6993  0D3C  2D3E               	goto	u3990
  6994  0D3D                     u3991:
  6995  0D3D  2D48               	goto	l3200
  6996  0D3E                     u3990:
  6997  0D3E                     l3198:
  6998  0D3E  307F               	movlw	127
  6999  0D3F  0020               	movlb	0	; select bank0
  7000  0D40  00BB               	movwf	___flmul@prod+3
  7001  0D41  3080               	movlw	128
  7002  0D42  00BA               	movwf	___flmul@prod+2
  7003  0D43  3000               	movlw	0
  7004  0D44  00B9               	movwf	___flmul@prod+1
  7005  0D45  3000               	movlw	0
  7006  0D46  00B8               	movwf	___flmul@prod
  7007  0D47  2D77               	goto	l936
  7008  0D48                     l3200:
  7009  0D48  0020               	movlb	0	; select bank0
  7010  0D49  083D               	movf	___flmul@temp+1,w
  7011  0D4A  3A80               	xorlw	128
  7012  0D4B  00AC               	movwf	??___flmul
  7013  0D4C  3080               	movlw	128
  7014  0D4D  022C               	subwf	??___flmul,w
  7015  0D4E  1D03               	skipz
  7016  0D4F  2D52               	goto	u4005
  7017  0D50  3001               	movlw	1
  7018  0D51  023C               	subwf	___flmul@temp,w
  7019  0D52                     u4005:
  7020  0D52  1803               	skipnc
  7021  0D53  2D55               	goto	u4001
  7022  0D54  2D56               	goto	u4000
  7023  0D55                     u4001:
  7024  0D55  2D61               	goto	l3206
  7025  0D56                     u4000:
  7026  0D56                     l3202:
  7027  0D56  3000               	movlw	0
  7028  0D57  0020               	movlb	0	; select bank0
  7029  0D58  00BB               	movwf	___flmul@prod+3
  7030  0D59  3000               	movlw	0
  7031  0D5A  00BA               	movwf	___flmul@prod+2
  7032  0D5B  3000               	movlw	0
  7033  0D5C  00B9               	movwf	___flmul@prod+1
  7034  0D5D  3000               	movlw	0
  7035  0D5E  00B8               	movwf	___flmul@prod
  7036  0D5F                     l3204:
  7037  0D5F  01B1               	clrf	___flmul@sign
  7038  0D60  2D77               	goto	l936
  7039  0D61                     l3206:
  7040  0D61  0020               	movlb	0	; select bank0
  7041  0D62  083C               	movf	___flmul@temp,w
  7042  0D63  00AC               	movwf	??___flmul
  7043  0D64  082C               	movf	??___flmul,w
  7044  0D65  00B7               	movwf	___flmul@bexp
  7045  0D66  30FF               	movlw	255
  7046  0D67  05B8               	andwf	___flmul@prod,f
  7047  0D68  30FF               	movlw	255
  7048  0D69  05B9               	andwf	___flmul@prod+1,f
  7049  0D6A  307F               	movlw	127
  7050  0D6B  05BA               	andwf	___flmul@prod+2,f
  7051  0D6C  3000               	movlw	0
  7052  0D6D  05BB               	andwf	___flmul@prod+3,f
  7053  0D6E                     l3208:
  7054  0D6E  1C37               	btfss	___flmul@bexp,0
  7055  0D6F  2D71               	goto	u4011
  7056  0D70  2D72               	goto	u4010
  7057  0D71                     u4011:
  7058  0D71  2D73               	goto	l3212
  7059  0D72                     u4010:
  7060  0D72                     l3210:
  7061  0D72  17BA               	bsf	___flmul@prod+2,7
  7062  0D73                     l3212:
  7063  0D73  3637               	lsrf	___flmul@bexp,w
  7064  0D74  00AC               	movwf	??___flmul
  7065  0D75  082C               	movf	??___flmul,w
  7066  0D76  00BB               	movwf	___flmul@prod+3
  7067  0D77                     l936:
  7068  0D77  0831               	movf	___flmul@sign,w
  7069  0D78  00AC               	movwf	??___flmul
  7070  0D79  082C               	movf	??___flmul,w
  7071  0D7A  04BB               	iorwf	___flmul@prod+3,f
  7072  0D7B                     l3214:
  7073  0D7B  083B               	movf	___flmul@prod+3,w
  7074  0D7C  00A7               	movwf	?___flmul+3
  7075  0D7D  083A               	movf	___flmul@prod+2,w
  7076  0D7E  00A6               	movwf	?___flmul+2
  7077  0D7F  0839               	movf	___flmul@prod+1,w
  7078  0D80  00A5               	movwf	?___flmul+1
  7079  0D81  0838               	movf	___flmul@prod,w
  7080  0D82  00A4               	movwf	?___flmul
  7081  0D83                     l924:
  7082  0D83  0008               	return
  7083  0D84                     __end_of___flmul:
  7084                           
  7085                           	psect	text10
  7086  1E4B                     __ptext10:	
  7087 ;; *************** function __Umul8_16 *****************
  7088 ;; Defined at:
  7089 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;  multiplier      1    wreg     unsigned char 
  7092 ;;  multiplicand    1    0[COMMON] unsigned char 
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;  multiplier      1    8[COMMON] unsigned char 
  7095 ;;  word_mpld       2    6[COMMON] unsigned int 
  7096 ;;  product         2    4[COMMON] unsigned int 
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  2    0[COMMON] unsigned int 
  7099 ;; Registers used:
  7100 ;;		wreg, status,2, status,0
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7107 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7109 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;Total ram usage:        9 bytes
  7111 ;; Hardware stack levels used: 1
  7112 ;; This function calls:
  7113 ;;		Nothing
  7114 ;; This function is called by:
  7115 ;;		___flmul
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           
  7120                           ;psect for function __Umul8_16
  7121  1E4B                     __Umul8_16:
  7122                           
  7123                           ;incstack = 0
  7124                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7125                           ;__Umul8_16@multiplier stored from wreg
  7126  1E4B  00F8               	movwf	__Umul8_16@multiplier
  7127  1E4C                     l2724:
  7128  1E4C  01F4               	clrf	__Umul8_16@product
  7129  1E4D  01F5               	clrf	__Umul8_16@product+1
  7130  1E4E                     l2726:
  7131  1E4E  0870               	movf	__Umul8_16@multiplicand,w
  7132  1E4F  00F2               	movwf	??__Umul8_16
  7133  1E50  01F3               	clrf	??__Umul8_16+1
  7134  1E51  0872               	movf	??__Umul8_16,w
  7135  1E52  00F6               	movwf	__Umul8_16@word_mpld
  7136  1E53  0873               	movf	??__Umul8_16+1,w
  7137  1E54  00F7               	movwf	__Umul8_16@word_mpld+1
  7138  1E55                     l2728:
  7139  1E55  1C78               	btfss	__Umul8_16@multiplier,0
  7140  1E56  2E58               	goto	u2971
  7141  1E57  2E59               	goto	u2970
  7142  1E58                     u2971:
  7143  1E58  2E5D               	goto	l943
  7144  1E59                     u2970:
  7145  1E59                     l2730:
  7146  1E59  0876               	movf	__Umul8_16@word_mpld,w
  7147  1E5A  07F4               	addwf	__Umul8_16@product,f
  7148  1E5B  0877               	movf	__Umul8_16@word_mpld+1,w
  7149  1E5C  3DF5               	addwfc	__Umul8_16@product+1,f
  7150  1E5D                     l943:
  7151  1E5D  3001               	movlw	1
  7152  1E5E                     u2985:
  7153  1E5E  35F6               	lslf	__Umul8_16@word_mpld,f
  7154  1E5F  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7155  1E60  0B89               	decfsz	9,f
  7156  1E61  2E5E               	goto	u2985
  7157  1E62  1003               	clrc
  7158  1E63  0CF8               	rrf	__Umul8_16@multiplier,f
  7159  1E64                     l2732:
  7160  1E64  0878               	movf	__Umul8_16@multiplier,w
  7161  1E65  1D03               	btfss	3,2
  7162  1E66  2E68               	goto	u2991
  7163  1E67  2E69               	goto	u2990
  7164  1E68                     u2991:
  7165  1E68  2E55               	goto	l2728
  7166  1E69                     u2990:
  7167  1E69                     l2734:
  7168  1E69  0875               	movf	__Umul8_16@product+1,w
  7169  1E6A  00F1               	movwf	?__Umul8_16+1
  7170  1E6B  0874               	movf	__Umul8_16@product,w
  7171  1E6C  00F0               	movwf	?__Umul8_16
  7172  1E6D                     l945:
  7173  1E6D  0008               	return
  7174  1E6E                     __end_of__Umul8_16:
  7175                           
  7176                           	psect	text11
  7177  1455                     __ptext11:	
  7178 ;; *************** function __tdiv_to_l_ *****************
  7179 ;; Defined at:
  7180 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  f1              4    0[COMMON] float 
  7183 ;;  f2              4    4[COMMON] float 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;  quot            4    0[BANK0 ] unsigned long 
  7186 ;;  exp1            1    5[BANK0 ] unsigned char 
  7187 ;;  cntr            1    4[BANK0 ] unsigned char 
  7188 ;; Return value:  Size  Location     Type
  7189 ;;                  4    0[COMMON] unsigned long 
  7190 ;; Registers used:
  7191 ;;		wreg, status,2, status,0
  7192 ;; Tracked objects:
  7193 ;;		On entry : 0/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7197 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7198 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7199 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7200 ;;      Totals:        12       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7201 ;;Total ram usage:       18 bytes
  7202 ;; Hardware stack levels used: 1
  7203 ;; This function calls:
  7204 ;;		Nothing
  7205 ;; This function is called by:
  7206 ;;		_sprintf
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           
  7211                           ;psect for function __tdiv_to_l_
  7212  1455                     __tdiv_to_l_:
  7213  1455                     l3368:	
  7214                           ;incstack = 0
  7215                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7216                           
  7217  1455  0870               	movf	__tdiv_to_l_@f1,w
  7218  1456  00F8               	movwf	??__tdiv_to_l_
  7219  1457  0871               	movf	__tdiv_to_l_@f1+1,w
  7220  1458  00F9               	movwf	??__tdiv_to_l_+1
  7221  1459  0872               	movf	__tdiv_to_l_@f1+2,w
  7222  145A  00FA               	movwf	??__tdiv_to_l_+2
  7223  145B  1003               	clrc
  7224  145C  0D79               	rlf	??__tdiv_to_l_+1,w
  7225  145D  0D7A               	rlf	??__tdiv_to_l_+2,w
  7226  145E  00FB               	movwf	??__tdiv_to_l_+3
  7227  145F  087B               	movf	??__tdiv_to_l_+3,w
  7228  1460  0020               	movlb	0	; select bank0
  7229  1461  00A5               	movwf	__tdiv_to_l_@exp1
  7230  1462  0825               	movf	__tdiv_to_l_@exp1,w
  7231  1463  1D03               	btfss	3,2
  7232  1464  2C66               	goto	u4131
  7233  1465  2C67               	goto	u4130
  7234  1466                     u4131:
  7235  1466  2C70               	goto	l3374
  7236  1467                     u4130:
  7237  1467                     l3370:
  7238  1467  3000               	movlw	0
  7239  1468  00F3               	movwf	?__tdiv_to_l_+3
  7240  1469  3000               	movlw	0
  7241  146A  00F2               	movwf	?__tdiv_to_l_+2
  7242  146B  3000               	movlw	0
  7243  146C  00F1               	movwf	?__tdiv_to_l_+1
  7244  146D  3000               	movlw	0
  7245  146E  00F0               	movwf	?__tdiv_to_l_
  7246  146F  2D04               	goto	l718
  7247  1470                     l3374:
  7248  1470  0874               	movf	__tdiv_to_l_@f2,w
  7249  1471  00F8               	movwf	??__tdiv_to_l_
  7250  1472  0875               	movf	__tdiv_to_l_@f2+1,w
  7251  1473  00F9               	movwf	??__tdiv_to_l_+1
  7252  1474  0876               	movf	__tdiv_to_l_@f2+2,w
  7253  1475  00FA               	movwf	??__tdiv_to_l_+2
  7254  1476  1003               	clrc
  7255  1477  0D79               	rlf	??__tdiv_to_l_+1,w
  7256  1478  0D7A               	rlf	??__tdiv_to_l_+2,w
  7257  1479  00FB               	movwf	??__tdiv_to_l_+3
  7258  147A  087B               	movf	??__tdiv_to_l_+3,w
  7259  147B  00A4               	movwf	__tdiv_to_l_@cntr
  7260  147C  0824               	movf	__tdiv_to_l_@cntr,w
  7261  147D  1D03               	btfss	3,2
  7262  147E  2C80               	goto	u4141
  7263  147F  2C81               	goto	u4140
  7264  1480                     u4141:
  7265  1480  2C82               	goto	l719
  7266  1481                     u4140:
  7267  1481  2C67               	goto	l3370
  7268  1482                     l719:
  7269  1482  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7270  1483                     l3380:
  7271  1483  30FF               	movlw	255
  7272  1484  05F0               	andwf	__tdiv_to_l_@f1,f
  7273  1485  30FF               	movlw	255
  7274  1486  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7275  1487  3000               	movlw	0
  7276  1488  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7277  1489                     l3382:
  7278  1489  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7279  148A  30FF               	movlw	255
  7280  148B  05F4               	andwf	__tdiv_to_l_@f2,f
  7281  148C  30FF               	movlw	255
  7282  148D  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7283  148E  3000               	movlw	0
  7284  148F  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7285  1490  3000               	movlw	0
  7286  1491  00A3               	movwf	__tdiv_to_l_@quot+3
  7287  1492  3000               	movlw	0
  7288  1493  00A2               	movwf	__tdiv_to_l_@quot+2
  7289  1494  3000               	movlw	0
  7290  1495  00A1               	movwf	__tdiv_to_l_@quot+1
  7291  1496  3000               	movlw	0
  7292  1497  00A0               	movwf	__tdiv_to_l_@quot
  7293  1498                     l3384:
  7294  1498  307F               	movlw	127
  7295  1499  02A5               	subwf	__tdiv_to_l_@exp1,f
  7296  149A                     l3386:
  7297  149A  3098               	movlw	152
  7298  149B  0724               	addwf	__tdiv_to_l_@cntr,w
  7299  149C  00F8               	movwf	??__tdiv_to_l_
  7300  149D  0878               	movf	??__tdiv_to_l_,w
  7301  149E  02A5               	subwf	__tdiv_to_l_@exp1,f
  7302  149F  3018               	movlw	24
  7303  14A0  00F8               	movwf	??__tdiv_to_l_
  7304  14A1  0878               	movf	??__tdiv_to_l_,w
  7305  14A2  00A4               	movwf	__tdiv_to_l_@cntr
  7306  14A3                     l3388:
  7307  14A3  3001               	movlw	1
  7308  14A4                     u4155:
  7309  14A4  35A0               	lslf	__tdiv_to_l_@quot,f
  7310  14A5  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7311  14A6  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7312  14A7  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7313  14A8  0B89               	decfsz	9,f
  7314  14A9  2CA4               	goto	u4155
  7315  14AA                     l3390:
  7316  14AA  0876               	movf	__tdiv_to_l_@f2+2,w
  7317  14AB  0272               	subwf	__tdiv_to_l_@f1+2,w
  7318  14AC  1D03               	skipz
  7319  14AD  2CB4               	goto	u4165
  7320  14AE  0875               	movf	__tdiv_to_l_@f2+1,w
  7321  14AF  0271               	subwf	__tdiv_to_l_@f1+1,w
  7322  14B0  1D03               	skipz
  7323  14B1  2CB4               	goto	u4165
  7324  14B2  0874               	movf	__tdiv_to_l_@f2,w
  7325  14B3  0270               	subwf	__tdiv_to_l_@f1,w
  7326  14B4                     u4165:
  7327  14B4  1C03               	skipc
  7328  14B5  2CB7               	goto	u4161
  7329  14B6  2CB8               	goto	u4160
  7330  14B7                     u4161:
  7331  14B7  2CBF               	goto	l3396
  7332  14B8                     u4160:
  7333  14B8                     l3392:
  7334  14B8  0874               	movf	__tdiv_to_l_@f2,w
  7335  14B9  02F0               	subwf	__tdiv_to_l_@f1,f
  7336  14BA  0875               	movf	__tdiv_to_l_@f2+1,w
  7337  14BB  3BF1               	subwfb	__tdiv_to_l_@f1+1,f
  7338  14BC  0876               	movf	__tdiv_to_l_@f2+2,w
  7339  14BD  3BF2               	subwfb	__tdiv_to_l_@f1+2,f
  7340  14BE                     l3394:
  7341  14BE  1420               	bsf	__tdiv_to_l_@quot,0
  7342  14BF                     l3396:
  7343  14BF  3001               	movlw	1
  7344  14C0                     u4175:
  7345  14C0  35F0               	lslf	__tdiv_to_l_@f1,f
  7346  14C1  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7347  14C2  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7348  14C3  0B89               	decfsz	9,f
  7349  14C4  2CC0               	goto	u4175
  7350  14C5                     l3398:
  7351  14C5  3001               	movlw	1
  7352  14C6  02A4               	subwf	__tdiv_to_l_@cntr,f
  7353  14C7  1D03               	btfss	3,2
  7354  14C8  2CCA               	goto	u4181
  7355  14C9  2CCB               	goto	u4180
  7356  14CA                     u4181:
  7357  14CA  2CA3               	goto	l3388
  7358  14CB                     u4180:
  7359  14CB                     l722:
  7360  14CB  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7361  14CC  2CCE               	goto	u4191
  7362  14CD  2CCF               	goto	u4190
  7363  14CE                     u4191:
  7364  14CE  2CE7               	goto	l3408
  7365  14CF                     u4190:
  7366  14CF                     l3400:
  7367  14CF  0825               	movf	__tdiv_to_l_@exp1,w
  7368  14D0  3A80               	xorlw	128
  7369  14D1  3E97               	addlw	151
  7370  14D2  1803               	skipnc
  7371  14D3  2CD5               	goto	u4201
  7372  14D4  2CD6               	goto	u4200
  7373  14D5                     u4201:
  7374  14D5  2CD7               	goto	l3406
  7375  14D6                     u4200:
  7376  14D6  2C67               	goto	l3370
  7377  14D7                     l3406:
  7378  14D7  3001               	movlw	1
  7379  14D8                     u4215:
  7380  14D8  36A3               	lsrf	__tdiv_to_l_@quot+3,f
  7381  14D9  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7382  14DA  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7383  14DB  0CA0               	rrf	__tdiv_to_l_@quot,f
  7384  14DC  0B89               	decfsz	9,f
  7385  14DD  2CD8               	goto	u4215
  7386  14DE  3001               	movlw	1
  7387  14DF  00F8               	movwf	??__tdiv_to_l_
  7388  14E0  0878               	movf	??__tdiv_to_l_,w
  7389  14E1  07A5               	addwf	__tdiv_to_l_@exp1,f
  7390  14E2  1D03               	btfss	3,2
  7391  14E3  2CE5               	goto	u4221
  7392  14E4  2CE6               	goto	u4220
  7393  14E5                     u4221:
  7394  14E5  2CD7               	goto	l3406
  7395  14E6                     u4220:
  7396  14E6  2CFC               	goto	l3416
  7397  14E7                     l3408:
  7398  14E7  3018               	movlw	24
  7399  14E8  0225               	subwf	__tdiv_to_l_@exp1,w
  7400  14E9  1C03               	skipc
  7401  14EA  2CEC               	goto	u4231
  7402  14EB  2CED               	goto	u4230
  7403  14EC                     u4231:
  7404  14EC  2CF7               	goto	l729
  7405  14ED                     u4230:
  7406  14ED  2C67               	goto	l3370
  7407  14EE                     l3414:
  7408  14EE  3001               	movlw	1
  7409  14EF                     u4245:
  7410  14EF  35A0               	lslf	__tdiv_to_l_@quot,f
  7411  14F0  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7412  14F1  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7413  14F2  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7414  14F3  0B89               	decfsz	9,f
  7415  14F4  2CEF               	goto	u4245
  7416  14F5  3001               	movlw	1
  7417  14F6  02A5               	subwf	__tdiv_to_l_@exp1,f
  7418  14F7                     l729:
  7419  14F7  0825               	movf	__tdiv_to_l_@exp1,w
  7420  14F8  1D03               	btfss	3,2
  7421  14F9  2CFB               	goto	u4251
  7422  14FA  2CFC               	goto	u4250
  7423  14FB                     u4251:
  7424  14FB  2CEE               	goto	l3414
  7425  14FC                     u4250:
  7426  14FC                     l3416:
  7427  14FC  0823               	movf	__tdiv_to_l_@quot+3,w
  7428  14FD  00F3               	movwf	?__tdiv_to_l_+3
  7429  14FE  0822               	movf	__tdiv_to_l_@quot+2,w
  7430  14FF  00F2               	movwf	?__tdiv_to_l_+2
  7431  1500  0821               	movf	__tdiv_to_l_@quot+1,w
  7432  1501  00F1               	movwf	?__tdiv_to_l_+1
  7433  1502  0820               	movf	__tdiv_to_l_@quot,w
  7434  1503  00F0               	movwf	?__tdiv_to_l_
  7435  1504                     l718:
  7436  1504  0008               	return
  7437  1505                     __end_of__tdiv_to_l_:
  7438                           
  7439                           	psect	text12
  7440  13A6                     __ptext12:	
  7441 ;; *************** function __div_to_l_ *****************
  7442 ;; Defined at:
  7443 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;  f1              4    0[COMMON] unsigned long 
  7446 ;;  f2              4    4[COMMON] unsigned long 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  quot            4    0[BANK0 ] unsigned long 
  7449 ;;  exp1            1    5[BANK0 ] unsigned char 
  7450 ;;  cntr            1    4[BANK0 ] unsigned char 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  4    0[COMMON] unsigned long 
  7453 ;; Registers used:
  7454 ;;		wreg, status,2, status,0
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7460 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;Total ram usage:       15 bytes
  7465 ;; Hardware stack levels used: 1
  7466 ;; This function calls:
  7467 ;;		Nothing
  7468 ;; This function is called by:
  7469 ;;		_sprintf
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           
  7474                           ;psect for function __div_to_l_
  7475  13A6                     __div_to_l_:
  7476  13A6                     l3420:	
  7477                           ;incstack = 0
  7478                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7479                           
  7480  13A6  1003               	clrc
  7481  13A7  0D72               	rlf	__div_to_l_@f1+2,w
  7482  13A8  0D73               	rlf	__div_to_l_@f1+3,w
  7483  13A9  00F8               	movwf	??__div_to_l_
  7484  13AA  0878               	movf	??__div_to_l_,w
  7485  13AB  0020               	movlb	0	; select bank0
  7486  13AC  00A5               	movwf	__div_to_l_@exp1
  7487  13AD  0825               	movf	__div_to_l_@exp1,w
  7488  13AE  1D03               	btfss	3,2
  7489  13AF  2BB1               	goto	u4261
  7490  13B0  2BB2               	goto	u4260
  7491  13B1                     u4261:
  7492  13B1  2BBB               	goto	l3426
  7493  13B2                     u4260:
  7494  13B2                     l3422:
  7495  13B2  3000               	movlw	0
  7496  13B3  00F3               	movwf	?__div_to_l_+3
  7497  13B4  3000               	movlw	0
  7498  13B5  00F2               	movwf	?__div_to_l_+2
  7499  13B6  3000               	movlw	0
  7500  13B7  00F1               	movwf	?__div_to_l_+1
  7501  13B8  3000               	movlw	0
  7502  13B9  00F0               	movwf	?__div_to_l_
  7503  13BA  2C54               	goto	l671
  7504  13BB                     l3426:
  7505  13BB  1003               	clrc
  7506  13BC  0D76               	rlf	__div_to_l_@f2+2,w
  7507  13BD  0D77               	rlf	__div_to_l_@f2+3,w
  7508  13BE  00F8               	movwf	??__div_to_l_
  7509  13BF  0878               	movf	??__div_to_l_,w
  7510  13C0  00A4               	movwf	__div_to_l_@cntr
  7511  13C1  0824               	movf	__div_to_l_@cntr,w
  7512  13C2  1D03               	btfss	3,2
  7513  13C3  2BC5               	goto	u4271
  7514  13C4  2BC6               	goto	u4270
  7515  13C5                     u4271:
  7516  13C5  2BC7               	goto	l672
  7517  13C6                     u4270:
  7518  13C6  2BB2               	goto	l3422
  7519  13C7                     l672:
  7520  13C7  17F2               	bsf	__div_to_l_@f1+2,7
  7521  13C8                     l3432:
  7522  13C8  30FF               	movlw	255
  7523  13C9  05F0               	andwf	__div_to_l_@f1,f
  7524  13CA  30FF               	movlw	255
  7525  13CB  05F1               	andwf	__div_to_l_@f1+1,f
  7526  13CC  30FF               	movlw	255
  7527  13CD  05F2               	andwf	__div_to_l_@f1+2,f
  7528  13CE  3000               	movlw	0
  7529  13CF  05F3               	andwf	__div_to_l_@f1+3,f
  7530  13D0                     l3434:
  7531  13D0  17F6               	bsf	__div_to_l_@f2+2,7
  7532  13D1  30FF               	movlw	255
  7533  13D2  05F4               	andwf	__div_to_l_@f2,f
  7534  13D3  30FF               	movlw	255
  7535  13D4  05F5               	andwf	__div_to_l_@f2+1,f
  7536  13D5  30FF               	movlw	255
  7537  13D6  05F6               	andwf	__div_to_l_@f2+2,f
  7538  13D7  3000               	movlw	0
  7539  13D8  05F7               	andwf	__div_to_l_@f2+3,f
  7540  13D9  3000               	movlw	0
  7541  13DA  00A3               	movwf	__div_to_l_@quot+3
  7542  13DB  3000               	movlw	0
  7543  13DC  00A2               	movwf	__div_to_l_@quot+2
  7544  13DD  3000               	movlw	0
  7545  13DE  00A1               	movwf	__div_to_l_@quot+1
  7546  13DF  3000               	movlw	0
  7547  13E0  00A0               	movwf	__div_to_l_@quot
  7548  13E1                     l3436:
  7549  13E1  307F               	movlw	127
  7550  13E2  02A5               	subwf	__div_to_l_@exp1,f
  7551  13E3                     l3438:
  7552  13E3  30A0               	movlw	160
  7553  13E4  0724               	addwf	__div_to_l_@cntr,w
  7554  13E5  00F8               	movwf	??__div_to_l_
  7555  13E6  0878               	movf	??__div_to_l_,w
  7556  13E7  02A5               	subwf	__div_to_l_@exp1,f
  7557  13E8  3020               	movlw	32
  7558  13E9  00F8               	movwf	??__div_to_l_
  7559  13EA  0878               	movf	??__div_to_l_,w
  7560  13EB  00A4               	movwf	__div_to_l_@cntr
  7561  13EC                     l3440:
  7562  13EC  3001               	movlw	1
  7563  13ED                     u4285:
  7564  13ED  35A0               	lslf	__div_to_l_@quot,f
  7565  13EE  0DA1               	rlf	__div_to_l_@quot+1,f
  7566  13EF  0DA2               	rlf	__div_to_l_@quot+2,f
  7567  13F0  0DA3               	rlf	__div_to_l_@quot+3,f
  7568  13F1  0B89               	decfsz	9,f
  7569  13F2  2BED               	goto	u4285
  7570  13F3                     l3442:
  7571  13F3  0877               	movf	__div_to_l_@f2+3,w
  7572  13F4  0273               	subwf	__div_to_l_@f1+3,w
  7573  13F5  1D03               	skipz
  7574  13F6  2C01               	goto	u4295
  7575  13F7  0876               	movf	__div_to_l_@f2+2,w
  7576  13F8  0272               	subwf	__div_to_l_@f1+2,w
  7577  13F9  1D03               	skipz
  7578  13FA  2C01               	goto	u4295
  7579  13FB  0875               	movf	__div_to_l_@f2+1,w
  7580  13FC  0271               	subwf	__div_to_l_@f1+1,w
  7581  13FD  1D03               	skipz
  7582  13FE  2C01               	goto	u4295
  7583  13FF  0874               	movf	__div_to_l_@f2,w
  7584  1400  0270               	subwf	__div_to_l_@f1,w
  7585  1401                     u4295:
  7586  1401  1C03               	skipc
  7587  1402  2C04               	goto	u4291
  7588  1403  2C05               	goto	u4290
  7589  1404                     u4291:
  7590  1404  2C0E               	goto	l3448
  7591  1405                     u4290:
  7592  1405                     l3444:
  7593  1405  0874               	movf	__div_to_l_@f2,w
  7594  1406  02F0               	subwf	__div_to_l_@f1,f
  7595  1407  0875               	movf	__div_to_l_@f2+1,w
  7596  1408  3BF1               	subwfb	__div_to_l_@f1+1,f
  7597  1409  0876               	movf	__div_to_l_@f2+2,w
  7598  140A  3BF2               	subwfb	__div_to_l_@f1+2,f
  7599  140B  0877               	movf	__div_to_l_@f2+3,w
  7600  140C  3BF3               	subwfb	__div_to_l_@f1+3,f
  7601  140D                     l3446:
  7602  140D  1420               	bsf	__div_to_l_@quot,0
  7603  140E                     l3448:
  7604  140E  3001               	movlw	1
  7605  140F                     u4305:
  7606  140F  35F0               	lslf	__div_to_l_@f1,f
  7607  1410  0DF1               	rlf	__div_to_l_@f1+1,f
  7608  1411  0DF2               	rlf	__div_to_l_@f1+2,f
  7609  1412  0DF3               	rlf	__div_to_l_@f1+3,f
  7610  1413  0B89               	decfsz	9,f
  7611  1414  2C0F               	goto	u4305
  7612  1415                     l3450:
  7613  1415  3001               	movlw	1
  7614  1416  02A4               	subwf	__div_to_l_@cntr,f
  7615  1417  1D03               	btfss	3,2
  7616  1418  2C1A               	goto	u4311
  7617  1419  2C1B               	goto	u4310
  7618  141A                     u4311:
  7619  141A  2BEC               	goto	l3440
  7620  141B                     u4310:
  7621  141B                     l675:
  7622  141B  1FA5               	btfss	__div_to_l_@exp1,7
  7623  141C  2C1E               	goto	u4321
  7624  141D  2C1F               	goto	u4320
  7625  141E                     u4321:
  7626  141E  2C37               	goto	l3460
  7627  141F                     u4320:
  7628  141F                     l3452:
  7629  141F  0825               	movf	__div_to_l_@exp1,w
  7630  1420  3A80               	xorlw	128
  7631  1421  3E9F               	addlw	159
  7632  1422  1803               	skipnc
  7633  1423  2C25               	goto	u4331
  7634  1424  2C26               	goto	u4330
  7635  1425                     u4331:
  7636  1425  2C27               	goto	l3458
  7637  1426                     u4330:
  7638  1426  2BB2               	goto	l3422
  7639  1427                     l3458:
  7640  1427  3001               	movlw	1
  7641  1428                     u4345:
  7642  1428  36A3               	lsrf	__div_to_l_@quot+3,f
  7643  1429  0CA2               	rrf	__div_to_l_@quot+2,f
  7644  142A  0CA1               	rrf	__div_to_l_@quot+1,f
  7645  142B  0CA0               	rrf	__div_to_l_@quot,f
  7646  142C  0B89               	decfsz	9,f
  7647  142D  2C28               	goto	u4345
  7648  142E  3001               	movlw	1
  7649  142F  00F8               	movwf	??__div_to_l_
  7650  1430  0878               	movf	??__div_to_l_,w
  7651  1431  07A5               	addwf	__div_to_l_@exp1,f
  7652  1432  1D03               	btfss	3,2
  7653  1433  2C35               	goto	u4351
  7654  1434  2C36               	goto	u4350
  7655  1435                     u4351:
  7656  1435  2C27               	goto	l3458
  7657  1436                     u4350:
  7658  1436  2C4C               	goto	l3468
  7659  1437                     l3460:
  7660  1437  3020               	movlw	32
  7661  1438  0225               	subwf	__div_to_l_@exp1,w
  7662  1439  1C03               	skipc
  7663  143A  2C3C               	goto	u4361
  7664  143B  2C3D               	goto	u4360
  7665  143C                     u4361:
  7666  143C  2C47               	goto	l682
  7667  143D                     u4360:
  7668  143D  2BB2               	goto	l3422
  7669  143E                     l3466:
  7670  143E  3001               	movlw	1
  7671  143F                     u4375:
  7672  143F  35A0               	lslf	__div_to_l_@quot,f
  7673  1440  0DA1               	rlf	__div_to_l_@quot+1,f
  7674  1441  0DA2               	rlf	__div_to_l_@quot+2,f
  7675  1442  0DA3               	rlf	__div_to_l_@quot+3,f
  7676  1443  0B89               	decfsz	9,f
  7677  1444  2C3F               	goto	u4375
  7678  1445  3001               	movlw	1
  7679  1446  02A5               	subwf	__div_to_l_@exp1,f
  7680  1447                     l682:
  7681  1447  0825               	movf	__div_to_l_@exp1,w
  7682  1448  1D03               	btfss	3,2
  7683  1449  2C4B               	goto	u4381
  7684  144A  2C4C               	goto	u4380
  7685  144B                     u4381:
  7686  144B  2C3E               	goto	l3466
  7687  144C                     u4380:
  7688  144C                     l3468:
  7689  144C  0823               	movf	__div_to_l_@quot+3,w
  7690  144D  00F3               	movwf	?__div_to_l_+3
  7691  144E  0822               	movf	__div_to_l_@quot+2,w
  7692  144F  00F2               	movwf	?__div_to_l_+2
  7693  1450  0821               	movf	__div_to_l_@quot+1,w
  7694  1451  00F1               	movwf	?__div_to_l_+1
  7695  1452  0820               	movf	__div_to_l_@quot,w
  7696  1453  00F0               	movwf	?__div_to_l_
  7697  1454                     l671:
  7698  1454  0008               	return
  7699  1455                     __end_of__div_to_l_:
  7700                           
  7701                           	psect	text13
  7702  1E0C                     __ptext13:	
  7703 ;; *************** function ___wmul *****************
  7704 ;; Defined at:
  7705 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;  multiplier      2    0[COMMON] unsigned int 
  7708 ;;  multiplicand    2    2[COMMON] unsigned int 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  product         2    4[COMMON] unsigned int 
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  2    0[COMMON] unsigned int 
  7713 ;; Registers used:
  7714 ;;		wreg, status,2, status,0
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7720 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7723 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7724 ;;Total ram usage:        6 bytes
  7725 ;; Hardware stack levels used: 1
  7726 ;; This function calls:
  7727 ;;		Nothing
  7728 ;; This function is called by:
  7729 ;;		_sprintf
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           
  7734                           ;psect for function ___wmul
  7735  1E0C                     ___wmul:
  7736  1E0C                     l3472:	
  7737                           ;incstack = 0
  7738                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7739                           
  7740  1E0C  01F4               	clrf	___wmul@product
  7741  1E0D  01F5               	clrf	___wmul@product+1
  7742  1E0E                     l3474:
  7743  1E0E  1C70               	btfss	___wmul@multiplier,0
  7744  1E0F  2E11               	goto	u4391
  7745  1E10  2E12               	goto	u4390
  7746  1E11                     u4391:
  7747  1E11  2E16               	goto	l501
  7748  1E12                     u4390:
  7749  1E12                     l3476:
  7750  1E12  0872               	movf	___wmul@multiplicand,w
  7751  1E13  07F4               	addwf	___wmul@product,f
  7752  1E14  0873               	movf	___wmul@multiplicand+1,w
  7753  1E15  3DF5               	addwfc	___wmul@product+1,f
  7754  1E16                     l501:
  7755  1E16  3001               	movlw	1
  7756  1E17                     u4405:
  7757  1E17  35F2               	lslf	___wmul@multiplicand,f
  7758  1E18  0DF3               	rlf	___wmul@multiplicand+1,f
  7759  1E19  0B89               	decfsz	9,f
  7760  1E1A  2E17               	goto	u4405
  7761  1E1B                     l3478:
  7762  1E1B  3001               	movlw	1
  7763  1E1C                     u4415:
  7764  1E1C  36F1               	lsrf	___wmul@multiplier+1,f
  7765  1E1D  0CF0               	rrf	___wmul@multiplier,f
  7766  1E1E  0B89               	decfsz	9,f
  7767  1E1F  2E1C               	goto	u4415
  7768  1E20                     l3480:
  7769  1E20  0870               	movf	___wmul@multiplier,w
  7770  1E21  0471               	iorwf	___wmul@multiplier+1,w
  7771  1E22  1D03               	btfss	3,2
  7772  1E23  2E25               	goto	u4421
  7773  1E24  2E26               	goto	u4420
  7774  1E25                     u4421:
  7775  1E25  2E0E               	goto	l3474
  7776  1E26                     u4420:
  7777  1E26                     l3482:
  7778  1E26  0875               	movf	___wmul@product+1,w
  7779  1E27  00F1               	movwf	?___wmul+1
  7780  1E28  0874               	movf	___wmul@product,w
  7781  1E29  00F0               	movwf	?___wmul
  7782  1E2A                     l503:
  7783  1E2A  0008               	return
  7784  1E2B                     __end_of___wmul:
  7785                           
  7786                           	psect	text14
  7787  1F68                     __ptext14:	
  7788 ;; *************** function ___llmod *****************
  7789 ;; Defined at:
  7790 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  divisor         4    0[COMMON] unsigned long 
  7793 ;;  dividend        4    4[COMMON] unsigned long 
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;  counter         1    9[COMMON] unsigned char 
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  4    0[COMMON] unsigned long 
  7798 ;; Registers used:
  7799 ;;		wreg, status,2, status,0
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7805 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7809 ;;Total ram usage:       10 bytes
  7810 ;; Hardware stack levels used: 1
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_sprintf
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           
  7819                           ;psect for function ___llmod
  7820  1F68                     ___llmod:
  7821  1F68                     l3626:	
  7822                           ;incstack = 0
  7823                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7824                           
  7825  1F68  0873               	movf	___llmod@divisor+3,w
  7826  1F69  0472               	iorwf	___llmod@divisor+2,w
  7827  1F6A  0471               	iorwf	___llmod@divisor+1,w
  7828  1F6B  0470               	iorwf	___llmod@divisor,w
  7829  1F6C  1903               	skipnz
  7830  1F6D  2F6F               	goto	u4791
  7831  1F6E  2F70               	goto	u4790
  7832  1F6F                     u4791:
  7833  1F6F  2FA9               	goto	l3642
  7834  1F70                     u4790:
  7835  1F70                     l3628:
  7836  1F70  01F9               	clrf	___llmod@counter
  7837  1F71  0AF9               	incf	___llmod@counter,f
  7838  1F72  2F7E               	goto	l3632
  7839  1F73                     l3630:
  7840  1F73  3001               	movlw	1
  7841  1F74                     u4805:
  7842  1F74  35F0               	lslf	___llmod@divisor,f
  7843  1F75  0DF1               	rlf	___llmod@divisor+1,f
  7844  1F76  0DF2               	rlf	___llmod@divisor+2,f
  7845  1F77  0DF3               	rlf	___llmod@divisor+3,f
  7846  1F78  0B89               	decfsz	9,f
  7847  1F79  2F74               	goto	u4805
  7848  1F7A  3001               	movlw	1
  7849  1F7B  00F8               	movwf	??___llmod
  7850  1F7C  0878               	movf	??___llmod,w
  7851  1F7D  07F9               	addwf	___llmod@counter,f
  7852  1F7E                     l3632:
  7853  1F7E  1FF3               	btfss	___llmod@divisor+3,7
  7854  1F7F  2F81               	goto	u4811
  7855  1F80  2F82               	goto	u4810
  7856  1F81                     u4811:
  7857  1F81  2F73               	goto	l3630
  7858  1F82                     u4810:
  7859  1F82                     l3634:
  7860  1F82  0873               	movf	___llmod@divisor+3,w
  7861  1F83  0277               	subwf	___llmod@dividend+3,w
  7862  1F84  1D03               	skipz
  7863  1F85  2F90               	goto	u4825
  7864  1F86  0872               	movf	___llmod@divisor+2,w
  7865  1F87  0276               	subwf	___llmod@dividend+2,w
  7866  1F88  1D03               	skipz
  7867  1F89  2F90               	goto	u4825
  7868  1F8A  0871               	movf	___llmod@divisor+1,w
  7869  1F8B  0275               	subwf	___llmod@dividend+1,w
  7870  1F8C  1D03               	skipz
  7871  1F8D  2F90               	goto	u4825
  7872  1F8E  0870               	movf	___llmod@divisor,w
  7873  1F8F  0274               	subwf	___llmod@dividend,w
  7874  1F90                     u4825:
  7875  1F90  1C03               	skipc
  7876  1F91  2F93               	goto	u4821
  7877  1F92  2F94               	goto	u4820
  7878  1F93                     u4821:
  7879  1F93  2F9C               	goto	l3638
  7880  1F94                     u4820:
  7881  1F94                     l3636:
  7882  1F94  0870               	movf	___llmod@divisor,w
  7883  1F95  02F4               	subwf	___llmod@dividend,f
  7884  1F96  0871               	movf	___llmod@divisor+1,w
  7885  1F97  3BF5               	subwfb	___llmod@dividend+1,f
  7886  1F98  0872               	movf	___llmod@divisor+2,w
  7887  1F99  3BF6               	subwfb	___llmod@dividend+2,f
  7888  1F9A  0873               	movf	___llmod@divisor+3,w
  7889  1F9B  3BF7               	subwfb	___llmod@dividend+3,f
  7890  1F9C                     l3638:
  7891  1F9C  3001               	movlw	1
  7892  1F9D                     u4835:
  7893  1F9D  36F3               	lsrf	___llmod@divisor+3,f
  7894  1F9E  0CF2               	rrf	___llmod@divisor+2,f
  7895  1F9F  0CF1               	rrf	___llmod@divisor+1,f
  7896  1FA0  0CF0               	rrf	___llmod@divisor,f
  7897  1FA1  0B89               	decfsz	9,f
  7898  1FA2  2F9D               	goto	u4835
  7899  1FA3                     l3640:
  7900  1FA3  3001               	movlw	1
  7901  1FA4  02F9               	subwf	___llmod@counter,f
  7902  1FA5  1D03               	btfss	3,2
  7903  1FA6  2FA8               	goto	u4841
  7904  1FA7  2FA9               	goto	u4840
  7905  1FA8                     u4841:
  7906  1FA8  2F82               	goto	l3634
  7907  1FA9                     u4840:
  7908  1FA9                     l3642:
  7909  1FA9  0877               	movf	___llmod@dividend+3,w
  7910  1FAA  00F3               	movwf	?___llmod+3
  7911  1FAB  0876               	movf	___llmod@dividend+2,w
  7912  1FAC  00F2               	movwf	?___llmod+2
  7913  1FAD  0875               	movf	___llmod@dividend+1,w
  7914  1FAE  00F1               	movwf	?___llmod+1
  7915  1FAF  0874               	movf	___llmod@dividend,w
  7916  1FB0  00F0               	movwf	?___llmod
  7917  1FB1                     l757:
  7918  1FB1  0008               	return
  7919  1FB2                     __end_of___llmod:
  7920                           
  7921                           	psect	text15
  7922  10B1                     __ptext15:	
  7923 ;; *************** function ___lldiv *****************
  7924 ;; Defined at:
  7925 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  divisor         4    0[COMMON] unsigned long 
  7928 ;;  dividend        4    4[COMMON] unsigned long 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  quotient        4    9[COMMON] unsigned long 
  7931 ;;  counter         1   13[COMMON] unsigned char 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  4    0[COMMON] unsigned long 
  7934 ;; Registers used:
  7935 ;;		wreg, status,2, status,0
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7941 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7942 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7944 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7945 ;;Total ram usage:       14 bytes
  7946 ;; Hardware stack levels used: 1
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		_sprintf
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           
  7954                           
  7955                           ;psect for function ___lldiv
  7956  10B1                     ___lldiv:
  7957  10B1                     l3486:	
  7958                           ;incstack = 0
  7959                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7960                           
  7961  10B1  3000               	movlw	0
  7962  10B2  00FC               	movwf	___lldiv@quotient+3
  7963  10B3  3000               	movlw	0
  7964  10B4  00FB               	movwf	___lldiv@quotient+2
  7965  10B5  3000               	movlw	0
  7966  10B6  00FA               	movwf	___lldiv@quotient+1
  7967  10B7  3000               	movlw	0
  7968  10B8  00F9               	movwf	___lldiv@quotient
  7969  10B9  0873               	movf	___lldiv@divisor+3,w
  7970  10BA  0472               	iorwf	___lldiv@divisor+2,w
  7971  10BB  0471               	iorwf	___lldiv@divisor+1,w
  7972  10BC  0470               	iorwf	___lldiv@divisor,w
  7973  10BD  1903               	skipnz
  7974  10BE  28C0               	goto	u4431
  7975  10BF  28C1               	goto	u4430
  7976  10C0                     u4431:
  7977  10C0  2902               	goto	l3506
  7978  10C1                     u4430:
  7979  10C1                     l3488:
  7980  10C1  01FD               	clrf	___lldiv@counter
  7981  10C2  0AFD               	incf	___lldiv@counter,f
  7982  10C3  28CF               	goto	l3492
  7983  10C4                     l3490:
  7984  10C4  3001               	movlw	1
  7985  10C5                     u4445:
  7986  10C5  35F0               	lslf	___lldiv@divisor,f
  7987  10C6  0DF1               	rlf	___lldiv@divisor+1,f
  7988  10C7  0DF2               	rlf	___lldiv@divisor+2,f
  7989  10C8  0DF3               	rlf	___lldiv@divisor+3,f
  7990  10C9  0B89               	decfsz	9,f
  7991  10CA  28C5               	goto	u4445
  7992  10CB  3001               	movlw	1
  7993  10CC  00F8               	movwf	??___lldiv
  7994  10CD  0878               	movf	??___lldiv,w
  7995  10CE  07FD               	addwf	___lldiv@counter,f
  7996  10CF                     l3492:
  7997  10CF  1FF3               	btfss	___lldiv@divisor+3,7
  7998  10D0  28D2               	goto	u4451
  7999  10D1  28D3               	goto	u4450
  8000  10D2                     u4451:
  8001  10D2  28C4               	goto	l3490
  8002  10D3                     u4450:
  8003  10D3                     l3494:
  8004  10D3  3001               	movlw	1
  8005  10D4                     u4465:
  8006  10D4  35F9               	lslf	___lldiv@quotient,f
  8007  10D5  0DFA               	rlf	___lldiv@quotient+1,f
  8008  10D6  0DFB               	rlf	___lldiv@quotient+2,f
  8009  10D7  0DFC               	rlf	___lldiv@quotient+3,f
  8010  10D8  0B89               	decfsz	9,f
  8011  10D9  28D4               	goto	u4465
  8012  10DA                     l3496:
  8013  10DA  0873               	movf	___lldiv@divisor+3,w
  8014  10DB  0277               	subwf	___lldiv@dividend+3,w
  8015  10DC  1D03               	skipz
  8016  10DD  28E8               	goto	u4475
  8017  10DE  0872               	movf	___lldiv@divisor+2,w
  8018  10DF  0276               	subwf	___lldiv@dividend+2,w
  8019  10E0  1D03               	skipz
  8020  10E1  28E8               	goto	u4475
  8021  10E2  0871               	movf	___lldiv@divisor+1,w
  8022  10E3  0275               	subwf	___lldiv@dividend+1,w
  8023  10E4  1D03               	skipz
  8024  10E5  28E8               	goto	u4475
  8025  10E6  0870               	movf	___lldiv@divisor,w
  8026  10E7  0274               	subwf	___lldiv@dividend,w
  8027  10E8                     u4475:
  8028  10E8  1C03               	skipc
  8029  10E9  28EB               	goto	u4471
  8030  10EA  28EC               	goto	u4470
  8031  10EB                     u4471:
  8032  10EB  28F5               	goto	l3502
  8033  10EC                     u4470:
  8034  10EC                     l3498:
  8035  10EC  0870               	movf	___lldiv@divisor,w
  8036  10ED  02F4               	subwf	___lldiv@dividend,f
  8037  10EE  0871               	movf	___lldiv@divisor+1,w
  8038  10EF  3BF5               	subwfb	___lldiv@dividend+1,f
  8039  10F0  0872               	movf	___lldiv@divisor+2,w
  8040  10F1  3BF6               	subwfb	___lldiv@dividend+2,f
  8041  10F2  0873               	movf	___lldiv@divisor+3,w
  8042  10F3  3BF7               	subwfb	___lldiv@dividend+3,f
  8043  10F4                     l3500:
  8044  10F4  1479               	bsf	___lldiv@quotient,0
  8045  10F5                     l3502:
  8046  10F5  3001               	movlw	1
  8047  10F6                     u4485:
  8048  10F6  36F3               	lsrf	___lldiv@divisor+3,f
  8049  10F7  0CF2               	rrf	___lldiv@divisor+2,f
  8050  10F8  0CF1               	rrf	___lldiv@divisor+1,f
  8051  10F9  0CF0               	rrf	___lldiv@divisor,f
  8052  10FA  0B89               	decfsz	9,f
  8053  10FB  28F6               	goto	u4485
  8054  10FC                     l3504:
  8055  10FC  3001               	movlw	1
  8056  10FD  02FD               	subwf	___lldiv@counter,f
  8057  10FE  1D03               	btfss	3,2
  8058  10FF  2901               	goto	u4491
  8059  1100  2902               	goto	u4490
  8060  1101                     u4491:
  8061  1101  28D3               	goto	l3494
  8062  1102                     u4490:
  8063  1102                     l3506:
  8064  1102  087C               	movf	___lldiv@quotient+3,w
  8065  1103  00F3               	movwf	?___lldiv+3
  8066  1104  087B               	movf	___lldiv@quotient+2,w
  8067  1105  00F2               	movwf	?___lldiv+2
  8068  1106  087A               	movf	___lldiv@quotient+1,w
  8069  1107  00F1               	movwf	?___lldiv+1
  8070  1108  0879               	movf	___lldiv@quotient,w
  8071  1109  00F0               	movwf	?___lldiv
  8072  110A                     l537:
  8073  110A  0008               	return
  8074  110B                     __end_of___lldiv:
  8075                           
  8076                           	psect	text16
  8077  116B                     __ptext16:	
  8078 ;; *************** function ___fltol *****************
  8079 ;; Defined at:
  8080 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  f1              4   51[BANK0 ] unsigned long 
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;  exp1            1   61[BANK0 ] unsigned char 
  8085 ;;  sign1           1   60[BANK0 ] unsigned char 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  4   51[BANK0 ] long 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2, status,0
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8096 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;Total ram usage:       11 bytes
  8100 ;; Hardware stack levels used: 1
  8101 ;; This function calls:
  8102 ;;		Nothing
  8103 ;; This function is called by:
  8104 ;;		_sprintf
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           
  8109                           ;psect for function ___fltol
  8110  116B                     ___fltol:
  8111  116B                     l3590:	
  8112                           ;incstack = 0
  8113                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8114                           
  8115  116B  1003               	clrc
  8116  116C  0020               	movlb	0	; select bank0
  8117  116D  0D55               	rlf	___fltol@f1+2,w
  8118  116E  0D56               	rlf	___fltol@f1+3,w
  8119  116F  00D7               	movwf	??___fltol
  8120  1170  0857               	movf	??___fltol,w
  8121  1171  00DD               	movwf	___fltol@exp1
  8122  1172  085D               	movf	___fltol@exp1,w
  8123  1173  1D03               	btfss	3,2
  8124  1174  2976               	goto	u4691
  8125  1175  2977               	goto	u4690
  8126  1176                     u4691:
  8127  1176  2980               	goto	l3596
  8128  1177                     u4690:
  8129  1177                     l3592:
  8130  1177  3000               	movlw	0
  8131  1178  00D6               	movwf	?___fltol+3
  8132  1179  3000               	movlw	0
  8133  117A  00D5               	movwf	?___fltol+2
  8134  117B  3000               	movlw	0
  8135  117C  00D4               	movwf	?___fltol+1
  8136  117D  3000               	movlw	0
  8137  117E  00D3               	movwf	?___fltol
  8138  117F  29DF               	goto	l704
  8139  1180                     l3596:
  8140  1180  0853               	movf	___fltol@f1,w
  8141  1181  00D7               	movwf	??___fltol
  8142  1182  0854               	movf	___fltol@f1+1,w
  8143  1183  00D8               	movwf	??___fltol+1
  8144  1184  0855               	movf	___fltol@f1+2,w
  8145  1185  00D9               	movwf	??___fltol+2
  8146  1186  0856               	movf	___fltol@f1+3,w
  8147  1187  00DA               	movwf	??___fltol+3
  8148  1188  301F               	movlw	31
  8149  1189                     u4705:
  8150  1189  36DA               	lsrf	??___fltol+3,f
  8151  118A  0CD9               	rrf	??___fltol+2,f
  8152  118B  0CD8               	rrf	??___fltol+1,f
  8153  118C  0CD7               	rrf	??___fltol,f
  8154  118D                     u4700:
  8155  118D  0B89               	decfsz	9,f
  8156  118E  2989               	goto	u4705
  8157  118F  0857               	movf	??___fltol,w
  8158  1190  00DB               	movwf	??___fltol+4
  8159  1191  085B               	movf	??___fltol+4,w
  8160  1192  00DC               	movwf	___fltol@sign1
  8161  1193                     l3598:
  8162  1193  17D5               	bsf	___fltol@f1+2,7
  8163  1194                     l3600:
  8164  1194  30FF               	movlw	255
  8165  1195  05D3               	andwf	___fltol@f1,f
  8166  1196  30FF               	movlw	255
  8167  1197  05D4               	andwf	___fltol@f1+1,f
  8168  1198  30FF               	movlw	255
  8169  1199  05D5               	andwf	___fltol@f1+2,f
  8170  119A  3000               	movlw	0
  8171  119B  05D6               	andwf	___fltol@f1+3,f
  8172  119C                     l3602:
  8173  119C  3096               	movlw	150
  8174  119D  02DD               	subwf	___fltol@exp1,f
  8175  119E                     l3604:
  8176  119E  1FDD               	btfss	___fltol@exp1,7
  8177  119F  29A1               	goto	u4711
  8178  11A0  29A2               	goto	u4710
  8179  11A1                     u4711:
  8180  11A1  29BA               	goto	l3614
  8181  11A2                     u4710:
  8182  11A2                     l3606:
  8183  11A2  085D               	movf	___fltol@exp1,w
  8184  11A3  3A80               	xorlw	128
  8185  11A4  3E97               	addlw	151
  8186  11A5  1803               	skipnc
  8187  11A6  29A8               	goto	u4721
  8188  11A7  29A9               	goto	u4720
  8189  11A8                     u4721:
  8190  11A8  29AA               	goto	l3612
  8191  11A9                     u4720:
  8192  11A9  2977               	goto	l3592
  8193  11AA                     l3612:
  8194  11AA  3001               	movlw	1
  8195  11AB                     u4735:
  8196  11AB  36D6               	lsrf	___fltol@f1+3,f
  8197  11AC  0CD5               	rrf	___fltol@f1+2,f
  8198  11AD  0CD4               	rrf	___fltol@f1+1,f
  8199  11AE  0CD3               	rrf	___fltol@f1,f
  8200  11AF  0B89               	decfsz	9,f
  8201  11B0  29AB               	goto	u4735
  8202  11B1  3001               	movlw	1
  8203  11B2  00D7               	movwf	??___fltol
  8204  11B3  0857               	movf	??___fltol,w
  8205  11B4  07DD               	addwf	___fltol@exp1,f
  8206  11B5  1D03               	btfss	3,2
  8207  11B6  29B8               	goto	u4741
  8208  11B7  29B9               	goto	u4740
  8209  11B8                     u4741:
  8210  11B8  29AA               	goto	l3612
  8211  11B9                     u4740:
  8212  11B9  29CF               	goto	l3622
  8213  11BA                     l3614:
  8214  11BA  3020               	movlw	32
  8215  11BB  025D               	subwf	___fltol@exp1,w
  8216  11BC  1C03               	skipc
  8217  11BD  29BF               	goto	u4751
  8218  11BE  29C0               	goto	u4750
  8219  11BF                     u4751:
  8220  11BF  29CA               	goto	l711
  8221  11C0                     u4750:
  8222  11C0  2977               	goto	l3592
  8223  11C1                     l3620:
  8224  11C1  3001               	movlw	1
  8225  11C2                     u4765:
  8226  11C2  35D3               	lslf	___fltol@f1,f
  8227  11C3  0DD4               	rlf	___fltol@f1+1,f
  8228  11C4  0DD5               	rlf	___fltol@f1+2,f
  8229  11C5  0DD6               	rlf	___fltol@f1+3,f
  8230  11C6  0B89               	decfsz	9,f
  8231  11C7  29C2               	goto	u4765
  8232  11C8  3001               	movlw	1
  8233  11C9  02DD               	subwf	___fltol@exp1,f
  8234  11CA                     l711:
  8235  11CA  085D               	movf	___fltol@exp1,w
  8236  11CB  1D03               	btfss	3,2
  8237  11CC  29CE               	goto	u4771
  8238  11CD  29CF               	goto	u4770
  8239  11CE                     u4771:
  8240  11CE  29C1               	goto	l3620
  8241  11CF                     u4770:
  8242  11CF                     l3622:
  8243  11CF  085C               	movf	___fltol@sign1,w
  8244  11D0  1903               	btfsc	3,2
  8245  11D1  29D3               	goto	u4781
  8246  11D2  29D4               	goto	u4780
  8247  11D3                     u4781:
  8248  11D3  29DF               	goto	l714
  8249  11D4                     u4780:
  8250  11D4                     l3624:
  8251  11D4  09D3               	comf	___fltol@f1,f
  8252  11D5  09D4               	comf	___fltol@f1+1,f
  8253  11D6  09D5               	comf	___fltol@f1+2,f
  8254  11D7  09D6               	comf	___fltol@f1+3,f
  8255  11D8  0AD3               	incf	___fltol@f1,f
  8256  11D9  1903               	skipnz
  8257  11DA  0AD4               	incf	___fltol@f1+1,f
  8258  11DB  1903               	skipnz
  8259  11DC  0AD5               	incf	___fltol@f1+2,f
  8260  11DD  1903               	skipnz
  8261  11DE  0AD6               	incf	___fltol@f1+3,f
  8262  11DF                     l714:
  8263  11DF                     l704:
  8264  11DF  0008               	return
  8265  11E0                     __end_of___fltol:
  8266                           
  8267                           	psect	text17
  8268  1E2B                     __ptext17:	
  8269 ;; *************** function ___flsub *****************
  8270 ;; Defined at:
  8271 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  a               4   69[BANK0 ] long 
  8274 ;;  b               4   73[BANK0 ] long 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;		None
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  4   69[BANK0 ] long 
  8279 ;; Registers used:
  8280 ;;		wreg, status,2, status,0, pclath, cstack
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8286 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;Total ram usage:        8 bytes
  8291 ;; Hardware stack levels used: 1
  8292 ;; Hardware stack levels required when called: 1
  8293 ;; This function calls:
  8294 ;;		___fladd
  8295 ;; This function is called by:
  8296 ;;		_sprintf
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           
  8301                           ;psect for function ___flsub
  8302  1E2B                     ___flsub:
  8303  1E2B                     l3646:	
  8304                           ;incstack = 0
  8305                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  8306                           
  8307  1E2B  3080               	movlw	128
  8308  1E2C  0020               	movlb	0	; select bank0
  8309  1E2D  06E8               	xorwf	___flsub@a+3,f
  8310  1E2E                     l3648:
  8311  1E2E  086C               	movf	___flsub@b+3,w
  8312  1E2F  00D4               	movwf	___fladd@b+3
  8313  1E30  086B               	movf	___flsub@b+2,w
  8314  1E31  00D3               	movwf	___fladd@b+2
  8315  1E32  086A               	movf	___flsub@b+1,w
  8316  1E33  00D2               	movwf	___fladd@b+1
  8317  1E34  0869               	movf	___flsub@b,w
  8318  1E35  00D1               	movwf	___fladd@b
  8319  1E36  0868               	movf	___flsub@a+3,w
  8320  1E37  00D8               	movwf	___fladd@a+3
  8321  1E38  0867               	movf	___flsub@a+2,w
  8322  1E39  00D7               	movwf	___fladd@a+2
  8323  1E3A  0866               	movf	___flsub@a+1,w
  8324  1E3B  00D6               	movwf	___fladd@a+1
  8325  1E3C  0865               	movf	___flsub@a,w
  8326  1E3D  00D5               	movwf	___fladd@a
  8327  1E3E  3188  20F5  319E   	fcall	___fladd
  8328  1E41  0020               	movlb	0	; select bank0
  8329  1E42  0854               	movf	?___fladd+3,w
  8330  1E43  00E8               	movwf	?___flsub+3
  8331  1E44  0853               	movf	?___fladd+2,w
  8332  1E45  00E7               	movwf	?___flsub+2
  8333  1E46  0852               	movf	?___fladd+1,w
  8334  1E47  00E6               	movwf	?___flsub+1
  8335  1E48  0851               	movf	?___fladd,w
  8336  1E49  00E5               	movwf	?___flsub
  8337  1E4A                     l874:
  8338  1E4A  0008               	return
  8339  1E4B                     __end_of___flsub:
  8340                           
  8341                           	psect	text18
  8342  08F5                     __ptext18:	
  8343 ;; *************** function ___fladd *****************
  8344 ;; Defined at:
  8345 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  b               4   49[BANK0 ] long 
  8348 ;;  a               4   53[BANK0 ] long 
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;  grs             1   68[BANK0 ] unsigned char 
  8351 ;;  bexp            1   67[BANK0 ] unsigned char 
  8352 ;;  aexp            1   66[BANK0 ] unsigned char 
  8353 ;;  signs           1   65[BANK0 ] unsigned char 
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  4   49[BANK0 ] unsigned char 
  8356 ;; Registers used:
  8357 ;;		wreg, status,2, status,0
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8363 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8365 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8367 ;;Total ram usage:       20 bytes
  8368 ;; Hardware stack levels used: 1
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_sprintf
  8373 ;;		___flsub
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           
  8378                           ;psect for function ___fladd
  8379  08F5                     ___fladd:
  8380  08F5                     l2884:	
  8381                           ;incstack = 0
  8382                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  8383                           
  8384  08F5  0020               	movlb	0	; select bank0
  8385  08F6  0854               	movf	___fladd@b+3,w
  8386  08F7  3980               	andlw	128
  8387  08F8  00D9               	movwf	??___fladd
  8388  08F9  0859               	movf	??___fladd,w
  8389  08FA  00E1               	movwf	___fladd@signs
  8390  08FB                     l2886:
  8391  08FB  3554               	lslf	___fladd@b+3,w
  8392  08FC  00D9               	movwf	??___fladd
  8393  08FD  0859               	movf	??___fladd,w
  8394  08FE  00E3               	movwf	___fladd@bexp
  8395  08FF                     l2888:
  8396  08FF  1FD3               	btfss	___fladd@b+2,7
  8397  0900  2902               	goto	u3331
  8398  0901  2903               	goto	u3330
  8399  0902                     u3331:
  8400  0902  2904               	goto	l2892
  8401  0903                     u3330:
  8402  0903                     l2890:
  8403  0903  1463               	bsf	___fladd@bexp,0
  8404  0904                     l2892:
  8405  0904  0863               	movf	___fladd@bexp,w
  8406  0905  1903               	btfsc	3,2
  8407  0906  2908               	goto	u3341
  8408  0907  2909               	goto	u3340
  8409  0908                     u3341:
  8410  0908  2919               	goto	l2902
  8411  0909                     u3340:
  8412  0909                     l2894:
  8413  0909  0A63               	incf	___fladd@bexp,w
  8414  090A  1D03               	btfss	3,2
  8415  090B  290D               	goto	u3351
  8416  090C  290E               	goto	u3350
  8417  090D                     u3351:
  8418  090D  2916               	goto	l2898
  8419  090E                     u3350:
  8420  090E                     l2896:
  8421  090E  3000               	movlw	0
  8422  090F  00D4               	movwf	___fladd@b+3
  8423  0910  3000               	movlw	0
  8424  0911  00D3               	movwf	___fladd@b+2
  8425  0912  3000               	movlw	0
  8426  0913  00D2               	movwf	___fladd@b+1
  8427  0914  3000               	movlw	0
  8428  0915  00D1               	movwf	___fladd@b
  8429  0916                     l2898:
  8430  0916  17D3               	bsf	___fladd@b+2,7
  8431  0917                     l2900:
  8432  0917  01D4               	clrf	___fladd@b+3
  8433  0918  2921               	goto	l2904
  8434  0919                     l2902:
  8435  0919  3000               	movlw	0
  8436  091A  00D4               	movwf	___fladd@b+3
  8437  091B  3000               	movlw	0
  8438  091C  00D3               	movwf	___fladd@b+2
  8439  091D  3000               	movlw	0
  8440  091E  00D2               	movwf	___fladd@b+1
  8441  091F  3000               	movlw	0
  8442  0920  00D1               	movwf	___fladd@b
  8443  0921                     l2904:
  8444  0921  0858               	movf	___fladd@a+3,w
  8445  0922  3980               	andlw	128
  8446  0923  00D9               	movwf	??___fladd
  8447  0924  0859               	movf	??___fladd,w
  8448  0925  00E2               	movwf	___fladd@aexp
  8449  0926                     l2906:
  8450  0926  0862               	movf	___fladd@aexp,w
  8451  0927  0661               	xorwf	___fladd@signs,w
  8452  0928  1903               	skipnz
  8453  0929  292B               	goto	u3361
  8454  092A  292C               	goto	u3360
  8455  092B                     u3361:
  8456  092B  292D               	goto	l2910
  8457  092C                     u3360:
  8458  092C                     l2908:
  8459  092C  1761               	bsf	___fladd@signs,6
  8460  092D                     l2910:
  8461  092D  3558               	lslf	___fladd@a+3,w
  8462  092E  00D9               	movwf	??___fladd
  8463  092F  0859               	movf	??___fladd,w
  8464  0930  00E2               	movwf	___fladd@aexp
  8465  0931                     l2912:
  8466  0931  1FD7               	btfss	___fladd@a+2,7
  8467  0932  2934               	goto	u3371
  8468  0933  2935               	goto	u3370
  8469  0934                     u3371:
  8470  0934  2936               	goto	l2916
  8471  0935                     u3370:
  8472  0935                     l2914:
  8473  0935  1462               	bsf	___fladd@aexp,0
  8474  0936                     l2916:
  8475  0936  0862               	movf	___fladd@aexp,w
  8476  0937  1903               	btfsc	3,2
  8477  0938  293A               	goto	u3381
  8478  0939  293B               	goto	u3380
  8479  093A                     u3381:
  8480  093A  294B               	goto	l2926
  8481  093B                     u3380:
  8482  093B                     l2918:
  8483  093B  0A62               	incf	___fladd@aexp,w
  8484  093C  1D03               	btfss	3,2
  8485  093D  293F               	goto	u3391
  8486  093E  2940               	goto	u3390
  8487  093F                     u3391:
  8488  093F  2948               	goto	l2922
  8489  0940                     u3390:
  8490  0940                     l2920:
  8491  0940  3000               	movlw	0
  8492  0941  00D8               	movwf	___fladd@a+3
  8493  0942  3000               	movlw	0
  8494  0943  00D7               	movwf	___fladd@a+2
  8495  0944  3000               	movlw	0
  8496  0945  00D6               	movwf	___fladd@a+1
  8497  0946  3000               	movlw	0
  8498  0947  00D5               	movwf	___fladd@a
  8499  0948                     l2922:
  8500  0948  17D7               	bsf	___fladd@a+2,7
  8501  0949                     l2924:
  8502  0949  01D8               	clrf	___fladd@a+3
  8503  094A  2953               	goto	l828
  8504  094B                     l2926:
  8505  094B  3000               	movlw	0
  8506  094C  00D8               	movwf	___fladd@a+3
  8507  094D  3000               	movlw	0
  8508  094E  00D7               	movwf	___fladd@a+2
  8509  094F  3000               	movlw	0
  8510  0950  00D6               	movwf	___fladd@a+1
  8511  0951  3000               	movlw	0
  8512  0952  00D5               	movwf	___fladd@a
  8513  0953                     l828:
  8514  0953  0863               	movf	___fladd@bexp,w
  8515  0954  0262               	subwf	___fladd@aexp,w
  8516  0955  1803               	skipnc
  8517  0956  2958               	goto	u3401
  8518  0957  2959               	goto	u3400
  8519  0958                     u3401:
  8520  0958  299D               	goto	l2962
  8521  0959                     u3400:
  8522  0959                     l2928:
  8523  0959  1F61               	btfss	___fladd@signs,6
  8524  095A  295C               	goto	u3411
  8525  095B  295D               	goto	u3410
  8526  095C                     u3411:
  8527  095C  2961               	goto	l2932
  8528  095D                     u3410:
  8529  095D                     l2930:
  8530  095D  3080               	movlw	128
  8531  095E  00D9               	movwf	??___fladd
  8532  095F  0859               	movf	??___fladd,w
  8533  0960  06E1               	xorwf	___fladd@signs,f
  8534  0961                     l2932:
  8535  0961  0863               	movf	___fladd@bexp,w
  8536  0962  00D9               	movwf	??___fladd
  8537  0963  0859               	movf	??___fladd,w
  8538  0964  00E4               	movwf	___fladd@grs
  8539  0965                     l2934:
  8540  0965  0862               	movf	___fladd@aexp,w
  8541  0966  00D9               	movwf	??___fladd
  8542  0967  0859               	movf	??___fladd,w
  8543  0968  00E3               	movwf	___fladd@bexp
  8544  0969                     l2936:
  8545  0969  0864               	movf	___fladd@grs,w
  8546  096A  00D9               	movwf	??___fladd
  8547  096B  0859               	movf	??___fladd,w
  8548  096C  00E2               	movwf	___fladd@aexp
  8549  096D                     l2938:
  8550  096D  0851               	movf	___fladd@b,w
  8551  096E  00D9               	movwf	??___fladd
  8552  096F  0859               	movf	??___fladd,w
  8553  0970  00E4               	movwf	___fladd@grs
  8554  0971                     l2940:
  8555  0971  0855               	movf	___fladd@a,w
  8556  0972  00D9               	movwf	??___fladd
  8557  0973  0859               	movf	??___fladd,w
  8558  0974  00D1               	movwf	___fladd@b
  8559  0975                     l2942:
  8560  0975  0864               	movf	___fladd@grs,w
  8561  0976  00D9               	movwf	??___fladd
  8562  0977  0859               	movf	??___fladd,w
  8563  0978  00D5               	movwf	___fladd@a
  8564  0979                     l2944:
  8565  0979  0852               	movf	___fladd@b+1,w
  8566  097A  00D9               	movwf	??___fladd
  8567  097B  0859               	movf	??___fladd,w
  8568  097C  00E4               	movwf	___fladd@grs
  8569  097D                     l2946:
  8570  097D  0856               	movf	___fladd@a+1,w
  8571  097E  00D9               	movwf	??___fladd
  8572  097F  0859               	movf	??___fladd,w
  8573  0980  00D2               	movwf	___fladd@b+1
  8574  0981                     l2948:
  8575  0981  0864               	movf	___fladd@grs,w
  8576  0982  00D9               	movwf	??___fladd
  8577  0983  0859               	movf	??___fladd,w
  8578  0984  00D6               	movwf	___fladd@a+1
  8579  0985                     l2950:
  8580  0985  0853               	movf	___fladd@b+2,w
  8581  0986  00D9               	movwf	??___fladd
  8582  0987  0859               	movf	??___fladd,w
  8583  0988  00E4               	movwf	___fladd@grs
  8584  0989                     l2952:
  8585  0989  0857               	movf	___fladd@a+2,w
  8586  098A  00D9               	movwf	??___fladd
  8587  098B  0859               	movf	??___fladd,w
  8588  098C  00D3               	movwf	___fladd@b+2
  8589  098D                     l2954:
  8590  098D  0864               	movf	___fladd@grs,w
  8591  098E  00D9               	movwf	??___fladd
  8592  098F  0859               	movf	??___fladd,w
  8593  0990  00D7               	movwf	___fladd@a+2
  8594  0991                     l2956:
  8595  0991  0854               	movf	___fladd@b+3,w
  8596  0992  00D9               	movwf	??___fladd
  8597  0993  0859               	movf	??___fladd,w
  8598  0994  00E4               	movwf	___fladd@grs
  8599  0995                     l2958:
  8600  0995  0858               	movf	___fladd@a+3,w
  8601  0996  00D9               	movwf	??___fladd
  8602  0997  0859               	movf	??___fladd,w
  8603  0998  00D4               	movwf	___fladd@b+3
  8604  0999                     l2960:
  8605  0999  0864               	movf	___fladd@grs,w
  8606  099A  00D9               	movwf	??___fladd
  8607  099B  0859               	movf	??___fladd,w
  8608  099C  00D8               	movwf	___fladd@a+3
  8609  099D                     l2962:
  8610  099D  01E4               	clrf	___fladd@grs
  8611  099E                     l2964:
  8612  099E  0862               	movf	___fladd@aexp,w
  8613  099F  00D9               	movwf	??___fladd
  8614  09A0  01DA               	clrf	??___fladd+1
  8615  09A1  085A               	movf	??___fladd+1,w
  8616  09A2  00DC               	movwf	??___fladd+3
  8617  09A3  0863               	movf	___fladd@bexp,w
  8618  09A4  0259               	subwf	??___fladd,w
  8619  09A5  00DB               	movwf	??___fladd+2
  8620  09A6  1C03               	skipc
  8621  09A7  03DC               	decf	??___fladd+3,f
  8622  09A8  085C               	movf	??___fladd+3,w
  8623  09A9  3A80               	xorlw	128
  8624  09AA  00DD               	movwf	??___fladd+4
  8625  09AB  3080               	movlw	128
  8626  09AC  025D               	subwf	??___fladd+4,w
  8627  09AD  1D03               	skipz
  8628  09AE  29B1               	goto	u3425
  8629  09AF  301A               	movlw	26
  8630  09B0  025B               	subwf	??___fladd+2,w
  8631  09B1                     u3425:
  8632  09B1  1C03               	skipc
  8633  09B2  29B4               	goto	u3421
  8634  09B3  29B5               	goto	u3420
  8635  09B4                     u3421:
  8636  09B4  29ED               	goto	l2980
  8637  09B5                     u3420:
  8638  09B5                     l2966:
  8639  09B5  0020               	movlb	0	; select bank0
  8640  09B6  0854               	movf	___fladd@b+3,w
  8641  09B7  0453               	iorwf	___fladd@b+2,w
  8642  09B8  0452               	iorwf	___fladd@b+1,w
  8643  09B9  0451               	iorwf	___fladd@b,w
  8644  09BA  1D03               	skipz
  8645  09BB  29BD               	goto	u3431
  8646  09BC  29BF               	goto	u3430
  8647  09BD                     u3431:
  8648  09BD  3001               	movlw	1
  8649  09BE  29C0               	goto	u3440
  8650  09BF                     u3430:
  8651  09BF  3000               	movlw	0
  8652  09C0                     u3440:
  8653  09C0  00D9               	movwf	??___fladd
  8654  09C1  0859               	movf	??___fladd,w
  8655  09C2  00E4               	movwf	___fladd@grs
  8656  09C3  3000               	movlw	0
  8657  09C4  00D4               	movwf	___fladd@b+3
  8658  09C5  3000               	movlw	0
  8659  09C6  00D3               	movwf	___fladd@b+2
  8660  09C7  3000               	movlw	0
  8661  09C8  00D2               	movwf	___fladd@b+1
  8662  09C9  3000               	movlw	0
  8663  09CA  00D1               	movwf	___fladd@b
  8664  09CB  0862               	movf	___fladd@aexp,w
  8665  09CC  00D9               	movwf	??___fladd
  8666  09CD  0859               	movf	??___fladd,w
  8667  09CE  00E3               	movwf	___fladd@bexp
  8668  09CF  29F4               	goto	l832
  8669  09D0                     l834:
  8670  09D0  1C64               	btfss	___fladd@grs,0
  8671  09D1  29D3               	goto	u3451
  8672  09D2  29D4               	goto	u3450
  8673  09D3                     u3451:
  8674  09D3  29DA               	goto	l2970
  8675  09D4                     u3450:
  8676  09D4                     l2968:
  8677  09D4  3664               	lsrf	___fladd@grs,w
  8678  09D5  3801               	iorlw	1
  8679  09D6  00D9               	movwf	??___fladd
  8680  09D7  0859               	movf	??___fladd,w
  8681  09D8  00E4               	movwf	___fladd@grs
  8682  09D9  29DC               	goto	l2972
  8683  09DA                     l2970:
  8684  09DA  1003               	clrc
  8685  09DB  0CE4               	rrf	___fladd@grs,f
  8686  09DC                     l2972:
  8687  09DC  1C51               	btfss	___fladd@b,0
  8688  09DD  29DF               	goto	u3461
  8689  09DE  29E0               	goto	u3460
  8690  09DF                     u3461:
  8691  09DF  29E1               	goto	l2976
  8692  09E0                     u3460:
  8693  09E0                     l2974:
  8694  09E0  17E4               	bsf	___fladd@grs,7
  8695  09E1                     l2976:
  8696  09E1  3001               	movlw	1
  8697  09E2  00D9               	movwf	??___fladd
  8698  09E3                     u3475:
  8699  09E3  37D4               	asrf	___fladd@b+3,f
  8700  09E4  0CD3               	rrf	___fladd@b+2,f
  8701  09E5  0CD2               	rrf	___fladd@b+1,f
  8702  09E6  0CD1               	rrf	___fladd@b,f
  8703  09E7  0BD9               	decfsz	??___fladd& (0+127),f
  8704  09E8  29E3               	goto	u3475
  8705  09E9                     l2978:
  8706  09E9  3001               	movlw	1
  8707  09EA  00D9               	movwf	??___fladd
  8708  09EB  0859               	movf	??___fladd,w
  8709  09EC  07E3               	addwf	___fladd@bexp,f
  8710  09ED                     l2980:
  8711  09ED  0020               	movlb	0	; select bank0
  8712  09EE  0862               	movf	___fladd@aexp,w
  8713  09EF  0263               	subwf	___fladd@bexp,w
  8714  09F0  1C03               	skipc
  8715  09F1  29F3               	goto	u3481
  8716  09F2  29F4               	goto	u3480
  8717  09F3                     u3481:
  8718  09F3  29D0               	goto	l834
  8719  09F4                     u3480:
  8720  09F4                     l832:
  8721  09F4  1B61               	btfsc	___fladd@signs,6
  8722  09F5  29F7               	goto	u3491
  8723  09F6  29F8               	goto	u3490
  8724  09F7                     u3491:
  8725  09F7  2A30               	goto	l3006
  8726  09F8                     u3490:
  8727  09F8                     l2982:
  8728  09F8  0863               	movf	___fladd@bexp,w
  8729  09F9  1D03               	btfss	3,2
  8730  09FA  29FC               	goto	u3501
  8731  09FB  29FD               	goto	u3500
  8732  09FC                     u3501:
  8733  09FC  2A06               	goto	l2988
  8734  09FD                     u3500:
  8735  09FD                     l2984:
  8736  09FD  3000               	movlw	0
  8737  09FE  00D4               	movwf	?___fladd+3
  8738  09FF  3000               	movlw	0
  8739  0A00  00D3               	movwf	?___fladd+2
  8740  0A01  3000               	movlw	0
  8741  0A02  00D2               	movwf	?___fladd+1
  8742  0A03  3000               	movlw	0
  8743  0A04  00D1               	movwf	?___fladd
  8744  0A05  2B2C               	goto	l841
  8745  0A06                     l2988:
  8746  0A06  0855               	movf	___fladd@a,w
  8747  0A07  07D1               	addwf	___fladd@b,f
  8748  0A08  0856               	movf	___fladd@a+1,w
  8749  0A09  3DD2               	addwfc	___fladd@b+1,f
  8750  0A0A  0857               	movf	___fladd@a+2,w
  8751  0A0B  3DD3               	addwfc	___fladd@b+2,f
  8752  0A0C  0858               	movf	___fladd@a+3,w
  8753  0A0D  3DD4               	addwfc	___fladd@b+3,f
  8754  0A0E                     l2990:
  8755  0A0E  1C54               	btfss	___fladd@b+3,0
  8756  0A0F  2A11               	goto	u3511
  8757  0A10  2A12               	goto	u3510
  8758  0A11                     u3511:
  8759  0A11  2ABC               	goto	l3040
  8760  0A12                     u3510:
  8761  0A12                     l2992:
  8762  0A12  1C64               	btfss	___fladd@grs,0
  8763  0A13  2A15               	goto	u3521
  8764  0A14  2A16               	goto	u3520
  8765  0A15                     u3521:
  8766  0A15  2A1C               	goto	l2996
  8767  0A16                     u3520:
  8768  0A16                     l2994:
  8769  0A16  3664               	lsrf	___fladd@grs,w
  8770  0A17  3801               	iorlw	1
  8771  0A18  00D9               	movwf	??___fladd
  8772  0A19  0859               	movf	??___fladd,w
  8773  0A1A  00E4               	movwf	___fladd@grs
  8774  0A1B  2A1E               	goto	l2998
  8775  0A1C                     l2996:
  8776  0A1C  1003               	clrc
  8777  0A1D  0CE4               	rrf	___fladd@grs,f
  8778  0A1E                     l2998:
  8779  0A1E  1C51               	btfss	___fladd@b,0
  8780  0A1F  2A21               	goto	u3531
  8781  0A20  2A22               	goto	u3530
  8782  0A21                     u3531:
  8783  0A21  2A23               	goto	l3002
  8784  0A22                     u3530:
  8785  0A22                     l3000:
  8786  0A22  17E4               	bsf	___fladd@grs,7
  8787  0A23                     l3002:
  8788  0A23  3001               	movlw	1
  8789  0A24  00D9               	movwf	??___fladd
  8790  0A25                     u3545:
  8791  0A25  37D4               	asrf	___fladd@b+3,f
  8792  0A26  0CD3               	rrf	___fladd@b+2,f
  8793  0A27  0CD2               	rrf	___fladd@b+1,f
  8794  0A28  0CD1               	rrf	___fladd@b,f
  8795  0A29  0BD9               	decfsz	??___fladd& (0+127),f
  8796  0A2A  2A25               	goto	u3545
  8797  0A2B                     l3004:
  8798  0A2B  3001               	movlw	1
  8799  0A2C  00D9               	movwf	??___fladd
  8800  0A2D  0859               	movf	??___fladd,w
  8801  0A2E  07E3               	addwf	___fladd@bexp,f
  8802  0A2F  2ABC               	goto	l3040
  8803  0A30                     l3006:
  8804  0A30  0854               	movf	___fladd@b+3,w
  8805  0A31  3A80               	xorlw	128
  8806  0A32  00D9               	movwf	??___fladd
  8807  0A33  0858               	movf	___fladd@a+3,w
  8808  0A34  3A80               	xorlw	128
  8809  0A35  0259               	subwf	??___fladd,w
  8810  0A36  1D03               	skipz
  8811  0A37  2A42               	goto	u3553
  8812  0A38  0857               	movf	___fladd@a+2,w
  8813  0A39  0253               	subwf	___fladd@b+2,w
  8814  0A3A  1D03               	skipz
  8815  0A3B  2A42               	goto	u3553
  8816  0A3C  0856               	movf	___fladd@a+1,w
  8817  0A3D  0252               	subwf	___fladd@b+1,w
  8818  0A3E  1D03               	skipz
  8819  0A3F  2A42               	goto	u3553
  8820  0A40  0855               	movf	___fladd@a,w
  8821  0A41  0251               	subwf	___fladd@b,w
  8822  0A42                     u3553:
  8823  0A42  1803               	skipnc
  8824  0A43  2A45               	goto	u3551
  8825  0A44  2A46               	goto	u3550
  8826  0A45                     u3551:
  8827  0A45  2A7E               	goto	l3016
  8828  0A46                     u3550:
  8829  0A46                     l3008:
  8830  0A46  30FF               	movlw	255
  8831  0A47  00D9               	movwf	??___fladd
  8832  0A48  30FF               	movlw	255
  8833  0A49  00DA               	movwf	??___fladd+1
  8834  0A4A  30FF               	movlw	255
  8835  0A4B  00DB               	movwf	??___fladd+2
  8836  0A4C  30FF               	movlw	255
  8837  0A4D  00DC               	movwf	??___fladd+3
  8838  0A4E  0851               	movf	___fladd@b,w
  8839  0A4F  0255               	subwf	___fladd@a,w
  8840  0A50  00DD               	movwf	??___fladd+4
  8841  0A51  0852               	movf	___fladd@b+1,w
  8842  0A52  3B56               	subwfb	___fladd@a+1,w
  8843  0A53  00DE               	movwf	??___fladd+5
  8844  0A54  0853               	movf	___fladd@b+2,w
  8845  0A55  3B57               	subwfb	___fladd@a+2,w
  8846  0A56  00DF               	movwf	??___fladd+6
  8847  0A57  0854               	movf	___fladd@b+3,w
  8848  0A58  3B58               	subwfb	___fladd@a+3,w
  8849  0A59  00E0               	movwf	??___fladd+7
  8850  0A5A  085D               	movf	??___fladd+4,w
  8851  0A5B  07D9               	addwf	??___fladd,f
  8852  0A5C  085E               	movf	??___fladd+5,w
  8853  0A5D  3DDA               	addwfc	??___fladd+1,f
  8854  0A5E  085F               	movf	??___fladd+6,w
  8855  0A5F  3DDB               	addwfc	??___fladd+2,f
  8856  0A60  0860               	movf	??___fladd+7,w
  8857  0A61  3DDC               	addwfc	??___fladd+3,f
  8858  0A62  085C               	movf	??___fladd+3,w
  8859  0A63  00D4               	movwf	___fladd@b+3
  8860  0A64  085B               	movf	??___fladd+2,w
  8861  0A65  00D3               	movwf	___fladd@b+2
  8862  0A66  085A               	movf	??___fladd+1,w
  8863  0A67  00D2               	movwf	___fladd@b+1
  8864  0A68  0859               	movf	??___fladd,w
  8865  0A69  00D1               	movwf	___fladd@b
  8866  0A6A                     l3010:
  8867  0A6A  3080               	movlw	128
  8868  0A6B  00D9               	movwf	??___fladd
  8869  0A6C  0859               	movf	??___fladd,w
  8870  0A6D  06E1               	xorwf	___fladd@signs,f
  8871  0A6E  09E4               	comf	___fladd@grs,f
  8872  0A6F  0AE4               	incf	___fladd@grs,f
  8873  0A70                     l3012:
  8874  0A70  0864               	movf	___fladd@grs,w
  8875  0A71  1D03               	btfss	3,2
  8876  0A72  2A74               	goto	u3561
  8877  0A73  2A75               	goto	u3560
  8878  0A74                     u3561:
  8879  0A74  2A86               	goto	l849
  8880  0A75                     u3560:
  8881  0A75                     l3014:
  8882  0A75  3001               	movlw	1
  8883  0A76  07D1               	addwf	___fladd@b,f
  8884  0A77  3000               	movlw	0
  8885  0A78  3DD2               	addwfc	___fladd@b+1,f
  8886  0A79  3000               	movlw	0
  8887  0A7A  3DD3               	addwfc	___fladd@b+2,f
  8888  0A7B  3000               	movlw	0
  8889  0A7C  3DD4               	addwfc	___fladd@b+3,f
  8890  0A7D  2A86               	goto	l849
  8891  0A7E                     l3016:
  8892  0A7E  0855               	movf	___fladd@a,w
  8893  0A7F  02D1               	subwf	___fladd@b,f
  8894  0A80  0856               	movf	___fladd@a+1,w
  8895  0A81  3BD2               	subwfb	___fladd@b+1,f
  8896  0A82  0857               	movf	___fladd@a+2,w
  8897  0A83  3BD3               	subwfb	___fladd@b+2,f
  8898  0A84  0858               	movf	___fladd@a+3,w
  8899  0A85  3BD4               	subwfb	___fladd@b+3,f
  8900  0A86                     l849:
  8901  0A86  0854               	movf	___fladd@b+3,w
  8902  0A87  0453               	iorwf	___fladd@b+2,w
  8903  0A88  0452               	iorwf	___fladd@b+1,w
  8904  0A89  0451               	iorwf	___fladd@b,w
  8905  0A8A  1D03               	skipz
  8906  0A8B  2A8D               	goto	u3571
  8907  0A8C  2A8E               	goto	u3570
  8908  0A8D                     u3571:
  8909  0A8D  2AB8               	goto	l3038
  8910  0A8E                     u3570:
  8911  0A8E                     l3018:
  8912  0A8E  0864               	movf	___fladd@grs,w
  8913  0A8F  1D03               	btfss	3,2
  8914  0A90  2A92               	goto	u3581
  8915  0A91  2A93               	goto	u3580
  8916  0A92                     u3581:
  8917  0A92  2AB8               	goto	l3038
  8918  0A93                     u3580:
  8919  0A93                     l3020:
  8920  0A93  3000               	movlw	0
  8921  0A94  00D4               	movwf	?___fladd+3
  8922  0A95  3000               	movlw	0
  8923  0A96  00D3               	movwf	?___fladd+2
  8924  0A97  3000               	movlw	0
  8925  0A98  00D2               	movwf	?___fladd+1
  8926  0A99  3000               	movlw	0
  8927  0A9A  00D1               	movwf	?___fladd
  8928  0A9B  2B2C               	goto	l841
  8929  0A9C                     l3024:
  8930  0A9C  3001               	movlw	1
  8931  0A9D                     u3595:
  8932  0A9D  35D1               	lslf	___fladd@b,f
  8933  0A9E  0DD2               	rlf	___fladd@b+1,f
  8934  0A9F  0DD3               	rlf	___fladd@b+2,f
  8935  0AA0  0DD4               	rlf	___fladd@b+3,f
  8936  0AA1  0B89               	decfsz	9,f
  8937  0AA2  2A9D               	goto	u3595
  8938  0AA3                     l3026:
  8939  0AA3  1FE4               	btfss	___fladd@grs,7
  8940  0AA4  2AA6               	goto	u3601
  8941  0AA5  2AA7               	goto	u3600
  8942  0AA6                     u3601:
  8943  0AA6  2AA8               	goto	l853
  8944  0AA7                     u3600:
  8945  0AA7                     l3028:
  8946  0AA7  1451               	bsf	___fladd@b,0
  8947  0AA8                     l853:
  8948  0AA8  1C64               	btfss	___fladd@grs,0
  8949  0AA9  2AAB               	goto	u3611
  8950  0AAA  2AAC               	goto	u3610
  8951  0AAB                     u3611:
  8952  0AAB  2AAF               	goto	l3032
  8953  0AAC                     u3610:
  8954  0AAC                     l3030:
  8955  0AAC  1403               	setc
  8956  0AAD  0DE4               	rlf	___fladd@grs,f
  8957  0AAE  2AB1               	goto	l3034
  8958  0AAF                     l3032:
  8959  0AAF  1003               	clrc
  8960  0AB0  0DE4               	rlf	___fladd@grs,f
  8961  0AB1                     l3034:
  8962  0AB1  0863               	movf	___fladd@bexp,w
  8963  0AB2  1903               	btfsc	3,2
  8964  0AB3  2AB5               	goto	u3621
  8965  0AB4  2AB6               	goto	u3620
  8966  0AB5                     u3621:
  8967  0AB5  2AB8               	goto	l3038
  8968  0AB6                     u3620:
  8969  0AB6                     l3036:
  8970  0AB6  3001               	movlw	1
  8971  0AB7  02E3               	subwf	___fladd@bexp,f
  8972  0AB8                     l3038:
  8973  0AB8  1FD3               	btfss	___fladd@b+2,7
  8974  0AB9  2ABB               	goto	u3631
  8975  0ABA  2ABC               	goto	u3630
  8976  0ABB                     u3631:
  8977  0ABB  2A9C               	goto	l3024
  8978  0ABC                     u3630:
  8979  0ABC                     l3040:
  8980  0ABC  01E2               	clrf	___fladd@aexp
  8981  0ABD                     l3042:
  8982  0ABD  1FE4               	btfss	___fladd@grs,7
  8983  0ABE  2AC0               	goto	u3641
  8984  0ABF  2AC1               	goto	u3640
  8985  0AC0                     u3641:
  8986  0AC0  2ACF               	goto	l3050
  8987  0AC1                     u3640:
  8988  0AC1                     l3044:
  8989  0AC1  0864               	movf	___fladd@grs,w
  8990  0AC2  397F               	andlw	127
  8991  0AC3  1903               	btfsc	3,2
  8992  0AC4  2AC6               	goto	u3651
  8993  0AC5  2AC7               	goto	u3650
  8994  0AC6                     u3651:
  8995  0AC6  2ACA               	goto	l859
  8996  0AC7                     u3650:
  8997  0AC7                     l3046:
  8998  0AC7  01E2               	clrf	___fladd@aexp
  8999  0AC8  0AE2               	incf	___fladd@aexp,f
  9000  0AC9  2ACF               	goto	l3050
  9001  0ACA                     l859:
  9002  0ACA  1C51               	btfss	___fladd@b,0
  9003  0ACB  2ACD               	goto	u3661
  9004  0ACC  2ACE               	goto	u3660
  9005  0ACD                     u3661:
  9006  0ACD  2ACF               	goto	l3050
  9007  0ACE                     u3660:
  9008  0ACE  2AC7               	goto	l3046
  9009  0ACF                     l3050:
  9010  0ACF  0862               	movf	___fladd@aexp,w
  9011  0AD0  1903               	btfsc	3,2
  9012  0AD1  2AD3               	goto	u3671
  9013  0AD2  2AD4               	goto	u3670
  9014  0AD3                     u3671:
  9015  0AD3  2B01               	goto	l862
  9016  0AD4                     u3670:
  9017  0AD4                     l3052:
  9018  0AD4  3001               	movlw	1
  9019  0AD5  07D1               	addwf	___fladd@b,f
  9020  0AD6  3000               	movlw	0
  9021  0AD7  3DD2               	addwfc	___fladd@b+1,f
  9022  0AD8  3000               	movlw	0
  9023  0AD9  3DD3               	addwfc	___fladd@b+2,f
  9024  0ADA  3000               	movlw	0
  9025  0ADB  3DD4               	addwfc	___fladd@b+3,f
  9026  0ADC                     l3054:
  9027  0ADC  1C54               	btfss	___fladd@b+3,0
  9028  0ADD  2ADF               	goto	u3681
  9029  0ADE  2AE0               	goto	u3680
  9030  0ADF                     u3681:
  9031  0ADF  2B01               	goto	l862
  9032  0AE0                     u3680:
  9033  0AE0                     l3056:
  9034  0AE0  0851               	movf	___fladd@b,w
  9035  0AE1  00D9               	movwf	??___fladd
  9036  0AE2  0852               	movf	___fladd@b+1,w
  9037  0AE3  00DA               	movwf	??___fladd+1
  9038  0AE4  0853               	movf	___fladd@b+2,w
  9039  0AE5  00DB               	movwf	??___fladd+2
  9040  0AE6  0854               	movf	___fladd@b+3,w
  9041  0AE7  00DC               	movwf	??___fladd+3
  9042  0AE8  3001               	movlw	1
  9043  0AE9  00DD               	movwf	??___fladd+4
  9044  0AEA                     u3695:
  9045  0AEA  37DC               	asrf	??___fladd+3,f
  9046  0AEB  0CDB               	rrf	??___fladd+2,f
  9047  0AEC  0CDA               	rrf	??___fladd+1,f
  9048  0AED  0CD9               	rrf	??___fladd,f
  9049  0AEE                     u3690:
  9050  0AEE  0BDD               	decfsz	??___fladd+4,f
  9051  0AEF  2AEA               	goto	u3695
  9052  0AF0  085C               	movf	??___fladd+3,w
  9053  0AF1  00D4               	movwf	___fladd@b+3
  9054  0AF2  085B               	movf	??___fladd+2,w
  9055  0AF3  00D3               	movwf	___fladd@b+2
  9056  0AF4  085A               	movf	??___fladd+1,w
  9057  0AF5  00D2               	movwf	___fladd@b+1
  9058  0AF6  0859               	movf	??___fladd,w
  9059  0AF7  00D1               	movwf	___fladd@b
  9060  0AF8  0A63               	incf	___fladd@bexp,w
  9061  0AF9  1903               	btfsc	3,2
  9062  0AFA  2AFC               	goto	u3701
  9063  0AFB  2AFD               	goto	u3700
  9064  0AFC                     u3701:
  9065  0AFC  2B01               	goto	l862
  9066  0AFD                     u3700:
  9067  0AFD                     l3058:
  9068  0AFD  3001               	movlw	1
  9069  0AFE  00D9               	movwf	??___fladd
  9070  0AFF  0859               	movf	??___fladd,w
  9071  0B00  07E3               	addwf	___fladd@bexp,f
  9072  0B01                     l862:
  9073  0B01  0A63               	incf	___fladd@bexp,w
  9074  0B02  1903               	btfsc	3,2
  9075  0B03  2B05               	goto	u3711
  9076  0B04  2B06               	goto	u3710
  9077  0B05                     u3711:
  9078  0B05  2B0B               	goto	l3062
  9079  0B06                     u3710:
  9080  0B06                     l3060:
  9081  0B06  0863               	movf	___fladd@bexp,w
  9082  0B07  1D03               	btfss	3,2
  9083  0B08  2B0A               	goto	u3721
  9084  0B09  2B0B               	goto	u3720
  9085  0B0A                     u3721:
  9086  0B0A  2B19               	goto	l3068
  9087  0B0B                     u3720:
  9088  0B0B                     l3062:
  9089  0B0B  3000               	movlw	0
  9090  0B0C  00D4               	movwf	___fladd@b+3
  9091  0B0D  3000               	movlw	0
  9092  0B0E  00D3               	movwf	___fladd@b+2
  9093  0B0F  3000               	movlw	0
  9094  0B10  00D2               	movwf	___fladd@b+1
  9095  0B11  3000               	movlw	0
  9096  0B12  00D1               	movwf	___fladd@b
  9097  0B13                     l3064:
  9098  0B13  0863               	movf	___fladd@bexp,w
  9099  0B14  1D03               	btfss	3,2
  9100  0B15  2B17               	goto	u3731
  9101  0B16  2B18               	goto	u3730
  9102  0B17                     u3731:
  9103  0B17  2B19               	goto	l3068
  9104  0B18                     u3730:
  9105  0B18                     l3066:
  9106  0B18  01E1               	clrf	___fladd@signs
  9107  0B19                     l3068:
  9108  0B19  1C63               	btfss	___fladd@bexp,0
  9109  0B1A  2B1C               	goto	u3741
  9110  0B1B  2B1D               	goto	u3740
  9111  0B1C                     u3741:
  9112  0B1C  2B1F               	goto	l3072
  9113  0B1D                     u3740:
  9114  0B1D                     l3070:
  9115  0B1D  17D3               	bsf	___fladd@b+2,7
  9116  0B1E  2B23               	goto	l870
  9117  0B1F                     l3072:
  9118  0B1F  307F               	movlw	127
  9119  0B20  00D9               	movwf	??___fladd
  9120  0B21  0859               	movf	??___fladd,w
  9121  0B22  05D3               	andwf	___fladd@b+2,f
  9122  0B23                     l870:
  9123  0B23  3663               	lsrf	___fladd@bexp,w
  9124  0B24  00D9               	movwf	??___fladd
  9125  0B25  0859               	movf	??___fladd,w
  9126  0B26  00D4               	movwf	___fladd@b+3
  9127  0B27                     l3074:
  9128  0B27  1FE1               	btfss	___fladd@signs,7
  9129  0B28  2B2A               	goto	u3751
  9130  0B29  2B2B               	goto	u3750
  9131  0B2A                     u3751:
  9132  0B2A  2B2C               	goto	l871
  9133  0B2B                     u3750:
  9134  0B2B                     l3076:
  9135  0B2B  17D4               	bsf	___fladd@b+3,7
  9136  0B2C                     l871:
  9137  0B2C                     l841:
  9138  0B2C  0008               	return
  9139  0B2D                     __end_of___fladd:
  9140                           
  9141                           	psect	text19
  9142  1DA6                     __ptext19:	
  9143 ;; *************** function ___flneg *****************
  9144 ;; Defined at:
  9145 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;  f1              4    0[COMMON] unsigned char 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;		None
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  4    0[COMMON] unsigned char 
  9152 ;; Registers used:
  9153 ;;		wreg
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9162 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9163 ;;Total ram usage:        4 bytes
  9164 ;; Hardware stack levels used: 1
  9165 ;; This function calls:
  9166 ;;		Nothing
  9167 ;; This function is called by:
  9168 ;;		_sprintf
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           
  9173                           ;psect for function ___flneg
  9174  1DA6                     ___flneg:
  9175  1DA6                     l3582:	
  9176                           ;incstack = 0
  9177                           ; Regs used in ___flneg: [wreg]
  9178                           
  9179  1DA6  0873               	movf	___flneg@f1+3,w
  9180  1DA7  0472               	iorwf	___flneg@f1+2,w
  9181  1DA8  0471               	iorwf	___flneg@f1+1,w
  9182  1DA9  0470               	iorwf	___flneg@f1,w
  9183  1DAA  1903               	skipnz
  9184  1DAB  2DAD               	goto	u4681
  9185  1DAC  2DAE               	goto	u4680
  9186  1DAD                     u4681:
  9187  1DAD  2DB0               	goto	l3586
  9188  1DAE                     u4680:
  9189  1DAE                     l3584:
  9190  1DAE  3080               	movlw	128
  9191  1DAF  06F3               	xorwf	___flneg@f1+3,f
  9192  1DB0                     l3586:
  9193  1DB0                     l700:
  9194  1DB0  0008               	return
  9195  1DB1                     __end_of___flneg:
  9196                           
  9197                           	psect	text20
  9198  11E0                     __ptext20:	
  9199 ;; *************** function ___flge *****************
  9200 ;; Defined at:
  9201 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  9202 ;; Parameters:    Size  Location     Type
  9203 ;;  ff1             4    0[COMMON] unsigned char 
  9204 ;;  ff2             4    4[COMMON] unsigned char 
  9205 ;; Auto vars:     Size  Location     Type
  9206 ;;		None
  9207 ;; Return value:  Size  Location     Type
  9208 ;;		None               void
  9209 ;; Registers used:
  9210 ;;		wreg, status,2, status,0
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9216 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9218 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9219 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9220 ;;Total ram usage:       12 bytes
  9221 ;; Hardware stack levels used: 1
  9222 ;; This function calls:
  9223 ;;		Nothing
  9224 ;; This function is called by:
  9225 ;;		_sprintf
  9226 ;; This function uses a non-reentrant model
  9227 ;;
  9228                           
  9229                           
  9230                           ;psect for function ___flge
  9231  11E0                     ___flge:
  9232  11E0                     l3562:	
  9233                           ;incstack = 0
  9234                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9235                           
  9236  11E0  3000               	movlw	0
  9237  11E1  0570               	andwf	___flge@ff1,w
  9238  11E2  00F8               	movwf	??___flge
  9239  11E3  3000               	movlw	0
  9240  11E4  0571               	andwf	___flge@ff1+1,w
  9241  11E5  00F9               	movwf	??___flge+1
  9242  11E6  3080               	movlw	128
  9243  11E7  0572               	andwf	___flge@ff1+2,w
  9244  11E8  00FA               	movwf	??___flge+2
  9245  11E9  307F               	movlw	127
  9246  11EA  0573               	andwf	___flge@ff1+3,w
  9247  11EB  00FB               	movwf	??___flge+3
  9248  11EC  087B               	movf	??___flge+3,w
  9249  11ED  047A               	iorwf	??___flge+2,w
  9250  11EE  0479               	iorwf	??___flge+1,w
  9251  11EF  0478               	iorwf	??___flge,w
  9252  11F0  1D03               	skipz
  9253  11F1  29F3               	goto	u4631
  9254  11F2  29F4               	goto	u4630
  9255  11F3                     u4631:
  9256  11F3  29FC               	goto	l692
  9257  11F4                     u4630:
  9258  11F4                     l3564:
  9259  11F4  3000               	movlw	0
  9260  11F5  00F3               	movwf	___flge@ff1+3
  9261  11F6  3000               	movlw	0
  9262  11F7  00F2               	movwf	___flge@ff1+2
  9263  11F8  3000               	movlw	0
  9264  11F9  00F1               	movwf	___flge@ff1+1
  9265  11FA  3000               	movlw	0
  9266  11FB  00F0               	movwf	___flge@ff1
  9267  11FC                     l692:
  9268  11FC  3000               	movlw	0
  9269  11FD  0574               	andwf	___flge@ff2,w
  9270  11FE  00F8               	movwf	??___flge
  9271  11FF  3000               	movlw	0
  9272  1200  0575               	andwf	___flge@ff2+1,w
  9273  1201  00F9               	movwf	??___flge+1
  9274  1202  3080               	movlw	128
  9275  1203  0576               	andwf	___flge@ff2+2,w
  9276  1204  00FA               	movwf	??___flge+2
  9277  1205  307F               	movlw	127
  9278  1206  0577               	andwf	___flge@ff2+3,w
  9279  1207  00FB               	movwf	??___flge+3
  9280  1208  087B               	movf	??___flge+3,w
  9281  1209  047A               	iorwf	??___flge+2,w
  9282  120A  0479               	iorwf	??___flge+1,w
  9283  120B  0478               	iorwf	??___flge,w
  9284  120C  1D03               	skipz
  9285  120D  2A0F               	goto	u4641
  9286  120E  2A10               	goto	u4640
  9287  120F                     u4641:
  9288  120F  2A18               	goto	l3568
  9289  1210                     u4640:
  9290  1210                     l3566:
  9291  1210  3000               	movlw	0
  9292  1211  00F7               	movwf	___flge@ff2+3
  9293  1212  3000               	movlw	0
  9294  1213  00F6               	movwf	___flge@ff2+2
  9295  1214  3000               	movlw	0
  9296  1215  00F5               	movwf	___flge@ff2+1
  9297  1216  3000               	movlw	0
  9298  1217  00F4               	movwf	___flge@ff2
  9299  1218                     l3568:
  9300  1218  1FF3               	btfss	___flge@ff1+3,7
  9301  1219  2A1B               	goto	u4651
  9302  121A  2A1C               	goto	u4650
  9303  121B                     u4651:
  9304  121B  2A34               	goto	l3572
  9305  121C                     u4650:
  9306  121C                     l3570:
  9307  121C  3000               	movlw	0
  9308  121D  00F8               	movwf	??___flge
  9309  121E  3000               	movlw	0
  9310  121F  00F9               	movwf	??___flge+1
  9311  1220  3000               	movlw	0
  9312  1221  00FA               	movwf	??___flge+2
  9313  1222  3080               	movlw	128
  9314  1223  00FB               	movwf	??___flge+3
  9315  1224  0870               	movf	___flge@ff1,w
  9316  1225  02F8               	subwf	??___flge,f
  9317  1226  0871               	movf	___flge@ff1+1,w
  9318  1227  3BF9               	subwfb	??___flge+1,f
  9319  1228  0872               	movf	___flge@ff1+2,w
  9320  1229  3BFA               	subwfb	??___flge+2,f
  9321  122A  0873               	movf	___flge@ff1+3,w
  9322  122B  3BFB               	subwfb	??___flge+3,f
  9323  122C  087B               	movf	??___flge+3,w
  9324  122D  00F3               	movwf	___flge@ff1+3
  9325  122E  087A               	movf	??___flge+2,w
  9326  122F  00F2               	movwf	___flge@ff1+2
  9327  1230  0879               	movf	??___flge+1,w
  9328  1231  00F1               	movwf	___flge@ff1+1
  9329  1232  0878               	movf	??___flge,w
  9330  1233  00F0               	movwf	___flge@ff1
  9331  1234                     l3572:
  9332  1234  1FF7               	btfss	___flge@ff2+3,7
  9333  1235  2A37               	goto	u4661
  9334  1236  2A38               	goto	u4660
  9335  1237                     u4661:
  9336  1237  2A50               	goto	l695
  9337  1238                     u4660:
  9338  1238                     l3574:
  9339  1238  3000               	movlw	0
  9340  1239  00F8               	movwf	??___flge
  9341  123A  3000               	movlw	0
  9342  123B  00F9               	movwf	??___flge+1
  9343  123C  3000               	movlw	0
  9344  123D  00FA               	movwf	??___flge+2
  9345  123E  3080               	movlw	128
  9346  123F  00FB               	movwf	??___flge+3
  9347  1240  0874               	movf	___flge@ff2,w
  9348  1241  02F8               	subwf	??___flge,f
  9349  1242  0875               	movf	___flge@ff2+1,w
  9350  1243  3BF9               	subwfb	??___flge+1,f
  9351  1244  0876               	movf	___flge@ff2+2,w
  9352  1245  3BFA               	subwfb	??___flge+2,f
  9353  1246  0877               	movf	___flge@ff2+3,w
  9354  1247  3BFB               	subwfb	??___flge+3,f
  9355  1248  087B               	movf	??___flge+3,w
  9356  1249  00F7               	movwf	___flge@ff2+3
  9357  124A  087A               	movf	??___flge+2,w
  9358  124B  00F6               	movwf	___flge@ff2+2
  9359  124C  0879               	movf	??___flge+1,w
  9360  124D  00F5               	movwf	___flge@ff2+1
  9361  124E  0878               	movf	??___flge,w
  9362  124F  00F4               	movwf	___flge@ff2
  9363  1250                     l695:
  9364  1250  3080               	movlw	128
  9365  1251  06F3               	xorwf	___flge@ff1+3,f
  9366  1252  3080               	movlw	128
  9367  1253  06F7               	xorwf	___flge@ff2+3,f
  9368  1254  0877               	movf	___flge@ff2+3,w
  9369  1255  0273               	subwf	___flge@ff1+3,w
  9370  1256  1D03               	skipz
  9371  1257  2A62               	goto	u4675
  9372  1258  0876               	movf	___flge@ff2+2,w
  9373  1259  0272               	subwf	___flge@ff1+2,w
  9374  125A  1D03               	skipz
  9375  125B  2A62               	goto	u4675
  9376  125C  0875               	movf	___flge@ff2+1,w
  9377  125D  0271               	subwf	___flge@ff1+1,w
  9378  125E  1D03               	skipz
  9379  125F  2A62               	goto	u4675
  9380  1260  0874               	movf	___flge@ff2,w
  9381  1261  0270               	subwf	___flge@ff1,w
  9382  1262                     u4675:
  9383  1262  1803               	skipnc
  9384  1263  2A65               	goto	u4671
  9385  1264  2A66               	goto	u4670
  9386  1265                     u4671:
  9387  1265  2A68               	goto	l3578
  9388  1266                     u4670:
  9389  1266                     l3576:
  9390  1266  1003               	clrc
  9391  1267  2A69               	goto	l696
  9392  1268                     l3578:
  9393  1268  1403               	setc
  9394  1269                     l696:
  9395  1269  0008               	return
  9396  126A                     __end_of___flge:
  9397                           
  9398                           	psect	text21
  9399  1010                     __ptext21:	
  9400 ;; *************** function ___fleq *****************
  9401 ;; Defined at:
  9402 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;  ff1             4    0[COMMON] unsigned char 
  9405 ;;  ff2             4    4[COMMON] unsigned char 
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;		None
  9408 ;; Return value:  Size  Location     Type
  9409 ;;		None               void
  9410 ;; Registers used:
  9411 ;;		wreg, status,2, status,0
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9417 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9419 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9420 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9421 ;;Total ram usage:       12 bytes
  9422 ;; Hardware stack levels used: 1
  9423 ;; This function calls:
  9424 ;;		Nothing
  9425 ;; This function is called by:
  9426 ;;		_sprintf
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           
  9431                           ;psect for function ___fleq
  9432  1010                     ___fleq:
  9433  1010                     l3550:	
  9434                           ;incstack = 0
  9435                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9436                           
  9437  1010  3000               	movlw	0
  9438  1011  0570               	andwf	___fleq@ff1,w
  9439  1012  00F8               	movwf	??___fleq
  9440  1013  3000               	movlw	0
  9441  1014  0571               	andwf	___fleq@ff1+1,w
  9442  1015  00F9               	movwf	??___fleq+1
  9443  1016  3080               	movlw	128
  9444  1017  0572               	andwf	___fleq@ff1+2,w
  9445  1018  00FA               	movwf	??___fleq+2
  9446  1019  307F               	movlw	127
  9447  101A  0573               	andwf	___fleq@ff1+3,w
  9448  101B  00FB               	movwf	??___fleq+3
  9449  101C  087B               	movf	??___fleq+3,w
  9450  101D  047A               	iorwf	??___fleq+2,w
  9451  101E  0479               	iorwf	??___fleq+1,w
  9452  101F  0478               	iorwf	??___fleq,w
  9453  1020  1D03               	skipz
  9454  1021  2823               	goto	u4601
  9455  1022  2824               	goto	u4600
  9456  1023                     u4601:
  9457  1023  282C               	goto	l687
  9458  1024                     u4600:
  9459  1024                     l3552:
  9460  1024  3000               	movlw	0
  9461  1025  00F3               	movwf	___fleq@ff1+3
  9462  1026  3000               	movlw	0
  9463  1027  00F2               	movwf	___fleq@ff1+2
  9464  1028  3000               	movlw	0
  9465  1029  00F1               	movwf	___fleq@ff1+1
  9466  102A  3000               	movlw	0
  9467  102B  00F0               	movwf	___fleq@ff1
  9468  102C                     l687:
  9469  102C  3000               	movlw	0
  9470  102D  0574               	andwf	___fleq@ff2,w
  9471  102E  00F8               	movwf	??___fleq
  9472  102F  3000               	movlw	0
  9473  1030  0575               	andwf	___fleq@ff2+1,w
  9474  1031  00F9               	movwf	??___fleq+1
  9475  1032  3080               	movlw	128
  9476  1033  0576               	andwf	___fleq@ff2+2,w
  9477  1034  00FA               	movwf	??___fleq+2
  9478  1035  307F               	movlw	127
  9479  1036  0577               	andwf	___fleq@ff2+3,w
  9480  1037  00FB               	movwf	??___fleq+3
  9481  1038  087B               	movf	??___fleq+3,w
  9482  1039  047A               	iorwf	??___fleq+2,w
  9483  103A  0479               	iorwf	??___fleq+1,w
  9484  103B  0478               	iorwf	??___fleq,w
  9485  103C  1D03               	skipz
  9486  103D  283F               	goto	u4611
  9487  103E  2840               	goto	u4610
  9488  103F                     u4611:
  9489  103F  2848               	goto	l688
  9490  1040                     u4610:
  9491  1040                     l3554:
  9492  1040  3000               	movlw	0
  9493  1041  00F7               	movwf	___fleq@ff2+3
  9494  1042  3000               	movlw	0
  9495  1043  00F6               	movwf	___fleq@ff2+2
  9496  1044  3000               	movlw	0
  9497  1045  00F5               	movwf	___fleq@ff2+1
  9498  1046  3000               	movlw	0
  9499  1047  00F4               	movwf	___fleq@ff2
  9500  1048                     l688:
  9501  1048  0877               	movf	___fleq@ff2+3,w
  9502  1049  0673               	xorwf	___fleq@ff1+3,w
  9503  104A  1D03               	skipz
  9504  104B  2856               	goto	u4625
  9505  104C  0876               	movf	___fleq@ff2+2,w
  9506  104D  0672               	xorwf	___fleq@ff1+2,w
  9507  104E  1D03               	skipz
  9508  104F  2856               	goto	u4625
  9509  1050  0875               	movf	___fleq@ff2+1,w
  9510  1051  0671               	xorwf	___fleq@ff1+1,w
  9511  1052  1D03               	skipz
  9512  1053  2856               	goto	u4625
  9513  1054  0874               	movf	___fleq@ff2,w
  9514  1055  0670               	xorwf	___fleq@ff1,w
  9515  1056                     u4625:
  9516  1056  1903               	skipnz
  9517  1057  2859               	goto	u4621
  9518  1058  285A               	goto	u4620
  9519  1059                     u4621:
  9520  1059  285C               	goto	l3558
  9521  105A                     u4620:
  9522  105A                     l3556:
  9523  105A  1003               	clrc
  9524  105B  285D               	goto	l689
  9525  105C                     l3558:
  9526  105C  1403               	setc
  9527  105D                     l689:
  9528  105D  0008               	return
  9529  105E                     __end_of___fleq:
  9530                           
  9531                           	psect	text22
  9532  1FB2                     __ptext22:	
  9533 ;; *************** function _scale_convert_gram *****************
  9534 ;; Defined at:
  9535 ;;		line 64 in file "loadcell.c"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;  count           4   13[BANK0 ] long 
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;  temp            4   21[BANK0 ] float 
  9540 ;; Return value:  Size  Location     Type
  9541 ;;                  4   13[BANK0 ] float 
  9542 ;; Registers used:
  9543 ;;		wreg, status,2, status,0, pclath, cstack
  9544 ;; Tracked objects:
  9545 ;;		On entry : 0/0
  9546 ;;		On exit  : 0/0
  9547 ;;		Unchanged: 0/0
  9548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9549 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9550 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9551 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9552 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9553 ;;Total ram usage:       12 bytes
  9554 ;; Hardware stack levels used: 1
  9555 ;; Hardware stack levels required when called: 1
  9556 ;; This function calls:
  9557 ;;		___fldiv
  9558 ;;		___xxtofl
  9559 ;; This function is called by:
  9560 ;;		_main
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           
  9565                           ;psect for function _scale_convert_gram
  9566  1FB2                     _scale_convert_gram:
  9567  1FB2                     l3974:	
  9568                           ;incstack = 0
  9569                           ; Regs used in _scale_convert_gram: [wreg+status,2+status,0+pclath+cstack]
  9570                           
  9571                           
  9572                           ;loadcell.c: 66: float temp = count - weight_zero;
  9573  1FB2  0021               	movlb	1	; select bank1
  9574  1FB3  084B               	movf	_weight_zero^(0+128),w
  9575  1FB4  0020               	movlb	0	; select bank0
  9576  1FB5  022D               	subwf	scale_convert_gram@count,w
  9577  1FB6  00B1               	movwf	??_scale_convert_gram
  9578  1FB7  0021               	movlb	1	; select bank1
  9579  1FB8  084C               	movf	(_weight_zero+1)^(0+128),w
  9580  1FB9  0020               	movlb	0	; select bank0
  9581  1FBA  3B2E               	subwfb	scale_convert_gram@count+1,w
  9582  1FBB  00B2               	movwf	??_scale_convert_gram+1
  9583  1FBC  0021               	movlb	1	; select bank1
  9584  1FBD  084D               	movf	(_weight_zero+2)^(0+128),w
  9585  1FBE  0020               	movlb	0	; select bank0
  9586  1FBF  3B2F               	subwfb	scale_convert_gram@count+2,w
  9587  1FC0  00B3               	movwf	??_scale_convert_gram+2
  9588  1FC1  0021               	movlb	1	; select bank1
  9589  1FC2  084E               	movf	(_weight_zero+3)^(0+128),w
  9590  1FC3  0020               	movlb	0	; select bank0
  9591  1FC4  3B30               	subwfb	scale_convert_gram@count+3,w
  9592  1FC5  00B4               	movwf	??_scale_convert_gram+3
  9593  1FC6  0834               	movf	??_scale_convert_gram+3,w
  9594  1FC7  00F3               	movwf	___xxtofl@val+3
  9595  1FC8  0833               	movf	??_scale_convert_gram+2,w
  9596  1FC9  00F2               	movwf	___xxtofl@val+2
  9597  1FCA  0832               	movf	??_scale_convert_gram+1,w
  9598  1FCB  00F1               	movwf	___xxtofl@val+1
  9599  1FCC  0831               	movf	??_scale_convert_gram,w
  9600  1FCD  00F0               	movwf	___xxtofl@val
  9601  1FCE  3001               	movlw	1
  9602  1FCF  3192  22FA  319F   	fcall	___xxtofl
  9603  1FD2  0873               	movf	?___xxtofl+3,w
  9604  1FD3  0020               	movlb	0	; select bank0
  9605  1FD4  00B8               	movwf	scale_convert_gram@temp+3
  9606  1FD5  0872               	movf	?___xxtofl+2,w
  9607  1FD6  00B7               	movwf	scale_convert_gram@temp+2
  9608  1FD7  0871               	movf	?___xxtofl+1,w
  9609  1FD8  00B6               	movwf	scale_convert_gram@temp+1
  9610  1FD9  0870               	movf	?___xxtofl,w
  9611  1FDA  00B5               	movwf	scale_convert_gram@temp
  9612                           
  9613                           ;loadcell.c: 67: temp = temp / 486;
  9614  1FDB  3043               	movlw	67
  9615  1FDC  00F3               	movwf	___fldiv@a+3
  9616  1FDD  30F3               	movlw	243
  9617  1FDE  00F2               	movwf	___fldiv@a+2
  9618  1FDF  3000               	movlw	0
  9619  1FE0  00F1               	movwf	___fldiv@a+1
  9620  1FE1  3000               	movlw	0
  9621  1FE2  00F0               	movwf	___fldiv@a
  9622  1FE3  0838               	movf	scale_convert_gram@temp+3,w
  9623  1FE4  00F7               	movwf	___fldiv@b+3
  9624  1FE5  0837               	movf	scale_convert_gram@temp+2,w
  9625  1FE6  00F6               	movwf	___fldiv@b+2
  9626  1FE7  0836               	movf	scale_convert_gram@temp+1,w
  9627  1FE8  00F5               	movwf	___fldiv@b+1
  9628  1FE9  0835               	movf	scale_convert_gram@temp,w
  9629  1FEA  00F4               	movwf	___fldiv@b
  9630  1FEB  3180  201C  319F   	fcall	___fldiv
  9631  1FEE  0873               	movf	?___fldiv+3,w
  9632  1FEF  0020               	movlb	0	; select bank0
  9633  1FF0  00B8               	movwf	scale_convert_gram@temp+3
  9634  1FF1  0872               	movf	?___fldiv+2,w
  9635  1FF2  00B7               	movwf	scale_convert_gram@temp+2
  9636  1FF3  0871               	movf	?___fldiv+1,w
  9637  1FF4  00B6               	movwf	scale_convert_gram@temp+1
  9638  1FF5  0870               	movf	?___fldiv,w
  9639  1FF6  00B5               	movwf	scale_convert_gram@temp
  9640  1FF7                     l3976:
  9641                           
  9642                           ;loadcell.c: 68: return temp;
  9643  1FF7  0838               	movf	scale_convert_gram@temp+3,w
  9644  1FF8  00B0               	movwf	?_scale_convert_gram+3
  9645  1FF9  0837               	movf	scale_convert_gram@temp+2,w
  9646  1FFA  00AF               	movwf	?_scale_convert_gram+2
  9647  1FFB  0836               	movf	scale_convert_gram@temp+1,w
  9648  1FFC  00AE               	movwf	?_scale_convert_gram+1
  9649  1FFD  0835               	movf	scale_convert_gram@temp,w
  9650  1FFE  00AD               	movwf	?_scale_convert_gram
  9651  1FFF                     l143:
  9652  1FFF  0008               	return
  9653  2000                     __end_of_scale_convert_gram:
  9654                           
  9655                           	psect	text23
  9656  12FA                     __ptext23:	
  9657 ;; *************** function ___xxtofl *****************
  9658 ;; Defined at:
  9659 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;  sign            1    wreg     unsigned char 
  9662 ;;  val             4    0[COMMON] long 
  9663 ;; Auto vars:     Size  Location     Type
  9664 ;;  sign            1    8[COMMON] unsigned char 
  9665 ;;  arg             4   10[COMMON] unsigned long 
  9666 ;;  exp             1    9[COMMON] unsigned char 
  9667 ;; Return value:  Size  Location     Type
  9668 ;;                  4    0[COMMON] unsigned char 
  9669 ;; Registers used:
  9670 ;;		wreg, status,2, status,0
  9671 ;; Tracked objects:
  9672 ;;		On entry : 0/0
  9673 ;;		On exit  : 0/0
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9677 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9678 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9679 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9680 ;;Total ram usage:       14 bytes
  9681 ;; Hardware stack levels used: 1
  9682 ;; This function calls:
  9683 ;;		Nothing
  9684 ;; This function is called by:
  9685 ;;		_scale_convert_gram
  9686 ;;		_sprintf
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690                           
  9691                           ;psect for function ___xxtofl
  9692  12FA                     ___xxtofl:
  9693                           
  9694                           ;incstack = 0
  9695                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9696                           ;___xxtofl@sign stored from wreg
  9697  12FA  00F8               	movwf	___xxtofl@sign
  9698  12FB                     l3792:
  9699  12FB  0878               	movf	___xxtofl@sign,w
  9700  12FC  1903               	btfsc	3,2
  9701  12FD  2AFF               	goto	u5141
  9702  12FE  2B00               	goto	u5140
  9703  12FF                     u5141:
  9704  12FF  2B14               	goto	l3798
  9705  1300                     u5140:
  9706  1300                     l3794:
  9707  1300  1FF3               	btfss	___xxtofl@val+3,7
  9708  1301  2B03               	goto	u5151
  9709  1302  2B04               	goto	u5150
  9710  1303                     u5151:
  9711  1303  2B14               	goto	l3798
  9712  1304                     u5150:
  9713  1304                     l3796:
  9714  1304  0970               	comf	___xxtofl@val,w
  9715  1305  00FA               	movwf	___xxtofl@arg
  9716  1306  0971               	comf	___xxtofl@val+1,w
  9717  1307  00FB               	movwf	___xxtofl@arg+1
  9718  1308  0972               	comf	___xxtofl@val+2,w
  9719  1309  00FC               	movwf	___xxtofl@arg+2
  9720  130A  0973               	comf	___xxtofl@val+3,w
  9721  130B  00FD               	movwf	___xxtofl@arg+3
  9722  130C  0AFA               	incf	___xxtofl@arg,f
  9723  130D  1903               	skipnz
  9724  130E  0AFB               	incf	___xxtofl@arg+1,f
  9725  130F  1903               	skipnz
  9726  1310  0AFC               	incf	___xxtofl@arg+2,f
  9727  1311  1903               	skipnz
  9728  1312  0AFD               	incf	___xxtofl@arg+3,f
  9729  1313  2B1C               	goto	l968
  9730  1314                     l3798:
  9731  1314  0873               	movf	___xxtofl@val+3,w
  9732  1315  00FD               	movwf	___xxtofl@arg+3
  9733  1316  0872               	movf	___xxtofl@val+2,w
  9734  1317  00FC               	movwf	___xxtofl@arg+2
  9735  1318  0871               	movf	___xxtofl@val+1,w
  9736  1319  00FB               	movwf	___xxtofl@arg+1
  9737  131A  0870               	movf	___xxtofl@val,w
  9738  131B  00FA               	movwf	___xxtofl@arg
  9739  131C                     l968:
  9740  131C  0873               	movf	___xxtofl@val+3,w
  9741  131D  0472               	iorwf	___xxtofl@val+2,w
  9742  131E  0471               	iorwf	___xxtofl@val+1,w
  9743  131F  0470               	iorwf	___xxtofl@val,w
  9744  1320  1D03               	skipz
  9745  1321  2B23               	goto	u5161
  9746  1322  2B24               	goto	u5160
  9747  1323                     u5161:
  9748  1323  2B2D               	goto	l3804
  9749  1324                     u5160:
  9750  1324                     l3800:
  9751  1324  3000               	movlw	0
  9752  1325  00F3               	movwf	?___xxtofl+3
  9753  1326  3000               	movlw	0
  9754  1327  00F2               	movwf	?___xxtofl+2
  9755  1328  3000               	movlw	0
  9756  1329  00F1               	movwf	?___xxtofl+1
  9757  132A  3000               	movlw	0
  9758  132B  00F0               	movwf	?___xxtofl
  9759  132C  2BA5               	goto	l970
  9760  132D                     l3804:
  9761  132D  3096               	movlw	150
  9762  132E  00F4               	movwf	??___xxtofl
  9763  132F  0874               	movf	??___xxtofl,w
  9764  1330  00F9               	movwf	___xxtofl@exp
  9765  1331  2B3D               	goto	l3808
  9766  1332                     l3806:
  9767  1332  3001               	movlw	1
  9768  1333  00F4               	movwf	??___xxtofl
  9769  1334  0874               	movf	??___xxtofl,w
  9770  1335  07F9               	addwf	___xxtofl@exp,f
  9771  1336  3001               	movlw	1
  9772  1337                     u5175:
  9773  1337  36FD               	lsrf	___xxtofl@arg+3,f
  9774  1338  0CFC               	rrf	___xxtofl@arg+2,f
  9775  1339  0CFB               	rrf	___xxtofl@arg+1,f
  9776  133A  0CFA               	rrf	___xxtofl@arg,f
  9777  133B  0B89               	decfsz	9,f
  9778  133C  2B37               	goto	u5175
  9779  133D                     l3808:
  9780  133D  30FE               	movlw	254
  9781  133E  057D               	andwf	___xxtofl@arg+3,w
  9782  133F  1D03               	btfss	3,2
  9783  1340  2B42               	goto	u5181
  9784  1341  2B43               	goto	u5180
  9785  1342                     u5181:
  9786  1342  2B32               	goto	l3806
  9787  1343                     u5180:
  9788  1343  2B57               	goto	l974
  9789  1344                     l3810:
  9790  1344  3001               	movlw	1
  9791  1345  00F4               	movwf	??___xxtofl
  9792  1346  0874               	movf	??___xxtofl,w
  9793  1347  07F9               	addwf	___xxtofl@exp,f
  9794  1348                     l3812:
  9795  1348  3001               	movlw	1
  9796  1349  07FA               	addwf	___xxtofl@arg,f
  9797  134A  3000               	movlw	0
  9798  134B  3DFB               	addwfc	___xxtofl@arg+1,f
  9799  134C  3000               	movlw	0
  9800  134D  3DFC               	addwfc	___xxtofl@arg+2,f
  9801  134E  3000               	movlw	0
  9802  134F  3DFD               	addwfc	___xxtofl@arg+3,f
  9803  1350                     l3814:
  9804  1350  3001               	movlw	1
  9805  1351                     u5195:
  9806  1351  36FD               	lsrf	___xxtofl@arg+3,f
  9807  1352  0CFC               	rrf	___xxtofl@arg+2,f
  9808  1353  0CFB               	rrf	___xxtofl@arg+1,f
  9809  1354  0CFA               	rrf	___xxtofl@arg,f
  9810  1355  0B89               	decfsz	9,f
  9811  1356  2B51               	goto	u5195
  9812  1357                     l974:
  9813  1357  30FF               	movlw	255
  9814  1358  057D               	andwf	___xxtofl@arg+3,w
  9815  1359  1D03               	btfss	3,2
  9816  135A  2B5C               	goto	u5201
  9817  135B  2B5D               	goto	u5200
  9818  135C                     u5201:
  9819  135C  2B44               	goto	l3810
  9820  135D                     u5200:
  9821  135D  2B67               	goto	l3818
  9822  135E                     l3816:
  9823  135E  3001               	movlw	1
  9824  135F  02F9               	subwf	___xxtofl@exp,f
  9825  1360  3001               	movlw	1
  9826  1361                     u5215:
  9827  1361  35FA               	lslf	___xxtofl@arg,f
  9828  1362  0DFB               	rlf	___xxtofl@arg+1,f
  9829  1363  0DFC               	rlf	___xxtofl@arg+2,f
  9830  1364  0DFD               	rlf	___xxtofl@arg+3,f
  9831  1365  0B89               	decfsz	9,f
  9832  1366  2B61               	goto	u5215
  9833  1367                     l3818:
  9834  1367  1BFC               	btfsc	___xxtofl@arg+2,7
  9835  1368  2B6A               	goto	u5221
  9836  1369  2B6B               	goto	u5220
  9837  136A                     u5221:
  9838  136A  2B71               	goto	l981
  9839  136B                     u5220:
  9840  136B                     l3820:
  9841  136B  3002               	movlw	2
  9842  136C  0279               	subwf	___xxtofl@exp,w
  9843  136D  1803               	skipnc
  9844  136E  2B70               	goto	u5231
  9845  136F  2B71               	goto	u5230
  9846  1370                     u5231:
  9847  1370  2B5E               	goto	l3816
  9848  1371                     u5230:
  9849  1371                     l981:
  9850  1371  1879               	btfsc	___xxtofl@exp,0
  9851  1372  2B74               	goto	u5241
  9852  1373  2B75               	goto	u5240
  9853  1374                     u5241:
  9854  1374  2B7D               	goto	l982
  9855  1375                     u5240:
  9856  1375                     l3822:
  9857  1375  30FF               	movlw	255
  9858  1376  05FA               	andwf	___xxtofl@arg,f
  9859  1377  30FF               	movlw	255
  9860  1378  05FB               	andwf	___xxtofl@arg+1,f
  9861  1379  307F               	movlw	127
  9862  137A  05FC               	andwf	___xxtofl@arg+2,f
  9863  137B  30FF               	movlw	255
  9864  137C  05FD               	andwf	___xxtofl@arg+3,f
  9865  137D                     l982:
  9866  137D  1003               	clrc
  9867  137E  0CF9               	rrf	___xxtofl@exp,f
  9868  137F                     l3824:
  9869  137F  0879               	movf	___xxtofl@exp,w
  9870  1380  00F4               	movwf	??___xxtofl
  9871  1381  01F5               	clrf	??___xxtofl+1
  9872  1382  01F6               	clrf	??___xxtofl+2
  9873  1383  01F7               	clrf	??___xxtofl+3
  9874  1384  3018               	movlw	24
  9875  1385                     u5255:
  9876  1385  35F4               	lslf	??___xxtofl,f
  9877  1386  0DF5               	rlf	??___xxtofl+1,f
  9878  1387  0DF6               	rlf	??___xxtofl+2,f
  9879  1388  0DF7               	rlf	??___xxtofl+3,f
  9880  1389                     u5250:
  9881  1389  0B89               	decfsz	9,f
  9882  138A  2B85               	goto	u5255
  9883  138B  0874               	movf	??___xxtofl,w
  9884  138C  04FA               	iorwf	___xxtofl@arg,f
  9885  138D  0875               	movf	??___xxtofl+1,w
  9886  138E  04FB               	iorwf	___xxtofl@arg+1,f
  9887  138F  0876               	movf	??___xxtofl+2,w
  9888  1390  04FC               	iorwf	___xxtofl@arg+2,f
  9889  1391  0877               	movf	??___xxtofl+3,w
  9890  1392  04FD               	iorwf	___xxtofl@arg+3,f
  9891  1393                     l3826:
  9892  1393  0878               	movf	___xxtofl@sign,w
  9893  1394  1903               	btfsc	3,2
  9894  1395  2B97               	goto	u5261
  9895  1396  2B98               	goto	u5260
  9896  1397                     u5261:
  9897  1397  2B9D               	goto	l3832
  9898  1398                     u5260:
  9899  1398                     l3828:
  9900  1398  1FF3               	btfss	___xxtofl@val+3,7
  9901  1399  2B9B               	goto	u5271
  9902  139A  2B9C               	goto	u5270
  9903  139B                     u5271:
  9904  139B  2B9D               	goto	l3832
  9905  139C                     u5270:
  9906  139C                     l3830:
  9907  139C  17FD               	bsf	___xxtofl@arg+3,7
  9908  139D                     l3832:
  9909  139D  087D               	movf	___xxtofl@arg+3,w
  9910  139E  00F3               	movwf	?___xxtofl+3
  9911  139F  087C               	movf	___xxtofl@arg+2,w
  9912  13A0  00F2               	movwf	?___xxtofl+2
  9913  13A1  087B               	movf	___xxtofl@arg+1,w
  9914  13A2  00F1               	movwf	?___xxtofl+1
  9915  13A3  087A               	movf	___xxtofl@arg,w
  9916  13A4  00F0               	movwf	?___xxtofl
  9917  13A5                     l970:
  9918  13A5  0008               	return
  9919  13A6                     __end_of___xxtofl:
  9920                           
  9921                           	psect	text24
  9922  001C                     __ptext24:	
  9923 ;; *************** function ___fldiv *****************
  9924 ;; Defined at:
  9925 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;  a               4    0[COMMON] unsigned char 
  9928 ;;  b               4    4[COMMON] unsigned char 
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;  grs             4    7[BANK0 ] unsigned long 
  9931 ;;  rem             4    0[BANK0 ] unsigned long 
  9932 ;;  new_exp         2    5[BANK0 ] int 
  9933 ;;  aexp            1   12[BANK0 ] unsigned char 
  9934 ;;  bexp            1   11[BANK0 ] unsigned char 
  9935 ;;  sign            1    4[BANK0 ] unsigned char 
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  4    0[COMMON] unsigned char 
  9938 ;; Registers used:
  9939 ;;		wreg, status,2, status,0
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9945 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9946 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9949 ;;Total ram usage:       26 bytes
  9950 ;; Hardware stack levels used: 1
  9951 ;; This function calls:
  9952 ;;		Nothing
  9953 ;; This function is called by:
  9954 ;;		_scale_convert_gram
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           
  9959                           ;psect for function ___fldiv
  9960  001C                     ___fldiv:
  9961  001C                     l3652:	
  9962                           ;incstack = 0
  9963                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9964                           
  9965  001C  0877               	movf	___fldiv@b+3,w
  9966  001D  3980               	andlw	128
  9967  001E  00F8               	movwf	??___fldiv
  9968  001F  0878               	movf	??___fldiv,w
  9969  0020  0020               	movlb	0	; select bank0
  9970  0021  00A4               	movwf	___fldiv@sign
  9971  0022                     l3654:
  9972  0022  3577               	lslf	___fldiv@b+3,w
  9973  0023  00F8               	movwf	??___fldiv
  9974  0024  0878               	movf	??___fldiv,w
  9975  0025  00AB               	movwf	___fldiv@bexp
  9976  0026                     l3656:
  9977  0026  1FF6               	btfss	___fldiv@b+2,7
  9978  0027  2829               	goto	u4851
  9979  0028  282A               	goto	u4850
  9980  0029                     u4851:
  9981  0029  282B               	goto	l3660
  9982  002A                     u4850:
  9983  002A                     l3658:
  9984  002A  142B               	bsf	___fldiv@bexp,0
  9985  002B                     l3660:
  9986  002B  082B               	movf	___fldiv@bexp,w
  9987  002C  1903               	btfsc	3,2
  9988  002D  282F               	goto	u4861
  9989  002E  2830               	goto	u4860
  9990  002F                     u4861:
  9991  002F  2840               	goto	l3670
  9992  0030                     u4860:
  9993  0030                     l3662:
  9994  0030  0A2B               	incf	___fldiv@bexp,w
  9995  0031  1D03               	btfss	3,2
  9996  0032  2834               	goto	u4871
  9997  0033  2835               	goto	u4870
  9998  0034                     u4871:
  9999  0034  283D               	goto	l3666
 10000  0035                     u4870:
 10001  0035                     l3664:
 10002  0035  3000               	movlw	0
 10003  0036  00F7               	movwf	___fldiv@b+3
 10004  0037  3000               	movlw	0
 10005  0038  00F6               	movwf	___fldiv@b+2
 10006  0039  3000               	movlw	0
 10007  003A  00F5               	movwf	___fldiv@b+1
 10008  003B  3000               	movlw	0
 10009  003C  00F4               	movwf	___fldiv@b
 10010  003D                     l3666:
 10011  003D  17F6               	bsf	___fldiv@b+2,7
 10012  003E                     l3668:
 10013  003E  01F7               	clrf	___fldiv@b+3
 10014  003F  2848               	goto	l3672
 10015  0040                     l3670:
 10016  0040  3000               	movlw	0
 10017  0041  00F7               	movwf	___fldiv@b+3
 10018  0042  3000               	movlw	0
 10019  0043  00F6               	movwf	___fldiv@b+2
 10020  0044  3000               	movlw	0
 10021  0045  00F5               	movwf	___fldiv@b+1
 10022  0046  3000               	movlw	0
 10023  0047  00F4               	movwf	___fldiv@b
 10024  0048                     l3672:
 10025  0048  0873               	movf	___fldiv@a+3,w
 10026  0049  3980               	andlw	128
 10027  004A  00F8               	movwf	??___fldiv
 10028  004B  0878               	movf	??___fldiv,w
 10029  004C  06A4               	xorwf	___fldiv@sign,f
 10030  004D                     l3674:
 10031  004D  3573               	lslf	___fldiv@a+3,w
 10032  004E  00F8               	movwf	??___fldiv
 10033  004F  0878               	movf	??___fldiv,w
 10034  0050  00AC               	movwf	___fldiv@aexp
 10035  0051                     l3676:
 10036  0051  1FF2               	btfss	___fldiv@a+2,7
 10037  0052  2854               	goto	u4881
 10038  0053  2855               	goto	u4880
 10039  0054                     u4881:
 10040  0054  2856               	goto	l3680
 10041  0055                     u4880:
 10042  0055                     l3678:
 10043  0055  142C               	bsf	___fldiv@aexp,0
 10044  0056                     l3680:
 10045  0056  082C               	movf	___fldiv@aexp,w
 10046  0057  1903               	btfsc	3,2
 10047  0058  285A               	goto	u4891
 10048  0059  285B               	goto	u4890
 10049  005A                     u4891:
 10050  005A  286B               	goto	l3690
 10051  005B                     u4890:
 10052  005B                     l3682:
 10053  005B  0A2C               	incf	___fldiv@aexp,w
 10054  005C  1D03               	btfss	3,2
 10055  005D  285F               	goto	u4901
 10056  005E  2860               	goto	u4900
 10057  005F                     u4901:
 10058  005F  2868               	goto	l3686
 10059  0060                     u4900:
 10060  0060                     l3684:
 10061  0060  3000               	movlw	0
 10062  0061  00F3               	movwf	___fldiv@a+3
 10063  0062  3000               	movlw	0
 10064  0063  00F2               	movwf	___fldiv@a+2
 10065  0064  3000               	movlw	0
 10066  0065  00F1               	movwf	___fldiv@a+1
 10067  0066  3000               	movlw	0
 10068  0067  00F0               	movwf	___fldiv@a
 10069  0068                     l3686:
 10070  0068  17F2               	bsf	___fldiv@a+2,7
 10071  0069                     l3688:
 10072  0069  01F3               	clrf	___fldiv@a+3
 10073  006A  2873               	goto	l884
 10074  006B                     l3690:
 10075  006B  3000               	movlw	0
 10076  006C  00F3               	movwf	___fldiv@a+3
 10077  006D  3000               	movlw	0
 10078  006E  00F2               	movwf	___fldiv@a+2
 10079  006F  3000               	movlw	0
 10080  0070  00F1               	movwf	___fldiv@a+1
 10081  0071  3000               	movlw	0
 10082  0072  00F0               	movwf	___fldiv@a
 10083  0073                     l884:
 10084  0073  0873               	movf	___fldiv@a+3,w
 10085  0074  0472               	iorwf	___fldiv@a+2,w
 10086  0075  0471               	iorwf	___fldiv@a+1,w
 10087  0076  0470               	iorwf	___fldiv@a,w
 10088  0077  1D03               	skipz
 10089  0078  287A               	goto	u4911
 10090  0079  287B               	goto	u4910
 10091  007A                     u4911:
 10092  007A  2894               	goto	l3700
 10093  007B                     u4910:
 10094  007B                     l3692:
 10095  007B  3000               	movlw	0
 10096  007C  00F7               	movwf	___fldiv@b+3
 10097  007D  3000               	movlw	0
 10098  007E  00F6               	movwf	___fldiv@b+2
 10099  007F  3000               	movlw	0
 10100  0080  00F5               	movwf	___fldiv@b+1
 10101  0081  3000               	movlw	0
 10102  0082  00F4               	movwf	___fldiv@b
 10103  0083  3080               	movlw	128
 10104  0084  04F6               	iorwf	___fldiv@b+2,f
 10105  0085  307F               	movlw	127
 10106  0086  04F7               	iorwf	___fldiv@b+3,f
 10107  0087                     l3694:
 10108  0087  0824               	movf	___fldiv@sign,w
 10109  0088  00F8               	movwf	??___fldiv
 10110  0089  0878               	movf	??___fldiv,w
 10111  008A  04F7               	iorwf	___fldiv@b+3,f
 10112  008B                     l3696:
 10113  008B  0877               	movf	___fldiv@b+3,w
 10114  008C  00F3               	movwf	?___fldiv+3
 10115  008D  0876               	movf	___fldiv@b+2,w
 10116  008E  00F2               	movwf	?___fldiv+2
 10117  008F  0875               	movf	___fldiv@b+1,w
 10118  0090  00F1               	movwf	?___fldiv+1
 10119  0091  0874               	movf	___fldiv@b,w
 10120  0092  00F0               	movwf	?___fldiv
 10121  0093  29CF               	goto	l886
 10122  0094                     l3700:
 10123  0094  082B               	movf	___fldiv@bexp,w
 10124  0095  1D03               	btfss	3,2
 10125  0096  2898               	goto	u4921
 10126  0097  2899               	goto	u4920
 10127  0098                     u4921:
 10128  0098  28A2               	goto	l3706
 10129  0099                     u4920:
 10130  0099                     l3702:
 10131  0099  3000               	movlw	0
 10132  009A  00F3               	movwf	?___fldiv+3
 10133  009B  3000               	movlw	0
 10134  009C  00F2               	movwf	?___fldiv+2
 10135  009D  3000               	movlw	0
 10136  009E  00F1               	movwf	?___fldiv+1
 10137  009F  3000               	movlw	0
 10138  00A0  00F0               	movwf	?___fldiv
 10139  00A1  29CF               	goto	l886
 10140  00A2                     l3706:
 10141  00A2  082B               	movf	___fldiv@bexp,w
 10142  00A3  00F8               	movwf	??___fldiv
 10143  00A4  01F9               	clrf	??___fldiv+1
 10144  00A5  0879               	movf	??___fldiv+1,w
 10145  00A6  00FB               	movwf	??___fldiv+3
 10146  00A7  082C               	movf	___fldiv@aexp,w
 10147  00A8  0278               	subwf	??___fldiv,w
 10148  00A9  00FA               	movwf	??___fldiv+2
 10149  00AA  1C03               	skipc
 10150  00AB  03FB               	decf	??___fldiv+3,f
 10151  00AC  087A               	movf	??___fldiv+2,w
 10152  00AD  3E7F               	addlw	127
 10153  00AE  00A5               	movwf	___fldiv@new_exp
 10154  00AF  3000               	movlw	0
 10155  00B0  3D7B               	addwfc	??___fldiv+3,w
 10156  00B1  00A6               	movwf	___fldiv@new_exp+1
 10157  00B2                     l3708:
 10158  00B2  0877               	movf	___fldiv@b+3,w
 10159  00B3  00A3               	movwf	___fldiv@rem+3
 10160  00B4  0876               	movf	___fldiv@b+2,w
 10161  00B5  00A2               	movwf	___fldiv@rem+2
 10162  00B6  0875               	movf	___fldiv@b+1,w
 10163  00B7  00A1               	movwf	___fldiv@rem+1
 10164  00B8  0874               	movf	___fldiv@b,w
 10165  00B9  00A0               	movwf	___fldiv@rem
 10166  00BA                     l3710:
 10167  00BA  3000               	movlw	0
 10168  00BB  00F7               	movwf	___fldiv@b+3
 10169  00BC  3000               	movlw	0
 10170  00BD  00F6               	movwf	___fldiv@b+2
 10171  00BE  3000               	movlw	0
 10172  00BF  00F5               	movwf	___fldiv@b+1
 10173  00C0  3000               	movlw	0
 10174  00C1  00F4               	movwf	___fldiv@b
 10175  00C2                     l3712:
 10176  00C2  3000               	movlw	0
 10177  00C3  00AA               	movwf	___fldiv@grs+3
 10178  00C4  3000               	movlw	0
 10179  00C5  00A9               	movwf	___fldiv@grs+2
 10180  00C6  3000               	movlw	0
 10181  00C7  00A8               	movwf	___fldiv@grs+1
 10182  00C8  3000               	movlw	0
 10183  00C9  00A7               	movwf	___fldiv@grs
 10184  00CA                     l3714:
 10185  00CA  01AC               	clrf	___fldiv@aexp
 10186  00CB  290A               	goto	l3734
 10187  00CC                     l3716:
 10188  00CC  082C               	movf	___fldiv@aexp,w
 10189  00CD  1903               	btfsc	3,2
 10190  00CE  28D0               	goto	u4931
 10191  00CF  28D1               	goto	u4930
 10192  00D0                     u4931:
 10193  00D0  28EB               	goto	l3726
 10194  00D1                     u4930:
 10195  00D1                     l3718:
 10196  00D1  3001               	movlw	1
 10197  00D2                     u4945:
 10198  00D2  35A0               	lslf	___fldiv@rem,f
 10199  00D3  0DA1               	rlf	___fldiv@rem+1,f
 10200  00D4  0DA2               	rlf	___fldiv@rem+2,f
 10201  00D5  0DA3               	rlf	___fldiv@rem+3,f
 10202  00D6  0B89               	decfsz	9,f
 10203  00D7  28D2               	goto	u4945
 10204  00D8  3001               	movlw	1
 10205  00D9                     u4955:
 10206  00D9  35F4               	lslf	___fldiv@b,f
 10207  00DA  0DF5               	rlf	___fldiv@b+1,f
 10208  00DB  0DF6               	rlf	___fldiv@b+2,f
 10209  00DC  0DF7               	rlf	___fldiv@b+3,f
 10210  00DD  0B89               	decfsz	9,f
 10211  00DE  28D9               	goto	u4955
 10212  00DF                     l3720:
 10213  00DF  1FAA               	btfss	___fldiv@grs+3,7
 10214  00E0  28E2               	goto	u4961
 10215  00E1  28E3               	goto	u4960
 10216  00E2                     u4961:
 10217  00E2  28E4               	goto	l3724
 10218  00E3                     u4960:
 10219  00E3                     l3722:
 10220  00E3  1474               	bsf	___fldiv@b,0
 10221  00E4                     l3724:
 10222  00E4  3001               	movlw	1
 10223  00E5                     u4975:
 10224  00E5  35A7               	lslf	___fldiv@grs,f
 10225  00E6  0DA8               	rlf	___fldiv@grs+1,f
 10226  00E7  0DA9               	rlf	___fldiv@grs+2,f
 10227  00E8  0DAA               	rlf	___fldiv@grs+3,f
 10228  00E9  0B89               	decfsz	9,f
 10229  00EA  28E5               	goto	u4975
 10230  00EB                     l3726:
 10231  00EB  0873               	movf	___fldiv@a+3,w
 10232  00EC  0223               	subwf	___fldiv@rem+3,w
 10233  00ED  1D03               	skipz
 10234  00EE  28F9               	goto	u4985
 10235  00EF  0872               	movf	___fldiv@a+2,w
 10236  00F0  0222               	subwf	___fldiv@rem+2,w
 10237  00F1  1D03               	skipz
 10238  00F2  28F9               	goto	u4985
 10239  00F3  0871               	movf	___fldiv@a+1,w
 10240  00F4  0221               	subwf	___fldiv@rem+1,w
 10241  00F5  1D03               	skipz
 10242  00F6  28F9               	goto	u4985
 10243  00F7  0870               	movf	___fldiv@a,w
 10244  00F8  0220               	subwf	___fldiv@rem,w
 10245  00F9                     u4985:
 10246  00F9  1C03               	skipc
 10247  00FA  28FC               	goto	u4981
 10248  00FB  28FD               	goto	u4980
 10249  00FC                     u4981:
 10250  00FC  2906               	goto	l3732
 10251  00FD                     u4980:
 10252  00FD                     l3728:
 10253  00FD  172A               	bsf	___fldiv@grs+3,6
 10254  00FE                     l3730:
 10255  00FE  0870               	movf	___fldiv@a,w
 10256  00FF  02A0               	subwf	___fldiv@rem,f
 10257  0100  0871               	movf	___fldiv@a+1,w
 10258  0101  3BA1               	subwfb	___fldiv@rem+1,f
 10259  0102  0872               	movf	___fldiv@a+2,w
 10260  0103  3BA2               	subwfb	___fldiv@rem+2,f
 10261  0104  0873               	movf	___fldiv@a+3,w
 10262  0105  3BA3               	subwfb	___fldiv@rem+3,f
 10263  0106                     l3732:
 10264  0106  3001               	movlw	1
 10265  0107  00F8               	movwf	??___fldiv
 10266  0108  0878               	movf	??___fldiv,w
 10267  0109  07AC               	addwf	___fldiv@aexp,f
 10268  010A                     l3734:
 10269  010A  301A               	movlw	26
 10270  010B  022C               	subwf	___fldiv@aexp,w
 10271  010C  1C03               	skipc
 10272  010D  290F               	goto	u4991
 10273  010E  2910               	goto	u4990
 10274  010F                     u4991:
 10275  010F  28CC               	goto	l3716
 10276  0110                     u4990:
 10277  0110                     l3736:
 10278  0110  0823               	movf	___fldiv@rem+3,w
 10279  0111  0422               	iorwf	___fldiv@rem+2,w
 10280  0112  0421               	iorwf	___fldiv@rem+1,w
 10281  0113  0420               	iorwf	___fldiv@rem,w
 10282  0114  1903               	skipnz
 10283  0115  2917               	goto	u5001
 10284  0116  2918               	goto	u5000
 10285  0117                     u5001:
 10286  0117  2931               	goto	l3750
 10287  0118                     u5000:
 10288  0118                     l3738:
 10289  0118  1427               	bsf	___fldiv@grs,0
 10290  0119  2931               	goto	l3750
 10291  011A                     l3740:
 10292  011A  3001               	movlw	1
 10293  011B                     u5015:
 10294  011B  35F4               	lslf	___fldiv@b,f
 10295  011C  0DF5               	rlf	___fldiv@b+1,f
 10296  011D  0DF6               	rlf	___fldiv@b+2,f
 10297  011E  0DF7               	rlf	___fldiv@b+3,f
 10298  011F  0B89               	decfsz	9,f
 10299  0120  291B               	goto	u5015
 10300  0121                     l3742:
 10301  0121  1FAA               	btfss	___fldiv@grs+3,7
 10302  0122  2924               	goto	u5021
 10303  0123  2925               	goto	u5020
 10304  0124                     u5021:
 10305  0124  2926               	goto	l3746
 10306  0125                     u5020:
 10307  0125                     l3744:
 10308  0125  1474               	bsf	___fldiv@b,0
 10309  0126                     l3746:
 10310  0126  3001               	movlw	1
 10311  0127                     u5035:
 10312  0127  35A7               	lslf	___fldiv@grs,f
 10313  0128  0DA8               	rlf	___fldiv@grs+1,f
 10314  0129  0DA9               	rlf	___fldiv@grs+2,f
 10315  012A  0DAA               	rlf	___fldiv@grs+3,f
 10316  012B  0B89               	decfsz	9,f
 10317  012C  2927               	goto	u5035
 10318  012D                     l3748:
 10319  012D  30FF               	movlw	255
 10320  012E  07A5               	addwf	___fldiv@new_exp,f
 10321  012F  30FF               	movlw	255
 10322  0130  3DA6               	addwfc	___fldiv@new_exp+1,f
 10323  0131                     l3750:
 10324  0131  1FF6               	btfss	___fldiv@b+2,7
 10325  0132  2934               	goto	u5041
 10326  0133  2935               	goto	u5040
 10327  0134                     u5041:
 10328  0134  291A               	goto	l3740
 10329  0135                     u5040:
 10330  0135                     l3752:
 10331  0135  01AC               	clrf	___fldiv@aexp
 10332  0136                     l3754:
 10333  0136  1FAA               	btfss	___fldiv@grs+3,7
 10334  0137  2939               	goto	u5051
 10335  0138  293A               	goto	u5050
 10336  0139                     u5051:
 10337  0139  2956               	goto	l3762
 10338  013A                     u5050:
 10339  013A                     l3756:
 10340  013A  30FF               	movlw	255
 10341  013B  0527               	andwf	___fldiv@grs,w
 10342  013C  00F8               	movwf	??___fldiv
 10343  013D  30FF               	movlw	255
 10344  013E  0528               	andwf	___fldiv@grs+1,w
 10345  013F  00F9               	movwf	??___fldiv+1
 10346  0140  30FF               	movlw	255
 10347  0141  0529               	andwf	___fldiv@grs+2,w
 10348  0142  00FA               	movwf	??___fldiv+2
 10349  0143  307F               	movlw	127
 10350  0144  052A               	andwf	___fldiv@grs+3,w
 10351  0145  00FB               	movwf	??___fldiv+3
 10352  0146  087B               	movf	??___fldiv+3,w
 10353  0147  047A               	iorwf	??___fldiv+2,w
 10354  0148  0479               	iorwf	??___fldiv+1,w
 10355  0149  0478               	iorwf	??___fldiv,w
 10356  014A  1903               	skipnz
 10357  014B  294D               	goto	u5061
 10358  014C  294E               	goto	u5060
 10359  014D                     u5061:
 10360  014D  2951               	goto	l900
 10361  014E                     u5060:
 10362  014E                     l3758:
 10363  014E  01AC               	clrf	___fldiv@aexp
 10364  014F  0AAC               	incf	___fldiv@aexp,f
 10365  0150  2956               	goto	l3762
 10366  0151                     l900:
 10367  0151  1C74               	btfss	___fldiv@b,0
 10368  0152  2954               	goto	u5071
 10369  0153  2955               	goto	u5070
 10370  0154                     u5071:
 10371  0154  2956               	goto	l3762
 10372  0155                     u5070:
 10373  0155  294E               	goto	l3758
 10374  0156                     l3762:
 10375  0156  082C               	movf	___fldiv@aexp,w
 10376  0157  1903               	btfsc	3,2
 10377  0158  295A               	goto	u5081
 10378  0159  295B               	goto	u5080
 10379  015A                     u5081:
 10380  015A  2983               	goto	l3772
 10381  015B                     u5080:
 10382  015B                     l3764:
 10383  015B  3001               	movlw	1
 10384  015C  07F4               	addwf	___fldiv@b,f
 10385  015D  3000               	movlw	0
 10386  015E  3DF5               	addwfc	___fldiv@b+1,f
 10387  015F  3000               	movlw	0
 10388  0160  3DF6               	addwfc	___fldiv@b+2,f
 10389  0161  3000               	movlw	0
 10390  0162  3DF7               	addwfc	___fldiv@b+3,f
 10391  0163                     l3766:
 10392  0163  1C77               	btfss	___fldiv@b+3,0
 10393  0164  2966               	goto	u5091
 10394  0165  2967               	goto	u5090
 10395  0166                     u5091:
 10396  0166  2983               	goto	l3772
 10397  0167                     u5090:
 10398  0167                     l3768:
 10399  0167  0874               	movf	___fldiv@b,w
 10400  0168  00F8               	movwf	??___fldiv
 10401  0169  0875               	movf	___fldiv@b+1,w
 10402  016A  00F9               	movwf	??___fldiv+1
 10403  016B  0876               	movf	___fldiv@b+2,w
 10404  016C  00FA               	movwf	??___fldiv+2
 10405  016D  0877               	movf	___fldiv@b+3,w
 10406  016E  00FB               	movwf	??___fldiv+3
 10407  016F  3001               	movlw	1
 10408  0170  00FC               	movwf	??___fldiv+4
 10409  0171                     u5105:
 10410  0171  37FB               	asrf	??___fldiv+3,f
 10411  0172  0CFA               	rrf	??___fldiv+2,f
 10412  0173  0CF9               	rrf	??___fldiv+1,f
 10413  0174  0CF8               	rrf	??___fldiv,f
 10414  0175                     u5100:
 10415  0175  0BFC               	decfsz	??___fldiv+4,f
 10416  0176  2971               	goto	u5105
 10417  0177  087B               	movf	??___fldiv+3,w
 10418  0178  00F7               	movwf	___fldiv@b+3
 10419  0179  087A               	movf	??___fldiv+2,w
 10420  017A  00F6               	movwf	___fldiv@b+2
 10421  017B  0879               	movf	??___fldiv+1,w
 10422  017C  00F5               	movwf	___fldiv@b+1
 10423  017D  0878               	movf	??___fldiv,w
 10424  017E  00F4               	movwf	___fldiv@b
 10425  017F                     l3770:
 10426  017F  3001               	movlw	1
 10427  0180  07A5               	addwf	___fldiv@new_exp,f
 10428  0181  3000               	movlw	0
 10429  0182  3DA6               	addwfc	___fldiv@new_exp+1,f
 10430  0183                     l3772:
 10431  0183  0826               	movf	___fldiv@new_exp+1,w
 10432  0184  3A80               	xorlw	128
 10433  0185  00F8               	movwf	??___fldiv
 10434  0186  3080               	movlw	128
 10435  0187  0278               	subwf	??___fldiv,w
 10436  0188  1D03               	skipz
 10437  0189  298C               	goto	u5115
 10438  018A  30FF               	movlw	255
 10439  018B  0225               	subwf	___fldiv@new_exp,w
 10440  018C                     u5115:
 10441  018C  1C03               	skipc
 10442  018D  298F               	goto	u5111
 10443  018E  2990               	goto	u5110
 10444  018F                     u5111:
 10445  018F  299D               	goto	l905
 10446  0190                     u5110:
 10447  0190                     l3774:
 10448  0190  30FF               	movlw	255
 10449  0191  0020               	movlb	0	; select bank0
 10450  0192  00A5               	movwf	___fldiv@new_exp
 10451  0193  3000               	movlw	0
 10452  0194  00A6               	movwf	___fldiv@new_exp+1
 10453  0195  3000               	movlw	0
 10454  0196  00F7               	movwf	___fldiv@b+3
 10455  0197  3000               	movlw	0
 10456  0198  00F6               	movwf	___fldiv@b+2
 10457  0199  3000               	movlw	0
 10458  019A  00F5               	movwf	___fldiv@b+1
 10459  019B  3000               	movlw	0
 10460  019C  00F4               	movwf	___fldiv@b
 10461  019D                     l905:
 10462  019D  0020               	movlb	0	; select bank0
 10463  019E  0826               	movf	___fldiv@new_exp+1,w
 10464  019F  3A80               	xorlw	128
 10465  01A0  00F8               	movwf	??___fldiv
 10466  01A1  3080               	movlw	128
 10467  01A2  0278               	subwf	??___fldiv,w
 10468  01A3  1D03               	skipz
 10469  01A4  29A7               	goto	u5125
 10470  01A5  3001               	movlw	1
 10471  01A6  0225               	subwf	___fldiv@new_exp,w
 10472  01A7                     u5125:
 10473  01A7  1803               	skipnc
 10474  01A8  29AA               	goto	u5121
 10475  01A9  29AB               	goto	u5120
 10476  01AA                     u5121:
 10477  01AA  29B7               	goto	l906
 10478  01AB                     u5120:
 10479  01AB                     l3776:
 10480  01AB  0020               	movlb	0	; select bank0
 10481  01AC  01A5               	clrf	___fldiv@new_exp
 10482  01AD  01A6               	clrf	___fldiv@new_exp+1
 10483  01AE                     l3778:
 10484  01AE  3000               	movlw	0
 10485  01AF  00F7               	movwf	___fldiv@b+3
 10486  01B0  3000               	movlw	0
 10487  01B1  00F6               	movwf	___fldiv@b+2
 10488  01B2  3000               	movlw	0
 10489  01B3  00F5               	movwf	___fldiv@b+1
 10490  01B4  3000               	movlw	0
 10491  01B5  00F4               	movwf	___fldiv@b
 10492  01B6                     l3780:
 10493  01B6  01A4               	clrf	___fldiv@sign
 10494  01B7                     l906:
 10495  01B7  0020               	movlb	0	; select bank0
 10496  01B8  0825               	movf	___fldiv@new_exp,w
 10497  01B9  00F8               	movwf	??___fldiv
 10498  01BA  0878               	movf	??___fldiv,w
 10499  01BB  00AB               	movwf	___fldiv@bexp
 10500  01BC                     l3782:
 10501  01BC  1C2B               	btfss	___fldiv@bexp,0
 10502  01BD  29BF               	goto	u5131
 10503  01BE  29C0               	goto	u5130
 10504  01BF                     u5131:
 10505  01BF  29C2               	goto	l3786
 10506  01C0                     u5130:
 10507  01C0                     l3784:
 10508  01C0  17F6               	bsf	___fldiv@b+2,7
 10509  01C1  29C6               	goto	l908
 10510  01C2                     l3786:
 10511  01C2  307F               	movlw	127
 10512  01C3  00F8               	movwf	??___fldiv
 10513  01C4  0878               	movf	??___fldiv,w
 10514  01C5  05F6               	andwf	___fldiv@b+2,f
 10515  01C6                     l908:
 10516  01C6  362B               	lsrf	___fldiv@bexp,w
 10517  01C7  00F8               	movwf	??___fldiv
 10518  01C8  0878               	movf	??___fldiv,w
 10519  01C9  00F7               	movwf	___fldiv@b+3
 10520  01CA  0824               	movf	___fldiv@sign,w
 10521  01CB  00F8               	movwf	??___fldiv
 10522  01CC  0878               	movf	??___fldiv,w
 10523  01CD  04F7               	iorwf	___fldiv@b+3,f
 10524  01CE  288B               	goto	l3696
 10525  01CF                     l886:
 10526  01CF  0008               	return
 10527  01D0                     __end_of___fldiv:
 10528                           
 10529                           	psect	text25
 10530  0809                     __ptext25:	
 10531 ;; *************** function _lcd_init *****************
 10532 ;; Defined at:
 10533 ;;		line 19 in file "lcd_lib.c"
 10534 ;; Parameters:    Size  Location     Type
 10535 ;;		None
 10536 ;; Auto vars:     Size  Location     Type
 10537 ;;		None
 10538 ;; Return value:  Size  Location     Type
 10539 ;;                  1    wreg      void 
 10540 ;; Registers used:
 10541 ;;		wreg, status,2, status,0, pclath, cstack
 10542 ;; Tracked objects:
 10543 ;;		On entry : 0/0
 10544 ;;		On exit  : 0/0
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;Total ram usage:        2 bytes
 10552 ;; Hardware stack levels used: 1
 10553 ;; Hardware stack levels required when called: 3
 10554 ;; This function calls:
 10555 ;;		_lcd_cmd
 10556 ;; This function is called by:
 10557 ;;		_main
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           
 10562                           ;psect for function _lcd_init
 10563  0809                     _lcd_init:
 10564  0809                     l3838:	
 10565                           ;incstack = 0
 10566                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
 10567                           
 10568                           
 10569                           ;lcd_lib.c: 20: _delay((unsigned long)((400)*(8000000/4000.0)));
 10570  0809  3005               	movlw	5
 10571  080A  00F3               	movwf	??_lcd_init+1
 10572  080B  300F               	movlw	15
 10573  080C  00F2               	movwf	??_lcd_init
 10574  080D  30F1               	movlw	241
 10575  080E                     u5847:
 10576  080E  0B89               	decfsz	9,f
 10577  080F  280E               	goto	u5847
 10578  0810  0BF2               	decfsz	??_lcd_init,f
 10579  0811  280E               	goto	u5847
 10580  0812  0BF3               	decfsz	??_lcd_init+1,f
 10581  0813  280E               	goto	u5847
 10582  0814  0000               	nop
 10583  0815                     l3840:
 10584                           
 10585                           ;lcd_lib.c: 22: lcd_cmd(0x30);
 10586  0815  3030               	movlw	48
 10587  0816  3180  2008  3188   	fcall	_lcd_cmd
 10588  0819                     l3842:
 10589                           
 10590                           ;lcd_lib.c: 23: lcd_cmd(0x34);
 10591  0819  3034               	movlw	52
 10592  081A  3180  2008  3188   	fcall	_lcd_cmd
 10593  081D                     l3844:
 10594                           
 10595                           ;lcd_lib.c: 24: lcd_cmd(0x30);
 10596  081D  3030               	movlw	48
 10597  081E  3180  2008  3188   	fcall	_lcd_cmd
 10598  0821                     l3846:
 10599                           
 10600                           ;lcd_lib.c: 25: _delay((unsigned long)((5)*(8000000/4000.0)));
 10601  0821  300D               	movlw	13
 10602  0822  00F2               	movwf	??_lcd_init
 10603  0823  30FC               	movlw	252
 10604  0824                     u5857:
 10605  0824  0B89               	decfsz	9,f
 10606  0825  2824               	goto	u5857
 10607  0826  0BF2               	decfsz	??_lcd_init,f
 10608  0827  2824               	goto	u5857
 10609                           
 10610                           ;lcd_lib.c: 27: lcd_cmd(0x30);
 10611  0828  3030               	movlw	48
 10612  0829  3180  2008  3188   	fcall	_lcd_cmd
 10613                           
 10614                           ;lcd_lib.c: 28: lcd_cmd(0x34);
 10615  082C  3034               	movlw	52
 10616  082D  3180  2008  3188   	fcall	_lcd_cmd
 10617                           
 10618                           ;lcd_lib.c: 29: lcd_cmd(0x30);
 10619  0830  3030               	movlw	48
 10620  0831  3180  2008  3188   	fcall	_lcd_cmd
 10621  0834                     l3848:
 10622                           
 10623                           ;lcd_lib.c: 30: _delay((unsigned long)((5)*(8000000/4000.0)));
 10624  0834  300D               	movlw	13
 10625  0835  00F2               	movwf	??_lcd_init
 10626  0836  30FC               	movlw	252
 10627  0837                     u5867:
 10628  0837  0B89               	decfsz	9,f
 10629  0838  2837               	goto	u5867
 10630  0839  0BF2               	decfsz	??_lcd_init,f
 10631  083A  2837               	goto	u5867
 10632  083B                     l3850:
 10633                           
 10634                           ;lcd_lib.c: 32: lcd_cmd(0x30);
 10635  083B  3030               	movlw	48
 10636  083C  3180  2008  3188   	fcall	_lcd_cmd
 10637  083F                     l3852:
 10638                           
 10639                           ;lcd_lib.c: 33: lcd_cmd(0x34);
 10640  083F  3034               	movlw	52
 10641  0840  3180  2008  3188   	fcall	_lcd_cmd
 10642  0843                     l3854:
 10643                           
 10644                           ;lcd_lib.c: 34: lcd_cmd(0x30);
 10645  0843  3030               	movlw	48
 10646  0844  3180  2008  3188   	fcall	_lcd_cmd
 10647                           
 10648                           ;lcd_lib.c: 35: _delay((unsigned long)((300)*(8000000/4000000.0)));
 10649  0847  30C8               	movlw	200
 10650  0848                     u5877:
 10651  0848  0B89               	decfsz	9,f
 10652  0849  2848               	goto	u5877
 10653  084A                     l3856:
 10654                           
 10655                           ;lcd_lib.c: 37: lcd_cmd(0x20);
 10656  084A  3020               	movlw	32
 10657  084B  3180  2008  3188   	fcall	_lcd_cmd
 10658  084E                     l3858:
 10659                           
 10660                           ;lcd_lib.c: 38: lcd_cmd(0x24);
 10661  084E  3024               	movlw	36
 10662  084F  3180  2008  3188   	fcall	_lcd_cmd
 10663  0852                     l3860:
 10664                           
 10665                           ;lcd_lib.c: 39: lcd_cmd(0x20);
 10666  0852  3020               	movlw	32
 10667  0853  3180  2008  3188   	fcall	_lcd_cmd
 10668  0856                     l3862:
 10669                           
 10670                           ;lcd_lib.c: 40: _delay((unsigned long)((10)*(8000000/4000000.0)));
 10671  0856  3006               	movlw	6
 10672  0857                     u5887:
 10673  0857  0B89               	decfsz	9,f
 10674  0858  2857               	goto	u5887
 10675  0859  3200               	nop2
 10676                           
 10677                           ;lcd_lib.c: 43: lcd_cmd(0x20);
 10678  085A  3020               	movlw	32
 10679  085B  3180  2008  3188   	fcall	_lcd_cmd
 10680                           
 10681                           ;lcd_lib.c: 44: lcd_cmd(0x24);
 10682  085E  3024               	movlw	36
 10683  085F  3180  2008  3188   	fcall	_lcd_cmd
 10684                           
 10685                           ;lcd_lib.c: 45: lcd_cmd(0x20);
 10686  0862  3020               	movlw	32
 10687  0863  3180  2008  3188   	fcall	_lcd_cmd
 10688  0866                     l3864:
 10689                           
 10690                           ;lcd_lib.c: 47: _delay((unsigned long)((100)*(8000000/4000000.0)));
 10691  0866  3042               	movlw	66
 10692  0867                     u5897:
 10693  0867  0B89               	decfsz	9,f
 10694  0868  2867               	goto	u5897
 10695  0869  3200               	nop2
 10696  086A                     l3866:
 10697                           
 10698                           ;lcd_lib.c: 49: lcd_cmd(0x80);
 10699  086A  3080               	movlw	128
 10700  086B  3180  2008  3188   	fcall	_lcd_cmd
 10701  086E                     l3868:
 10702                           
 10703                           ;lcd_lib.c: 50: lcd_cmd(0x84);
 10704  086E  3084               	movlw	132
 10705  086F  3180  2008  3188   	fcall	_lcd_cmd
 10706  0872                     l3870:
 10707                           
 10708                           ;lcd_lib.c: 51: lcd_cmd(0x80);
 10709  0872  3080               	movlw	128
 10710  0873  3180  2008  3188   	fcall	_lcd_cmd
 10711  0876                     l3872:
 10712                           
 10713                           ;lcd_lib.c: 55: lcd_cmd(0x00);
 10714  0876  3000               	movlw	0
 10715  0877  3180  2008  3188   	fcall	_lcd_cmd
 10716  087A                     l3874:
 10717                           
 10718                           ;lcd_lib.c: 56: lcd_cmd(0x04);
 10719  087A  3004               	movlw	4
 10720  087B  3180  2008  3188   	fcall	_lcd_cmd
 10721  087E                     l3876:
 10722                           
 10723                           ;lcd_lib.c: 57: lcd_cmd(0x00);
 10724  087E  3000               	movlw	0
 10725  087F  3180  2008  3188   	fcall	_lcd_cmd
 10726  0882                     l3878:
 10727                           
 10728                           ;lcd_lib.c: 59: _delay((unsigned long)((100)*(8000000/4000000.0)));
 10729  0882  3042               	movlw	66
 10730  0883                     u5907:
 10731  0883  0B89               	decfsz	9,f
 10732  0884  2883               	goto	u5907
 10733  0885  3200               	nop2
 10734                           
 10735                           ;lcd_lib.c: 61: lcd_cmd(0xC0);
 10736  0886  30C0               	movlw	192
 10737  0887  3180  2008  3188   	fcall	_lcd_cmd
 10738                           
 10739                           ;lcd_lib.c: 62: lcd_cmd(0xC4);
 10740  088A  30C4               	movlw	196
 10741  088B  3180  2008  3188   	fcall	_lcd_cmd
 10742                           
 10743                           ;lcd_lib.c: 63: lcd_cmd(0xC0);
 10744  088E  30C0               	movlw	192
 10745  088F  3180  2008  3188   	fcall	_lcd_cmd
 10746                           
 10747                           ;lcd_lib.c: 67: lcd_cmd(0x00);
 10748  0892  3000               	movlw	0
 10749  0893  3180  2008  3188   	fcall	_lcd_cmd
 10750                           
 10751                           ;lcd_lib.c: 68: lcd_cmd(0x04);
 10752  0896  3004               	movlw	4
 10753  0897  3180  2008  3188   	fcall	_lcd_cmd
 10754                           
 10755                           ;lcd_lib.c: 69: lcd_cmd(0x00);
 10756  089A  3000               	movlw	0
 10757  089B  3180  2008  3188   	fcall	_lcd_cmd
 10758  089E                     l3880:
 10759                           
 10760                           ;lcd_lib.c: 71: _delay((unsigned long)((100)*(8000000/4000000.0)));
 10761  089E  3042               	movlw	66
 10762  089F                     u5917:
 10763  089F  0B89               	decfsz	9,f
 10764  08A0  289F               	goto	u5917
 10765  08A1  3200               	nop2
 10766  08A2                     l3882:
 10767                           
 10768                           ;lcd_lib.c: 73: lcd_cmd(0x10);
 10769  08A2  3010               	movlw	16
 10770  08A3  3180  2008  3188   	fcall	_lcd_cmd
 10771  08A6                     l3884:
 10772                           
 10773                           ;lcd_lib.c: 74: lcd_cmd(0x14);
 10774  08A6  3014               	movlw	20
 10775  08A7  3180  2008  3188   	fcall	_lcd_cmd
 10776  08AA                     l3886:
 10777                           
 10778                           ;lcd_lib.c: 75: lcd_cmd(0x10);
 10779  08AA  3010               	movlw	16
 10780  08AB  3180  2008  3188   	fcall	_lcd_cmd
 10781                           
 10782                           ;lcd_lib.c: 77: _delay((unsigned long)((5)*(8000000/4000.0)));
 10783  08AE  300D               	movlw	13
 10784  08AF  00F2               	movwf	??_lcd_init
 10785  08B0  30FC               	movlw	252
 10786  08B1                     u5927:
 10787  08B1  0B89               	decfsz	9,f
 10788  08B2  28B1               	goto	u5927
 10789  08B3  0BF2               	decfsz	??_lcd_init,f
 10790  08B4  28B1               	goto	u5927
 10791  08B5                     l3888:
 10792                           
 10793                           ;lcd_lib.c: 80: lcd_cmd(0x00);
 10794  08B5  3000               	movlw	0
 10795  08B6  3180  2008  3188   	fcall	_lcd_cmd
 10796  08B9                     l3890:
 10797                           
 10798                           ;lcd_lib.c: 81: lcd_cmd(0x04);
 10799  08B9  3004               	movlw	4
 10800  08BA  3180  2008  3188   	fcall	_lcd_cmd
 10801  08BD                     l3892:
 10802                           
 10803                           ;lcd_lib.c: 82: lcd_cmd(0x00);
 10804  08BD  3000               	movlw	0
 10805  08BE  3180  2008  3188   	fcall	_lcd_cmd
 10806  08C1                     l3894:
 10807                           
 10808                           ;lcd_lib.c: 84: _delay((unsigned long)((100)*(8000000/4000000.0)));
 10809  08C1  3042               	movlw	66
 10810  08C2                     u5937:
 10811  08C2  0B89               	decfsz	9,f
 10812  08C3  28C2               	goto	u5937
 10813  08C4  3200               	nop2
 10814                           
 10815                           ;lcd_lib.c: 86: lcd_cmd(0x60);
 10816  08C5  3060               	movlw	96
 10817  08C6  3180  2008  3188   	fcall	_lcd_cmd
 10818                           
 10819                           ;lcd_lib.c: 87: lcd_cmd(0x64);
 10820  08C9  3064               	movlw	100
 10821  08CA  3180  2008  3188   	fcall	_lcd_cmd
 10822                           
 10823                           ;lcd_lib.c: 88: lcd_cmd(0x60);
 10824  08CD  3060               	movlw	96
 10825  08CE  3180  2008  3188   	fcall	_lcd_cmd
 10826                           
 10827                           ;lcd_lib.c: 92: lcd_cmd(0x00);
 10828  08D1  3000               	movlw	0
 10829  08D2  3180  2008  3188   	fcall	_lcd_cmd
 10830                           
 10831                           ;lcd_lib.c: 93: lcd_cmd(0x04);
 10832  08D5  3004               	movlw	4
 10833  08D6  3180  2008  3188   	fcall	_lcd_cmd
 10834                           
 10835                           ;lcd_lib.c: 94: lcd_cmd(0x00);
 10836  08D9  3000               	movlw	0
 10837  08DA  3180  2008  3188   	fcall	_lcd_cmd
 10838  08DD                     l3896:
 10839                           
 10840                           ;lcd_lib.c: 96: _delay((unsigned long)((100)*(8000000/4000000.0)));
 10841  08DD  3042               	movlw	66
 10842  08DE                     u5947:
 10843  08DE  0B89               	decfsz	9,f
 10844  08DF  28DE               	goto	u5947
 10845  08E0  3200               	nop2
 10846  08E1                     l3898:
 10847                           
 10848                           ;lcd_lib.c: 98: lcd_cmd(0x20);
 10849  08E1  3020               	movlw	32
 10850  08E2  3180  2008  3188   	fcall	_lcd_cmd
 10851  08E5                     l3900:
 10852                           
 10853                           ;lcd_lib.c: 99: lcd_cmd(0x24);
 10854  08E5  3024               	movlw	36
 10855  08E6  3180  2008  3188   	fcall	_lcd_cmd
 10856  08E9                     l3902:
 10857                           
 10858                           ;lcd_lib.c: 100: lcd_cmd(0x20);
 10859  08E9  3020               	movlw	32
 10860  08EA  3180  2008  3188   	fcall	_lcd_cmd
 10861                           
 10862                           ;lcd_lib.c: 102: _delay((unsigned long)((3)*(8000000/4000.0)));
 10863  08ED  3008               	movlw	8
 10864  08EE  00F2               	movwf	??_lcd_init
 10865  08EF  30CA               	movlw	202
 10866  08F0                     u5957:
 10867  08F0  0B89               	decfsz	9,f
 10868  08F1  28F0               	goto	u5957
 10869  08F2  0BF2               	decfsz	??_lcd_init,f
 10870  08F3  28F0               	goto	u5957
 10871  08F4                     l216:
 10872  08F4  0008               	return
 10873  08F5                     __end_of_lcd_init:
 10874                           
 10875                           	psect	text26
 10876  1E6E                     __ptext26:	
 10877 ;; *************** function _lcd_clear *****************
 10878 ;; Defined at:
 10879 ;;		line 111 in file "lcd_lib.c"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;		None
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;  col             1    7[BANK0 ] unsigned char 
 10884 ;;  row             1    6[BANK0 ] unsigned char 
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  1    wreg      void 
 10887 ;; Registers used:
 10888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10895 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10896 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10897 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;Total ram usage:        3 bytes
 10899 ;; Hardware stack levels used: 1
 10900 ;; Hardware stack levels required when called: 5
 10901 ;; This function calls:
 10902 ;;		_lcd_print
 10903 ;;		_lcd_set_cursor
 10904 ;; This function is called by:
 10905 ;;		_main
 10906 ;; This function uses a non-reentrant model
 10907 ;;
 10908                           
 10909                           
 10910                           ;psect for function _lcd_clear
 10911  1E6E                     _lcd_clear:
 10912  1E6E                     l4238:	
 10913                           ;incstack = 0
 10914                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10915                           
 10916                           
 10917                           ;lcd_lib.c: 112: for(uint8_t row = 0; row < 2; row++){
 10918  1E6E  0020               	movlb	0	; select bank0
 10919  1E6F  01A6               	clrf	lcd_clear@row
 10920  1E70                     l4244:
 10921                           
 10922                           ;lcd_lib.c: 113: for(uint8_t col = 0; col < 16; col++){
 10923  1E70  01A7               	clrf	lcd_clear@col
 10924  1E71                     l4250:
 10925                           
 10926                           ;lcd_lib.c: 114: lcd_set_cursor(col, row);
 10927  1E71  0826               	movf	lcd_clear@row,w
 10928  1E72  00FC               	movwf	??_lcd_clear
 10929  1E73  087C               	movf	??_lcd_clear,w
 10930  1E74  00F8               	movwf	lcd_set_cursor@row
 10931  1E75  0827               	movf	lcd_clear@col,w
 10932  1E76  319E  2696  319E   	fcall	_lcd_set_cursor
 10933  1E79                     l4252:
 10934                           
 10935                           ;lcd_lib.c: 115: lcd_print(" ");
 10936  1E79  30A3               	movlw	low (STR_3| (0+32768))
 10937  1E7A  00F8               	movwf	lcd_print@str
 10938  1E7B  30A0               	movlw	high (STR_3| (0+32768))
 10939  1E7C  00F9               	movwf	lcd_print@str+1
 10940  1E7D  319D  25EF  319E   	fcall	_lcd_print
 10941  1E80                     l4254:
 10942  1E80  3001               	movlw	1
 10943  1E81  00FC               	movwf	??_lcd_clear
 10944  1E82  087C               	movf	??_lcd_clear,w
 10945  1E83  0020               	movlb	0	; select bank0
 10946  1E84  07A7               	addwf	lcd_clear@col,f
 10947  1E85                     l4256:
 10948  1E85  3010               	movlw	16
 10949  1E86  0227               	subwf	lcd_clear@col,w
 10950  1E87  1C03               	skipc
 10951  1E88  2E8A               	goto	u5771
 10952  1E89  2E8B               	goto	u5770
 10953  1E8A                     u5771:
 10954  1E8A  2E71               	goto	l4250
 10955  1E8B                     u5770:
 10956  1E8B                     l4258:
 10957  1E8B  3001               	movlw	1
 10958  1E8C  00FC               	movwf	??_lcd_clear
 10959  1E8D  087C               	movf	??_lcd_clear,w
 10960  1E8E  07A6               	addwf	lcd_clear@row,f
 10961  1E8F                     l4260:
 10962  1E8F  3002               	movlw	2
 10963  1E90  0226               	subwf	lcd_clear@row,w
 10964  1E91  1C03               	skipc
 10965  1E92  2E94               	goto	u5781
 10966  1E93  2E95               	goto	u5780
 10967  1E94                     u5781:
 10968  1E94  2E70               	goto	l4244
 10969  1E95                     u5780:
 10970  1E95                     l226:
 10971  1E95  0008               	return
 10972  1E96                     __end_of_lcd_clear:
 10973                           
 10974                           	psect	text27
 10975  1E96                     __ptext27:	
 10976 ;; *************** function _lcd_set_cursor *****************
 10977 ;; Defined at:
 10978 ;;		line 120 in file "lcd_lib.c"
 10979 ;; Parameters:    Size  Location     Type
 10980 ;;  col             1    wreg     unsigned char 
 10981 ;;  row             1    8[COMMON] unsigned char 
 10982 ;; Auto vars:     Size  Location     Type
 10983 ;;  col             1    4[BANK0 ] unsigned char 
 10984 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
 10985 ;;  cmd             1    5[BANK0 ] unsigned char 
 10986 ;; Return value:  Size  Location     Type
 10987 ;;                  1    wreg      void 
 10988 ;; Registers used:
 10989 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10990 ;; Tracked objects:
 10991 ;;		On entry : 0/0
 10992 ;;		On exit  : 0/0
 10993 ;;		Unchanged: 0/0
 10994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10995 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10996 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10998 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10999 ;;Total ram usage:        8 bytes
 11000 ;; Hardware stack levels used: 1
 11001 ;; Hardware stack levels required when called: 4
 11002 ;; This function calls:
 11003 ;;		_command
 11004 ;; This function is called by:
 11005 ;;		_main
 11006 ;;		_lcd_clear
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           
 11011                           ;psect for function _lcd_set_cursor
 11012  1E96                     _lcd_set_cursor:
 11013                           
 11014                           ;incstack = 0
 11015                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11016                           ;lcd_set_cursor@col stored from wreg
 11017  1E96  0020               	movlb	0	; select bank0
 11018  1E97  00A4               	movwf	lcd_set_cursor@col
 11019  1E98                     l3238:
 11020                           
 11021                           ;lcd_lib.c: 121: uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 11022  1E98  0021               	movlb	1	; select bank1
 11023  1E99  0866               	movf	(lcd_set_cursor@F2624+3)^(0+128),w
 11024  1E9A  0020               	movlb	0	; select bank0
 11025  1E9B  00A3               	movwf	lcd_set_cursor@row_offsets+3
 11026  1E9C  0021               	movlb	1	; select bank1
 11027  1E9D  0865               	movf	(lcd_set_cursor@F2624+2)^(0+128),w
 11028  1E9E  0020               	movlb	0	; select bank0
 11029  1E9F  00A2               	movwf	lcd_set_cursor@row_offsets+2
 11030  1EA0  0021               	movlb	1	; select bank1
 11031  1EA1  0864               	movf	(lcd_set_cursor@F2624+1)^(0+128),w
 11032  1EA2  0020               	movlb	0	; select bank0
 11033  1EA3  00A1               	movwf	lcd_set_cursor@row_offsets+1
 11034  1EA4  0021               	movlb	1	; select bank1
 11035  1EA5  0863               	movf	lcd_set_cursor@F2624^(0+128),w
 11036  1EA6  0020               	movlb	0	; select bank0
 11037  1EA7  00A0               	movwf	lcd_set_cursor@row_offsets
 11038                           
 11039                           ;lcd_lib.c: 122: if(row > 2){
 11040  1EA8  3003               	movlw	3
 11041  1EA9  0278               	subwf	lcd_set_cursor@row,w
 11042  1EAA  1C03               	skipc
 11043  1EAB  2EAD               	goto	u4021
 11044  1EAC  2EAE               	goto	u4020
 11045  1EAD                     u4021:
 11046  1EAD  2EB0               	goto	l3242
 11047  1EAE                     u4020:
 11048  1EAE                     l3240:
 11049                           
 11050                           ;lcd_lib.c: 123: row = 2 - 1;
 11051  1EAE  01F8               	clrf	lcd_set_cursor@row
 11052  1EAF  0AF8               	incf	lcd_set_cursor@row,f
 11053  1EB0                     l3242:
 11054                           
 11055                           ;lcd_lib.c: 124: };lcd_lib.c: 125: uint8_t cmd = 0x80 | (col + row_offsets[row]);
 11056  1EB0  0878               	movf	lcd_set_cursor@row,w
 11057  1EB1  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
 11058  1EB2  0086               	movwf	6
 11059  1EB3  0187               	clrf	7
 11060  1EB4  0801               	movf	1,w
 11061  1EB5  0724               	addwf	lcd_set_cursor@col,w
 11062  1EB6  3880               	iorlw	128
 11063  1EB7  00F9               	movwf	??_lcd_set_cursor
 11064  1EB8  0879               	movf	??_lcd_set_cursor,w
 11065  1EB9  00A5               	movwf	lcd_set_cursor@cmd
 11066  1EBA                     l3244:
 11067                           
 11068                           ;lcd_lib.c: 126: command(cmd, 0);
 11069  1EBA  01F2               	clrf	command@mode
 11070  1EBB  0825               	movf	lcd_set_cursor@cmd,w
 11071  1EBC  319E  26F4  319E   	fcall	_command
 11072  1EBF                     l232:
 11073  1EBF  0008               	return
 11074  1EC0                     __end_of_lcd_set_cursor:
 11075                           
 11076                           	psect	text28
 11077  1DEF                     __ptext28:	
 11078 ;; *************** function _lcd_print *****************
 11079 ;; Defined at:
 11080 ;;		line 129 in file "lcd_lib.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;  str             2    8[COMMON] PTR unsigned char 
 11083 ;;		 -> STR_3(2), str(16), STR_1(11), 
 11084 ;; Auto vars:     Size  Location     Type
 11085 ;;  cmd             1   11[COMMON] unsigned char 
 11086 ;; Return value:  Size  Location     Type
 11087 ;;                  1    wreg      void 
 11088 ;; Registers used:
 11089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11090 ;; Tracked objects:
 11091 ;;		On entry : 0/0
 11092 ;;		On exit  : 0/0
 11093 ;;		Unchanged: 0/0
 11094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11097 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11098 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11099 ;;Total ram usage:        4 bytes
 11100 ;; Hardware stack levels used: 1
 11101 ;; Hardware stack levels required when called: 4
 11102 ;; This function calls:
 11103 ;;		_command
 11104 ;; This function is called by:
 11105 ;;		_main
 11106 ;;		_lcd_clear
 11107 ;; This function uses a non-reentrant model
 11108 ;;
 11109                           
 11110                           
 11111                           ;psect for function _lcd_print
 11112  1DEF                     _lcd_print:
 11113  1DEF                     l3246:	
 11114                           ;incstack = 0
 11115                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11116                           
 11117                           
 11118                           ;lcd_lib.c: 130: while (*str) {
 11119  1DEF  2E02               	goto	l3254
 11120  1DF0                     l3248:
 11121                           
 11122                           ;lcd_lib.c: 131: uint8_t cmd = *str++;
 11123  1DF0  0878               	movf	lcd_print@str,w
 11124  1DF1  0084               	movwf	4
 11125  1DF2  0879               	movf	lcd_print@str+1,w
 11126  1DF3  0085               	movwf	5
 11127  1DF4  0800               	movf	0,w	;code access
 11128  1DF5  00FA               	movwf	??_lcd_print
 11129  1DF6  087A               	movf	??_lcd_print,w
 11130  1DF7  00FB               	movwf	lcd_print@cmd
 11131  1DF8                     l3250:
 11132  1DF8  3001               	movlw	1
 11133  1DF9  07F8               	addwf	lcd_print@str,f
 11134  1DFA  3000               	movlw	0
 11135  1DFB  3DF9               	addwfc	lcd_print@str+1,f
 11136  1DFC                     l3252:
 11137                           
 11138                           ;lcd_lib.c: 132: command(cmd, 0b00000001);
 11139  1DFC  01F2               	clrf	command@mode
 11140  1DFD  0AF2               	incf	command@mode,f
 11141  1DFE  087B               	movf	lcd_print@cmd,w
 11142  1DFF  319E  26F4  319D   	fcall	_command
 11143  1E02                     l3254:
 11144  1E02  0878               	movf	lcd_print@str,w
 11145  1E03  0084               	movwf	4
 11146  1E04  0879               	movf	lcd_print@str+1,w
 11147  1E05  0085               	movwf	5
 11148  1E06  0012               	moviw fsr0++
 11149  1E07  1D03               	btfss	3,2
 11150  1E08  2E0A               	goto	u4031
 11151  1E09  2E0B               	goto	u4030
 11152  1E0A                     u4031:
 11153  1E0A  2DF0               	goto	l3248
 11154  1E0B                     u4030:
 11155  1E0B                     l238:
 11156  1E0B  0008               	return
 11157  1E0C                     __end_of_lcd_print:
 11158                           
 11159                           	psect	text29
 11160  1EF4                     __ptext29:	
 11161 ;; *************** function _command *****************
 11162 ;; Defined at:
 11163 ;;		line 136 in file "lcd_lib.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;  val             1    wreg     unsigned char 
 11166 ;;  mode            1    2[COMMON] unsigned char 
 11167 ;; Auto vars:     Size  Location     Type
 11168 ;;  val             1    5[COMMON] unsigned char 
 11169 ;;  lownib          1    7[COMMON] unsigned char 
 11170 ;;  highnib         1    6[COMMON] unsigned char 
 11171 ;; Return value:  Size  Location     Type
 11172 ;;                  1    wreg      void 
 11173 ;; Registers used:
 11174 ;;		wreg, status,2, status,0, pclath, cstack
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 0/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11180 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11181 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11183 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11184 ;;Total ram usage:        6 bytes
 11185 ;; Hardware stack levels used: 1
 11186 ;; Hardware stack levels required when called: 3
 11187 ;; This function calls:
 11188 ;;		_lcd_cmd
 11189 ;; This function is called by:
 11190 ;;		_lcd_set_cursor
 11191 ;;		_lcd_print
 11192 ;; This function uses a non-reentrant model
 11193 ;;
 11194                           
 11195                           
 11196                           ;psect for function _command
 11197  1EF4                     _command:
 11198                           
 11199                           ;incstack = 0
 11200                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
 11201                           ;command@val stored from wreg
 11202  1EF4  00F5               	movwf	command@val
 11203  1EF5                     l2738:
 11204                           
 11205                           ;lcd_lib.c: 137: uint8_t highnib = (val & 0xf0) | _backlightval | mode;
 11206  1EF5  0875               	movf	command@val,w
 11207  1EF6  39F0               	andlw	240
 11208  1EF7  0020               	movlb	0	; select bank0
 11209  1EF8  046F               	iorwf	__backlightval,w
 11210  1EF9  0472               	iorwf	command@mode,w
 11211  1EFA  00F3               	movwf	??_command
 11212  1EFB  0873               	movf	??_command,w
 11213  1EFC  00F6               	movwf	command@highnib
 11214                           
 11215                           ;lcd_lib.c: 138: uint8_t lownib = ((val << 4) & 0xf0) | _backlightval | mode;
 11216  1EFD  0875               	movf	command@val,w
 11217  1EFE  00F3               	movwf	??_command
 11218  1EFF  3003               	movlw	3
 11219  1F00                     u3005:
 11220  1F00  35F3               	lslf	??_command,f
 11221  1F01  3EFF               	addlw	-1
 11222  1F02  1D03               	skipz
 11223  1F03  2F00               	goto	u3005
 11224  1F04  3573               	lslf	??_command,w
 11225  1F05  39F0               	andlw	240
 11226  1F06  046F               	iorwf	__backlightval,w
 11227  1F07  0472               	iorwf	command@mode,w
 11228  1F08  00F4               	movwf	??_command+1
 11229  1F09  0874               	movf	??_command+1,w
 11230  1F0A  00F7               	movwf	command@lownib
 11231  1F0B                     l2740:
 11232                           
 11233                           ;lcd_lib.c: 140: lcd_cmd(highnib);
 11234  1F0B  0876               	movf	command@highnib,w
 11235  1F0C  3180  2008  319E   	fcall	_lcd_cmd
 11236  1F0F                     l2742:
 11237                           
 11238                           ;lcd_lib.c: 141: lcd_cmd(highnib | 0b00000100);
 11239  1F0F  0876               	movf	command@highnib,w
 11240  1F10  3804               	iorlw	4
 11241  1F11  3180  2008  319E   	fcall	_lcd_cmd
 11242  1F14                     l2744:
 11243                           
 11244                           ;lcd_lib.c: 142: lcd_cmd(highnib & ~0b00000100);
 11245  1F14  0876               	movf	command@highnib,w
 11246  1F15  39FB               	andlw	251
 11247  1F16  3180  2008  319E   	fcall	_lcd_cmd
 11248  1F19                     l2746:
 11249                           
 11250                           ;lcd_lib.c: 144: _delay((unsigned long)((100)*(8000000/4000000.0)));
 11251  1F19  3042               	movlw	66
 11252  1F1A                     u5967:
 11253  1F1A  0B89               	decfsz	9,f
 11254  1F1B  2F1A               	goto	u5967
 11255  1F1C  3200               	nop2
 11256  1F1D                     l2748:
 11257                           
 11258                           ;lcd_lib.c: 146: lcd_cmd(lownib);
 11259  1F1D  0877               	movf	command@lownib,w
 11260  1F1E  3180  2008  319E   	fcall	_lcd_cmd
 11261  1F21                     l2750:
 11262                           
 11263                           ;lcd_lib.c: 147: lcd_cmd(lownib | 0b00000100);
 11264  1F21  0877               	movf	command@lownib,w
 11265  1F22  3804               	iorlw	4
 11266  1F23  3180  2008  319E   	fcall	_lcd_cmd
 11267  1F26                     l2752:
 11268                           
 11269                           ;lcd_lib.c: 148: lcd_cmd(lownib & ~0b00000100);
 11270  1F26  0877               	movf	command@lownib,w
 11271  1F27  39FB               	andlw	251
 11272  1F28  3180  2008  319E   	fcall	_lcd_cmd
 11273  1F2B                     l241:
 11274  1F2B  0008               	return
 11275  1F2C                     __end_of_command:
 11276                           
 11277                           	psect	text30
 11278  1DBD                     __ptext30:	
 11279 ;; *************** function _lcd_backlight *****************
 11280 ;; Defined at:
 11281 ;;		line 105 in file "lcd_lib.c"
 11282 ;; Parameters:    Size  Location     Type
 11283 ;;		None
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;		None
 11286 ;; Return value:  Size  Location     Type
 11287 ;;                  1    wreg      void 
 11288 ;; Registers used:
 11289 ;;		wreg, status,2, status,0, pclath, cstack
 11290 ;; Tracked objects:
 11291 ;;		On entry : 0/0
 11292 ;;		On exit  : 0/0
 11293 ;;		Unchanged: 0/0
 11294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11297 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11298 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11299 ;;Total ram usage:        1 bytes
 11300 ;; Hardware stack levels used: 1
 11301 ;; Hardware stack levels required when called: 3
 11302 ;; This function calls:
 11303 ;;		_lcd_cmd
 11304 ;; This function is called by:
 11305 ;;		_main
 11306 ;; This function uses a non-reentrant model
 11307 ;;
 11308                           
 11309                           
 11310                           ;psect for function _lcd_backlight
 11311  1DBD                     _lcd_backlight:
 11312  1DBD                     l3904:	
 11313                           ;incstack = 0
 11314                           ; Regs used in _lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
 11315                           
 11316                           
 11317                           ;lcd_lib.c: 106: lcd_cmd(0x08);
 11318  1DBD  3008               	movlw	8
 11319  1DBE  3180  2008  319D   	fcall	_lcd_cmd
 11320  1DC1                     l3906:
 11321                           
 11322                           ;lcd_lib.c: 107: _backlightval = 0x08;
 11323  1DC1  3008               	movlw	8
 11324  1DC2  00F2               	movwf	??_lcd_backlight
 11325  1DC3  0872               	movf	??_lcd_backlight,w
 11326  1DC4  0020               	movlb	0	; select bank0
 11327  1DC5  00EF               	movwf	__backlightval
 11328  1DC6                     l3908:
 11329                           
 11330                           ;lcd_lib.c: 108: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11331  1DC6  3006               	movlw	6
 11332  1DC7                     u5977:
 11333  1DC7  0B89               	decfsz	9,f
 11334  1DC8  2DC7               	goto	u5977
 11335  1DC9  3200               	nop2
 11336  1DCA                     l219:
 11337  1DCA  0008               	return
 11338  1DCB                     __end_of_lcd_backlight:
 11339                           
 11340                           	psect	text31
 11341  0008                     __ptext31:	
 11342 ;; *************** function _lcd_cmd *****************
 11343 ;; Defined at:
 11344 ;;		line 11 in file "lcd_lib.c"
 11345 ;; Parameters:    Size  Location     Type
 11346 ;;  cmd             1    wreg     unsigned char 
 11347 ;; Auto vars:     Size  Location     Type
 11348 ;;  cmd             1    1[COMMON] unsigned char 
 11349 ;; Return value:  Size  Location     Type
 11350 ;;                  1    wreg      void 
 11351 ;; Registers used:
 11352 ;;		wreg, status,2, status,0, pclath, cstack
 11353 ;; Tracked objects:
 11354 ;;		On entry : 0/0
 11355 ;;		On exit  : 0/0
 11356 ;;		Unchanged: 0/0
 11357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;Total ram usage:        1 bytes
 11363 ;; Hardware stack levels used: 1
 11364 ;; Hardware stack levels required when called: 2
 11365 ;; This function calls:
 11366 ;;		_i2c_start
 11367 ;;		_i2c_stop
 11368 ;;		_i2c_write
 11369 ;; This function is called by:
 11370 ;;		_lcd_init
 11371 ;;		_lcd_backlight
 11372 ;;		_command
 11373 ;; This function uses a non-reentrant model
 11374 ;;
 11375                           
 11376                           
 11377                           ;psect for function _lcd_cmd
 11378  0008                     _lcd_cmd:
 11379                           
 11380                           ;incstack = 0
 11381                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
 11382                           ;lcd_cmd@cmd stored from wreg
 11383  0008  00F1               	movwf	lcd_cmd@cmd
 11384  0009                     l2720:
 11385                           
 11386                           ;lcd_lib.c: 12: i2c_start();
 11387  0009  319D  259C  3180   	fcall	_i2c_start
 11388                           
 11389                           ;lcd_lib.c: 13: i2c_write(0x27 << 1);
 11390  000C  304E               	movlw	78
 11391  000D  3190  2000  3180   	fcall	_i2c_write
 11392                           
 11393                           ;lcd_lib.c: 14: i2c_write(cmd);
 11394  0010  0871               	movf	lcd_cmd@cmd,w
 11395  0011  3190  2000  3180   	fcall	_i2c_write
 11396  0014                     l2722:
 11397                           
 11398                           ;lcd_lib.c: 15: i2c_stop();
 11399  0014  3188  2002  3180   	fcall	_i2c_stop
 11400                           
 11401                           ;lcd_lib.c: 16: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11402  0017  3006               	movlw	6
 11403  0018                     u5987:
 11404  0018  0B89               	decfsz	9,f
 11405  0019  2818               	goto	u5987
 11406  001A  3200               	nop2
 11407  001B                     l213:
 11408  001B  0008               	return
 11409  001C                     __end_of_lcd_cmd:
 11410                           
 11411                           	psect	text32
 11412  1000                     __ptext32:	
 11413 ;; *************** function _i2c_write *****************
 11414 ;; Defined at:
 11415 ;;		line 25 in file "i2c.c"
 11416 ;; Parameters:    Size  Location     Type
 11417 ;;  data            1    wreg     unsigned char 
 11418 ;; Auto vars:     Size  Location     Type
 11419 ;;  data            1    0[COMMON] unsigned char 
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  1    wreg      void 
 11422 ;; Registers used:
 11423 ;;		wreg, status,2, status,0, pclath, cstack
 11424 ;; Tracked objects:
 11425 ;;		On entry : 0/0
 11426 ;;		On exit  : 0/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11433 ;;Total ram usage:        1 bytes
 11434 ;; Hardware stack levels used: 1
 11435 ;; Hardware stack levels required when called: 1
 11436 ;; This function calls:
 11437 ;;		_i2c_wait
 11438 ;; This function is called by:
 11439 ;;		_lcd_cmd
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           
 11443                           
 11444                           ;psect for function _i2c_write
 11445  1000                     _i2c_write:
 11446                           
 11447                           ;incstack = 0
 11448                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
 11449                           ;i2c_write@data stored from wreg
 11450  1000  00F0               	movwf	i2c_write@data
 11451  1001                     l2716:
 11452                           
 11453                           ;i2c.c: 26: SSPBUF = data;
 11454  1001  0870               	movf	i2c_write@data,w
 11455  1002  0024               	movlb	4	; select bank4
 11456  1003  0091               	movwf	17	;volatile
 11457  1004                     l182:	
 11458                           ;i2c.c: 27: while(SSPSTATbits.BF);
 11459                           
 11460  1004  1814               	btfsc	20,0	;volatile
 11461  1005  2807               	goto	u2951
 11462  1006  2808               	goto	u2950
 11463  1007                     u2951:
 11464  1007  2804               	goto	l182
 11465  1008                     u2950:
 11466  1008                     l185:
 11467  1008  1B16               	btfsc	22,6	;volatile
 11468  1009  280B               	goto	u2961
 11469  100A  280C               	goto	u2960
 11470  100B                     u2961:
 11471  100B  2808               	goto	l185
 11472  100C                     u2960:
 11473  100C                     l2718:
 11474                           
 11475                           ;i2c.c: 29: i2c_wait();
 11476  100C  319D  25B1  3190   	fcall	_i2c_wait
 11477  100F                     l188:
 11478  100F  0008               	return
 11479  1010                     __end_of_i2c_write:
 11480                           
 11481                           	psect	text33
 11482  0802                     __ptext33:	
 11483 ;; *************** function _i2c_stop *****************
 11484 ;; Defined at:
 11485 ;;		line 14 in file "i2c.c"
 11486 ;; Parameters:    Size  Location     Type
 11487 ;;		None
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;		None
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  1    wreg      void 
 11492 ;; Registers used:
 11493 ;;		None
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;Total ram usage:        0 bytes
 11504 ;; Hardware stack levels used: 1
 11505 ;; This function calls:
 11506 ;;		Nothing
 11507 ;; This function is called by:
 11508 ;;		_lcd_cmd
 11509 ;; This function uses a non-reentrant model
 11510 ;;
 11511                           
 11512                           
 11513                           ;psect for function _i2c_stop
 11514  0802                     _i2c_stop:
 11515  0802                     l2714:	
 11516                           ;incstack = 0
 11517                           ; Regs used in _i2c_stop: []
 11518                           
 11519                           
 11520                           ;i2c.c: 15: SSPCON2bits.PEN = 1;
 11521  0802  0024               	movlb	4	; select bank4
 11522  0803  1516               	bsf	22,2	;volatile
 11523  0804                     l170:	
 11524                           ;i2c.c: 16: while(SSPCON2bits.PEN);
 11525                           
 11526  0804  1916               	btfsc	22,2	;volatile
 11527  0805  2807               	goto	u2941
 11528  0806  2808               	goto	u2940
 11529  0807                     u2941:
 11530  0807  2804               	goto	l170
 11531  0808                     u2940:
 11532  0808                     l173:
 11533  0808  0008               	return
 11534  0809                     __end_of_i2c_stop:
 11535                           
 11536                           	psect	text34
 11537  1D9C                     __ptext34:	
 11538 ;; *************** function _i2c_start *****************
 11539 ;; Defined at:
 11540 ;;		line 8 in file "i2c.c"
 11541 ;; Parameters:    Size  Location     Type
 11542 ;;		None
 11543 ;; Auto vars:     Size  Location     Type
 11544 ;;		None
 11545 ;; Return value:  Size  Location     Type
 11546 ;;                  1    wreg      void 
 11547 ;; Registers used:
 11548 ;;		wreg, status,2, status,0, pclath, cstack
 11549 ;; Tracked objects:
 11550 ;;		On entry : 0/0
 11551 ;;		On exit  : 0/0
 11552 ;;		Unchanged: 0/0
 11553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;Total ram usage:        0 bytes
 11559 ;; Hardware stack levels used: 1
 11560 ;; Hardware stack levels required when called: 1
 11561 ;; This function calls:
 11562 ;;		_i2c_wait
 11563 ;; This function is called by:
 11564 ;;		_lcd_cmd
 11565 ;; This function uses a non-reentrant model
 11566 ;;
 11567                           
 11568                           
 11569                           ;psect for function _i2c_start
 11570  1D9C                     _i2c_start:
 11571  1D9C                     l2710:	
 11572                           ;incstack = 0
 11573                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
 11574                           
 11575                           
 11576                           ;i2c.c: 9: i2c_wait();
 11577  1D9C  319D  25B1  319D   	fcall	_i2c_wait
 11578  1D9F                     l2712:
 11579                           
 11580                           ;i2c.c: 10: SSPCON2bits.SEN = 1;
 11581  1D9F  0024               	movlb	4	; select bank4
 11582  1DA0  1416               	bsf	22,0	;volatile
 11583  1DA1                     l164:	
 11584                           ;i2c.c: 11: while(SSPCON2bits.SEN);
 11585                           
 11586  1DA1  1816               	btfsc	22,0	;volatile
 11587  1DA2  2DA4               	goto	u2931
 11588  1DA3  2DA5               	goto	u2930
 11589  1DA4                     u2931:
 11590  1DA4  2DA1               	goto	l164
 11591  1DA5                     u2930:
 11592  1DA5                     l167:
 11593  1DA5  0008               	return
 11594  1DA6                     __end_of_i2c_start:
 11595                           
 11596                           	psect	text35
 11597  1DB1                     __ptext35:	
 11598 ;; *************** function _i2c_wait *****************
 11599 ;; Defined at:
 11600 ;;		line 4 in file "i2c.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;		None
 11603 ;; Auto vars:     Size  Location     Type
 11604 ;;		None
 11605 ;; Return value:  Size  Location     Type
 11606 ;;                  1    wreg      void 
 11607 ;; Registers used:
 11608 ;;		wreg, status,2
 11609 ;; Tracked objects:
 11610 ;;		On entry : 0/0
 11611 ;;		On exit  : 0/0
 11612 ;;		Unchanged: 0/0
 11613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;Total ram usage:        0 bytes
 11619 ;; Hardware stack levels used: 1
 11620 ;; This function calls:
 11621 ;;		Nothing
 11622 ;; This function is called by:
 11623 ;;		_i2c_start
 11624 ;;		_i2c_write
 11625 ;;		_i2c_repeated_start
 11626 ;;		_i2c_read
 11627 ;; This function uses a non-reentrant model
 11628 ;;
 11629                           
 11630                           
 11631                           ;psect for function _i2c_wait
 11632  1DB1                     _i2c_wait:
 11633  1DB1                     l2704:	
 11634                           ;incstack = 0
 11635                           ; Regs used in _i2c_wait: [wreg+status,2]
 11636                           
 11637  1DB1                     l2706:	
 11638                           ;i2c.c: 5: while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
 11639                           
 11640  1DB1  0024               	movlb	4	; select bank4
 11641  1DB2  0816               	movf	22,w	;volatile
 11642  1DB3  391F               	andlw	31
 11643  1DB4  1D03               	btfss	3,2
 11644  1DB5  2DB7               	goto	u2911
 11645  1DB6  2DB8               	goto	u2910
 11646  1DB7                     u2911:
 11647  1DB7  2DB1               	goto	l2706
 11648  1DB8                     u2910:
 11649  1DB8                     l2708:
 11650  1DB8  1914               	btfsc	20,2	;volatile
 11651  1DB9  2DBB               	goto	u2921
 11652  1DBA  2DBC               	goto	u2920
 11653  1DBB                     u2921:
 11654  1DBB  2DB1               	goto	l2706
 11655  1DBC                     u2920:
 11656  1DBC                     l161:
 11657  1DBC  0008               	return
 11658  1DBD                     __end_of_i2c_wait:
 11659                           
 11660                           	psect	text36
 11661  15BD                     __ptext36:	
 11662 ;; *************** function _get_scale_val *****************
 11663 ;; Defined at:
 11664 ;;		line 28 in file "loadcell.c"
 11665 ;; Parameters:    Size  Location     Type
 11666 ;;  n               1    wreg     unsigned char 
 11667 ;; Auto vars:     Size  Location     Type
 11668 ;;  n               1   15[BANK0 ] unsigned char 
 11669 ;;  i               1   20[BANK0 ] unsigned char 
 11670 ;;  j               1   14[BANK0 ] unsigned char 
 11671 ;;  weight_count    4   16[BANK0 ] long 
 11672 ;;  weight_add      4   10[BANK0 ] long 
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  4    6[BANK0 ] long 
 11675 ;; Registers used:
 11676 ;;		wreg, status,2, status,0, pclath, cstack
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11682 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11683 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11685 ;;      Totals:         4      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11686 ;;Total ram usage:       19 bytes
 11687 ;; Hardware stack levels used: 1
 11688 ;; Hardware stack levels required when called: 1
 11689 ;; This function calls:
 11690 ;;		___aldiv
 11691 ;;		_get_CELL_DAT_VAL
 11692 ;;		_set_CELL_CLK_HIGH
 11693 ;;		_set_CELL_CLK_LOW
 11694 ;; This function is called by:
 11695 ;;		_main
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           
 11700                           ;psect for function _get_scale_val
 11701  15BD                     _get_scale_val:
 11702                           
 11703                           ;incstack = 0
 11704                           ; Regs used in _get_scale_val: [wreg+status,2+status,0+pclath+cstack]
 11705                           ;get_scale_val@n stored from wreg
 11706  15BD  0020               	movlb	0	; select bank0
 11707  15BE  00AF               	movwf	get_scale_val@n
 11708  15BF                     l3910:
 11709                           
 11710                           ;loadcell.c: 30: set_CELL_CLK_LOW();
 11711  15BF  319D  257F  3195   	fcall	_set_CELL_CLK_LOW
 11712  15C2                     l3912:
 11713                           
 11714                           ;loadcell.c: 32: long weight_count = 0;
 11715  15C2  3000               	movlw	0
 11716  15C3  0020               	movlb	0	; select bank0
 11717  15C4  00B3               	movwf	get_scale_val@weight_count+3
 11718  15C5  3000               	movlw	0
 11719  15C6  00B2               	movwf	get_scale_val@weight_count+2
 11720  15C7  3000               	movlw	0
 11721  15C8  00B1               	movwf	get_scale_val@weight_count+1
 11722  15C9  3000               	movlw	0
 11723  15CA  00B0               	movwf	get_scale_val@weight_count
 11724  15CB                     l3914:
 11725                           
 11726                           ;loadcell.c: 33: long weight_add = 0;
 11727  15CB  3000               	movlw	0
 11728  15CC  00AD               	movwf	get_scale_val@weight_add+3
 11729  15CD  3000               	movlw	0
 11730  15CE  00AC               	movwf	get_scale_val@weight_add+2
 11731  15CF  3000               	movlw	0
 11732  15D0  00AB               	movwf	get_scale_val@weight_add+1
 11733  15D1  3000               	movlw	0
 11734  15D2  00AA               	movwf	get_scale_val@weight_add
 11735  15D3                     l3916:
 11736                           
 11737                           ;loadcell.c: 34: for (uint8_t j = 0; j < n; j++)
 11738  15D3  01AE               	clrf	get_scale_val@j
 11739  15D4  2E48               	goto	l3966
 11740  15D5                     l3918:
 11741  15D5  319D  257B  3195   	fcall	_get_CELL_DAT_VAL
 11742  15D8  3A00               	xorlw	0
 11743  15D9  1903               	skipnz
 11744  15DA  2DDC               	goto	u5281
 11745  15DB  2DDD               	goto	u5280
 11746  15DC                     u5281:
 11747  15DC  2DD5               	goto	l3918
 11748  15DD                     u5280:
 11749  15DD                     l3920:
 11750  15DD  319D  257B  3195   	fcall	_get_CELL_DAT_VAL
 11751  15E0  3A01               	xorlw	1
 11752  15E1  1903               	skipnz
 11753  15E2  2DE4               	goto	u5291
 11754  15E3  2DE5               	goto	u5290
 11755  15E4                     u5291:
 11756  15E4  2DDD               	goto	l3920
 11757  15E5                     u5290:
 11758  15E5                     l3922:
 11759                           
 11760                           ;loadcell.c: 38: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11761  15E5  3006               	movlw	6
 11762  15E6                     u5997:
 11763  15E6  0B89               	decfsz	9,f
 11764  15E7  2DE6               	goto	u5997
 11765  15E8  3200               	nop2
 11766  15E9                     l3924:
 11767                           
 11768                           ;loadcell.c: 40: uint8_t i;;loadcell.c: 41: for (i = 0; i < 24; i++){
 11769  15E9  0020               	movlb	0	; select bank0
 11770  15EA  01B4               	clrf	get_scale_val@i
 11771  15EB                     l3930:
 11772                           
 11773                           ;loadcell.c: 42: weight_count <<= 1;
 11774  15EB  3001               	movlw	1
 11775  15EC                     u5305:
 11776  15EC  35B0               	lslf	get_scale_val@weight_count,f
 11777  15ED  0DB1               	rlf	get_scale_val@weight_count+1,f
 11778  15EE  0DB2               	rlf	get_scale_val@weight_count+2,f
 11779  15EF  0DB3               	rlf	get_scale_val@weight_count+3,f
 11780  15F0  0B89               	decfsz	9,f
 11781  15F1  2DEC               	goto	u5305
 11782  15F2                     l3932:
 11783                           
 11784                           ;loadcell.c: 43: set_CELL_CLK_HIGH();
 11785  15F2  319D  2574  3195   	fcall	_set_CELL_CLK_HIGH
 11786  15F5                     l3934:
 11787                           
 11788                           ;loadcell.c: 44: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11789  15F5  3006               	movlw	6
 11790  15F6                     u6007:
 11791  15F6  0B89               	decfsz	9,f
 11792  15F7  2DF6               	goto	u6007
 11793  15F8  3200               	nop2
 11794  15F9                     l3936:
 11795                           
 11796                           ;loadcell.c: 45: set_CELL_CLK_LOW();
 11797  15F9  319D  257F  3195   	fcall	_set_CELL_CLK_LOW
 11798  15FC                     l3938:
 11799                           
 11800                           ;loadcell.c: 46: weight_count += get_CELL_DAT_VAL();
 11801  15FC  319D  257B  3195   	fcall	_get_CELL_DAT_VAL
 11802  15FF  00F9               	movwf	??_get_scale_val
 11803  1600  01FA               	clrf	??_get_scale_val+1
 11804  1601  01FB               	clrf	??_get_scale_val+2
 11805  1602  01FC               	clrf	??_get_scale_val+3
 11806  1603  0879               	movf	??_get_scale_val,w
 11807  1604  0020               	movlb	0	; select bank0
 11808  1605  07B0               	addwf	get_scale_val@weight_count,f
 11809  1606  087A               	movf	??_get_scale_val+1,w
 11810  1607  3DB1               	addwfc	get_scale_val@weight_count+1,f
 11811  1608  087B               	movf	??_get_scale_val+2,w
 11812  1609  3DB2               	addwfc	get_scale_val@weight_count+2,f
 11813  160A  087C               	movf	??_get_scale_val+3,w
 11814  160B  3DB3               	addwfc	get_scale_val@weight_count+3,f
 11815  160C                     l3940:
 11816                           
 11817                           ;loadcell.c: 47: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11818  160C  3006               	movlw	6
 11819  160D                     u6017:
 11820  160D  0B89               	decfsz	9,f
 11821  160E  2E0D               	goto	u6017
 11822  160F  3200               	nop2
 11823  1610                     l3942:
 11824  1610  3001               	movlw	1
 11825  1611  00F9               	movwf	??_get_scale_val
 11826  1612  0879               	movf	??_get_scale_val,w
 11827  1613  0020               	movlb	0	; select bank0
 11828  1614  07B4               	addwf	get_scale_val@i,f
 11829  1615                     l3944:
 11830  1615  3018               	movlw	24
 11831  1616  0234               	subwf	get_scale_val@i,w
 11832  1617  1C03               	skipc
 11833  1618  2E1A               	goto	u5311
 11834  1619  2E1B               	goto	u5310
 11835  161A                     u5311:
 11836  161A  2DEB               	goto	l3930
 11837  161B                     u5310:
 11838  161B                     l3946:
 11839                           
 11840                           ;loadcell.c: 48: };loadcell.c: 50: for (i = 0; i < 1; i++){
 11841  161B  01B4               	clrf	get_scale_val@i
 11842  161C                     l3952:
 11843                           
 11844                           ;loadcell.c: 51: set_CELL_CLK_HIGH();
 11845  161C  319D  2574  3195   	fcall	_set_CELL_CLK_HIGH
 11846  161F                     l3954:
 11847                           
 11848                           ;loadcell.c: 52: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11849  161F  3006               	movlw	6
 11850  1620                     u6027:
 11851  1620  0B89               	decfsz	9,f
 11852  1621  2E20               	goto	u6027
 11853  1622  3200               	nop2
 11854                           
 11855                           ;loadcell.c: 53: set_CELL_CLK_LOW();
 11856  1623  319D  257F  3195   	fcall	_set_CELL_CLK_LOW
 11857  1626                     l3956:
 11858                           
 11859                           ;loadcell.c: 54: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11860  1626  3006               	movlw	6
 11861  1627                     u6037:
 11862  1627  0B89               	decfsz	9,f
 11863  1628  2E27               	goto	u6037
 11864  1629  3200               	nop2
 11865  162A                     l3958:
 11866  162A  3001               	movlw	1
 11867  162B  00F9               	movwf	??_get_scale_val
 11868  162C  0879               	movf	??_get_scale_val,w
 11869  162D  0020               	movlb	0	; select bank0
 11870  162E  07B4               	addwf	get_scale_val@i,f
 11871  162F                     l3960:
 11872  162F  0834               	movf	get_scale_val@i,w
 11873  1630  1903               	btfsc	3,2
 11874  1631  2E33               	goto	u5321
 11875  1632  2E34               	goto	u5320
 11876  1633                     u5321:
 11877  1633  2E1C               	goto	l3952
 11878  1634                     u5320:
 11879  1634                     l3962:
 11880                           
 11881                           ;loadcell.c: 55: };loadcell.c: 57: weight_add += weight_count;
 11882  1634  0830               	movf	get_scale_val@weight_count,w
 11883  1635  07AA               	addwf	get_scale_val@weight_add,f
 11884  1636  0831               	movf	get_scale_val@weight_count+1,w
 11885  1637  3DAB               	addwfc	get_scale_val@weight_add+1,f
 11886  1638  0832               	movf	get_scale_val@weight_count+2,w
 11887  1639  3DAC               	addwfc	get_scale_val@weight_add+2,f
 11888  163A  0833               	movf	get_scale_val@weight_count+3,w
 11889  163B  3DAD               	addwfc	get_scale_val@weight_add+3,f
 11890                           
 11891                           ;loadcell.c: 58: weight_count = 0;
 11892  163C  3000               	movlw	0
 11893  163D  00B3               	movwf	get_scale_val@weight_count+3
 11894  163E  3000               	movlw	0
 11895  163F  00B2               	movwf	get_scale_val@weight_count+2
 11896  1640  3000               	movlw	0
 11897  1641  00B1               	movwf	get_scale_val@weight_count+1
 11898  1642  3000               	movlw	0
 11899  1643  00B0               	movwf	get_scale_val@weight_count
 11900  1644                     l3964:
 11901  1644  3001               	movlw	1
 11902  1645  00F9               	movwf	??_get_scale_val
 11903  1646  0879               	movf	??_get_scale_val,w
 11904  1647  07AE               	addwf	get_scale_val@j,f
 11905  1648                     l3966:
 11906  1648  082F               	movf	get_scale_val@n,w
 11907  1649  022E               	subwf	get_scale_val@j,w
 11908  164A  1C03               	skipc
 11909  164B  2E4D               	goto	u5331
 11910  164C  2E4E               	goto	u5330
 11911  164D                     u5331:
 11912  164D  2DD5               	goto	l3918
 11913  164E                     u5330:
 11914  164E                     l3968:
 11915                           
 11916                           ;loadcell.c: 59: };loadcell.c: 60: weight_count = weight_add / n;
 11917  164E  082F               	movf	get_scale_val@n,w
 11918  164F  00F9               	movwf	??_get_scale_val
 11919  1650  01FA               	clrf	??_get_scale_val+1
 11920  1651  01FB               	clrf	??_get_scale_val+2
 11921  1652  01FC               	clrf	??_get_scale_val+3
 11922  1653  087C               	movf	??_get_scale_val+3,w
 11923  1654  00F3               	movwf	___aldiv@divisor+3
 11924  1655  087B               	movf	??_get_scale_val+2,w
 11925  1656  00F2               	movwf	___aldiv@divisor+2
 11926  1657  087A               	movf	??_get_scale_val+1,w
 11927  1658  00F1               	movwf	___aldiv@divisor+1
 11928  1659  0879               	movf	??_get_scale_val,w
 11929  165A  00F0               	movwf	___aldiv@divisor
 11930  165B  082D               	movf	get_scale_val@weight_add+3,w
 11931  165C  00F7               	movwf	___aldiv@dividend+3
 11932  165D  082C               	movf	get_scale_val@weight_add+2,w
 11933  165E  00F6               	movwf	___aldiv@dividend+2
 11934  165F  082B               	movf	get_scale_val@weight_add+1,w
 11935  1660  00F5               	movwf	___aldiv@dividend+1
 11936  1661  082A               	movf	get_scale_val@weight_add,w
 11937  1662  00F4               	movwf	___aldiv@dividend
 11938  1663  3192  226A  3195   	fcall	___aldiv
 11939  1666  0873               	movf	?___aldiv+3,w
 11940  1667  0020               	movlb	0	; select bank0
 11941  1668  00B3               	movwf	get_scale_val@weight_count+3
 11942  1669  0872               	movf	?___aldiv+2,w
 11943  166A  00B2               	movwf	get_scale_val@weight_count+2
 11944  166B  0871               	movf	?___aldiv+1,w
 11945  166C  00B1               	movwf	get_scale_val@weight_count+1
 11946  166D  0870               	movf	?___aldiv,w
 11947  166E  00B0               	movwf	get_scale_val@weight_count
 11948  166F                     l3970:
 11949                           
 11950                           ;loadcell.c: 61: return weight_count;
 11951  166F  0833               	movf	get_scale_val@weight_count+3,w
 11952  1670  00A9               	movwf	?_get_scale_val+3
 11953  1671  0832               	movf	get_scale_val@weight_count+2,w
 11954  1672  00A8               	movwf	?_get_scale_val+2
 11955  1673  0831               	movf	get_scale_val@weight_count+1,w
 11956  1674  00A7               	movwf	?_get_scale_val+1
 11957  1675  0830               	movf	get_scale_val@weight_count,w
 11958  1676  00A6               	movwf	?_get_scale_val
 11959  1677                     l140:
 11960  1677  0008               	return
 11961  1678                     __end_of_get_scale_val:
 11962                           
 11963                           	psect	text37
 11964  1D7F                     __ptext37:	
 11965 ;; *************** function _set_CELL_CLK_LOW *****************
 11966 ;; Defined at:
 11967 ;;		line 7 in file "loadcell.c"
 11968 ;; Parameters:    Size  Location     Type
 11969 ;;		None
 11970 ;; Auto vars:     Size  Location     Type
 11971 ;;		None
 11972 ;; Return value:  Size  Location     Type
 11973 ;;                  1    wreg      void 
 11974 ;; Registers used:
 11975 ;;		wreg, status,2, status,0
 11976 ;; Tracked objects:
 11977 ;;		On entry : 0/0
 11978 ;;		On exit  : 0/0
 11979 ;;		Unchanged: 0/0
 11980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11985 ;;Total ram usage:        1 bytes
 11986 ;; Hardware stack levels used: 1
 11987 ;; This function calls:
 11988 ;;		Nothing
 11989 ;; This function is called by:
 11990 ;;		_get_scale_val
 11991 ;; This function uses a non-reentrant model
 11992 ;;
 11993                           
 11994                           
 11995                           ;psect for function _set_CELL_CLK_LOW
 11996  1D7F                     _set_CELL_CLK_LOW:
 11997  1D7F                     l3256:	
 11998                           ;incstack = 0
 11999                           ; Regs used in _set_CELL_CLK_LOW: [wreg+status,2+status,0]
 12000                           
 12001  1D7F  30FE               	movlw	254
 12002  1D80  00F0               	movwf	??_set_CELL_CLK_LOW
 12003  1D81  0870               	movf	??_set_CELL_CLK_LOW,w
 12004  1D82  0022               	movlb	2	; select bank2
 12005  1D83  058C               	andwf	12,f	;volatile
 12006  1D84                     l110:
 12007  1D84  0008               	return
 12008  1D85                     __end_of_set_CELL_CLK_LOW:
 12009                           
 12010                           	psect	text38
 12011  1D74                     __ptext38:	
 12012 ;; *************** function _set_CELL_CLK_HIGH *****************
 12013 ;; Defined at:
 12014 ;;		line 12 in file "loadcell.c"
 12015 ;; Parameters:    Size  Location     Type
 12016 ;;		None
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;		None
 12019 ;; Return value:  Size  Location     Type
 12020 ;;                  1    wreg      void 
 12021 ;; Registers used:
 12022 ;;		None
 12023 ;; Tracked objects:
 12024 ;;		On entry : 0/0
 12025 ;;		On exit  : 0/0
 12026 ;;		Unchanged: 0/0
 12027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;Total ram usage:        0 bytes
 12033 ;; Hardware stack levels used: 1
 12034 ;; This function calls:
 12035 ;;		Nothing
 12036 ;; This function is called by:
 12037 ;;		_get_scale_val
 12038 ;; This function uses a non-reentrant model
 12039 ;;
 12040                           
 12041                           
 12042                           ;psect for function _set_CELL_CLK_HIGH
 12043  1D74                     _set_CELL_CLK_HIGH:
 12044  1D74                     l3258:	
 12045                           ;incstack = 0
 12046                           ; Regs used in _set_CELL_CLK_HIGH: []
 12047                           
 12048  1D74  0022               	movlb	2	; select bank2
 12049  1D75  140C               	bsf	12,0	;volatile
 12050  1D76                     l113:
 12051  1D76  0008               	return
 12052  1D77                     __end_of_set_CELL_CLK_HIGH:
 12053                           
 12054                           	psect	text39
 12055  1D7B                     __ptext39:	
 12056 ;; *************** function _get_CELL_DAT_VAL *****************
 12057 ;; Defined at:
 12058 ;;		line 15 in file "loadcell.c"
 12059 ;; Parameters:    Size  Location     Type
 12060 ;;		None
 12061 ;; Auto vars:     Size  Location     Type
 12062 ;;		None
 12063 ;; Return value:  Size  Location     Type
 12064 ;;                  1    wreg      unsigned char 
 12065 ;; Registers used:
 12066 ;;		wreg, status,2, status,0
 12067 ;; Tracked objects:
 12068 ;;		On entry : 0/0
 12069 ;;		On exit  : 0/0
 12070 ;;		Unchanged: 0/0
 12071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12076 ;;Total ram usage:        0 bytes
 12077 ;; Hardware stack levels used: 1
 12078 ;; This function calls:
 12079 ;;		Nothing
 12080 ;; This function is called by:
 12081 ;;		_get_scale_val
 12082 ;; This function uses a non-reentrant model
 12083 ;;
 12084                           
 12085                           
 12086                           ;psect for function _get_CELL_DAT_VAL
 12087  1D7B                     _get_CELL_DAT_VAL:
 12088  1D7B                     l3260:	
 12089                           ;incstack = 0
 12090                           ; Regs used in _get_CELL_DAT_VAL: [wreg+status,2+status,0]
 12091                           
 12092  1D7B                     l3266:	
 12093                           ;loadcell.c: 16: if(0x02 == 0x01){ return PORTAbits.RA0; }
 12094                           
 12095  1D7B  0020               	movlb	0	; select bank0
 12096  1D7C  0C0C               	rrf	12,w	;volatile
 12097  1D7D  3901               	andlw	1
 12098  1D7E                     l117:
 12099  1D7E  0008               	return
 12100  1D7F                     __end_of_get_CELL_DAT_VAL:
 12101                           
 12102                           	psect	text40
 12103  126A                     __ptext40:	
 12104 ;; *************** function ___aldiv *****************
 12105 ;; Defined at:
 12106 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;  divisor         4    0[COMMON] long 
 12109 ;;  dividend        4    4[COMMON] long 
 12110 ;; Auto vars:     Size  Location     Type
 12111 ;;  quotient        4    2[BANK0 ] long 
 12112 ;;  sign            1    1[BANK0 ] unsigned char 
 12113 ;;  counter         1    0[BANK0 ] unsigned char 
 12114 ;; Return value:  Size  Location     Type
 12115 ;;                  4    0[COMMON] long 
 12116 ;; Registers used:
 12117 ;;		wreg, status,2, status,0
 12118 ;; Tracked objects:
 12119 ;;		On entry : 0/0
 12120 ;;		On exit  : 0/0
 12121 ;;		Unchanged: 0/0
 12122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12123 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12124 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12126 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12127 ;;Total ram usage:       15 bytes
 12128 ;; Hardware stack levels used: 1
 12129 ;; This function calls:
 12130 ;;		Nothing
 12131 ;; This function is called by:
 12132 ;;		_get_scale_val
 12133 ;; This function uses a non-reentrant model
 12134 ;;
 12135                           
 12136                           
 12137                           ;psect for function ___aldiv
 12138  126A                     ___aldiv:
 12139  126A                     l3510:	
 12140                           ;incstack = 0
 12141                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 12142                           
 12143  126A  0020               	movlb	0	; select bank0
 12144  126B  01A1               	clrf	___aldiv@sign
 12145  126C                     l3512:
 12146  126C  1FF3               	btfss	___aldiv@divisor+3,7
 12147  126D  2A6F               	goto	u4501
 12148  126E  2A70               	goto	u4500
 12149  126F                     u4501:
 12150  126F  2A7D               	goto	l566
 12151  1270                     u4500:
 12152  1270                     l3514:
 12153  1270  09F0               	comf	___aldiv@divisor,f
 12154  1271  09F1               	comf	___aldiv@divisor+1,f
 12155  1272  09F2               	comf	___aldiv@divisor+2,f
 12156  1273  09F3               	comf	___aldiv@divisor+3,f
 12157  1274  0AF0               	incf	___aldiv@divisor,f
 12158  1275  1903               	skipnz
 12159  1276  0AF1               	incf	___aldiv@divisor+1,f
 12160  1277  1903               	skipnz
 12161  1278  0AF2               	incf	___aldiv@divisor+2,f
 12162  1279  1903               	skipnz
 12163  127A  0AF3               	incf	___aldiv@divisor+3,f
 12164  127B  01A1               	clrf	___aldiv@sign
 12165  127C  0AA1               	incf	___aldiv@sign,f
 12166  127D                     l566:
 12167  127D  1FF7               	btfss	___aldiv@dividend+3,7
 12168  127E  2A80               	goto	u4511
 12169  127F  2A81               	goto	u4510
 12170  1280                     u4511:
 12171  1280  2A90               	goto	l3520
 12172  1281                     u4510:
 12173  1281                     l3516:
 12174  1281  09F4               	comf	___aldiv@dividend,f
 12175  1282  09F5               	comf	___aldiv@dividend+1,f
 12176  1283  09F6               	comf	___aldiv@dividend+2,f
 12177  1284  09F7               	comf	___aldiv@dividend+3,f
 12178  1285  0AF4               	incf	___aldiv@dividend,f
 12179  1286  1903               	skipnz
 12180  1287  0AF5               	incf	___aldiv@dividend+1,f
 12181  1288  1903               	skipnz
 12182  1289  0AF6               	incf	___aldiv@dividend+2,f
 12183  128A  1903               	skipnz
 12184  128B  0AF7               	incf	___aldiv@dividend+3,f
 12185  128C                     l3518:
 12186  128C  3001               	movlw	1
 12187  128D  00F8               	movwf	??___aldiv
 12188  128E  0878               	movf	??___aldiv,w
 12189  128F  06A1               	xorwf	___aldiv@sign,f
 12190  1290                     l3520:
 12191  1290  3000               	movlw	0
 12192  1291  00A5               	movwf	___aldiv@quotient+3
 12193  1292  3000               	movlw	0
 12194  1293  00A4               	movwf	___aldiv@quotient+2
 12195  1294  3000               	movlw	0
 12196  1295  00A3               	movwf	___aldiv@quotient+1
 12197  1296  3000               	movlw	0
 12198  1297  00A2               	movwf	___aldiv@quotient
 12199  1298                     l3522:
 12200  1298  0873               	movf	___aldiv@divisor+3,w
 12201  1299  0472               	iorwf	___aldiv@divisor+2,w
 12202  129A  0471               	iorwf	___aldiv@divisor+1,w
 12203  129B  0470               	iorwf	___aldiv@divisor,w
 12204  129C  1903               	skipnz
 12205  129D  2A9F               	goto	u4521
 12206  129E  2AA0               	goto	u4520
 12207  129F                     u4521:
 12208  129F  2AE1               	goto	l3542
 12209  12A0                     u4520:
 12210  12A0                     l3524:
 12211  12A0  01A0               	clrf	___aldiv@counter
 12212  12A1  0AA0               	incf	___aldiv@counter,f
 12213  12A2  2AAE               	goto	l3528
 12214  12A3                     l3526:
 12215  12A3  3001               	movlw	1
 12216  12A4                     u4535:
 12217  12A4  35F0               	lslf	___aldiv@divisor,f
 12218  12A5  0DF1               	rlf	___aldiv@divisor+1,f
 12219  12A6  0DF2               	rlf	___aldiv@divisor+2,f
 12220  12A7  0DF3               	rlf	___aldiv@divisor+3,f
 12221  12A8  0B89               	decfsz	9,f
 12222  12A9  2AA4               	goto	u4535
 12223  12AA  3001               	movlw	1
 12224  12AB  00F8               	movwf	??___aldiv
 12225  12AC  0878               	movf	??___aldiv,w
 12226  12AD  07A0               	addwf	___aldiv@counter,f
 12227  12AE                     l3528:
 12228  12AE  1FF3               	btfss	___aldiv@divisor+3,7
 12229  12AF  2AB1               	goto	u4541
 12230  12B0  2AB2               	goto	u4540
 12231  12B1                     u4541:
 12232  12B1  2AA3               	goto	l3526
 12233  12B2                     u4540:
 12234  12B2                     l3530:
 12235  12B2  3001               	movlw	1
 12236  12B3                     u4555:
 12237  12B3  35A2               	lslf	___aldiv@quotient,f
 12238  12B4  0DA3               	rlf	___aldiv@quotient+1,f
 12239  12B5  0DA4               	rlf	___aldiv@quotient+2,f
 12240  12B6  0DA5               	rlf	___aldiv@quotient+3,f
 12241  12B7  0B89               	decfsz	9,f
 12242  12B8  2AB3               	goto	u4555
 12243  12B9                     l3532:
 12244  12B9  0873               	movf	___aldiv@divisor+3,w
 12245  12BA  0277               	subwf	___aldiv@dividend+3,w
 12246  12BB  1D03               	skipz
 12247  12BC  2AC7               	goto	u4565
 12248  12BD  0872               	movf	___aldiv@divisor+2,w
 12249  12BE  0276               	subwf	___aldiv@dividend+2,w
 12250  12BF  1D03               	skipz
 12251  12C0  2AC7               	goto	u4565
 12252  12C1  0871               	movf	___aldiv@divisor+1,w
 12253  12C2  0275               	subwf	___aldiv@dividend+1,w
 12254  12C3  1D03               	skipz
 12255  12C4  2AC7               	goto	u4565
 12256  12C5  0870               	movf	___aldiv@divisor,w
 12257  12C6  0274               	subwf	___aldiv@dividend,w
 12258  12C7                     u4565:
 12259  12C7  1C03               	skipc
 12260  12C8  2ACA               	goto	u4561
 12261  12C9  2ACB               	goto	u4560
 12262  12CA                     u4561:
 12263  12CA  2AD4               	goto	l3538
 12264  12CB                     u4560:
 12265  12CB                     l3534:
 12266  12CB  0870               	movf	___aldiv@divisor,w
 12267  12CC  02F4               	subwf	___aldiv@dividend,f
 12268  12CD  0871               	movf	___aldiv@divisor+1,w
 12269  12CE  3BF5               	subwfb	___aldiv@dividend+1,f
 12270  12CF  0872               	movf	___aldiv@divisor+2,w
 12271  12D0  3BF6               	subwfb	___aldiv@dividend+2,f
 12272  12D1  0873               	movf	___aldiv@divisor+3,w
 12273  12D2  3BF7               	subwfb	___aldiv@dividend+3,f
 12274  12D3                     l3536:
 12275  12D3  1422               	bsf	___aldiv@quotient,0
 12276  12D4                     l3538:
 12277  12D4  3001               	movlw	1
 12278  12D5                     u4575:
 12279  12D5  36F3               	lsrf	___aldiv@divisor+3,f
 12280  12D6  0CF2               	rrf	___aldiv@divisor+2,f
 12281  12D7  0CF1               	rrf	___aldiv@divisor+1,f
 12282  12D8  0CF0               	rrf	___aldiv@divisor,f
 12283  12D9  0B89               	decfsz	9,f
 12284  12DA  2AD5               	goto	u4575
 12285  12DB                     l3540:
 12286  12DB  3001               	movlw	1
 12287  12DC  02A0               	subwf	___aldiv@counter,f
 12288  12DD  1D03               	btfss	3,2
 12289  12DE  2AE0               	goto	u4581
 12290  12DF  2AE1               	goto	u4580
 12291  12E0                     u4581:
 12292  12E0  2AB2               	goto	l3530
 12293  12E1                     u4580:
 12294  12E1                     l3542:
 12295  12E1  0821               	movf	___aldiv@sign,w
 12296  12E2  1903               	btfsc	3,2
 12297  12E3  2AE5               	goto	u4591
 12298  12E4  2AE6               	goto	u4590
 12299  12E5                     u4591:
 12300  12E5  2AF1               	goto	l3546
 12301  12E6                     u4590:
 12302  12E6                     l3544:
 12303  12E6  09A2               	comf	___aldiv@quotient,f
 12304  12E7  09A3               	comf	___aldiv@quotient+1,f
 12305  12E8  09A4               	comf	___aldiv@quotient+2,f
 12306  12E9  09A5               	comf	___aldiv@quotient+3,f
 12307  12EA  0AA2               	incf	___aldiv@quotient,f
 12308  12EB  1903               	skipnz
 12309  12EC  0AA3               	incf	___aldiv@quotient+1,f
 12310  12ED  1903               	skipnz
 12311  12EE  0AA4               	incf	___aldiv@quotient+2,f
 12312  12EF  1903               	skipnz
 12313  12F0  0AA5               	incf	___aldiv@quotient+3,f
 12314  12F1                     l3546:
 12315  12F1  0825               	movf	___aldiv@quotient+3,w
 12316  12F2  00F3               	movwf	?___aldiv+3
 12317  12F3  0824               	movf	___aldiv@quotient+2,w
 12318  12F4  00F2               	movwf	?___aldiv+2
 12319  12F5  0823               	movf	___aldiv@quotient+1,w
 12320  12F6  00F1               	movwf	?___aldiv+1
 12321  12F7  0822               	movf	___aldiv@quotient,w
 12322  12F8  00F0               	movwf	?___aldiv
 12323  12F9                     l576:
 12324  12F9  0008               	return
 12325  12FA                     __end_of___aldiv:
 12326                           
 12327                           	psect	text41
 12328  1D92                     __ptext41:	
 12329 ;; *************** function _SYSTEM_Initialize *****************
 12330 ;; Defined at:
 12331 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;		None
 12334 ;; Auto vars:     Size  Location     Type
 12335 ;;		None
 12336 ;; Return value:  Size  Location     Type
 12337 ;;                  1    wreg      void 
 12338 ;; Registers used:
 12339 ;;		wreg, status,2, status,0, pclath, cstack
 12340 ;; Tracked objects:
 12341 ;;		On entry : 0/0
 12342 ;;		On exit  : 0/0
 12343 ;;		Unchanged: 0/0
 12344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12349 ;;Total ram usage:        0 bytes
 12350 ;; Hardware stack levels used: 1
 12351 ;; Hardware stack levels required when called: 1
 12352 ;; This function calls:
 12353 ;;		_OSCILLATOR_Initialize
 12354 ;;		_PIN_MANAGER_Initialize
 12355 ;;		_WDT_Initialize
 12356 ;; This function is called by:
 12357 ;;		_main
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361                           
 12362                           ;psect for function _SYSTEM_Initialize
 12363  1D92                     _SYSTEM_Initialize:
 12364  1D92                     l3836:	
 12365                           ;incstack = 0
 12366                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12367                           
 12368                           
 12369                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 12370  1D92  319D  25CB  319D   	fcall	_PIN_MANAGER_Initialize
 12371                           
 12372                           ;mcc.c: 54: OSCILLATOR_Initialize();
 12373  1D95  319D  258B  319D   	fcall	_OSCILLATOR_Initialize
 12374                           
 12375                           ;mcc.c: 55: WDT_Initialize();
 12376  1D98  319D  2577  319D   	fcall	_WDT_Initialize
 12377  1D9B                     l17:
 12378  1D9B  0008               	return
 12379  1D9C                     __end_of_SYSTEM_Initialize:
 12380                           
 12381                           	psect	text42
 12382  1D77                     __ptext42:	
 12383 ;; *************** function _WDT_Initialize *****************
 12384 ;; Defined at:
 12385 ;;		line 68 in file "mcc_generated_files/mcc.c"
 12386 ;; Parameters:    Size  Location     Type
 12387 ;;		None
 12388 ;; Auto vars:     Size  Location     Type
 12389 ;;		None
 12390 ;; Return value:  Size  Location     Type
 12391 ;;                  1    wreg      void 
 12392 ;; Registers used:
 12393 ;;		wreg
 12394 ;; Tracked objects:
 12395 ;;		On entry : 0/0
 12396 ;;		On exit  : 0/0
 12397 ;;		Unchanged: 0/0
 12398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12403 ;;Total ram usage:        0 bytes
 12404 ;; Hardware stack levels used: 1
 12405 ;; This function calls:
 12406 ;;		Nothing
 12407 ;; This function is called by:
 12408 ;;		_SYSTEM_Initialize
 12409 ;; This function uses a non-reentrant model
 12410 ;;
 12411                           
 12412                           
 12413                           ;psect for function _WDT_Initialize
 12414  1D77                     _WDT_Initialize:
 12415  1D77                     l3236:	
 12416                           ;incstack = 0
 12417                           ; Regs used in _WDT_Initialize: [wreg]
 12418                           
 12419                           
 12420                           ;mcc.c: 71: WDTCON = 0x16;
 12421  1D77  3016               	movlw	22
 12422  1D78  0021               	movlb	1	; select bank1
 12423  1D79  0097               	movwf	23	;volatile
 12424  1D7A                     l23:
 12425  1D7A  0008               	return
 12426  1D7B                     __end_of_WDT_Initialize:
 12427                           
 12428                           	psect	text43
 12429  1DCB                     __ptext43:	
 12430 ;; *************** function _PIN_MANAGER_Initialize *****************
 12431 ;; Defined at:
 12432 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;		None
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;		None
 12437 ;; Return value:  Size  Location     Type
 12438 ;;                  1    wreg      void 
 12439 ;; Registers used:
 12440 ;;		wreg, status,2
 12441 ;; Tracked objects:
 12442 ;;		On entry : 0/0
 12443 ;;		On exit  : 0/0
 12444 ;;		Unchanged: 0/0
 12445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;Total ram usage:        0 bytes
 12451 ;; Hardware stack levels used: 1
 12452 ;; This function calls:
 12453 ;;		Nothing
 12454 ;; This function is called by:
 12455 ;;		_SYSTEM_Initialize
 12456 ;; This function uses a non-reentrant model
 12457 ;;
 12458                           
 12459                           
 12460                           ;psect for function _PIN_MANAGER_Initialize
 12461  1DCB                     _PIN_MANAGER_Initialize:
 12462  1DCB                     l3218:	
 12463                           ;incstack = 0
 12464                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12465                           
 12466                           
 12467                           ;pin_manager.c: 60: LATA = 0x00;
 12468  1DCB  0022               	movlb	2	; select bank2
 12469  1DCC  018C               	clrf	12	;volatile
 12470                           
 12471                           ;pin_manager.c: 61: LATB = 0x00;
 12472  1DCD  018D               	clrf	13	;volatile
 12473  1DCE                     l3220:
 12474                           
 12475                           ;pin_manager.c: 66: TRISA = 0xFF;
 12476  1DCE  30FF               	movlw	255
 12477  1DCF  0021               	movlb	1	; select bank1
 12478  1DD0  008C               	movwf	12	;volatile
 12479  1DD1                     l3222:
 12480                           
 12481                           ;pin_manager.c: 67: TRISB = 0xFF;
 12482  1DD1  30FF               	movlw	255
 12483  1DD2  008D               	movwf	13	;volatile
 12484  1DD3                     l3224:
 12485                           
 12486                           ;pin_manager.c: 72: ANSELB = 0xFE;
 12487  1DD3  30FE               	movlw	254
 12488  1DD4  0023               	movlb	3	; select bank3
 12489  1DD5  008D               	movwf	13	;volatile
 12490  1DD6                     l3226:
 12491                           
 12492                           ;pin_manager.c: 73: ANSELA = 0x1F;
 12493  1DD6  301F               	movlw	31
 12494  1DD7  008C               	movwf	12	;volatile
 12495                           
 12496                           ;pin_manager.c: 78: WPUB = 0x00;
 12497  1DD8  0024               	movlb	4	; select bank4
 12498  1DD9  018D               	clrf	13	;volatile
 12499  1DDA                     l3228:
 12500                           
 12501                           ;pin_manager.c: 79: OPTION_REGbits.nWPUEN = 1;
 12502  1DDA  0021               	movlb	1	; select bank1
 12503  1DDB  1795               	bsf	21,7	;volatile
 12504  1DDC                     l42:
 12505  1DDC  0008               	return
 12506  1DDD                     __end_of_PIN_MANAGER_Initialize:
 12507                           
 12508                           	psect	text44
 12509  1D8B                     __ptext44:	
 12510 ;; *************** function _OSCILLATOR_Initialize *****************
 12511 ;; Defined at:
 12512 ;;		line 58 in file "mcc_generated_files/mcc.c"
 12513 ;; Parameters:    Size  Location     Type
 12514 ;;		None
 12515 ;; Auto vars:     Size  Location     Type
 12516 ;;		None
 12517 ;; Return value:  Size  Location     Type
 12518 ;;                  1    wreg      void 
 12519 ;; Registers used:
 12520 ;;		wreg, status,2
 12521 ;; Tracked objects:
 12522 ;;		On entry : 0/0
 12523 ;;		On exit  : 0/0
 12524 ;;		Unchanged: 0/0
 12525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12530 ;;Total ram usage:        0 bytes
 12531 ;; Hardware stack levels used: 1
 12532 ;; This function calls:
 12533 ;;		Nothing
 12534 ;; This function is called by:
 12535 ;;		_SYSTEM_Initialize
 12536 ;; This function uses a non-reentrant model
 12537 ;;
 12538                           
 12539                           
 12540                           ;psect for function _OSCILLATOR_Initialize
 12541  1D8B                     _OSCILLATOR_Initialize:
 12542  1D8B                     l3230:	
 12543                           ;incstack = 0
 12544                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12545                           
 12546                           
 12547                           ;mcc.c: 61: OSCCON = 0x70;
 12548  1D8B  3070               	movlw	112
 12549  1D8C  0021               	movlb	1	; select bank1
 12550  1D8D  0099               	movwf	25	;volatile
 12551  1D8E                     l3232:
 12552                           
 12553                           ;mcc.c: 63: OSCTUNE = 0x00;
 12554  1D8E  0198               	clrf	24	;volatile
 12555  1D8F                     l3234:
 12556                           
 12557                           ;mcc.c: 65: BORCON = 0x00;
 12558  1D8F  0022               	movlb	2	; select bank2
 12559  1D90  0196               	clrf	22	;volatile
 12560  1D91                     l20:
 12561  1D91  0008               	return
 12562  1D92                     __end_of_OSCILLATOR_Initialize:
 12563  007E                     btemp	set	126	;btemp
 12564  007E                     wtemp0	set	126
 12565                           
 12566                           	psect	config
 12567                           
 12568                           ;Config register CONFIG1 @ 0x8007
 12569                           ;	Oscillator Selection
 12570                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 12571                           ;	Watchdog Timer Enable
 12572                           ;	WDTE = OFF, WDT disabled
 12573                           ;	Power-up Timer Enable
 12574                           ;	PWRTE = OFF, PWRT disabled
 12575                           ;	MCLR Pin Function Select
 12576                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 12577                           ;	Flash Program Memory Code Protection
 12578                           ;	CP = OFF, Program memory code protection is disabled
 12579                           ;	Data Memory Code Protection
 12580                           ;	CPD = OFF, Data memory code protection is disabled
 12581                           ;	Brown-out Reset Enable
 12582                           ;	BOREN = ON, Brown-out Reset enabled
 12583                           ;	Clock Out Enable
 12584                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 12585                           ;	Internal/External Switchover
 12586                           ;	IESO = ON, Internal/External Switchover mode is enabled
 12587                           ;	Fail-Safe Clock Monitor Enable
 12588                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 12589  8007                     	org	32775
 12590  8007  3FE4               	dw	16356
 12591                           
 12592                           ;Config register CONFIG2 @ 0x8008
 12593                           ;	Flash Memory Self-Write Protection
 12594                           ;	WRT = OFF, Write protection off
 12595                           ;	Voltage Regulator Capacitor Enable
 12596                           ;	VCAPEN = 0x3, unprogrammed default
 12597                           ;	PLL Enable
 12598                           ;	PLLEN = OFF, 4x PLL disabled
 12599                           ;	Stack Overflow/Underflow Reset Enable
 12600                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 12601                           ;	Brown-out Reset Voltage Selection
 12602                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 12603                           ;	Low-Voltage Programming Enable
 12604                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 12605  8008                     	org	32776
 12606  8008  1EFF               	dw	7935

Data Sizes:
    Strings     21
    Constant    144
    Data        4
    BSS         25
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     43      71
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> str(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[2]), str(BANK1[16]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flsub->___xxtofl
    _scale_convert_gram->___xxtofl
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_print
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _get_scale_val->___aldiv

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _scale_convert_gram->___fldiv
    _lcd_clear->_lcd_set_cursor
    _get_scale_val->___aldiv

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   36943
                                             77 BANK0      2     2      0
                                             39 BANK1      4     4      0
                  _SYSTEM_Initialize
                      _get_scale_val
                      _lcd_backlight
                          _lcd_clear
                           _lcd_init
                          _lcd_print
                     _lcd_set_cursor
                 _scale_convert_gram
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             44    38      6   31172
                                              0 BANK1     39    33      6
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               21    17      4    7408
                                             30 BANK0     21    17      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    15      4    5871
                                             30 BANK0     19    15      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             51 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             69 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             49 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _scale_convert_gram                                  12     8      4    1891
                                             13 BANK0     12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      44
                                              2 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            3     3      0    1610
                                             12 COMMON     1     1      0
                                              6 BANK0      2     2      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       8     7      1     760
                                              8 COMMON     2     1      1
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            4     2      2     714
                                              8 COMMON     4     2      2
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              6     5      1     418
                                              2 COMMON     6     5      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_backlight                                        1     1      0      44
                                              2 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_scale_val                                       19    15      4     685
                                              9 COMMON     4     4      0
                                              6 BANK0     15    11      4
                            ___aldiv
                   _get_CELL_DAT_VAL
                  _set_CELL_CLK_HIGH
                   _set_CELL_CLK_LOW
 ---------------------------------------------------------------------------------
 (2) _set_CELL_CLK_LOW                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_CELL_CLK_HIGH                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_CELL_DAT_VAL                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _get_scale_val
     ___aldiv
     _get_CELL_DAT_VAL
     _set_CELL_CLK_HIGH
     _set_CELL_CLK_LOW
   _lcd_backlight
     _lcd_cmd
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _lcd_clear
     _lcd_print
       _command
         _lcd_cmd
     _lcd_set_cursor
       _command
   _lcd_init
     _lcd_cmd
   _lcd_print
   _lcd_set_cursor
   _scale_convert_gram
     ___fldiv
     ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     2B      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A5      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A5      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Nov 04 23:21:24 2021

                   ___fldiv@aexp 002C                     ___fldiv@bexp 002B                     ___fldiv@sign 0024  
                    _SSPSTATbits 0214                               l20 1D91                               l23 1D7A  
                             l17 1D9B                               l42 1DDC                     ___awdiv@sign 0021  
            ___wmul@multiplicand 0072                     lcd_clear@col 0027              __Umul8_16@word_mpld 0076  
                   lcd_clear@row 0026                              l110 1D84                              l113 1D76  
                            l140 1677                              l117 1D7E                              l213 001B  
                            l143 1FFF                              l232 1EBF                              l216 08F4  
                            l161 1DBC                              l241 1F2B                              l170 0804  
                            l226 1E95                              l219 1DCA                              l164 1DA1  
                            l173 0808                              l501 1E16                              l182 1004  
                            l238 1E0B                              l414 0FFF                              l167 1DA5  
                            l503 1E2A                              l407 17FF                              l185 1008  
                            l442 03AF                              l188 100F                              l700 1DB0  
                            l436 0274                              l711 11CA                              l704 11DF  
                            l537 110A                              l714 11DF                              l722 14CB  
                            l482 072A                              l474 0616                              l900 0151  
                            l566 127D                              l718 1504                              l654 116A  
                            l671 1454                              l719 1482                              l807 1F67  
                            l576 12F9                              l832 09F4                              l672 13C7  
                            l905 019D                              l841 0B2C                              l729 14F7  
                            l817 1EF3                              l497 07E1                              l906 01B7  
                            l834 09D0                              l682 1447                              l930 0CFF  
                            l675 141B                              l667 10B0                              l908 01C6  
                            l692 11FC                              l828 0953                              l924 0D83  
                            l853 0AA8                              l757 1FB1                              l870 0B23  
                            l862 0B01                              l687 102C                              l695 1250  
                            l871 0B2C                              l943 1E5D                              l688 1048  
                            l696 1269                              l936 0D77                              l689 105D  
                            l849 0A86                              l945 1E6D                              l970 13A5  
                            l874 1E4A                              l859 0ACA                              l884 0073  
                            l981 1371                              l886 01CF                              l982 137D  
                            l974 1357                              l968 131C                              l988 1DEE  
                            _str 00D3                     ___awmod@sign 0076                              wreg 0009  
                   ___flmul@aexp 0036                     ___flmul@bexp 0037                      command@mode 0072  
                   ___flmul@sign 0031                     ___flmul@temp 003C                     ___flmul@prod 0038  
      get_scale_val@weight_count 0030                  ?_lcd_set_cursor 0078                     ___fltol@exp1 005D  
                           l3000 0A22                             l3010 0A6A                             l3002 0A23  
                           l3020 0A93                             l3012 0A70                             l3004 0A2B  
                           l3100 0B61                             l3030 0AAC                             l3014 0A75  
                           l3006 0A30                             l3110 0B78                             l3102 0B65  
                           l3032 0AAF                             l3024 0A9C                             l3008 0A46  
                           l3016 0A7E                             l3040 0ABC                             l3200 0D48  
                           l3112 0B7A                             l3104 0B66                             l4000 0220  
                           l3050 0ACF                             l3042 0ABD                             l3034 0AB1  
                           l3026 0AA3                             l3018 0A8E                             l3210 0D72  
                           l3202 0D56                             l3130 0BD6                             l3122 0B95  
                           l3114 0B82                             l3106 0B6B                             l4010 023F  
                           l4002 022C                             l3220 1DCE                             l3060 0B06  
                           l3052 0AD4                             l3044 0AC1                             l3036 0AB6  
                           l3028 0AA7                             l3212 0D73                             l3204 0D5F  
                           l3140 0C1E                             l3132 0BF0                             l3124 0BA2  
                           l3116 0B87                             l3108 0B70                             l3300 1680  
                           l4020 0272                             l4012 0250                             l4004 0237  
                           l3230 1D8B                             l3222 1DD1                             l3070 0B1D  
                           l3062 0B0B                             l3054 0ADC                             l3046 0AC7  
                           l3038 0AB8                             l3214 0D7B                             l3206 0D61  
                           l3150 0C54                             l3142 0C25                             l3134 0BFD  
                           l3126 0BAF                             l3118 0B8C                             l4110 052B  
                           l4030 029B                             l4014 025F                             l4006 0238  
                           l3232 1D8E                             l3224 1DD3                             l3240 1EAE  
                           l3072 0B1F                             l3064 0B13                             l3056 0AE0  
                           l3400 14CF                             l3208 0D6E                             l3160 0CB5  
                           l3152 0C68                             l3144 0C32                             l3136 0C0A  
                           l3128 0BC9                             l3080 0B33                             l3312 17CE  
                           l3320 0D8C                             l4200 0758                             l4120 055F  
                           l4112 0542                             l4104 04F9                             l4040 02DA  
                           l4032 029F                             l4024 0276                             l4016 0263  
                           l4008 023C                             l3234 1D8F                             l3226 1DD6  
                           l3218 1DCB                             l3250 1DF8                             l3242 1EB0  
                           l3074 0B27                             l3066 0B18                             l3058 0AFD  
                           l3170 0CD4                             l3162 0CBC                             l3154 0C75  
                           l3146 0C39                             l3138 0C11                             l3090 0B46  
                           l3082 0B37                             l3306 1749                             l3330 0E46  
                           l3322 0D93                             l4210 0780                             l4202 0764  
                           l4130 0585                             l4114 0546                             l4050 0306  
                           l4042 02DE                             l4034 02AA                             l4026 028B  
                           l4018 0270                             l3228 1DDA                             l3236 1D77  
                           l3260 1D7B                             l3252 1DFC                             l3244 1EBA  
                           l3076 0B2B                             l3068 0B19                             l3500 10F4  
                           l3420 13A6                             l3180 0CE8                             l3172 0CDB  
                           l3164 0CC8                             l3156 0C89                             l3148 0C4D  
                           l3092 0B4E                             l3084 0B3B                             l3308 174F  
                           l3340 0ECD                             l3316 0D86                             l4220 07A0  
                           l4212 0783                             l4204 0768                             l4132 058A  
                           l4140 05D8                             l4116 0552                             l4124 0564  
                           l4108 0521                             l4060 0343                             l4052 0316  
                           l4044 02E1                             l4036 02AE                             l4028 0297  
                           l4300 158E                             l3510 126A                             l2710 1D9C  
                           l3254 1E02                             l3246 1DEF                             l3238 1E98  
                           l3502 10F5                             l3422 13B2                             l3414 14EE  
                           l3406 14D7                             l3190 0D11                             l3182 0CFC  
                           l3166 0CCF                             l3174 0CDF                             l3158 0C9E  
                           l3094 0B50                             l3086 0B3C                             l3078 0B2D  
                           l3334 0EA8                             l3318 0D8A                             l4222 07A7  
                           l4214 078E                             l4206 076C                             l4150 05FD  
                           l4142 05E0                             l4134 05B3                             l4126 0571  
                           l4118 0557                             l4070 03BD                             l4062 0375  
                           l4054 0326                             l4046 02F8                             l4038 02C5  
                           l4302 159E                             l3520 1290                             l3512 126C  
                           l3256 1D7F                             l2704 1DB1                             l2712 1D9F  
                           l2720 0009                             l3248 1DF0                             l3600 1194  
                           l3504 10FC                             l3440 13EC                             l3432 13C8  
                           l3416 14FC                             l3408 14E7                             l3192 0D15  
                           l3176 0CE3                             l3168 0CD3                             l3096 0B58  
                           l3088 0B41                             l3360 1DE5                             l2800 105F  
                           l3352 0FE2                             l3328 0E3F                             l4224 07AB  
                           l4216 0797                             l4208 077A                             l4160 0629  
                           l4152 060B                             l4144 05E8                             l4136 05CF  
                           l4128 057E                             l4080 043E                             l4072 03EE  
                           l4064 038C                             l4056 032A                             l4048 0302  
                           l4232 07C9                             l4304 15A1                             l3530 12B2  
                           l3522 1298                             l3514 1270                             l3266 1D7B  
                           l3258 1D74                             l2706 1DB1                             l2714 0802  
                           l2722 0014                             l4250 1E71                             l3602 119C  
                           l3506 1102                             l3450 1415                             l3442 13F3  
                           l3434 13D0                             l3426 13BB                             l3370 1467  
                           l2730 1E59                             l3194 0D2D                             l3186 0D04  
                           l3178 0CE4                             l3098 0B5D                             l3362 1DEB  
                           l2810 1073                             l2802 1063                             l3346 0F79  
                           l3338 0EC6                             l4226 07B5                             l4218 079A  
                           l4170 06C5                             l4162 062D                             l4154 0611  
                           l4146 05EC                             l4082 0456                             l4074 03FC  
                           l4066 0392                             l4058 032E                             l4234 07DD  
                           l4306 15A6                             l3540 12DB                             l3532 12B9  
                           l3524 12A0                             l3516 1281                             l2708 1DB8  
                           l2716 1001                             l2740 1F0B                             l4260 1E8F  
                           l4252 1E79                             l4244 1E70                             l3700 0094  
                           l2900 0917                             l3620 11C1                             l3612 11AA  
                           l3604 119E                             l3452 141F                             l3460 1437  
                           l3444 1405                             l3436 13E1                             l3380 1483  
                           l2732 1E64                             l2724 1E4C                             l3188 0D09  
                           l3196 0D31                             l3364 1DED                             l3356 1DDE  
                           l2820 1089                             l2812 1079                             l2804 1068  
                           l3348 0F80                             l4228 07C1                             l4180 0709  
                           l4172 06CD                             l4164 0641                             l4156 061D  
                           l4148 05F0                             l4092 0491                             l4084 045C  
                           l4076 0414                             l4068 03AA                             l3534 12CB  
                           l3526 12A3                             l3542 12E1                             l3518 128C  
                           l2718 100C                             l2750 1F21                             l2742 1F0F  
                           l4254 1E80                             l4238 1E6E                             l3710 00BA  
                           l3702 0099                             l3550 1010                             l2910 092D  
                           l2902 0919                             l3622 11CF                             l3606 11A2  
                           l3614 11BA                             l3630 1F73                             l3446 140D  
                           l3438 13E3                             l3390 14AA                             l3382 1489  
                           l3374 1470                             l2734 1E69                             l2726 1E4E  
                           l3198 0D3E                             l3358 1DDF                             l2830 10A7  
                           l2822 1093                             l2814 107C                             l2806 106A  
                           l4190 0726                             l4182 070D                             l4174 06D1  
                           l4166 0680                             l4158 0622                             l4086 0461  
                           l4078 0430                             l4094 049A                             l4270 150E  
                           l4262 1505                             l3544 12E6                             l3536 12D3  
                           l3528 12AE                             l2752 1F26                             l2744 1F14  
                           l4256 1E85                             l3720 00DF                             l3712 00C2  
                           l3800 1324                             l3552 1024                             l2920 0940  
                           l2912 0931                             l2904 0921                             l3624 11D4  
                           l3640 1FA3                             l3632 1F7E                             l3480 1E20  
                           l3472 1E0C                             l3448 140E                             l3392 14B8  
                           l3384 1498                             l3368 1455                             l2728 1E55  
                           l2840 1F34                             l2760 1116                             l2832 10AC  
                           l2824 1097                             l2816 1081                             l2808 106E  
                           l4192 0735                             l4184 0711                             l4168 06A9  
                           l4176 06FA                             l4096 04F5                             l4088 0475  
                           l4280 1517                             l4272 1510                             l4264 1508  
                           l3546 12F1                             l3538 12D4                             l2746 1F19  
                           l2738 1EF5                             l4258 1E8B                             l3730 00FE  
                           l3722 00E3                             l3714 00CA                             l3706 00A2  
                           l3810 1344                             l3554 1040                             l3570 121C  
                           l3562 11E0                             l2930 095D                             l2922 0948  
                           l2914 0935                             l2906 0926                             l3490 10C4  
                           l3634 1F82                             l3642 1FA9                             l3626 1F68  
                           l3482 1E26                             l3474 1E0E                             l3466 143E  
                           l3458 1427                             l3394 14BE                             l3386 149A  
                           l2850 1F53                             l2842 1F37                             l3298 167A  
                           l2770 1127                             l2762 1118                             l2754 110B  
                           l2826 109C                             l2818 1085                             l4194 073B  
                           l4178 0702                             l4098 04F7                             l4186 0718  
                           l4290 152A                             l4282 1518                             l4274 1511  
                           l4266 150A                             l2748 1F1D                             l3900 08E5  
                           l3740 011A                             l3732 0106                             l3724 00E4  
                           l3716 00CC                             l3708 00B2                             l3660 002B  
                           l3652 001C                             l3820 136B                             l3812 1348  
                           l3804 132D                             l3556 105A                             l3572 1234  
                           l3564 11F4                             l2940 0971                             l2932 0961  
                           l2924 0949                             l2916 0936                             l2908 092C  
                           l3492 10CF                             l3636 1F94                             l3628 1F70  
                           l3476 1E12                             l3468 144C                             l3396 14BF  
                           l3388 14A3                             l2852 1F57                             l2844 1F3C  
                           l2836 1F2C                             l2780 113D                             l2772 112D  
                           l2764 111C                             l2756 110D                             l2828 10A2  
                           l4196 0749                             l4188 071E                             l4292 1537  
                           l4284 151B                             l4276 1514                             l4268 150B  
                           l3910 15BF                             l3902 08E9                             l3742 0121  
                           l3750 0131                             l3718 00D1                             l3726 00EB  
                           l3734 010A                             l3662 0030                             l3670 0040  
                           l3654 0022                             l3830 139C                             l3822 1375  
                           l3814 1350                             l3806 1332                             l3558 105C  
                           l3574 1238                             l3566 1210                             l3582 1DA6  
                           l2950 0985                             l2942 0975                             l2934 0965  
                           l2918 093B                             l2926 094B                             l3646 1E2B  
                           l3590 116B                             l3494 10D3                             l3486 10B1  
                           l3638 1F9C                             l3478 1E1B                             l3398 14C5  
                           l2854 1F58                             l2846 1F40                             l2838 1F2E  
                           l2870 1ED2                             l2862 1EC0                             l2782 114C  
                           l2774 1130                             l2790 115C                             l2766 1121  
                           l2758 1111                             l4198 0751                             l4294 154B  
                           l4286 151E                             l4278 1516                             l3920 15DD  
                           l3912 15C2                             l3904 1DBD                             l3840 0815  
                           l3752 0135                             l3744 0125                             l3736 0110  
                           l3728 00FD                             l3680 0056                             l3672 0048  
                           l3664 0035                             l3656 0026                             l3832 139D  
                           l3824 137F                             l3816 135E                             l3808 133D  
                           l3576 1266                             l3568 1218                             l3584 1DAE  
                           l2960 0999                             l2952 0989                             l2944 0979  
                           l2936 0969                             l2928 0959                             l3648 1E2E  
                           l3592 1177                             l3496 10DA                             l3488 10C1  
                           l2856 1F5D                             l2848 1F44                             l2872 1ED6  
                           l2864 1EC6                             l2880 1EEF                             l2792 1161  
                           l2784 1150                             l2776 1135                             l2768 1125  
                           l4296 1558                             l4288 1523                             l3930 15EB  
                           l3922 15E5                             l3914 15CB                             l3906 1DC1  
                           l3850 083B                             l3842 0819                             l3770 017F  
                           l3762 0156                             l3754 0136                             l3746 0126  
                           l3738 0118                             l3682 005B                             l3690 006B  
                           l3674 004D                             l3666 003D                             l3658 002A  
                           l3826 1393                             l3818 1367                             l3578 1268  
                           l3586 1DB0                             l2970 09DA                             l2954 098D  
                           l2946 097D                             l2938 096D                             l2962 099D  
                           l2890 0903                             l3498 10EC                             l2858 1F63  
                           l2874 1EE0                             l2866 1EC9                             l2794 1166  
                           l2786 1151                             l2778 1139                             l4298 156C  
                           l3836 1D92                             l3940 160C                             l3932 15F2  
                           l3924 15E9                             l3916 15D3                             l3908 1DC6  
                           l3860 0852                             l3852 083F                             l3844 081D  
                           l3780 01B6                             l3764 015B                             l3772 0183  
                           l3756 013A                             l3748 012D                             l3692 007B  
                           l3684 0060                             l3676 0051                             l3668 003E  
                           l3828 1398                             l2972 09DC                             l2980 09ED  
                           l2964 099E                             l2956 0991                             l2948 0981  
                           l2892 0904                             l2884 08F5                             l3596 1180  
                           l2876 1EE4                             l2868 1ECE                             l2788 1156  
                           l3942 1610                             l3934 15F5                             l3918 15D5  
                           l3870 0872                             l3862 0856                             l3854 0843  
                           l3846 0821                             l3838 0809                             l3782 01BC  
                           l3774 0190                             l3766 0163                             l3758 014E  
                           l3694 0087                             l3686 0068                             l3678 0055  
                           l2990 0A0E                             l2982 09F8                             l2974 09E0  
                           l2966 09B5                             l2958 0995                             l2894 0909  
                           l2886 08FB                             l3598 1193                             l2878 1EE9  
                           l2798 105E                             l3960 162F                             l3952 161C  
                           l3944 1615                             l3936 15F9                             l3880 089E  
                           l3872 0876                             l3864 0866                             l3856 084A  
                           l3848 0834                             l3784 01C0                             l3776 01AB  
                           l3768 0167                             l3696 008B                             l3688 0069  
                           l3792 12FB                             l2992 0A12                             l2984 09FD  
                           l2976 09E1                             l2968 09D4                             l2896 090E  
                           l2888 08FF                             l3970 166F                             l3962 1634  
                           l3954 161F                             l3946 161B                             l3938 15FC  
                           l3890 08B9                             l3882 08A2                             l3874 087A  
                           l3866 086A                             l3858 084E                             l3786 01C2  
                           l3778 01AE                             l3794 1300                             l2994 0A16  
                           l2978 09E9                             l2898 0916                             l3964 1644  
                           l3956 1626                             l3892 08BD                             l3884 08A6  
                           l3876 087E                             l3868 086E                             l3796 1304  
                           l2996 0A1C                             l2988 0A06                             l3980 01D2  
                           l3958 162A                             l3966 1648                             l3894 08C1  
                           l3886 08AA                             l3878 0882                             l3798 1314  
                           l3974 1FB2                             l2998 0A1E                             l3990 01ED  
                           l3982 01D7                             l3968 164E                             l3896 08DD  
                           l3888 08B5                             l3976 1FF7                             l3992 01F9  
                           l3984 01DD                             l3898 08E1                             l3994 01FC  
                           l3986 01E4                             l3996 020D                             l3988 01E9  
                           l3998 021C                             STR_1 2090                             STR_2 209B  
                           STR_3 20A3                             u3010 1111                             u3011 1110  
                           u3100 1161                             u3020 111C                             u3005 1F00  
                           u3101 1160                             u3021 111B                             _LATA 010C  
                           u3030 112D                             u3110 1063                             _LATB 010D  
                           u3031 112C                             u3111 1062                             u4000 0D56  
                           u3200 1F34                             u3120 106E                             u4001 0D55  
                           u3201 1F33                             u3121 106D                             u4010 0D72  
                           u3050 113D                             u3130 1079                             u4011 0D71  
                           u3051 113C                             u3131 1078                             u4020 1EAE  
                           u3220 1F44                             u3300 1EE0                             u4100 0F80  
                           u4021 1EAD                             u4005 0D52                             u3221 1F43  
                           u3301 1EDF                             u3045 1131                             u4101 0F7F  
                           u4030 1E0B                             u4110 1DE5                             u3070 114C  
                           u3150 1089                             u4031 1E0A                             u3215 1F38  
                           u4111 1DE4                             u3071 114B                             u3151 1088  
                           u5000 0118                             u3400 0959                             u4200 14D6  
                           u3240 1F53                             u3320 1EEF                             u4040 1680  
                           u4120 1DEB                             u3160 1093                             u5001 0117  
                           u3401 0958                             u4201 14D5                             u3241 1F52  
                           u3321 1EEE                             u3305 1EDC                             u4041 167F  
                           u4121 1DEA                             u3065 113E                             u3161 1092  
                           u3145 107D                             u3410 095D                             u3330 0903  
                           u4130 1467                             u4050 174F                             u3090 115C  
                           u3411 095C                             u3331 0902                             u4131 1466  
                           u3235 1F45                             u3315 1EE5                             u4051 174E  
                           u3091 115B                             u3075 1148                             u5100 0175  
                           u5020 0125                             u3500 09FD                             u3420 09B5  
                           u3340 0909                             u4220 14E6                             u4140 1481  
                           u3260 1F63                             u3180 10A2                             u4060 0D8A  
                           u5021 0124                             u3501 09FC                             u3421 09B4  
                           u3341 0908                             u4221 14E5                             u4141 1480  
                           u3261 1F62                             u3245 1F4F                             u3085 1152  
                           u3181 10A1                             u3165 108F                             u4061 0D89  
                           u5110 0190                             u3510 0A12                             u3430 09BF  
                           u3350 090E                             u4310 141B                             u4230 14ED  
                           u3270 1EC6                             u3190 10A7                             u4070 0D93  
                           u5111 018F                             u5015 011B                             u3511 0A11  
                           u3431 09BD                             u3351 090D                             u4311 141A  
                           u4231 14EC                             u4215 14D8                             u3255 1F59  
                           u3271 1EC5                             u3191 10A6                             u3175 1098  
                           u4071 0D92                             u5120 01AB                             u5040 0135  
                           u5200 135D                             u3600 0AA7                             u3520 0A16  
                           u3440 09C0                             u3360 092C                             u4320 141F  
                           u4160 14B8                             u4080 0E46                             u5121 01AA  
                           u5105 0171                             u5041 0134                             u5201 135C  
                           u3601 0AA6                             u3521 0A15                             u3425 09B1  
                           u3361 092B                             u4321 141E                             u4305 140F  
                           u4161 14B7                             u4081 0E45                             u5130 01C0  
                           u5050 013A                             u3610 0AAC                             u3530 0A22  
                           u3450 09D4                             u3370 0935                             u4330 1426  
                           u4250 14FC                             u3290 1ED6                             u4090 0ECD  
                           u5131 01BF                             u5115 018C                             u5051 0139  
                           u5035 0127                             u3611 0AAB                             u3531 0A21  
                           u3451 09D3                             u3371 0934                             u4331 1425  
                           u4251 14FB                             u4155 14A4                             u3291 1ED5  
                           u4091 0ECC                             u4500 1270                             u5060 014E  
                           u5220 136B                             u5140 1300                             u3700 0AFD  
                           u3620 0AB6                             u3460 09E0                             u3380 093B  
                           u4420 1E26                             u4260 13B2                             u4180 14CB  
                           u4501 126F                             u5125 01A7                             u5061 014D  
                           u5221 136A                             u5141 12FF                             u3701 0AFC  
                           u3621 0AB5                             u3461 09DF                             u3381 093A  
                           u4421 1E25                             u4405 1E17                             u4261 13B1  
                           u4245 14EF                             u4181 14CA                             u4165 14B4  
                           u3285 1ECA                             u4510 1281                             u5310 161B  
                           u2910 1DB8                             u5070 0155                             u5230 1371  
                           u5150 1304                             u3710 0B06                             u3630 0ABC  
                           u3550 0A46                             u3390 0940                             u4430 10C1  
                           u4350 1436                             u4270 13C6                             u4190 14CF  
                           u4511 1280                             u5311 161A                             u6007 15F6  
                           u2911 1DB7                             u5071 0154                             u5231 1370  
                           u5215 1361                             u5151 1303                             u3711 0B05  
                           u3631 0ABB                             u3551 0A45                             u3391 093F  
                           u4431 10C0                             u4415 1E1C                             u4351 1435  
                           u4271 13C5                             u4191 14CE                             u4175 14C0  
                           u4520 12A0                             u5320 1634                             u2920 1DBC  
                           u5080 015B                             u5240 1375                             u5160 1324  
                           u4600 1024                             u3720 0B0B                             u3640 0AC1  
                           u3560 0A75                             u3480 09F4                             u4360 143D  
                           u3800 0B6B                             u5400 029B                             u4521 129F  
                           u5321 1633                             u6017 160D                             u5305 15EC  
                           u2921 1DBB                             u5081 015A                             u5241 1374  
                           u5161 1323                             u4601 1023                             u3721 0B0A  
                           u3641 0AC0                             u3561 0A74                             u3553 0A42  
                           u3545 0A25                             u3481 09F3                             u4361 143C  
                           u4345 1428                             u3801 0B6A                             u5401 029A  
                           u5330 164E                             u2930 1DA5                             u5090 0167  
                           u5250 1389                             u4610 1040                             u3730 0B18  
                           u3650 0AC7                             u3570 0A8E                             u3490 09F8  
                           u4450 10D3                             u4290 1405                             u3810 0B70  
                           u5410 02C5                             u5331 164D                             u6027 1620  
                           u2931 1DA4                             u5091 0166                             u4611 103F  
                           u3731 0B17                             u3651 0AC6                             u3571 0A8D  
                           u3491 09F7                             u3475 09E3                             u4451 10D2  
                           u4291 1404                             u3811 0B6F                             u5411 02C4  
                           u4540 12B2                             u2940 0808                             u5260 1398  
                           u5180 1343                             u4620 105A                             u3740 0B1D  
                           u3660 0ACE                             u3580 0A93                             u4700 118D  
                           u4380 144C                             u3900 0CD3                             u3820 0B87  
                           u5500 043E                             u5420 02F8                             u5340 01DD  
                           u4541 12B1                             u6037 1627                             u2941 0807  
                           u5261 1397                             u5181 1342                             u4621 1059  
                           u3741 0B1C                             u3661 0ACD                             u3581 0A92  
                           u4445 10C5                             u4381 144B                             u4285 13ED  
                           u3901 0CD2                             u3821 0B86                             u5501 043D  
                           u5421 02F7                             u5341 01DC                             u2950 1008  
                           u5270 139C                             u4630 11F4                             u3750 0B2B  
                           u3670 0AD4                             u4710 11A2                             u4470 10EC  
                           u4390 1E12                             u3830 0B8C                             u5510 0456  
                           u5430 032A                             u5350 01F9                             u4535 12A4  
                           u2951 1007                             u5271 139B                             u5255 1385  
                           u5175 1337                             u4631 11F3                             u3751 0B2A  
                           u3671 0AD3                             u4711 11A1                             u4471 10EB  
                           u4391 1E11                             u4375 143F                             u4295 1401  
                           u3831 0B8B                             u5511 0455                             u5431 0329  
                           u5351 01F8                             u4560 12CB                             u5280 15DD  
                           u2960 100C                             u4640 1210                             u3680 0AE0  
                           u4720 11A9                             u3920 0CE3                             u3760 0B3B  
                           u5600 060B                             u5520 0520                             u5440 038C  
                           u5360 022C                             u4561 12CA                             u5281 15DC  
                           u2961 100B                             u4625 1056                             u4641 120F  
                           u3681 0ADF                             u4721 11A8                             u4705 1189  
                           u4465 10D4                             u3921 0CE2                             u3761 0B3A  
                           u5601 060A                             u5521 051F                             u5505 043A  
                           u5441 038B                             u5361 022B                             u5290 15E5  
                           u4650 121C                             u3690 0AEE                             u4490 1102  
                           u4810 1F82                             u2970 1E59                             u3930 0CE8  
                           u3770 0B41                             u5610 0622                             u5530 052B  
                           u5450 03AA                             u5370 0237                             u4555 12B3  
                           u5291 15E4                             u5195 1351                             u4651 121B  
                           u3595 0A9D                             u4491 1101                             u4475 10E8  
                           u4811 1F81                             u2971 1E58                             u3931 0CE7  
                           u3915 0CD5                             u3771 0B40                             u5611 0621  
                           u5531 052A                             u5451 03A9                             u5371 0236  
                           u4580 12E1                             u4900 0060                             u4660 1238  
                           u4740 11B9                             u4820 1F94                             u3940 0CFC  
                           u3860 0C94                             u3780 0B46                             u5700 076C  
                           u5620 0701                             u5540 0542                             u5460 03BD  
                           u5380 026F                             u4581 12E0                             u4565 12C7  
                           u4901 005F                             u4661 1237                             u4741 11B8  
                           u4485 10F6                             u4821 1F93                             u4805 1F74  
                           u3941 0CFB                             u3845 0C0B                             u3781 0B45  
                           u5701 076B                             u5621 0700                             u5605 0607  
                           u5541 0541                             u5525 051C                             u5461 03BC  
                           u5381 026E                             u4590 12E6                             u4910 007B  
                           u4670 1266                             u4750 11C0                             u2990 1E69  
                           u3950 0D03                             u3870 0CAB                             u3790 0B65  
                           u5710 077A                             u5630 0717                             u5550 0552  
                           u5470 03FC                             u5390 0297                             u4591 12E5  
                           u4575 12D5                             u4911 007A                             u4671 1265  
                           u3695 0AEA                             u4751 11BF                             u4735 11AB  
                           u2991 1E68                             u3951 0D02                             u3855 0C3A  
                           u3791 0B64                             u5711 0779                             u5631 0716  
                           u5551 0551                             u5471 03FB                             u5391 0296  
                           u4920 0099                             u4680 1DAE                             u4840 1FA9  
                           u3960 0D09                             u5720 078E                             u5640 071E  
                           u5560 0571                             u5480 0414                             u4921 0098  
                           u4681 1DAD                             u4841 1FA8                             u4825 1F90  
                           u2985 1E5E                             u3961 0D08                             u3865 0C90  
                           u5721 078D                             u5641 071D                             u5561 0570  
                           u5481 0413                             u5465 03B9                             u4930 00D1  
                           u4850 002A                             u4770 11CF                             u4690 1177  
                           u3970 0D15                             u5730 07A0                             u5650 0726  
                           u5570 057E                             u5490 0430                             u4931 00D0  
                           u4851 0029                             u4675 1262                             u4771 11CE  
                           u4691 1176                             u4835 1F9D                             u3971 0D14  
                           u3875 0CA7                             u5731 079F                             u5715 0776  
                           u5651 0725                             u5571 057D                             u5491 042F  
                           u5475 03F8                             u4860 0030                             u4780 11D4  
                           u3980 0D23                             u5740 07B5                             u5660 0735  
                           u5580 05DF                             u4861 002F                             u4781 11D3  
                           u4765 11C2                             u3885 0CB6                             u5741 07B4  
                           u5725 078A                             u5661 0734                             u5581 05DE  
                           u5565 056D                             u4870 0035                             u4790 1F70  
                           u3990 0D3E                             u5750 07C1                             u5670 0749  
                           u5590 05FD                             u4871 0034                             u4791 1F6F  
                           u3991 0D3D                             u3895 0CC9                             u5751 07C0  
                           u5671 0748                             u5591 05FC                             u4960 00E3  
                           u4880 0055                             u5760 07DD                             u5680 0758  
                           u4961 00E2                             u4945 00D2                             u4881 0054  
                           u3985 0D1F                             u5761 07DC                             u5681 0757  
                           u5665 0731                             u5817 1530                             u5770 1E8B  
                           u4890 005B                             u5690 0764                             u5771 1E8A  
                           u5907 0883                             u4955 00D9                             u4891 005A  
                           u3995 0D3A                             u5691 0763                             u5675 0745  
                           u5595 05F9                             u5827 1551                             u5780 1E95  
                           u4980 00FD                             u5781 1E94                             u5917 089F  
                           u4981 00FC                             u5837 15B3                             u4990 0110  
                           u5927 08B1                             u5847 080E                             u4991 010F  
                           u4975 00E5                             u5937 08C2                             u5857 0824  
                           u4985 00F9                             u5947 08DE                             u5867 0837  
                           u5957 08F0                             u5877 0848                             u5967 1F1A  
                           u5887 0857                             u5977 1DC7                             u5897 0867  
                           u5987 0018                             u5997 15E6                             _WPUB 020D  
                ??_lcd_backlight 0072                             _main 1505                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           start 0002                  ___fldiv@new_exp 0025                     _sprintf$1077 00AC  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 1D92                    ___fltol@sign1 005C  
                __end_of___aldiv 12FA                  __end_of___fladd 0B2D                            ?_main 0070  
                __end_of___fldiv 01D0                  __end_of___awdiv 116B                  __end_of___flneg 1DB1  
                __end_of___awmod 10B1                  __end_of___flmul 0D84                  __end_of___flsub 1E4B  
                __end_of___fltol 11E0                  __end_of___lldiv 110B                  ___awdiv@divisor 0077  
                __end_of___llmod 1FB2                  __end_of___lwdiv 1F68                  __end_of___lwmod 1EF4  
                ___awdiv@counter 0020                            _TRISA 008C                            _TRISB 008D  
         scale_convert_gram@temp 0035                     lcd_print@cmd 007B                     lcd_print@str 0078  
                __end_of_lcd_cmd 001C                  __end_of_command 1F2C                  __end_of_dpowers 2090  
                 _WDT_Initialize 1D77                            _scale 0D84                  __end_of_isdigit 1DEF  
                          status 0003               _scale_convert_gram 1FB2                            wtemp0 007E  
                __end_of_sprintf 07E2       __size_of_set_CELL_CLK_HIGH 0003                  ??_get_scale_val 0079  
                __initialization 07E2              ?_scale_convert_gram 002D                     __end_of_main 15BD  
                  command@lownib 0077                 __end_of_i2c_wait 1DBD                 __end_of_i2c_stop 0809  
                         ??_main 006D             __size_of__tdiv_to_l_ 00B0           __end_of_WDT_Initialize 1D7B  
           ??_scale_convert_gram 0031                 ___llmod@dividend 0074                           ?_scale 003E  
               ___awdiv@dividend 0079                           _ANSELA 018C                           _ANSELB 018D  
                         _BORCON 0116                           _OSCCON 0099                           _WDTCON 0097  
                         _SSPADD 0212                           _SSPBUF 0211               __size_of_i2c_start 000A  
               __end_of___xxtofl 13A6               __size_of_i2c_write 0010          scale_convert_gram@count 002D  
       __end_of_get_CELL_DAT_VAL 1D7F                 __end_of__powers_ 2034                 __end_of_lcd_init 08F5  
                         ___flge 11E0                           ___fleq 1010                        ??___aldiv 0078  
                      ??___fladd 0059                           ___wmul 1E0C                        ??___fldiv 0078  
                      ??___awdiv 007B                        ??___flneg 0074                        ??___awmod 0074  
                      ??___flmul 002C                        ??___flsub 007E                        ??___fltol 0057  
                      ??___lldiv 0078                        ??___llmod 0078                        ??___lwdiv 007A  
                      ??___lwmod 0074                           _fround 1678                 ___awdiv@quotient 0022  
                ___awmod@divisor 0070                  ___awmod@counter 0075                        ??_lcd_cmd 0071  
                      ??_command 0073                        ??_isdigit 0070               __size_of__Umul8_16 0023  
                ?_WDT_Initialize 0070                        ??_sprintf 00A6                       ___flge@ff1 0070  
                     ___flge@ff2 0074                     ___xxtofl@arg 007A                     ___xxtofl@exp 0079  
              _SYSTEM_Initialize 1D92                     ___xxtofl@val 0070                       ___fleq@ff1 0070  
                     ___fleq@ff2 0074          __end_of__initialization 07FD                       ___flneg@f1 0070  
             ?_SYSTEM_Initialize 0070                       ___fltol@f1 0053        __size_of_set_CELL_CLK_LOW 0006  
                 command@highnib 0076                   __pcstackCOMMON 0070                     __pidataBANK1 0004  
            ??_SYSTEM_Initialize 0070                    __end_of_scale 1000                   get_scale_val@i 0034  
                 get_scale_val@j 002E                   get_scale_val@n 002F                __end_of_i2c_start 1DA6  
               ??_lcd_set_cursor 0079                __end_of_i2c_write 1010                       __div_to_l_ 13A6  
                 _OPTION_REGbits 0095               __size_of_lcd_clear 0028               __size_of_lcd_print 001D  
                __div_to_l_@exp1 0025                  __div_to_l_@cntr 0024                          ??_scale 0042  
      __end_of_SYSTEM_Initialize 1D9C                  __div_to_l_@quot 0020                     sprintf@width 00B7  
                     __pbssBANK0 006F                       __pbssBANK1 00CB                        ?_i2c_wait 0070  
                      ?_i2c_stop 0070                    __div_to_l_@f1 0070                    __div_to_l_@f2 0074  
              __end_of__Umul8_16 1E6E                       __pmaintext 1505                          ?___flge 0070  
                        ?___fleq 0070                          ?___wmul 0070                          ?_fround 003E  
                      ?___xxtofl 0070                          _OSCTUNE 0098                          _SSPCON1 0215  
                        _SSPCON2 0216                        ?_lcd_init 0070                          _SSPSTAT 0214  
                     ??_i2c_wait 0070                       ??_i2c_stop 0070            __end_of_lcd_backlight 1DCB  
              __end_of__npowers_ 2068                       _scale$1076 004E                __end_of_lcd_clear 1E96  
                        ___aldiv 126A                  __size_of___flge 008A                  __size_of___fleq 004E  
              __end_of_lcd_print 1E0C                          ___fladd 08F5                          ___fldiv 001C  
                        ___awdiv 110B                          ___flneg 1DA6                          ___awmod 105E  
                        ___flmul 0B2D                          ___flsub 1E2B                          ___fltol 116B  
                        ___lldiv 10B1                  __size_of___wmul 001F                          ___llmod 1F68  
                        ___lwdiv 1F2C                          ___lwmod 1EC0                  __size_of_fround 0188  
                        __ptext1 01D0                          __ptext2 0D84                          __ptext3 105E  
                        __ptext4 110B                          __ptext5 1DDD                          __ptext6 1678  
                        __ptext7 1EC0                          __ptext8 1F2C                          __ptext9 0B2D  
                        _lcd_cmd 0008                          _command 1EF4                      ?__div_to_l_ 0070  
                        _dpowers 2068            _OSCILLATOR_Initialize 1D8B                          _isdigit 1DDD  
                     ??___xxtofl 0074                 ___awmod@dividend 0072                 ___aldiv@dividend 0074  
       ??_PIN_MANAGER_Initialize 0070       __size_of_SYSTEM_Initialize 000A                          _sprintf 01D0  
                        clrloop0 1D86                       ??_lcd_init 0072             end_of_initialization 07FD  
                ___lldiv@divisor 0070                  ___lldiv@counter 007D            __end_of_get_scale_val 1678  
               _set_CELL_CLK_LOW 1D7F                ?_get_CELL_DAT_VAL 0070                 ___aldiv@quotient 0022  
             ??_get_CELL_DAT_VAL 0070                   __tdiv_to_l_@f1 0070                   __tdiv_to_l_@f2 0074  
                  ??__tdiv_to_l_ 0078                 ??_WDT_Initialize 0070                        _PORTAbits 000C  
                     _weight_dat 00CF                      ___fladd@grs 0064                    i2c_write@data 0070  
      lcd_set_cursor@row_offsets 0020                    ___xxtofl@sign 0078                       lcd_cmd@cmd 0071  
    __size_of_scale_convert_gram 004E                      ___fldiv@grs 0027                      ___fldiv@rem 0020  
                    ___flmul@grs 0032                       command@val 0075              __size_of__div_to_l_ 00AF  
                 __end_of___flge 126A                   __end_of___fleq 105E                   __end_of___wmul 1E2B  
         ?_OSCILLATOR_Initialize 0070                   __end_of_fround 1800              start_initialization 07E2  
__size_of_PIN_MANAGER_Initialize 0012              __end_of__tdiv_to_l_ 1505                        _i2c_start 1D9C  
                      _i2c_write 1000                  ___llmod@divisor 0070                  ___llmod@counter 0079  
              __size_of_i2c_wait 000C                __size_of_i2c_stop 0007                         ??___flge 0078  
                       ??___fleq 0078                         ??___wmul 0074                        __Umul8_16 1E4B  
        get_scale_val@weight_add 002A                      __pdataBANK1 00E3                         ??_fround 0042  
                  sprintf@tmpval 00B9                        ___fladd@a 0055                        ___fladd@b 0051  
                     fround@prec 0050                        ___fldiv@a 0070                        ___fldiv@b 0074  
            lcd_set_cursor@F2624 00E3                        ___flmul@a 0028                        ___flmul@b 0024  
                      ___flsub@a 0065                        ___flsub@b 0069                        ___latbits 0003  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0                       ?_i2c_start 0070  
                     ?_i2c_write 0070                __size_of___xxtofl 00AC                __size_of_lcd_init 00EC  
                    sprintf@flag 00B5                      sprintf@eexp 00BD                      sprintf@fval 00BF  
                    sprintf@prec 00C4                 ___lwdiv@dividend 0078           _PIN_MANAGER_Initialize 1DCB  
                       ?___aldiv 0070                         ?___fladd 0051                         ?___fldiv 0070  
                       ?___awdiv 0077                         ?___flneg 0070                         ?___awmod 0070  
                       ?___flmul 0024                         ?___flsub 0065                         ?___fltol 0053  
                       ?___lldiv 0070                         ?___llmod 0070                        __npowers_ 2034  
                     ?__Umul8_16 0070                         ?___lwdiv 0076                         ?___lwmod 0070  
                      _lcd_clear 1E6E                      __tdiv_to_l_ 1455                        _lcd_print 1DEF  
                       ?_lcd_cmd 0070                         ?_command 0072                     ??__div_to_l_ 0078  
                       ?_isdigit 0070         __end_of_set_CELL_CLK_LOW 1D85                 ___lwdiv@quotient 007B  
                       ?_sprintf 00A0                   __size_of_scale 027C          __size_of_lcd_set_cursor 002A  
                ___aldiv@divisor 0070                  ___aldiv@counter 0020                   ___wmul@product 0074  
                      clear_ram0 1D85               __end_of__div_to_l_ 1455                       ?_lcd_clear 0070  
                     ?_lcd_print 0078                ___wmul@multiplier 0070        __size_of_get_CELL_DAT_VAL 0004  
         __size_of_lcd_backlight 000E                      ??_i2c_start 0070                      ??_i2c_write 0070  
                       _i2c_wait 1DB1                         _i2c_stop 0802          ??_OSCILLATOR_Initialize 0070  
                    ??__Umul8_16 0072                 __size_of___aldiv 0090                 __size_of___fladd 0238  
               __size_of___fldiv 01B4                 __size_of___awdiv 0060                 __size_of___flneg 000B  
               __size_of___awmod 0053                 __size_of___flmul 0257                 __size_of___flsub 0020  
               __size_of___fltol 0075                 __size_of___lldiv 005A                 __size_of___llmod 004A  
               __size_of___lwdiv 003C                 __size_of___lwmod 0034                      _fround$1074 004C  
                    _fround$1075 0048                      _isdigit$881 0070                 __size_of_lcd_cmd 0014  
               __size_of_command 0038       __end_of_scale_convert_gram 2000                       sprintf@val 00B1  
                       ___xxtofl 12FA                 __size_of_isdigit 0012                  ___lwdiv@divisor 0076  
                ___lwdiv@counter 007D           __size_of_get_scale_val 00BB                         __ptext10 1E4B  
                       __ptext11 1455                         __ptext20 11E0                         __ptext12 13A6  
                       __ptext21 1010                         __ptext13 1E0C                         __ptext30 1DBD  
                       __ptext22 1FB2                         __ptext14 1F68                         __ptext31 0008  
                       __ptext23 12FA                         __ptext15 10B1                         __ptext40 126A  
                       __ptext32 1000                         __ptext24 001C                         __ptext16 116B  
                       __ptext41 1D92                         __ptext33 0802                         __ptext25 0809  
                       __ptext17 1E2B                         __ptext42 1D77                         __ptext34 1D9C  
                       __ptext26 1E6E                         __ptext18 08F5                         __ptext43 1DCB  
                       __ptext35 1DB1                         __ptext27 1E96                         __ptext19 1DA6  
                       __ptext44 1D8B                         __ptext36 15BD                         __ptext28 1DEF  
                       __ptext37 1D7F                         __ptext29 1EF4                         __ptext38 1D74  
                       __ptext39 1D7B                         __powers_ 2000                         _lcd_init 0809  
               __size_of_sprintf 0612                    __size_of_main 00B8                    _lcd_backlight 1DBD  
                    ??_lcd_clear 007C                      ??_lcd_print 007A                         isdigit@c 0071  
                main@weight_gram 00C7                         scale@scl 0052          __size_of_WDT_Initialize 0004  
                 _lcd_set_cursor 1E96                lcd_set_cursor@cmd 0025                lcd_set_cursor@col 0024  
                      sprintf@ap 00B0                 __tdiv_to_l_@exp1 0025                 __tdiv_to_l_@cntr 0024  
                      sprintf@sp 00C3                lcd_set_cursor@row 0078                 __tdiv_to_l_@quot 0020  
               ___lwmod@dividend 0072                 ___lldiv@dividend 0074          ?_PIN_MANAGER_Initialize 0070  
                 ?_lcd_backlight 0070                _set_CELL_CLK_HIGH 1D74                    _get_scale_val 15BD  
             ?_set_CELL_CLK_HIGH 0070                     ?__tdiv_to_l_ 0070                    __pstringtext1 2000  
                  __pstringtext2 2034                    __pstringtext3 2068                    __pstringtext4 209B  
                  __pstringtext5 20A3                    __pstringtext6 0000              ??_set_CELL_CLK_HIGH 0070  
         __Umul8_16@multiplicand 0070                         sprintf@c 00C6                         sprintf@f 00A0  
               ___lldiv@quotient 0079                  ___lwmod@divisor 0070                  ___lwmod@counter 0075  
               _get_CELL_DAT_VAL 1D7B                     ___aldiv@sign 0021                      _SSPCON1bits 0215  
                    _SSPCON2bits 0216                ?_set_CELL_CLK_LOW 0070           __end_of_lcd_set_cursor 1EC0  
                    _weight_zero 00CB                    ___fladd@signs 0061               ??_set_CELL_CLK_LOW 0070  
 __end_of_PIN_MANAGER_Initialize 1DDD                     ___fladd@aexp 0062                     ___fladd@bexp 0063  
      __end_of_set_CELL_CLK_HIGH 1D77             __Umul8_16@multiplier 0078                   ?_get_scale_val 0026  
              __Umul8_16@product 0074                    __backlightval 006F  



Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 09 00:10:13 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 2.20
    71                           ; Generated 12/02/2020 GMT
    72                           ; 
    73                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F1938 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  0110                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0118                     	;# 
   164  0119                     	;# 
   165  011A                     	;# 
   166  011B                     	;# 
   167  011D                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0191                     	;# 
   171  0191                     	;# 
   172  0192                     	;# 
   173  0193                     	;# 
   174  0193                     	;# 
   175  0193                     	;# 
   176  0194                     	;# 
   177  0195                     	;# 
   178  0196                     	;# 
   179  0199                     	;# 
   180  019A                     	;# 
   181  019B                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019C                     	;# 
   186  019C                     	;# 
   187  019D                     	;# 
   188  019E                     	;# 
   189  019F                     	;# 
   190  020D                     	;# 
   191  0210                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0213                     	;# 
   195  0214                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0217                     	;# 
   200  0291                     	;# 
   201  0291                     	;# 
   202  0292                     	;# 
   203  0293                     	;# 
   204  0294                     	;# 
   205  0295                     	;# 
   206  0295                     	;# 
   207  0296                     	;# 
   208  0298                     	;# 
   209  0298                     	;# 
   210  0299                     	;# 
   211  029A                     	;# 
   212  029B                     	;# 
   213  029C                     	;# 
   214  029C                     	;# 
   215  029D                     	;# 
   216  029E                     	;# 
   217  029F                     	;# 
   218  0311                     	;# 
   219  0311                     	;# 
   220  0312                     	;# 
   221  0313                     	;# 
   222  0314                     	;# 
   223  0315                     	;# 
   224  0315                     	;# 
   225  0316                     	;# 
   226  0318                     	;# 
   227  0318                     	;# 
   228  0319                     	;# 
   229  031A                     	;# 
   230  031C                     	;# 
   231  031C                     	;# 
   232  031D                     	;# 
   233  031E                     	;# 
   234  0394                     	;# 
   235  0395                     	;# 
   236  0396                     	;# 
   237  0415                     	;# 
   238  0416                     	;# 
   239  0417                     	;# 
   240  041C                     	;# 
   241  041D                     	;# 
   242  041E                     	;# 
   243  0791                     	;# 
   244  0792                     	;# 
   245  0793                     	;# 
   246  0794                     	;# 
   247  0795                     	;# 
   248  0798                     	;# 
   249  0799                     	;# 
   250  07A0                     	;# 
   251  07A1                     	;# 
   252  07A3                     	;# 
   253  07A4                     	;# 
   254  07A6                     	;# 
   255  07A7                     	;# 
   256  07A9                     	;# 
   257  07AA                     	;# 
   258  0FE4                     	;# 
   259  0FE5                     	;# 
   260  0FE6                     	;# 
   261  0FE7                     	;# 
   262  0FE8                     	;# 
   263  0FE9                     	;# 
   264  0FEA                     	;# 
   265  0FEB                     	;# 
   266  0FED                     	;# 
   267  0FEE                     	;# 
   268  0FEF                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0008                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000D                     	;# 
   283  000E                     	;# 
   284  0010                     	;# 
   285  0011                     	;# 
   286  0012                     	;# 
   287  0013                     	;# 
   288  0015                     	;# 
   289  0016                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001C                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  008C                     	;# 
   300  008D                     	;# 
   301  008E                     	;# 
   302  0090                     	;# 
   303  0091                     	;# 
   304  0092                     	;# 
   305  0093                     	;# 
   306  0095                     	;# 
   307  0096                     	;# 
   308  0097                     	;# 
   309  0098                     	;# 
   310  0099                     	;# 
   311  009A                     	;# 
   312  009B                     	;# 
   313  009B                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  0110                     	;# 
   321  0111                     	;# 
   322  0112                     	;# 
   323  0113                     	;# 
   324  0114                     	;# 
   325  0115                     	;# 
   326  0116                     	;# 
   327  0117                     	;# 
   328  0118                     	;# 
   329  0119                     	;# 
   330  011A                     	;# 
   331  011B                     	;# 
   332  011D                     	;# 
   333  018C                     	;# 
   334  018D                     	;# 
   335  0191                     	;# 
   336  0191                     	;# 
   337  0192                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0194                     	;# 
   342  0195                     	;# 
   343  0196                     	;# 
   344  0199                     	;# 
   345  019A                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019C                     	;# 
   351  019C                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019F                     	;# 
   355  020D                     	;# 
   356  0210                     	;# 
   357  0211                     	;# 
   358  0212                     	;# 
   359  0213                     	;# 
   360  0214                     	;# 
   361  0215                     	;# 
   362  0215                     	;# 
   363  0216                     	;# 
   364  0217                     	;# 
   365  0291                     	;# 
   366  0291                     	;# 
   367  0292                     	;# 
   368  0293                     	;# 
   369  0294                     	;# 
   370  0295                     	;# 
   371  0295                     	;# 
   372  0296                     	;# 
   373  0298                     	;# 
   374  0298                     	;# 
   375  0299                     	;# 
   376  029A                     	;# 
   377  029B                     	;# 
   378  029C                     	;# 
   379  029C                     	;# 
   380  029D                     	;# 
   381  029E                     	;# 
   382  029F                     	;# 
   383  0311                     	;# 
   384  0311                     	;# 
   385  0312                     	;# 
   386  0313                     	;# 
   387  0314                     	;# 
   388  0315                     	;# 
   389  0315                     	;# 
   390  0316                     	;# 
   391  0318                     	;# 
   392  0318                     	;# 
   393  0319                     	;# 
   394  031A                     	;# 
   395  031C                     	;# 
   396  031C                     	;# 
   397  031D                     	;# 
   398  031E                     	;# 
   399  0394                     	;# 
   400  0395                     	;# 
   401  0396                     	;# 
   402  0415                     	;# 
   403  0416                     	;# 
   404  0417                     	;# 
   405  041C                     	;# 
   406  041D                     	;# 
   407  041E                     	;# 
   408  0791                     	;# 
   409  0792                     	;# 
   410  0793                     	;# 
   411  0794                     	;# 
   412  0795                     	;# 
   413  0798                     	;# 
   414  0799                     	;# 
   415  07A0                     	;# 
   416  07A1                     	;# 
   417  07A3                     	;# 
   418  07A4                     	;# 
   419  07A6                     	;# 
   420  07A7                     	;# 
   421  07A9                     	;# 
   422  07AA                     	;# 
   423  0FE4                     	;# 
   424  0FE5                     	;# 
   425  0FE6                     	;# 
   426  0FE7                     	;# 
   427  0FE8                     	;# 
   428  0FE9                     	;# 
   429  0FEA                     	;# 
   430  0FEB                     	;# 
   431  0FED                     	;# 
   432  0FEE                     	;# 
   433  0FEF                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  000E                     	;# 
   449  0010                     	;# 
   450  0011                     	;# 
   451  0012                     	;# 
   452  0013                     	;# 
   453  0015                     	;# 
   454  0016                     	;# 
   455  0016                     	;# 
   456  0017                     	;# 
   457  0018                     	;# 
   458  0019                     	;# 
   459  001A                     	;# 
   460  001B                     	;# 
   461  001C                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  008C                     	;# 
   465  008D                     	;# 
   466  008E                     	;# 
   467  0090                     	;# 
   468  0091                     	;# 
   469  0092                     	;# 
   470  0093                     	;# 
   471  0095                     	;# 
   472  0096                     	;# 
   473  0097                     	;# 
   474  0098                     	;# 
   475  0099                     	;# 
   476  009A                     	;# 
   477  009B                     	;# 
   478  009B                     	;# 
   479  009C                     	;# 
   480  009D                     	;# 
   481  009E                     	;# 
   482  010C                     	;# 
   483  010D                     	;# 
   484  010E                     	;# 
   485  0110                     	;# 
   486  0111                     	;# 
   487  0112                     	;# 
   488  0113                     	;# 
   489  0114                     	;# 
   490  0115                     	;# 
   491  0116                     	;# 
   492  0117                     	;# 
   493  0118                     	;# 
   494  0119                     	;# 
   495  011A                     	;# 
   496  011B                     	;# 
   497  011D                     	;# 
   498  018C                     	;# 
   499  018D                     	;# 
   500  0191                     	;# 
   501  0191                     	;# 
   502  0192                     	;# 
   503  0193                     	;# 
   504  0193                     	;# 
   505  0193                     	;# 
   506  0194                     	;# 
   507  0195                     	;# 
   508  0196                     	;# 
   509  0199                     	;# 
   510  019A                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019B                     	;# 
   514  019B                     	;# 
   515  019C                     	;# 
   516  019C                     	;# 
   517  019D                     	;# 
   518  019E                     	;# 
   519  019F                     	;# 
   520  020D                     	;# 
   521  0210                     	;# 
   522  0211                     	;# 
   523  0212                     	;# 
   524  0213                     	;# 
   525  0214                     	;# 
   526  0215                     	;# 
   527  0215                     	;# 
   528  0216                     	;# 
   529  0217                     	;# 
   530  0291                     	;# 
   531  0291                     	;# 
   532  0292                     	;# 
   533  0293                     	;# 
   534  0294                     	;# 
   535  0295                     	;# 
   536  0295                     	;# 
   537  0296                     	;# 
   538  0298                     	;# 
   539  0298                     	;# 
   540  0299                     	;# 
   541  029A                     	;# 
   542  029B                     	;# 
   543  029C                     	;# 
   544  029C                     	;# 
   545  029D                     	;# 
   546  029E                     	;# 
   547  029F                     	;# 
   548  0311                     	;# 
   549  0311                     	;# 
   550  0312                     	;# 
   551  0313                     	;# 
   552  0314                     	;# 
   553  0315                     	;# 
   554  0315                     	;# 
   555  0316                     	;# 
   556  0318                     	;# 
   557  0318                     	;# 
   558  0319                     	;# 
   559  031A                     	;# 
   560  031C                     	;# 
   561  031C                     	;# 
   562  031D                     	;# 
   563  031E                     	;# 
   564  0394                     	;# 
   565  0395                     	;# 
   566  0396                     	;# 
   567  0415                     	;# 
   568  0416                     	;# 
   569  0417                     	;# 
   570  041C                     	;# 
   571  041D                     	;# 
   572  041E                     	;# 
   573  0791                     	;# 
   574  0792                     	;# 
   575  0793                     	;# 
   576  0794                     	;# 
   577  0795                     	;# 
   578  0798                     	;# 
   579  0799                     	;# 
   580  07A0                     	;# 
   581  07A1                     	;# 
   582  07A3                     	;# 
   583  07A4                     	;# 
   584  07A6                     	;# 
   585  07A7                     	;# 
   586  07A9                     	;# 
   587  07AA                     	;# 
   588  0FE4                     	;# 
   589  0FE5                     	;# 
   590  0FE6                     	;# 
   591  0FE7                     	;# 
   592  0FE8                     	;# 
   593  0FE9                     	;# 
   594  0FEA                     	;# 
   595  0FEB                     	;# 
   596  0FED                     	;# 
   597  0FEE                     	;# 
   598  0FEF                     	;# 
   599  0000                     	;# 
   600  0001                     	;# 
   601  0002                     	;# 
   602  0003                     	;# 
   603  0004                     	;# 
   604  0005                     	;# 
   605  0006                     	;# 
   606  0007                     	;# 
   607  0008                     	;# 
   608  0009                     	;# 
   609  000A                     	;# 
   610  000B                     	;# 
   611  000C                     	;# 
   612  000D                     	;# 
   613  000E                     	;# 
   614  0010                     	;# 
   615  0011                     	;# 
   616  0012                     	;# 
   617  0013                     	;# 
   618  0015                     	;# 
   619  0016                     	;# 
   620  0016                     	;# 
   621  0017                     	;# 
   622  0018                     	;# 
   623  0019                     	;# 
   624  001A                     	;# 
   625  001B                     	;# 
   626  001C                     	;# 
   627  001E                     	;# 
   628  001F                     	;# 
   629  008C                     	;# 
   630  008D                     	;# 
   631  008E                     	;# 
   632  0090                     	;# 
   633  0091                     	;# 
   634  0092                     	;# 
   635  0093                     	;# 
   636  0095                     	;# 
   637  0096                     	;# 
   638  0097                     	;# 
   639  0098                     	;# 
   640  0099                     	;# 
   641  009A                     	;# 
   642  009B                     	;# 
   643  009B                     	;# 
   644  009C                     	;# 
   645  009D                     	;# 
   646  009E                     	;# 
   647  010C                     	;# 
   648  010D                     	;# 
   649  010E                     	;# 
   650  0110                     	;# 
   651  0111                     	;# 
   652  0112                     	;# 
   653  0113                     	;# 
   654  0114                     	;# 
   655  0115                     	;# 
   656  0116                     	;# 
   657  0117                     	;# 
   658  0118                     	;# 
   659  0119                     	;# 
   660  011A                     	;# 
   661  011B                     	;# 
   662  011D                     	;# 
   663  018C                     	;# 
   664  018D                     	;# 
   665  0191                     	;# 
   666  0191                     	;# 
   667  0192                     	;# 
   668  0193                     	;# 
   669  0193                     	;# 
   670  0193                     	;# 
   671  0194                     	;# 
   672  0195                     	;# 
   673  0196                     	;# 
   674  0199                     	;# 
   675  019A                     	;# 
   676  019B                     	;# 
   677  019B                     	;# 
   678  019B                     	;# 
   679  019B                     	;# 
   680  019C                     	;# 
   681  019C                     	;# 
   682  019D                     	;# 
   683  019E                     	;# 
   684  019F                     	;# 
   685  020D                     	;# 
   686  0210                     	;# 
   687  0211                     	;# 
   688  0212                     	;# 
   689  0213                     	;# 
   690  0214                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0216                     	;# 
   694  0217                     	;# 
   695  0291                     	;# 
   696  0291                     	;# 
   697  0292                     	;# 
   698  0293                     	;# 
   699  0294                     	;# 
   700  0295                     	;# 
   701  0295                     	;# 
   702  0296                     	;# 
   703  0298                     	;# 
   704  0298                     	;# 
   705  0299                     	;# 
   706  029A                     	;# 
   707  029B                     	;# 
   708  029C                     	;# 
   709  029C                     	;# 
   710  029D                     	;# 
   711  029E                     	;# 
   712  029F                     	;# 
   713  0311                     	;# 
   714  0311                     	;# 
   715  0312                     	;# 
   716  0313                     	;# 
   717  0314                     	;# 
   718  0315                     	;# 
   719  0315                     	;# 
   720  0316                     	;# 
   721  0318                     	;# 
   722  0318                     	;# 
   723  0319                     	;# 
   724  031A                     	;# 
   725  031C                     	;# 
   726  031C                     	;# 
   727  031D                     	;# 
   728  031E                     	;# 
   729  0394                     	;# 
   730  0395                     	;# 
   731  0396                     	;# 
   732  0415                     	;# 
   733  0416                     	;# 
   734  0417                     	;# 
   735  041C                     	;# 
   736  041D                     	;# 
   737  041E                     	;# 
   738  0791                     	;# 
   739  0792                     	;# 
   740  0793                     	;# 
   741  0794                     	;# 
   742  0795                     	;# 
   743  0798                     	;# 
   744  0799                     	;# 
   745  07A0                     	;# 
   746  07A1                     	;# 
   747  07A3                     	;# 
   748  07A4                     	;# 
   749  07A6                     	;# 
   750  07A7                     	;# 
   751  07A9                     	;# 
   752  07AA                     	;# 
   753  0FE4                     	;# 
   754  0FE5                     	;# 
   755  0FE6                     	;# 
   756  0FE7                     	;# 
   757  0FE8                     	;# 
   758  0FE9                     	;# 
   759  0FEA                     	;# 
   760  0FEB                     	;# 
   761  0FED                     	;# 
   762  0FEE                     	;# 
   763  0FEF                     	;# 
   764  0000                     	;# 
   765  0001                     	;# 
   766  0002                     	;# 
   767  0003                     	;# 
   768  0004                     	;# 
   769  0005                     	;# 
   770  0006                     	;# 
   771  0007                     	;# 
   772  0008                     	;# 
   773  0009                     	;# 
   774  000A                     	;# 
   775  000B                     	;# 
   776  000C                     	;# 
   777  000D                     	;# 
   778  000E                     	;# 
   779  0010                     	;# 
   780  0011                     	;# 
   781  0012                     	;# 
   782  0013                     	;# 
   783  0015                     	;# 
   784  0016                     	;# 
   785  0016                     	;# 
   786  0017                     	;# 
   787  0018                     	;# 
   788  0019                     	;# 
   789  001A                     	;# 
   790  001B                     	;# 
   791  001C                     	;# 
   792  001E                     	;# 
   793  001F                     	;# 
   794  008C                     	;# 
   795  008D                     	;# 
   796  008E                     	;# 
   797  0090                     	;# 
   798  0091                     	;# 
   799  0092                     	;# 
   800  0093                     	;# 
   801  0095                     	;# 
   802  0096                     	;# 
   803  0097                     	;# 
   804  0098                     	;# 
   805  0099                     	;# 
   806  009A                     	;# 
   807  009B                     	;# 
   808  009B                     	;# 
   809  009C                     	;# 
   810  009D                     	;# 
   811  009E                     	;# 
   812  010C                     	;# 
   813  010D                     	;# 
   814  010E                     	;# 
   815  0110                     	;# 
   816  0111                     	;# 
   817  0112                     	;# 
   818  0113                     	;# 
   819  0114                     	;# 
   820  0115                     	;# 
   821  0116                     	;# 
   822  0117                     	;# 
   823  0118                     	;# 
   824  0119                     	;# 
   825  011A                     	;# 
   826  011B                     	;# 
   827  011D                     	;# 
   828  018C                     	;# 
   829  018D                     	;# 
   830  0191                     	;# 
   831  0191                     	;# 
   832  0192                     	;# 
   833  0193                     	;# 
   834  0193                     	;# 
   835  0193                     	;# 
   836  0194                     	;# 
   837  0195                     	;# 
   838  0196                     	;# 
   839  0199                     	;# 
   840  019A                     	;# 
   841  019B                     	;# 
   842  019B                     	;# 
   843  019B                     	;# 
   844  019B                     	;# 
   845  019C                     	;# 
   846  019C                     	;# 
   847  019D                     	;# 
   848  019E                     	;# 
   849  019F                     	;# 
   850  020D                     	;# 
   851  0210                     	;# 
   852  0211                     	;# 
   853  0212                     	;# 
   854  0213                     	;# 
   855  0214                     	;# 
   856  0215                     	;# 
   857  0215                     	;# 
   858  0216                     	;# 
   859  0217                     	;# 
   860  0291                     	;# 
   861  0291                     	;# 
   862  0292                     	;# 
   863  0293                     	;# 
   864  0294                     	;# 
   865  0295                     	;# 
   866  0295                     	;# 
   867  0296                     	;# 
   868  0298                     	;# 
   869  0298                     	;# 
   870  0299                     	;# 
   871  029A                     	;# 
   872  029B                     	;# 
   873  029C                     	;# 
   874  029C                     	;# 
   875  029D                     	;# 
   876  029E                     	;# 
   877  029F                     	;# 
   878  0311                     	;# 
   879  0311                     	;# 
   880  0312                     	;# 
   881  0313                     	;# 
   882  0314                     	;# 
   883  0315                     	;# 
   884  0315                     	;# 
   885  0316                     	;# 
   886  0318                     	;# 
   887  0318                     	;# 
   888  0319                     	;# 
   889  031A                     	;# 
   890  031C                     	;# 
   891  031C                     	;# 
   892  031D                     	;# 
   893  031E                     	;# 
   894  0394                     	;# 
   895  0395                     	;# 
   896  0396                     	;# 
   897  0415                     	;# 
   898  0416                     	;# 
   899  0417                     	;# 
   900  041C                     	;# 
   901  041D                     	;# 
   902  041E                     	;# 
   903  0791                     	;# 
   904  0792                     	;# 
   905  0793                     	;# 
   906  0794                     	;# 
   907  0795                     	;# 
   908  0798                     	;# 
   909  0799                     	;# 
   910  07A0                     	;# 
   911  07A1                     	;# 
   912  07A3                     	;# 
   913  07A4                     	;# 
   914  07A6                     	;# 
   915  07A7                     	;# 
   916  07A9                     	;# 
   917  07AA                     	;# 
   918  0FE4                     	;# 
   919  0FE5                     	;# 
   920  0FE6                     	;# 
   921  0FE7                     	;# 
   922  0FE8                     	;# 
   923  0FE9                     	;# 
   924  0FEA                     	;# 
   925  0FEB                     	;# 
   926  0FED                     	;# 
   927  0FEE                     	;# 
   928  0FEF                     	;# 
   929  0000                     	;# 
   930  0001                     	;# 
   931  0002                     	;# 
   932  0003                     	;# 
   933  0004                     	;# 
   934  0005                     	;# 
   935  0006                     	;# 
   936  0007                     	;# 
   937  0008                     	;# 
   938  0009                     	;# 
   939  000A                     	;# 
   940  000B                     	;# 
   941  000C                     	;# 
   942  000D                     	;# 
   943  000E                     	;# 
   944  0010                     	;# 
   945  0011                     	;# 
   946  0012                     	;# 
   947  0013                     	;# 
   948  0015                     	;# 
   949  0016                     	;# 
   950  0016                     	;# 
   951  0017                     	;# 
   952  0018                     	;# 
   953  0019                     	;# 
   954  001A                     	;# 
   955  001B                     	;# 
   956  001C                     	;# 
   957  001E                     	;# 
   958  001F                     	;# 
   959  008C                     	;# 
   960  008D                     	;# 
   961  008E                     	;# 
   962  0090                     	;# 
   963  0091                     	;# 
   964  0092                     	;# 
   965  0093                     	;# 
   966  0095                     	;# 
   967  0096                     	;# 
   968  0097                     	;# 
   969  0098                     	;# 
   970  0099                     	;# 
   971  009A                     	;# 
   972  009B                     	;# 
   973  009B                     	;# 
   974  009C                     	;# 
   975  009D                     	;# 
   976  009E                     	;# 
   977  010C                     	;# 
   978  010D                     	;# 
   979  010E                     	;# 
   980  0110                     	;# 
   981  0111                     	;# 
   982  0112                     	;# 
   983  0113                     	;# 
   984  0114                     	;# 
   985  0115                     	;# 
   986  0116                     	;# 
   987  0117                     	;# 
   988  0118                     	;# 
   989  0119                     	;# 
   990  011A                     	;# 
   991  011B                     	;# 
   992  011D                     	;# 
   993  018C                     	;# 
   994  018D                     	;# 
   995  0191                     	;# 
   996  0191                     	;# 
   997  0192                     	;# 
   998  0193                     	;# 
   999  0193                     	;# 
  1000  0193                     	;# 
  1001  0194                     	;# 
  1002  0195                     	;# 
  1003  0196                     	;# 
  1004  0199                     	;# 
  1005  019A                     	;# 
  1006  019B                     	;# 
  1007  019B                     	;# 
  1008  019B                     	;# 
  1009  019B                     	;# 
  1010  019C                     	;# 
  1011  019C                     	;# 
  1012  019D                     	;# 
  1013  019E                     	;# 
  1014  019F                     	;# 
  1015  020D                     	;# 
  1016  0210                     	;# 
  1017  0211                     	;# 
  1018  0212                     	;# 
  1019  0213                     	;# 
  1020  0214                     	;# 
  1021  0215                     	;# 
  1022  0215                     	;# 
  1023  0216                     	;# 
  1024  0217                     	;# 
  1025  0291                     	;# 
  1026  0291                     	;# 
  1027  0292                     	;# 
  1028  0293                     	;# 
  1029  0294                     	;# 
  1030  0295                     	;# 
  1031  0295                     	;# 
  1032  0296                     	;# 
  1033  0298                     	;# 
  1034  0298                     	;# 
  1035  0299                     	;# 
  1036  029A                     	;# 
  1037  029B                     	;# 
  1038  029C                     	;# 
  1039  029C                     	;# 
  1040  029D                     	;# 
  1041  029E                     	;# 
  1042  029F                     	;# 
  1043  0311                     	;# 
  1044  0311                     	;# 
  1045  0312                     	;# 
  1046  0313                     	;# 
  1047  0314                     	;# 
  1048  0315                     	;# 
  1049  0315                     	;# 
  1050  0316                     	;# 
  1051  0318                     	;# 
  1052  0318                     	;# 
  1053  0319                     	;# 
  1054  031A                     	;# 
  1055  031C                     	;# 
  1056  031C                     	;# 
  1057  031D                     	;# 
  1058  031E                     	;# 
  1059  0394                     	;# 
  1060  0395                     	;# 
  1061  0396                     	;# 
  1062  0415                     	;# 
  1063  0416                     	;# 
  1064  0417                     	;# 
  1065  041C                     	;# 
  1066  041D                     	;# 
  1067  041E                     	;# 
  1068  0791                     	;# 
  1069  0792                     	;# 
  1070  0793                     	;# 
  1071  0794                     	;# 
  1072  0795                     	;# 
  1073  0798                     	;# 
  1074  0799                     	;# 
  1075  07A0                     	;# 
  1076  07A1                     	;# 
  1077  07A3                     	;# 
  1078  07A4                     	;# 
  1079  07A6                     	;# 
  1080  07A7                     	;# 
  1081  07A9                     	;# 
  1082  07AA                     	;# 
  1083  0FE4                     	;# 
  1084  0FE5                     	;# 
  1085  0FE6                     	;# 
  1086  0FE7                     	;# 
  1087  0FE8                     	;# 
  1088  0FE9                     	;# 
  1089  0FEA                     	;# 
  1090  0FEB                     	;# 
  1091  0FED                     	;# 
  1092  0FEE                     	;# 
  1093  0FEF                     	;# 
  1094  0000                     	;# 
  1095  0001                     	;# 
  1096  0002                     	;# 
  1097  0003                     	;# 
  1098  0004                     	;# 
  1099  0005                     	;# 
  1100  0006                     	;# 
  1101  0007                     	;# 
  1102  0008                     	;# 
  1103  0009                     	;# 
  1104  000A                     	;# 
  1105  000B                     	;# 
  1106  000C                     	;# 
  1107  000D                     	;# 
  1108  000E                     	;# 
  1109  0010                     	;# 
  1110  0011                     	;# 
  1111  0012                     	;# 
  1112  0013                     	;# 
  1113  0015                     	;# 
  1114  0016                     	;# 
  1115  0016                     	;# 
  1116  0017                     	;# 
  1117  0018                     	;# 
  1118  0019                     	;# 
  1119  001A                     	;# 
  1120  001B                     	;# 
  1121  001C                     	;# 
  1122  001E                     	;# 
  1123  001F                     	;# 
  1124  008C                     	;# 
  1125  008D                     	;# 
  1126  008E                     	;# 
  1127  0090                     	;# 
  1128  0091                     	;# 
  1129  0092                     	;# 
  1130  0093                     	;# 
  1131  0095                     	;# 
  1132  0096                     	;# 
  1133  0097                     	;# 
  1134  0098                     	;# 
  1135  0099                     	;# 
  1136  009A                     	;# 
  1137  009B                     	;# 
  1138  009B                     	;# 
  1139  009C                     	;# 
  1140  009D                     	;# 
  1141  009E                     	;# 
  1142  010C                     	;# 
  1143  010D                     	;# 
  1144  010E                     	;# 
  1145  0110                     	;# 
  1146  0111                     	;# 
  1147  0112                     	;# 
  1148  0113                     	;# 
  1149  0114                     	;# 
  1150  0115                     	;# 
  1151  0116                     	;# 
  1152  0117                     	;# 
  1153  0118                     	;# 
  1154  0119                     	;# 
  1155  011A                     	;# 
  1156  011B                     	;# 
  1157  011D                     	;# 
  1158  018C                     	;# 
  1159  018D                     	;# 
  1160  0191                     	;# 
  1161  0191                     	;# 
  1162  0192                     	;# 
  1163  0193                     	;# 
  1164  0193                     	;# 
  1165  0193                     	;# 
  1166  0194                     	;# 
  1167  0195                     	;# 
  1168  0196                     	;# 
  1169  0199                     	;# 
  1170  019A                     	;# 
  1171  019B                     	;# 
  1172  019B                     	;# 
  1173  019B                     	;# 
  1174  019B                     	;# 
  1175  019C                     	;# 
  1176  019C                     	;# 
  1177  019D                     	;# 
  1178  019E                     	;# 
  1179  019F                     	;# 
  1180  020D                     	;# 
  1181  0210                     	;# 
  1182  0211                     	;# 
  1183  0212                     	;# 
  1184  0213                     	;# 
  1185  0214                     	;# 
  1186  0215                     	;# 
  1187  0215                     	;# 
  1188  0216                     	;# 
  1189  0217                     	;# 
  1190  0291                     	;# 
  1191  0291                     	;# 
  1192  0292                     	;# 
  1193  0293                     	;# 
  1194  0294                     	;# 
  1195  0295                     	;# 
  1196  0295                     	;# 
  1197  0296                     	;# 
  1198  0298                     	;# 
  1199  0298                     	;# 
  1200  0299                     	;# 
  1201  029A                     	;# 
  1202  029B                     	;# 
  1203  029C                     	;# 
  1204  029C                     	;# 
  1205  029D                     	;# 
  1206  029E                     	;# 
  1207  029F                     	;# 
  1208  0311                     	;# 
  1209  0311                     	;# 
  1210  0312                     	;# 
  1211  0313                     	;# 
  1212  0314                     	;# 
  1213  0315                     	;# 
  1214  0315                     	;# 
  1215  0316                     	;# 
  1216  0318                     	;# 
  1217  0318                     	;# 
  1218  0319                     	;# 
  1219  031A                     	;# 
  1220  031C                     	;# 
  1221  031C                     	;# 
  1222  031D                     	;# 
  1223  031E                     	;# 
  1224  0394                     	;# 
  1225  0395                     	;# 
  1226  0396                     	;# 
  1227  0415                     	;# 
  1228  0416                     	;# 
  1229  0417                     	;# 
  1230  041C                     	;# 
  1231  041D                     	;# 
  1232  041E                     	;# 
  1233  0791                     	;# 
  1234  0792                     	;# 
  1235  0793                     	;# 
  1236  0794                     	;# 
  1237  0795                     	;# 
  1238  0798                     	;# 
  1239  0799                     	;# 
  1240  07A0                     	;# 
  1241  07A1                     	;# 
  1242  07A3                     	;# 
  1243  07A4                     	;# 
  1244  07A6                     	;# 
  1245  07A7                     	;# 
  1246  07A9                     	;# 
  1247  07AA                     	;# 
  1248  0FE4                     	;# 
  1249  0FE5                     	;# 
  1250  0FE6                     	;# 
  1251  0FE7                     	;# 
  1252  0FE8                     	;# 
  1253  0FE9                     	;# 
  1254  0FEA                     	;# 
  1255  0FEB                     	;# 
  1256  0FED                     	;# 
  1257  0FEE                     	;# 
  1258  0FEF                     	;# 
  1259                           
  1260                           	psect	idataBANK1
  1261  1000                     __pidataBANK1:
  1262                           
  1263                           ;initializer for lcd_set_cursor@F2624
  1264  1000  3400               	retlw	0
  1265  1001  3440               	retlw	64
  1266  1002  3414               	retlw	20
  1267  1003  3454               	retlw	84
  1268                           
  1269                           	psect	stringtext1
  1270  2037                     __pstringtext1:
  1271  2037                     __powers_:
  1272  2037  3400               	retlw	0
  1273  2038  3400               	retlw	0
  1274  2039  3480               	retlw	128
  1275  203A  343F               	retlw	63
  1276  203B  3400               	retlw	0
  1277  203C  3400               	retlw	0
  1278  203D  3420               	retlw	32
  1279  203E  3441               	retlw	65
  1280  203F  3400               	retlw	0
  1281  2040  3400               	retlw	0
  1282  2041  34C8               	retlw	200
  1283  2042  3442               	retlw	66
  1284  2043  3400               	retlw	0
  1285  2044  3400               	retlw	0
  1286  2045  347A               	retlw	122
  1287  2046  3444               	retlw	68
  1288  2047  3400               	retlw	0
  1289  2048  3440               	retlw	64
  1290  2049  341C               	retlw	28
  1291  204A  3446               	retlw	70
  1292  204B  3400               	retlw	0
  1293  204C  3450               	retlw	80
  1294  204D  34C3               	retlw	195
  1295  204E  3447               	retlw	71
  1296  204F  3400               	retlw	0
  1297  2050  3424               	retlw	36
  1298  2051  3474               	retlw	116
  1299  2052  3449               	retlw	73
  1300  2053  3480               	retlw	128
  1301  2054  3496               	retlw	150
  1302  2055  3418               	retlw	24
  1303  2056  344B               	retlw	75
  1304  2057  3420               	retlw	32
  1305  2058  34BC               	retlw	188
  1306  2059  34BE               	retlw	190
  1307  205A  344C               	retlw	76
  1308  205B  3428               	retlw	40
  1309  205C  346B               	retlw	107
  1310  205D  346E               	retlw	110
  1311  205E  344E               	retlw	78
  1312  205F  34F9               	retlw	249
  1313  2060  3402               	retlw	2
  1314  2061  3415               	retlw	21
  1315  2062  3450               	retlw	80
  1316  2063  34EC               	retlw	236
  1317  2064  3478               	retlw	120
  1318  2065  34AD               	retlw	173
  1319  2066  3460               	retlw	96
  1320  2067  34CA               	retlw	202
  1321  2068  34F2               	retlw	242
  1322  2069  3449               	retlw	73
  1323  206A  3471               	retlw	113
  1324  206B                     __end_of__powers_:
  1325                           
  1326                           	psect	stringtext2
  1327  206B                     __pstringtext2:
  1328  206B                     __npowers_:
  1329  206B  3400               	retlw	0
  1330  206C  3400               	retlw	0
  1331  206D  3480               	retlw	128
  1332  206E  343F               	retlw	63
  1333  206F  34CD               	retlw	205
  1334  2070  34CC               	retlw	204
  1335  2071  34CC               	retlw	204
  1336  2072  343D               	retlw	61
  1337  2073  340A               	retlw	10
  1338  2074  34D7               	retlw	215
  1339  2075  3423               	retlw	35
  1340  2076  343C               	retlw	60
  1341  2077  346F               	retlw	111
  1342  2078  3412               	retlw	18
  1343  2079  3483               	retlw	131
  1344  207A  343A               	retlw	58
  1345  207B  3417               	retlw	23
  1346  207C  34B7               	retlw	183
  1347  207D  34D1               	retlw	209
  1348  207E  3438               	retlw	56
  1349  207F  34AC               	retlw	172
  1350  2080  34C5               	retlw	197
  1351  2081  3427               	retlw	39
  1352  2082  3437               	retlw	55
  1353  2083  34BD               	retlw	189
  1354  2084  3437               	retlw	55
  1355  2085  3486               	retlw	134
  1356  2086  3435               	retlw	53
  1357  2087  3495               	retlw	149
  1358  2088  34BF               	retlw	191
  1359  2089  34D6               	retlw	214
  1360  208A  3433               	retlw	51
  1361  208B  3477               	retlw	119
  1362  208C  34CC               	retlw	204
  1363  208D  342B               	retlw	43
  1364  208E  3432               	retlw	50
  1365  208F  345F               	retlw	95
  1366  2090  3470               	retlw	112
  1367  2091  3489               	retlw	137
  1368  2092  3430               	retlw	48
  1369  2093  34FF               	retlw	255
  1370  2094  34E6               	retlw	230
  1371  2095  34DB               	retlw	219
  1372  2096  342E               	retlw	46
  1373  2097  3408               	retlw	8
  1374  2098  34E5               	retlw	229
  1375  2099  343C               	retlw	60
  1376  209A  341E               	retlw	30
  1377  209B  3460               	retlw	96
  1378  209C  3442               	retlw	66
  1379  209D  34A2               	retlw	162
  1380  209E  340D               	retlw	13
  1381  209F                     __end_of__npowers_:
  1382                           
  1383                           	psect	stringtext3
  1384  2000                     __pstringtext3:
  1385  2000                     _dpowers:
  1386  2000  3401               	retlw	1
  1387  2001  3400               	retlw	0
  1388  2002  3400               	retlw	0
  1389  2003  3400               	retlw	0
  1390  2004  340A               	retlw	10
  1391  2005  3400               	retlw	0
  1392  2006  3400               	retlw	0
  1393  2007  3400               	retlw	0
  1394  2008  3464               	retlw	100
  1395  2009  3400               	retlw	0
  1396  200A  3400               	retlw	0
  1397  200B  3400               	retlw	0
  1398  200C  34E8               	retlw	232
  1399  200D  3403               	retlw	3
  1400  200E  3400               	retlw	0
  1401  200F  3400               	retlw	0
  1402  2010  3410               	retlw	16
  1403  2011  3427               	retlw	39
  1404  2012  3400               	retlw	0
  1405  2013  3400               	retlw	0
  1406  2014  34A0               	retlw	160
  1407  2015  3486               	retlw	134
  1408  2016  3401               	retlw	1
  1409  2017  3400               	retlw	0
  1410  2018  3440               	retlw	64
  1411  2019  3442               	retlw	66
  1412  201A  340F               	retlw	15
  1413  201B  3400               	retlw	0
  1414  201C  3480               	retlw	128
  1415  201D  3496               	retlw	150
  1416  201E  3498               	retlw	152
  1417  201F  3400               	retlw	0
  1418  2020  3400               	retlw	0
  1419  2021  34E1               	retlw	225
  1420  2022  34F5               	retlw	245
  1421  2023  3405               	retlw	5
  1422  2024  3400               	retlw	0
  1423  2025  34CA               	retlw	202
  1424  2026  349A               	retlw	154
  1425  2027  343B               	retlw	59
  1426  2028                     __end_of_dpowers:
  1427  000C                     _PORTAbits	set	12
  1428  0095                     _OPTION_REGbits	set	149
  1429  008D                     _TRISB	set	141
  1430  008C                     _TRISA	set	140
  1431  0097                     _WDTCON	set	151
  1432  0098                     _OSCTUNE	set	152
  1433  0099                     _OSCCON	set	153
  1434  010D                     _LATB	set	269
  1435  010C                     _LATA	set	268
  1436  0116                     _BORCON	set	278
  1437  018C                     _ANSELA	set	396
  1438  018D                     _ANSELB	set	397
  1439  0215                     _SSPCON1bits	set	533
  1440  0214                     _SSPSTATbits	set	532
  1441  0211                     _SSPBUF	set	529
  1442  0216                     _SSPCON2bits	set	534
  1443  0214                     _SSPSTAT	set	532
  1444  0216                     _SSPCON2	set	534
  1445  0215                     _SSPCON1	set	533
  1446  0212                     _SSPADD	set	530
  1447  020D                     _WPUB	set	525
  1448  2028                     STR_4:
  1449  2028  3444               	retlw	68	;'D'
  1450  2029  3469               	retlw	105	;'i'
  1451  202A  3476               	retlw	118	;'v'
  1452  202B  3469               	retlw	105	;'i'
  1453  202C  3464               	retlw	100	;'d'
  1454  202D  3465               	retlw	101	;'e'
  1455  202E  3420               	retlw	32	;' '
  1456  202F  3476               	retlw	118	;'v'
  1457  2030  3461               	retlw	97	;'a'
  1458  2031  346C               	retlw	108	;'l'
  1459  2032  343A               	retlw	58	;':'
  1460  2033  3420               	retlw	32	;' '
  1461  2034  3425               	retlw	37	;'%'
  1462  2035  3464               	retlw	100	;'d'
  1463  2036  3400               	retlw	0
  1464                           
  1465                           	psect	stringtext4
  1466  209F                     __pstringtext4:
  1467  209F                     STR_2:
  1468  209F  344C               	retlw	76	;'L'
  1469  20A0  346F               	retlw	111	;'o'
  1470  20A1  3461               	retlw	97	;'a'
  1471  20A2  3464               	retlw	100	;'d'
  1472  20A3  3420               	retlw	32	;' '
  1473  20A4  3463               	retlw	99	;'c'
  1474  20A5  3465               	retlw	101	;'e'
  1475  20A6  346C               	retlw	108	;'l'
  1476  20A7  346C               	retlw	108	;'l'
  1477  20A8  3420               	retlw	32	;' '
  1478  20A9  3455               	retlw	85	;'U'
  1479  20AA  346E               	retlw	110	;'n'
  1480  20AB  3469               	retlw	105	;'i'
  1481  20AC  3474               	retlw	116	;'t'
  1482  20AD  3400               	retlw	0
  1483                           
  1484                           	psect	stringtext5
  1485  20AE                     __pstringtext5:
  1486  20AE                     STR_1:
  1487  20AE  3449               	retlw	73	;'I'
  1488  20AF  346E               	retlw	110	;'n'
  1489  20B0  3469               	retlw	105	;'i'
  1490  20B1  3474               	retlw	116	;'t'
  1491  20B2  3469               	retlw	105	;'i'
  1492  20B3  3461               	retlw	97	;'a'
  1493  20B4  346C               	retlw	108	;'l'
  1494  20B5  3469               	retlw	105	;'i'
  1495  20B6  347A               	retlw	122	;'z'
  1496  20B7  3465               	retlw	101	;'e'
  1497  20B8  3400               	retlw	0
  1498                           
  1499                           	psect	stringtext6
  1500  20B9                     __pstringtext6:
  1501  20B9                     STR_6:
  1502  20B9  3425               	retlw	37	;'%'
  1503  20BA  3433               	retlw	51	;'3'
  1504  20BB  342E               	retlw	46	;'.'
  1505  20BC  3432               	retlw	50	;'2'
  1506  20BD  3466               	retlw	102	;'f'
  1507  20BE  3420               	retlw	32	;' '
  1508  20BF  3467               	retlw	103	;'g'
  1509  20C0  3472               	retlw	114	;'r'
  1510  20C1  3461               	retlw	97	;'a'
  1511  20C2  346D               	retlw	109	;'m'
  1512  20C3  3400               	retlw	0
  1513                           
  1514                           	psect	stringtext7
  1515  20C4                     __pstringtext7:
  1516  20C4                     STR_3:
  1517  20C4  3425               	retlw	37	;'%'
  1518  20C5  346C               	retlw	108	;'l'
  1519  20C6  3475               	retlw	117	;'u'
  1520  20C7  3420               	retlw	32	;' '
  1521  20C8  3476               	retlw	118	;'v'
  1522  20C9  3461               	retlw	97	;'a'
  1523  20CA  346C               	retlw	108	;'l'
  1524  20CB  3420               	retlw	32	;' '
  1525  20CC  3400               	retlw	0
  1526                           
  1527                           	psect	stringtext8
  1528  20CD                     __pstringtext8:
  1529  20CD                     STR_5:
  1530  20CD  3425               	retlw	37	;'%'
  1531  20CE  346C               	retlw	108	;'l'
  1532  20CF  3475               	retlw	117	;'u'
  1533  20D0  3420               	retlw	32	;' '
  1534  20D1  3476               	retlw	118	;'v'
  1535  20D2  3461               	retlw	97	;'a'
  1536  20D3  346C               	retlw	108	;'l'
  1537  20D4  3400               	retlw	0
  1538                           
  1539                           	psect	stringtext9
  1540  0000                     __pstringtext9:
  1541  20CB                     
  1542                           	psect	cinit
  1543  07DA                     start_initialization:	
  1544                           ; #config settings
  1545                           
  1546  07DA                     __initialization:
  1547                           
  1548                           ; Initialize objects allocated to BANK1
  1549  07DA  0021               	movlb	1	; select bank1
  1550  07DB  3190  2000  3187   	fcall	__pidataBANK1	;fetch initializer
  1551  07DE  00E4               	movwf	__pdataBANK1& (0+127)
  1552  07DF  3190  2001  3187   	fcall	__pidataBANK1+1	;fetch initializer
  1553  07E2  00E5               	movwf	(__pdataBANK1+1)& (0+127)
  1554  07E3  3190  2002  3187   	fcall	__pidataBANK1+2	;fetch initializer
  1555  07E6  00E6               	movwf	(__pdataBANK1+2)& (0+127)
  1556  07E7  3190  2003  3187   	fcall	__pidataBANK1+3	;fetch initializer
  1557  07EA  00E7               	movwf	(__pdataBANK1+3)& (0+127)
  1558                           
  1559                           ; Clear objects allocated to BANK0
  1560  07EB  0020               	movlb	0	; select bank0
  1561  07EC  01EF               	clrf	__pbssBANK0& (0+127)
  1562                           
  1563                           ; Clear objects allocated to BANK1
  1564  07ED  30CC               	movlw	low __pbssBANK1
  1565  07EE  0084               	movwf	4
  1566  07EF  3000               	movlw	high __pbssBANK1
  1567  07F0  0085               	movwf	5
  1568  07F1  3018               	movlw	24
  1569  07F2  319C  2439  3187   	fcall	clear_ram0
  1570                           
  1571                           ; Clear objects allocated to BANK2
  1572  07F5  3020               	movlw	low __pbssBANK2
  1573  07F6  0084               	movwf	4
  1574  07F7  3001               	movlw	high __pbssBANK2
  1575  07F8  0085               	movwf	5
  1576  07F9  3010               	movlw	16
  1577  07FA  319C  2439  3187   	fcall	clear_ram0
  1578  07FD                     end_of_initialization:	
  1579                           ;End of C runtime variable initialization code
  1580                           
  1581  07FD                     __end_of__initialization:
  1582  07FD  0020               	movlb	0
  1583  07FE  3193  2B84         	ljmp	_main	;jump to C main() function
  1584                           
  1585                           	psect	bssBANK0
  1586  006F                     __pbssBANK0:
  1587  006F                     __backlightval:
  1588  006F                     	ds	1
  1589                           
  1590                           	psect	bssBANK1
  1591  00CC                     __pbssBANK1:
  1592  00CC                     _weight_zero:
  1593  00CC                     	ds	4
  1594  00D0                     _weight_dat:
  1595  00D0                     	ds	4
  1596  00D4                     _valstr:
  1597  00D4                     	ds	16
  1598                           
  1599                           	psect	dataBANK1
  1600  00E4                     __pdataBANK1:
  1601  00E4                     lcd_set_cursor@F2624:
  1602  00E4                     	ds	4
  1603                           
  1604                           	psect	bssBANK2
  1605  0120                     __pbssBANK2:
  1606  0120                     _gramstr:
  1607  0120                     	ds	16
  1608                           
  1609                           	psect	clrtext
  1610  1C39                     clear_ram0:	
  1611                           ;	Called with FSR0 containing the base address, and
  1612                           ;	WREG with the size to clear
  1613                           
  1614  1C39  0064               	clrwdt	;clear the watchdog before getting into this loop
  1615  1C3A                     clrloop0:
  1616  1C3A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1617  1C3B  3101               	addfsr 0,1
  1618  1C3C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1619  1C3D  2C3A               	goto	clrloop0	;have we reached the end yet?
  1620  1C3E  3400               	retlw	0	;all done for this memory range, return
  1621                           
  1622                           	psect	cstackBANK1
  1623  00A0                     __pcstackBANK1:
  1624  00A0                     ?_sprintf:
  1625  00A0                     sprintf@sp:	
  1626                           ; 2 bytes @ 0x0
  1627                           
  1628                           
  1629                           ; 2 bytes @ 0x0
  1630  00A0                     	ds	2
  1631  00A2                     sprintf@f:
  1632                           
  1633                           ; 2 bytes @ 0x2
  1634  00A2                     	ds	6
  1635  00A8                     ??_sprintf:
  1636                           
  1637                           ; 1 bytes @ 0x8
  1638  00A8                     	ds	6
  1639  00AE                     _sprintf$1082:
  1640                           
  1641                           ; 4 bytes @ 0xE
  1642  00AE                     	ds	4
  1643  00B2                     sprintf@ap:
  1644                           
  1645                           ; 1 bytes @ 0x12
  1646  00B2                     	ds	1
  1647  00B3                     sprintf@width:
  1648                           
  1649                           ; 2 bytes @ 0x13
  1650  00B3                     	ds	2
  1651  00B5                     sprintf@tmpval:
  1652                           
  1653                           ; 4 bytes @ 0x15
  1654  00B5                     	ds	4
  1655  00B9                     sprintf@flag:
  1656                           
  1657                           ; 2 bytes @ 0x19
  1658  00B9                     	ds	2
  1659  00BB                     sprintf@eexp:
  1660                           
  1661                           ; 2 bytes @ 0x1B
  1662  00BB                     	ds	2
  1663  00BD                     sprintf@val:
  1664                           
  1665                           ; 4 bytes @ 0x1D
  1666  00BD                     	ds	4
  1667  00C1                     sprintf@fval:
  1668                           
  1669                           ; 4 bytes @ 0x21
  1670  00C1                     	ds	4
  1671  00C5                     sprintf@prec:
  1672                           
  1673                           ; 2 bytes @ 0x25
  1674  00C5                     	ds	2
  1675  00C7                     sprintf@c:
  1676                           
  1677                           ; 1 bytes @ 0x27
  1678  00C7                     	ds	1
  1679  00C8                     main@weight_gram:
  1680                           
  1681                           ; 4 bytes @ 0x28
  1682  00C8                     	ds	4
  1683                           
  1684                           	psect	cstackCOMMON
  1685  0070                     __pcstackCOMMON:
  1686  0070                     ?_isdigit:
  1687  0070                     ?___fleq:	
  1688                           ; 1 bit 
  1689                           
  1690  0070                     ?___flge:	
  1691                           ; 1 bit 
  1692                           
  1693  0070                     ?_PIN_MANAGER_Initialize:	
  1694                           ; 1 bit 
  1695                           
  1696  0070                     ??_PIN_MANAGER_Initialize:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  0070                     ?_OSCILLATOR_Initialize:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0070                     ??_OSCILLATOR_Initialize:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0070                     ?_WDT_Initialize:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0070                     ??_WDT_Initialize:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0070                     ?_lcd_init:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0070                     ?_lcd_backlight:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0070                     ?_lcd_clear:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0070                     ??_isdigit:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0070                     ?_SYSTEM_Initialize:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0070                     ??_SYSTEM_Initialize:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0070                     ?_main:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0070                     ?_set_CELL_CLK_LOW:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0070                     ??_set_CELL_CLK_LOW:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738  0070                     ?_set_CELL_CLK_HIGH:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741  0070                     ??_set_CELL_CLK_HIGH:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  0070                     ?_i2c_wait:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  0070                     ??_i2c_wait:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  0070                     ?_i2c_start:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753  0070                     ??_i2c_start:	
  1754                           ; 1 bytes @ 0x0
  1755                           
  1756  0070                     ?_i2c_stop:	
  1757                           ; 1 bytes @ 0x0
  1758                           
  1759  0070                     ??_i2c_stop:	
  1760                           ; 1 bytes @ 0x0
  1761                           
  1762  0070                     ?_i2c_write:	
  1763                           ; 1 bytes @ 0x0
  1764                           
  1765  0070                     ??_i2c_write:	
  1766                           ; 1 bytes @ 0x0
  1767                           
  1768  0070                     ?_lcd_cmd:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771  0070                     ?__Umul8_16:	
  1772                           ; 1 bytes @ 0x0
  1773                           
  1774  0070                     ?_get_CELL_DAT_VAL:	
  1775                           ; 2 bytes @ 0x0
  1776                           
  1777  0070                     ?___wmul:	
  1778                           ; 2 bytes @ 0x0
  1779                           
  1780  0070                     ?___awmod:	
  1781                           ; 2 bytes @ 0x0
  1782                           
  1783  0070                     ?___lwmod:	
  1784                           ; 2 bytes @ 0x0
  1785                           
  1786  0070                     ?__tdiv_to_l_:	
  1787                           ; 2 bytes @ 0x0
  1788                           
  1789  0070                     ?__div_to_l_:	
  1790                           ; 4 bytes @ 0x0
  1791                           
  1792  0070                     ?___lldiv:	
  1793                           ; 4 bytes @ 0x0
  1794                           
  1795  0070                     ?___flneg:	
  1796                           ; 4 bytes @ 0x0
  1797                           
  1798  0070                     ?___fldiv:	
  1799                           ; 4 bytes @ 0x0
  1800                           
  1801  0070                     ?___xxtofl:	
  1802                           ; 4 bytes @ 0x0
  1803                           
  1804  0070                     i2c_write@data:	
  1805                           ; 4 bytes @ 0x0
  1806                           
  1807  0070                     __Umul8_16@multiplicand:	
  1808                           ; 1 bytes @ 0x0
  1809                           
  1810  0070                     _isdigit$886:	
  1811                           ; 1 bytes @ 0x0
  1812                           
  1813  0070                     ___wmul@multiplier:	
  1814                           ; 1 bytes @ 0x0
  1815                           
  1816  0070                     ___awmod@divisor:	
  1817                           ; 2 bytes @ 0x0
  1818                           
  1819  0070                     ___lwmod@divisor:	
  1820                           ; 2 bytes @ 0x0
  1821                           
  1822  0070                     ___lldiv@divisor:	
  1823                           ; 2 bytes @ 0x0
  1824                           
  1825  0070                     __div_to_l_@f1:	
  1826                           ; 4 bytes @ 0x0
  1827                           
  1828  0070                     ___fleq@ff1:	
  1829                           ; 4 bytes @ 0x0
  1830                           
  1831  0070                     ___flge@ff1:	
  1832                           ; 4 bytes @ 0x0
  1833                           
  1834  0070                     ___flneg@f1:	
  1835                           ; 4 bytes @ 0x0
  1836                           
  1837  0070                     __tdiv_to_l_@f1:	
  1838                           ; 4 bytes @ 0x0
  1839                           
  1840  0070                     ___fldiv@a:	
  1841                           ; 4 bytes @ 0x0
  1842                           
  1843  0070                     ___xxtofl@val:	
  1844                           ; 4 bytes @ 0x0
  1845                           
  1846                           
  1847                           ; 4 bytes @ 0x0
  1848  0070                     	ds	1
  1849  0071                     ??_lcd_cmd:
  1850  0071                     lcd_cmd@cmd:	
  1851                           ; 1 bytes @ 0x1
  1852                           
  1853  0071                     isdigit@c:	
  1854                           ; 1 bytes @ 0x1
  1855                           
  1856                           
  1857                           ; 1 bytes @ 0x1
  1858  0071                     	ds	1
  1859  0072                     ??_lcd_init:
  1860  0072                     ??_lcd_backlight:	
  1861                           ; 1 bytes @ 0x2
  1862                           
  1863  0072                     ?_command:	
  1864                           ; 1 bytes @ 0x2
  1865                           
  1866  0072                     ??__Umul8_16:	
  1867                           ; 1 bytes @ 0x2
  1868                           
  1869  0072                     ??_get_CELL_DAT_VAL:	
  1870                           ; 1 bytes @ 0x2
  1871                           
  1872  0072                     command@mode:	
  1873                           ; 1 bytes @ 0x2
  1874                           
  1875  0072                     ___wmul@multiplicand:	
  1876                           ; 1 bytes @ 0x2
  1877                           
  1878  0072                     ___awmod@dividend:	
  1879                           ; 2 bytes @ 0x2
  1880                           
  1881  0072                     ___lwmod@dividend:	
  1882                           ; 2 bytes @ 0x2
  1883                           
  1884                           
  1885                           ; 2 bytes @ 0x2
  1886  0072                     	ds	1
  1887  0073                     ??_command:
  1888                           
  1889                           ; 1 bytes @ 0x3
  1890  0073                     	ds	1
  1891  0074                     ??___wmul:
  1892  0074                     ??___awmod:	
  1893                           ; 1 bytes @ 0x4
  1894                           
  1895  0074                     ??___flneg:	
  1896                           ; 1 bytes @ 0x4
  1897                           
  1898  0074                     ??___lwmod:	
  1899                           ; 1 bytes @ 0x4
  1900                           
  1901  0074                     ??___xxtofl:	
  1902                           ; 1 bytes @ 0x4
  1903                           
  1904  0074                     ___wmul@product:	
  1905                           ; 1 bytes @ 0x4
  1906                           
  1907  0074                     __Umul8_16@product:	
  1908                           ; 2 bytes @ 0x4
  1909                           
  1910  0074                     ___lldiv@dividend:	
  1911                           ; 2 bytes @ 0x4
  1912                           
  1913  0074                     __div_to_l_@f2:	
  1914                           ; 4 bytes @ 0x4
  1915                           
  1916  0074                     ___fleq@ff2:	
  1917                           ; 4 bytes @ 0x4
  1918                           
  1919  0074                     ___flge@ff2:	
  1920                           ; 4 bytes @ 0x4
  1921                           
  1922  0074                     __tdiv_to_l_@f2:	
  1923                           ; 4 bytes @ 0x4
  1924                           
  1925  0074                     ___fldiv@b:	
  1926                           ; 4 bytes @ 0x4
  1927                           
  1928                           
  1929                           ; 4 bytes @ 0x4
  1930  0074                     	ds	1
  1931  0075                     command@val:
  1932  0075                     ___awmod@counter:	
  1933                           ; 1 bytes @ 0x5
  1934                           
  1935  0075                     ___lwmod@counter:	
  1936                           ; 1 bytes @ 0x5
  1937                           
  1938                           
  1939                           ; 1 bytes @ 0x5
  1940  0075                     	ds	1
  1941  0076                     ?___lwdiv:
  1942  0076                     command@highnib:	
  1943                           ; 2 bytes @ 0x6
  1944                           
  1945  0076                     ___awmod@sign:	
  1946                           ; 1 bytes @ 0x6
  1947                           
  1948  0076                     ___lwdiv@divisor:	
  1949                           ; 1 bytes @ 0x6
  1950                           
  1951  0076                     __Umul8_16@word_mpld:	
  1952                           ; 2 bytes @ 0x6
  1953                           
  1954                           
  1955                           ; 2 bytes @ 0x6
  1956  0076                     	ds	1
  1957  0077                     ?___awdiv:
  1958  0077                     command@lownib:	
  1959                           ; 2 bytes @ 0x7
  1960                           
  1961  0077                     ___awdiv@divisor:	
  1962                           ; 1 bytes @ 0x7
  1963                           
  1964                           
  1965                           ; 2 bytes @ 0x7
  1966  0077                     	ds	1
  1967  0078                     ?_lcd_set_cursor:
  1968  0078                     ?_lcd_print:	
  1969                           ; 1 bytes @ 0x8
  1970                           
  1971  0078                     ??__tdiv_to_l_:	
  1972                           ; 1 bytes @ 0x8
  1973                           
  1974  0078                     ??__div_to_l_:	
  1975                           ; 1 bytes @ 0x8
  1976                           
  1977  0078                     ??___lldiv:	
  1978                           ; 1 bytes @ 0x8
  1979                           
  1980  0078                     ??___fleq:	
  1981                           ; 1 bytes @ 0x8
  1982                           
  1983  0078                     ??___flge:	
  1984                           ; 1 bytes @ 0x8
  1985                           
  1986  0078                     ??___fldiv:	
  1987                           ; 1 bytes @ 0x8
  1988                           
  1989  0078                     lcd_set_cursor@row:	
  1990                           ; 1 bytes @ 0x8
  1991                           
  1992  0078                     __Umul8_16@multiplier:	
  1993                           ; 1 bytes @ 0x8
  1994                           
  1995  0078                     ___xxtofl@sign:	
  1996                           ; 1 bytes @ 0x8
  1997                           
  1998  0078                     lcd_print@str:	
  1999                           ; 1 bytes @ 0x8
  2000                           
  2001  0078                     ___lwdiv@dividend:	
  2002                           ; 2 bytes @ 0x8
  2003                           
  2004                           
  2005                           ; 2 bytes @ 0x8
  2006  0078                     	ds	1
  2007  0079                     ??_lcd_set_cursor:
  2008  0079                     ___xxtofl@exp:	
  2009                           ; 1 bytes @ 0x9
  2010                           
  2011  0079                     ___awdiv@dividend:	
  2012                           ; 1 bytes @ 0x9
  2013                           
  2014  0079                     ___lldiv@quotient:	
  2015                           ; 2 bytes @ 0x9
  2016                           
  2017                           
  2018                           ; 4 bytes @ 0x9
  2019  0079                     	ds	1
  2020  007A                     ??_lcd_print:
  2021  007A                     ??___lwdiv:	
  2022                           ; 1 bytes @ 0xA
  2023                           
  2024  007A                     ___xxtofl@arg:	
  2025                           ; 1 bytes @ 0xA
  2026                           
  2027                           
  2028                           ; 4 bytes @ 0xA
  2029  007A                     	ds	1
  2030  007B                     ??___awdiv:
  2031  007B                     lcd_print@cmd:	
  2032                           ; 1 bytes @ 0xB
  2033                           
  2034  007B                     ___lwdiv@quotient:	
  2035                           ; 1 bytes @ 0xB
  2036                           
  2037                           
  2038                           ; 2 bytes @ 0xB
  2039  007B                     	ds	1
  2040  007C                     ??_lcd_clear:
  2041                           
  2042                           ; 1 bytes @ 0xC
  2043  007C                     	ds	1
  2044  007D                     ___lldiv@counter:
  2045  007D                     ___lwdiv@counter:	
  2046                           ; 1 bytes @ 0xD
  2047                           
  2048                           
  2049                           ; 1 bytes @ 0xD
  2050  007D                     	ds	1
  2051  007E                     ??___flsub:
  2052                           
  2053                           	psect	cstackBANK0
  2054  0020                     __pcstackBANK0:	
  2055                           ; 1 bytes @ 0xE
  2056                           
  2057  0020                     ?_get_scale_val:
  2058  0020                     ?___llmod:	
  2059                           ; 4 bytes @ 0x0
  2060                           
  2061  0020                     ___awdiv@counter:	
  2062                           ; 4 bytes @ 0x0
  2063                           
  2064  0020                     get_scale_val@n:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0020                     lcd_set_cursor@row_offsets:	
  2068                           ; 2 bytes @ 0x0
  2069                           
  2070  0020                     __div_to_l_@quot:	
  2071                           ; 4 bytes @ 0x0
  2072                           
  2073  0020                     __tdiv_to_l_@quot:	
  2074                           ; 4 bytes @ 0x0
  2075                           
  2076  0020                     ___llmod@divisor:	
  2077                           ; 4 bytes @ 0x0
  2078                           
  2079  0020                     ___fldiv@rem:	
  2080                           ; 4 bytes @ 0x0
  2081                           
  2082                           
  2083                           ; 4 bytes @ 0x0
  2084  0020                     	ds	1
  2085  0021                     ___awdiv@sign:
  2086                           
  2087                           ; 1 bytes @ 0x1
  2088  0021                     	ds	1
  2089  0022                     ___awdiv@quotient:
  2090                           
  2091                           ; 2 bytes @ 0x2
  2092  0022                     	ds	2
  2093  0024                     ??_get_scale_val:
  2094  0024                     ?___flmul:	
  2095                           ; 1 bytes @ 0x4
  2096                           
  2097  0024                     lcd_set_cursor@col:	
  2098                           ; 4 bytes @ 0x4
  2099                           
  2100  0024                     __div_to_l_@cntr:	
  2101                           ; 1 bytes @ 0x4
  2102                           
  2103  0024                     __tdiv_to_l_@cntr:	
  2104                           ; 1 bytes @ 0x4
  2105                           
  2106  0024                     ___fldiv@sign:	
  2107                           ; 1 bytes @ 0x4
  2108                           
  2109  0024                     ___llmod@dividend:	
  2110                           ; 1 bytes @ 0x4
  2111                           
  2112  0024                     ___flmul@b:	
  2113                           ; 4 bytes @ 0x4
  2114                           
  2115                           
  2116                           ; 4 bytes @ 0x4
  2117  0024                     	ds	1
  2118  0025                     lcd_set_cursor@cmd:
  2119  0025                     __div_to_l_@exp1:	
  2120                           ; 1 bytes @ 0x5
  2121                           
  2122  0025                     __tdiv_to_l_@exp1:	
  2123                           ; 1 bytes @ 0x5
  2124                           
  2125  0025                     ___fldiv@new_exp:	
  2126                           ; 1 bytes @ 0x5
  2127                           
  2128                           
  2129                           ; 2 bytes @ 0x5
  2130  0025                     	ds	1
  2131  0026                     lcd_clear@row:
  2132                           
  2133                           ; 1 bytes @ 0x6
  2134  0026                     	ds	1
  2135  0027                     lcd_clear@col:
  2136  0027                     ___fldiv@grs:	
  2137                           ; 1 bytes @ 0x7
  2138                           
  2139                           
  2140                           ; 4 bytes @ 0x7
  2141  0027                     	ds	1
  2142  0028                     ??___llmod:
  2143  0028                     get_scale_val@weight_add:	
  2144                           ; 1 bytes @ 0x8
  2145                           
  2146  0028                     ___flmul@a:	
  2147                           ; 4 bytes @ 0x8
  2148                           
  2149                           
  2150                           ; 4 bytes @ 0x8
  2151  0028                     	ds	1
  2152  0029                     ___llmod@counter:
  2153                           
  2154                           ; 1 bytes @ 0x9
  2155  0029                     	ds	2
  2156  002B                     ___fldiv@bexp:
  2157                           
  2158                           ; 1 bytes @ 0xB
  2159  002B                     	ds	1
  2160  002C                     ??___flmul:
  2161  002C                     get_scale_val@j:	
  2162                           ; 1 bytes @ 0xC
  2163                           
  2164  002C                     ___fldiv@aexp:	
  2165                           ; 1 bytes @ 0xC
  2166                           
  2167                           
  2168                           ; 1 bytes @ 0xC
  2169  002C                     	ds	1
  2170  002D                     ?_scale_convert_gram:
  2171  002D                     get_scale_val@weight_count:	
  2172                           ; 4 bytes @ 0xD
  2173                           
  2174  002D                     scale_convert_gram@count:	
  2175                           ; 4 bytes @ 0xD
  2176                           
  2177                           
  2178                           ; 4 bytes @ 0xD
  2179  002D                     	ds	4
  2180  0031                     ??_scale_convert_gram:
  2181  0031                     get_scale_val@i:	
  2182                           ; 1 bytes @ 0x11
  2183                           
  2184  0031                     ___flmul@sign:	
  2185                           ; 1 bytes @ 0x11
  2186                           
  2187                           
  2188                           ; 1 bytes @ 0x11
  2189  0031                     	ds	1
  2190  0032                     ___flmul@grs:
  2191                           
  2192                           ; 4 bytes @ 0x12
  2193  0032                     	ds	3
  2194  0035                     scale_convert_gram@temp:
  2195                           
  2196                           ; 4 bytes @ 0x15
  2197  0035                     	ds	1
  2198  0036                     ___flmul@aexp:
  2199                           
  2200                           ; 1 bytes @ 0x16
  2201  0036                     	ds	1
  2202  0037                     ___flmul@bexp:
  2203                           
  2204                           ; 1 bytes @ 0x17
  2205  0037                     	ds	1
  2206  0038                     ___flmul@prod:
  2207                           
  2208                           ; 4 bytes @ 0x18
  2209  0038                     	ds	4
  2210  003C                     ___flmul@temp:
  2211                           
  2212                           ; 2 bytes @ 0x1C
  2213  003C                     	ds	2
  2214  003E                     ?_fround:
  2215  003E                     ?_scale:	
  2216                           ; 4 bytes @ 0x1E
  2217                           
  2218                           
  2219                           ; 4 bytes @ 0x1E
  2220  003E                     	ds	4
  2221  0042                     ??_fround:
  2222  0042                     ??_scale:	
  2223                           ; 1 bytes @ 0x22
  2224                           
  2225                           
  2226                           ; 1 bytes @ 0x22
  2227  0042                     	ds	6
  2228  0048                     _fround$1080:
  2229                           
  2230                           ; 4 bytes @ 0x28
  2231  0048                     	ds	4
  2232  004C                     _fround$1079:
  2233                           
  2234                           ; 4 bytes @ 0x2C
  2235  004C                     	ds	2
  2236  004E                     _scale$1081:
  2237                           
  2238                           ; 4 bytes @ 0x2E
  2239  004E                     	ds	2
  2240  0050                     fround@prec:
  2241                           
  2242                           ; 1 bytes @ 0x30
  2243  0050                     	ds	1
  2244  0051                     ?___fladd:
  2245  0051                     ___fladd@b:	
  2246                           ; 4 bytes @ 0x31
  2247                           
  2248                           
  2249                           ; 4 bytes @ 0x31
  2250  0051                     	ds	1
  2251  0052                     scale@scl:
  2252                           
  2253                           ; 1 bytes @ 0x32
  2254  0052                     	ds	1
  2255  0053                     ?___fltol:
  2256  0053                     ___fltol@f1:	
  2257                           ; 4 bytes @ 0x33
  2258                           
  2259                           
  2260                           ; 4 bytes @ 0x33
  2261  0053                     	ds	2
  2262  0055                     ___fladd@a:
  2263                           
  2264                           ; 4 bytes @ 0x35
  2265  0055                     	ds	2
  2266  0057                     ??___fltol:
  2267                           
  2268                           ; 1 bytes @ 0x37
  2269  0057                     	ds	2
  2270  0059                     ??___fladd:
  2271                           
  2272                           ; 1 bytes @ 0x39
  2273  0059                     	ds	3
  2274  005C                     ___fltol@sign1:
  2275                           
  2276                           ; 1 bytes @ 0x3C
  2277  005C                     	ds	1
  2278  005D                     ___fltol@exp1:
  2279                           
  2280                           ; 1 bytes @ 0x3D
  2281  005D                     	ds	4
  2282  0061                     ___fladd@signs:
  2283                           
  2284                           ; 1 bytes @ 0x41
  2285  0061                     	ds	1
  2286  0062                     ___fladd@aexp:
  2287                           
  2288                           ; 1 bytes @ 0x42
  2289  0062                     	ds	1
  2290  0063                     ___fladd@bexp:
  2291                           
  2292                           ; 1 bytes @ 0x43
  2293  0063                     	ds	1
  2294  0064                     ___fladd@grs:
  2295                           
  2296                           ; 1 bytes @ 0x44
  2297  0064                     	ds	1
  2298  0065                     ?___flsub:
  2299  0065                     ___flsub@a:	
  2300                           ; 4 bytes @ 0x45
  2301                           
  2302                           
  2303                           ; 4 bytes @ 0x45
  2304  0065                     	ds	4
  2305  0069                     ___flsub@b:
  2306                           
  2307                           ; 4 bytes @ 0x49
  2308  0069                     	ds	4
  2309  006D                     ??_main:
  2310                           
  2311                           ; 1 bytes @ 0x4D
  2312  006D                     	ds	2
  2313                           
  2314                           	psect	maintext
  2315  1384                     __pmaintext:	
  2316 ;;
  2317 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2318 ;;
  2319 ;; *************** function _main *****************
  2320 ;; Defined at:
  2321 ;;		line 9 in file "main.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  weight_gram     4   40[BANK1 ] float 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : B1F/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2337 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2339 ;;Total ram usage:        6 bytes
  2340 ;; Hardware stack levels required when called: 6
  2341 ;; This function calls:
  2342 ;;		_SYSTEM_Initialize
  2343 ;;		_get_scale_val
  2344 ;;		_lcd_backlight
  2345 ;;		_lcd_clear
  2346 ;;		_lcd_init
  2347 ;;		_lcd_print
  2348 ;;		_lcd_set_cursor
  2349 ;;		_scale_convert_gram
  2350 ;;		_sprintf
  2351 ;; This function is called by:
  2352 ;;		Startup code after reset
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function _main
  2358  1384                     _main:
  2359  1384                     l4320:	
  2360                           ;incstack = 0
  2361                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2362                           
  2363                           
  2364                           ;main.c: 11: SYSTEM_Initialize();
  2365  1384  319C  2446  3193   	fcall	_SYSTEM_Initialize
  2366  1387                     l4322:
  2367                           
  2368                           ;main.c: 14: ANSELA = 0x00;
  2369  1387  0023               	movlb	3	; select bank3
  2370  1388  018C               	clrf	12	;volatile
  2371  1389                     l4324:
  2372                           
  2373                           ;main.c: 15: ANSELB = 0x00;
  2374  1389  018D               	clrf	13	;volatile
  2375  138A                     l4326:
  2376                           
  2377                           ;main.c: 19: TRISA = 0x02;
  2378  138A  3002               	movlw	2
  2379  138B  0021               	movlb	1	; select bank1
  2380  138C  008C               	movwf	12	;volatile
  2381  138D                     l4328:
  2382                           
  2383                           ;main.c: 21: LATA = 0x00;
  2384  138D  0022               	movlb	2	; select bank2
  2385  138E  018C               	clrf	12	;volatile
  2386  138F                     l4330:
  2387                           
  2388                           ;main.c: 22: LATB = 0x00;
  2389  138F  018D               	clrf	13	;volatile
  2390  1390                     l4332:
  2391                           
  2392                           ;main.c: 26: SSPADD = 0x13;
  2393  1390  3013               	movlw	19
  2394  1391  0024               	movlb	4	; select bank4
  2395  1392  0092               	movwf	18	;volatile
  2396  1393                     l4334:
  2397                           
  2398                           ;main.c: 27: SSPCON1 = 0x28;
  2399  1393  3028               	movlw	40
  2400  1394  0095               	movwf	21	;volatile
  2401  1395                     l4336:
  2402                           
  2403                           ;main.c: 28: SSPCON2 = 0x0;
  2404  1395  0196               	clrf	22	;volatile
  2405  1396                     l4338:
  2406                           
  2407                           ;main.c: 29: SSPSTAT = 0;
  2408  1396  0194               	clrf	20	;volatile
  2409  1397                     l4340:
  2410                           
  2411                           ;main.c: 31: lcd_init();
  2412  1397  3188  2009  3193   	fcall	_lcd_init
  2413  139A                     l4342:
  2414                           
  2415                           ;main.c: 32: lcd_backlight();
  2416  139A  319C  247B  3193   	fcall	_lcd_backlight
  2417  139D                     l4344:
  2418                           
  2419                           ;main.c: 33: lcd_set_cursor(0, 0);
  2420  139D  01F8               	clrf	lcd_set_cursor@row
  2421  139E  3000               	movlw	0
  2422  139F  3190  2004  3193   	fcall	_lcd_set_cursor
  2423  13A2                     l4346:
  2424                           
  2425                           ;main.c: 36: lcd_print("Initialize");
  2426  13A2  30AE               	movlw	low (STR_1| (0+32768))
  2427  13A3  00F8               	movwf	lcd_print@str
  2428  13A4  30A0               	movlw	high (STR_1| (0+32768))
  2429  13A5  00F9               	movwf	lcd_print@str+1
  2430  13A6  319C  24BD  3193   	fcall	_lcd_print
  2431  13A9                     l4348:
  2432                           
  2433                           ;main.c: 37: lcd_set_cursor(0, 1);
  2434  13A9  01F8               	clrf	lcd_set_cursor@row
  2435  13AA  0AF8               	incf	lcd_set_cursor@row,f
  2436  13AB  3000               	movlw	0
  2437  13AC  3190  2004  3193   	fcall	_lcd_set_cursor
  2438  13AF                     l4350:
  2439                           
  2440                           ;main.c: 38: lcd_print("Load cell Unit");
  2441  13AF  309F               	movlw	low (STR_2| (0+32768))
  2442  13B0  00F8               	movwf	lcd_print@str
  2443  13B1  30A0               	movlw	high (STR_2| (0+32768))
  2444  13B2  00F9               	movwf	lcd_print@str+1
  2445  13B3  319C  24BD  3193   	fcall	_lcd_print
  2446  13B6                     l4352:
  2447                           
  2448                           ;main.c: 40: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2449  13B6  300B               	movlw	11
  2450  13B7  0020               	movlb	0	; select bank0
  2451  13B8  00EE               	movwf	??_main+1
  2452  13B9  3026               	movlw	38
  2453  13BA  00ED               	movwf	??_main
  2454  13BB  305D               	movlw	93
  2455  13BC                     u5757:
  2456  13BC  0B89               	decfsz	9,f
  2457  13BD  2BBC               	goto	u5757
  2458  13BE  0BED               	decfsz	??_main,f
  2459  13BF  2BBC               	goto	u5757
  2460  13C0  0BEE               	decfsz	??_main+1,f
  2461  13C1  2BBC               	goto	u5757
  2462  13C2  3200               	nop2
  2463                           
  2464                           ;main.c: 42: weight_zero = get_scale_val(3);
  2465  13C3  3003               	movlw	3
  2466  13C4  0020               	movlb	0	; select bank0
  2467  13C5  00A0               	movwf	get_scale_val@n
  2468  13C6  3000               	movlw	0
  2469  13C7  00A1               	movwf	get_scale_val@n+1
  2470  13C8  3192  22AE  3193   	fcall	_get_scale_val
  2471  13CB  0020               	movlb	0	; select bank0
  2472  13CC  0823               	movf	?_get_scale_val+3,w
  2473  13CD  0021               	movlb	1	; select bank1
  2474  13CE  00CF               	movwf	(_weight_zero+3)^(0+128)
  2475  13CF  0020               	movlb	0	; select bank0
  2476  13D0  0822               	movf	?_get_scale_val+2,w
  2477  13D1  0021               	movlb	1	; select bank1
  2478  13D2  00CE               	movwf	(_weight_zero+2)^(0+128)
  2479  13D3  0020               	movlb	0	; select bank0
  2480  13D4  0821               	movf	?_get_scale_val+1,w
  2481  13D5  0021               	movlb	1	; select bank1
  2482  13D6  00CD               	movwf	(_weight_zero+1)^(0+128)
  2483  13D7  0020               	movlb	0	; select bank0
  2484  13D8  0820               	movf	?_get_scale_val,w
  2485  13D9  0021               	movlb	1	; select bank1
  2486  13DA  00CC               	movwf	_weight_zero^(0+128)
  2487  13DB                     l4354:
  2488                           
  2489                           ;main.c: 44: lcd_clear();
  2490  13DB  319D  253C  3193   	fcall	_lcd_clear
  2491  13DE                     l4356:
  2492                           
  2493                           ;main.c: 45: lcd_set_cursor(0,0);
  2494  13DE  01F8               	clrf	lcd_set_cursor@row
  2495  13DF  3000               	movlw	0
  2496  13E0  3190  2004  3193   	fcall	_lcd_set_cursor
  2497  13E3                     l4358:
  2498                           
  2499                           ;main.c: 46: sprintf(valstr, "%lu val ", weight_zero);
  2500  13E3  30D4               	movlw	low _valstr
  2501  13E4  0021               	movlb	1	; select bank1
  2502  13E5  00A0               	movwf	sprintf@sp^(0+128)
  2503  13E6  3000               	movlw	high _valstr
  2504  13E7  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2505  13E8  30C4               	movlw	low (STR_3| (0+32768))
  2506  13E9  00A2               	movwf	sprintf@f^(0+128)
  2507  13EA  30A0               	movlw	high (STR_3| (0+32768))
  2508  13EB  00A3               	movwf	(sprintf@f^(0+128)+1)
  2509  13EC  084F               	movf	(_weight_zero+3)^(0+128),w
  2510  13ED  00A7               	movwf	((?_sprintf+3)^(0+128)+4)
  2511  13EE  084E               	movf	(_weight_zero+2)^(0+128),w
  2512  13EF  00A6               	movwf	((?_sprintf+2)^(0+128)+4)
  2513  13F0  084D               	movf	(_weight_zero+1)^(0+128),w
  2514  13F1  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  2515  13F2  084C               	movf	_weight_zero^(0+128),w
  2516  13F3  00A4               	movwf	(?_sprintf^(0+128)+4)
  2517  13F4  3180  20A2  3193   	fcall	_sprintf
  2518  13F7                     l4360:
  2519                           
  2520                           ;main.c: 47: lcd_print(valstr);
  2521  13F7  30D4               	movlw	low _valstr
  2522  13F8  00F8               	movwf	lcd_print@str
  2523  13F9  3000               	movlw	high _valstr
  2524  13FA  00F9               	movwf	lcd_print@str+1
  2525  13FB  319C  24BD  3193   	fcall	_lcd_print
  2526  13FE                     l4362:
  2527                           
  2528                           ;main.c: 48: _delay((unsigned long)((500)*(8000000/4000.0)));
  2529  13FE  3006               	movlw	6
  2530  13FF  0020               	movlb	0	; select bank0
  2531  1400  00EE               	movwf	??_main+1
  2532  1401  3013               	movlw	19
  2533  1402  00ED               	movwf	??_main
  2534  1403  30AD               	movlw	173
  2535  1404                     u5767:
  2536  1404  0B89               	decfsz	9,f
  2537  1405  2C04               	goto	u5767
  2538  1406  0BED               	decfsz	??_main,f
  2539  1407  2C04               	goto	u5767
  2540  1408  0BEE               	decfsz	??_main+1,f
  2541  1409  2C04               	goto	u5767
  2542  140A  3200               	nop2
  2543  140B                     l4364:
  2544                           
  2545                           ;main.c: 50: lcd_clear();
  2546  140B  319D  253C  3193   	fcall	_lcd_clear
  2547  140E                     l4366:
  2548                           
  2549                           ;main.c: 51: lcd_set_cursor(0,0);
  2550  140E  01F8               	clrf	lcd_set_cursor@row
  2551  140F  3000               	movlw	0
  2552  1410  3190  2004  3193   	fcall	_lcd_set_cursor
  2553  1413                     l4368:
  2554                           
  2555                           ;main.c: 52: sprintf(valstr, "Divide val: %d", 493);
  2556  1413  30D4               	movlw	low _valstr
  2557  1414  0021               	movlb	1	; select bank1
  2558  1415  00A0               	movwf	sprintf@sp^(0+128)
  2559  1416  3000               	movlw	high _valstr
  2560  1417  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2561  1418  3028               	movlw	low (STR_4| (0+32768))
  2562  1419  00A2               	movwf	sprintf@f^(0+128)
  2563  141A  30A0               	movlw	high (STR_4| (0+32768))
  2564  141B  00A3               	movwf	(sprintf@f^(0+128)+1)
  2565  141C  30ED               	movlw	237
  2566  141D  00A4               	movwf	(?_sprintf^(0+128)+4)
  2567  141E  3001               	movlw	1
  2568  141F  00A5               	movwf	(?_sprintf^(0+128)+5)
  2569  1420  3180  20A2  3193   	fcall	_sprintf
  2570  1423                     l4370:
  2571                           
  2572                           ;main.c: 53: lcd_print(valstr);
  2573  1423  30D4               	movlw	low _valstr
  2574  1424  00F8               	movwf	lcd_print@str
  2575  1425  3000               	movlw	high _valstr
  2576  1426  00F9               	movwf	lcd_print@str+1
  2577  1427  319C  24BD  3193   	fcall	_lcd_print
  2578  142A                     l4372:
  2579                           
  2580                           ;main.c: 54: _delay((unsigned long)((1500)*(8000000/4000.0)));
  2581  142A  3010               	movlw	16
  2582  142B  0020               	movlb	0	; select bank0
  2583  142C  00EE               	movwf	??_main+1
  2584  142D  3039               	movlw	57
  2585  142E  00ED               	movwf	??_main
  2586  142F  300D               	movlw	13
  2587  1430                     u5777:
  2588  1430  0B89               	decfsz	9,f
  2589  1431  2C30               	goto	u5777
  2590  1432  0BED               	decfsz	??_main,f
  2591  1433  2C30               	goto	u5777
  2592  1434  0BEE               	decfsz	??_main+1,f
  2593  1435  2C30               	goto	u5777
  2594  1436  3200               	nop2
  2595  1437                     l96:	
  2596                           ;main.c: 56: while (1)
  2597                           
  2598                           
  2599                           ;main.c: 57: {;main.c: 58: weight_dat = get_scale_val(1);
  2600  1437  3001               	movlw	1
  2601  1438  0020               	movlb	0	; select bank0
  2602  1439  00A0               	movwf	get_scale_val@n
  2603  143A  3000               	movlw	0
  2604  143B  00A1               	movwf	get_scale_val@n+1
  2605  143C  3192  22AE  3193   	fcall	_get_scale_val
  2606  143F  0020               	movlb	0	; select bank0
  2607  1440  0823               	movf	?_get_scale_val+3,w
  2608  1441  0021               	movlb	1	; select bank1
  2609  1442  00D3               	movwf	(_weight_dat+3)^(0+128)
  2610  1443  0020               	movlb	0	; select bank0
  2611  1444  0822               	movf	?_get_scale_val+2,w
  2612  1445  0021               	movlb	1	; select bank1
  2613  1446  00D2               	movwf	(_weight_dat+2)^(0+128)
  2614  1447  0020               	movlb	0	; select bank0
  2615  1448  0821               	movf	?_get_scale_val+1,w
  2616  1449  0021               	movlb	1	; select bank1
  2617  144A  00D1               	movwf	(_weight_dat+1)^(0+128)
  2618  144B  0020               	movlb	0	; select bank0
  2619  144C  0820               	movf	?_get_scale_val,w
  2620  144D  0021               	movlb	1	; select bank1
  2621  144E  00D0               	movwf	_weight_dat^(0+128)
  2622                           
  2623                           ;main.c: 59: float weight_gram = scale_convert_gram(weight_dat);
  2624  144F  0853               	movf	(_weight_dat+3)^(0+128),w
  2625  1450  0020               	movlb	0	; select bank0
  2626  1451  00B0               	movwf	scale_convert_gram@count+3
  2627  1452  0021               	movlb	1	; select bank1
  2628  1453  0852               	movf	(_weight_dat+2)^(0+128),w
  2629  1454  0020               	movlb	0	; select bank0
  2630  1455  00AF               	movwf	scale_convert_gram@count+2
  2631  1456  0021               	movlb	1	; select bank1
  2632  1457  0851               	movf	(_weight_dat+1)^(0+128),w
  2633  1458  0020               	movlb	0	; select bank0
  2634  1459  00AE               	movwf	scale_convert_gram@count+1
  2635  145A  0021               	movlb	1	; select bank1
  2636  145B  0850               	movf	_weight_dat^(0+128),w
  2637  145C  0020               	movlb	0	; select bank0
  2638  145D  00AD               	movwf	scale_convert_gram@count
  2639  145E  319E  2657  3193   	fcall	_scale_convert_gram
  2640  1461  0020               	movlb	0	; select bank0
  2641  1462  0830               	movf	?_scale_convert_gram+3,w
  2642  1463  0021               	movlb	1	; select bank1
  2643  1464  00CB               	movwf	(main@weight_gram+3)^(0+128)
  2644  1465  0020               	movlb	0	; select bank0
  2645  1466  082F               	movf	?_scale_convert_gram+2,w
  2646  1467  0021               	movlb	1	; select bank1
  2647  1468  00CA               	movwf	(main@weight_gram+2)^(0+128)
  2648  1469  0020               	movlb	0	; select bank0
  2649  146A  082E               	movf	?_scale_convert_gram+1,w
  2650  146B  0021               	movlb	1	; select bank1
  2651  146C  00C9               	movwf	(main@weight_gram+1)^(0+128)
  2652  146D  0020               	movlb	0	; select bank0
  2653  146E  082D               	movf	?_scale_convert_gram,w
  2654  146F  0021               	movlb	1	; select bank1
  2655  1470  00C8               	movwf	main@weight_gram^(0+128)
  2656  1471                     l4374:
  2657                           
  2658                           ;main.c: 61: sprintf(valstr, "%lu val", weight_dat);
  2659  1471  30D4               	movlw	low _valstr
  2660  1472  00A0               	movwf	sprintf@sp^(0+128)
  2661  1473  3000               	movlw	high _valstr
  2662  1474  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2663  1475  30CD               	movlw	low (STR_5| (0+32768))
  2664  1476  00A2               	movwf	sprintf@f^(0+128)
  2665  1477  30A0               	movlw	high (STR_5| (0+32768))
  2666  1478  00A3               	movwf	(sprintf@f^(0+128)+1)
  2667  1479  0853               	movf	(_weight_dat+3)^(0+128),w
  2668  147A  00A7               	movwf	((?_sprintf+3)^(0+128)+4)
  2669  147B  0852               	movf	(_weight_dat+2)^(0+128),w
  2670  147C  00A6               	movwf	((?_sprintf+2)^(0+128)+4)
  2671  147D  0851               	movf	(_weight_dat+1)^(0+128),w
  2672  147E  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  2673  147F  0850               	movf	_weight_dat^(0+128),w
  2674  1480  00A4               	movwf	(?_sprintf^(0+128)+4)
  2675  1481  3180  20A2  3193   	fcall	_sprintf
  2676  1484                     l4376:
  2677                           
  2678                           ;main.c: 63: sprintf(gramstr, "%3.2f gram", weight_gram);
  2679  1484  3020               	movlw	low _gramstr
  2680  1485  0021               	movlb	1	; select bank1
  2681  1486  00A0               	movwf	sprintf@sp^(0+128)
  2682  1487  3001               	movlw	high _gramstr
  2683  1488  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2684  1489  30B9               	movlw	low (STR_6| (0+32768))
  2685  148A  00A2               	movwf	sprintf@f^(0+128)
  2686  148B  30A0               	movlw	high (STR_6| (0+32768))
  2687  148C  00A3               	movwf	(sprintf@f^(0+128)+1)
  2688  148D  084B               	movf	(main@weight_gram+3)^(0+128),w
  2689  148E  00A7               	movwf	((?_sprintf+3)^(0+128)+4)
  2690  148F  084A               	movf	(main@weight_gram+2)^(0+128),w
  2691  1490  00A6               	movwf	((?_sprintf+2)^(0+128)+4)
  2692  1491  0849               	movf	(main@weight_gram+1)^(0+128),w
  2693  1492  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  2694  1493  0848               	movf	main@weight_gram^(0+128),w
  2695  1494  00A4               	movwf	(?_sprintf^(0+128)+4)
  2696  1495  3180  20A2  3193   	fcall	_sprintf
  2697  1498                     l4378:
  2698                           
  2699                           ;main.c: 65: lcd_clear();
  2700  1498  319D  253C  3193   	fcall	_lcd_clear
  2701  149B                     l4380:
  2702                           
  2703                           ;main.c: 66: lcd_set_cursor(0, 0);
  2704  149B  01F8               	clrf	lcd_set_cursor@row
  2705  149C  3000               	movlw	0
  2706  149D  3190  2004  3193   	fcall	_lcd_set_cursor
  2707                           
  2708                           ;main.c: 67: lcd_print(valstr);
  2709  14A0  30D4               	movlw	low _valstr
  2710  14A1  00F8               	movwf	lcd_print@str
  2711  14A2  3000               	movlw	high _valstr
  2712  14A3  00F9               	movwf	lcd_print@str+1
  2713  14A4  319C  24BD  3193   	fcall	_lcd_print
  2714  14A7                     l4382:
  2715                           
  2716                           ;main.c: 68: lcd_set_cursor(0, 1);
  2717  14A7  01F8               	clrf	lcd_set_cursor@row
  2718  14A8  0AF8               	incf	lcd_set_cursor@row,f
  2719  14A9  3000               	movlw	0
  2720  14AA  3190  2004  3193   	fcall	_lcd_set_cursor
  2721  14AD                     l4384:
  2722                           
  2723                           ;main.c: 69: lcd_print(gramstr);
  2724  14AD  3020               	movlw	low _gramstr
  2725  14AE  00F8               	movwf	lcd_print@str
  2726  14AF  3001               	movlw	high _gramstr
  2727  14B0  00F9               	movwf	lcd_print@str+1
  2728  14B1  319C  24BD  3193   	fcall	_lcd_print
  2729  14B4                     l4386:
  2730                           
  2731                           ;main.c: 71: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2732  14B4  300B               	movlw	11
  2733  14B5  0020               	movlb	0	; select bank0
  2734  14B6  00EE               	movwf	??_main+1
  2735  14B7  3026               	movlw	38
  2736  14B8  00ED               	movwf	??_main
  2737  14B9  305D               	movlw	93
  2738  14BA                     u5787:
  2739  14BA  0B89               	decfsz	9,f
  2740  14BB  2CBA               	goto	u5787
  2741  14BC  0BED               	decfsz	??_main,f
  2742  14BD  2CBA               	goto	u5787
  2743  14BE  0BEE               	decfsz	??_main+1,f
  2744  14BF  2CBA               	goto	u5787
  2745  14C0  3200               	nop2
  2746  14C1  2C37               	goto	l96
  2747  14C2  3180  2802         	ljmp	start
  2748  14C4                     __end_of_main:
  2749                           
  2750                           	psect	text1
  2751  00A2                     __ptext1:	
  2752 ;; *************** function _sprintf *****************
  2753 ;; Defined at:
  2754 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  sp              2    0[BANK1 ] PTR unsigned char 
  2757 ;;		 -> gramstr(16), valstr(16), 
  2758 ;;  f               2    2[BANK1 ] PTR const unsigned char 
  2759 ;;		 -> STR_6(11), STR_5(8), STR_4(15), STR_3(9), 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  fval            4   33[BANK1 ] PTR const unsigned char 
  2762 ;;  val             4   29[BANK1 ] unsigned long 
  2763 ;;  tmpval          4   21[BANK1 ] struct .
  2764 ;;  prec            2   37[BANK1 ] int 
  2765 ;;  eexp            2   27[BANK1 ] int 
  2766 ;;  flag            2   25[BANK1 ] unsigned short 
  2767 ;;  width           2   19[BANK1 ] int 
  2768 ;;  cp              2    0        PTR const unsigned char 
  2769 ;;  len             2    0        unsigned int 
  2770 ;;  c               1   39[BANK1 ] unsigned char 
  2771 ;;  ap              1   18[BANK1 ] PTR void [1]
  2772 ;;		 -> ?_sprintf(2), 
  2773 ;;  d               1    0        unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  2    0[BANK1 ] int 
  2776 ;; Registers used:
  2777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2783 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  2784 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;Total ram usage:       40 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; Hardware stack levels required when called: 3
  2790 ;; This function calls:
  2791 ;;		___awdiv
  2792 ;;		___fladd
  2793 ;;		___fleq
  2794 ;;		___flge
  2795 ;;		___flmul
  2796 ;;		___flneg
  2797 ;;		___flsub
  2798 ;;		___fltol
  2799 ;;		___lldiv
  2800 ;;		___llmod
  2801 ;;		___wmul
  2802 ;;		___xxtofl
  2803 ;;		__div_to_l_
  2804 ;;		__tdiv_to_l_
  2805 ;;		_fround
  2806 ;;		_isdigit
  2807 ;;		_scale
  2808 ;; This function is called by:
  2809 ;;		_main
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           
  2814                           ;psect for function _sprintf
  2815  00A2                     _sprintf:
  2816  00A2                     l4010:	
  2817                           ;incstack = 0
  2818                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2819                           
  2820                           
  2821                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  2822  00A2  30A4               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  2823  00A3  0021               	movlb	1	; select bank1
  2824  00A4  00A8               	movwf	??_sprintf^(0+128)
  2825  00A5  0828               	movf	??_sprintf^(0+128),w
  2826  00A6  00B2               	movwf	sprintf@ap^(0+128)
  2827                           
  2828                           ;doprnt.c: 553: while((c = *f++)) {
  2829  00A7  2FC0               	goto	l4308
  2830  00A8                     l4012:
  2831                           
  2832                           ;doprnt.c: 555: if(c != '%')
  2833  00A8  3025               	movlw	37
  2834  00A9  0647               	xorwf	sprintf@c^(0+128),w
  2835  00AA  1903               	btfsc	3,2
  2836  00AB  28AD               	goto	u5231
  2837  00AC  28AE               	goto	u5230
  2838  00AD                     u5231:
  2839  00AD  28B9               	goto	l4018
  2840  00AE                     u5230:
  2841  00AE                     l4014:
  2842                           
  2843                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2844  00AE  0820               	movf	sprintf@sp^(0+128),w
  2845  00AF  0086               	movwf	6
  2846  00B0  0821               	movf	(sprintf@sp+1)^(0+128),w
  2847  00B1  0087               	movwf	7
  2848  00B2  0847               	movf	sprintf@c^(0+128),w
  2849  00B3  0081               	movwf	1
  2850  00B4                     l4016:
  2851  00B4  3001               	movlw	1
  2852  00B5  07A0               	addwf	sprintf@sp^(0+128),f
  2853  00B6  3000               	movlw	0
  2854  00B7  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  2855                           
  2856                           ;doprnt.c: 559: continue;
  2857  00B8  2FC0               	goto	l4308
  2858  00B9                     l4018:
  2859                           
  2860                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  2861  00B9  01B3               	clrf	sprintf@width^(0+128)
  2862  00BA  01B4               	clrf	(sprintf@width+1)^(0+128)
  2863                           
  2864                           ;doprnt.c: 565: flag = 0;
  2865  00BB  01B9               	clrf	sprintf@flag^(0+128)
  2866  00BC  01BA               	clrf	(sprintf@flag+1)^(0+128)
  2867  00BD                     l4020:
  2868                           
  2869                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  2870  00BD  0822               	movf	sprintf@f^(0+128),w
  2871  00BE  0084               	movwf	4
  2872  00BF  0823               	movf	(sprintf@f+1)^(0+128),w
  2873  00C0  0085               	movwf	5
  2874  00C1  0800               	movf	0,w	;code access
  2875  00C2  319C  24AB  3180   	fcall	_isdigit
  2876  00C5  1C03               	btfss	3,0
  2877  00C6  28C8               	goto	u5241
  2878  00C7  28C9               	goto	u5240
  2879  00C8                     u5241:
  2880  00C8  28FC               	goto	l4032
  2881  00C9                     u5240:
  2882  00C9                     l4022:
  2883                           
  2884                           ;doprnt.c: 615: width = 0;
  2885  00C9  0021               	movlb	1	; select bank1
  2886  00CA  01B3               	clrf	sprintf@width^(0+128)
  2887  00CB  01B4               	clrf	(sprintf@width+1)^(0+128)
  2888  00CC                     l4024:
  2889                           
  2890                           ;doprnt.c: 617: width *= 10;
  2891  00CC  300A               	movlw	10
  2892  00CD  00F0               	movwf	___wmul@multiplier
  2893  00CE  3000               	movlw	0
  2894  00CF  00F1               	movwf	___wmul@multiplier+1
  2895  00D0  0021               	movlb	1	; select bank1
  2896  00D1  0834               	movf	(sprintf@width+1)^(0+128),w
  2897  00D2  00F3               	movwf	___wmul@multiplicand+1
  2898  00D3  0833               	movf	sprintf@width^(0+128),w
  2899  00D4  00F2               	movwf	___wmul@multiplicand
  2900  00D5  319C  24DA  3180   	fcall	___wmul
  2901  00D8  0871               	movf	?___wmul+1,w
  2902  00D9  0021               	movlb	1	; select bank1
  2903  00DA  00B4               	movwf	(sprintf@width+1)^(0+128)
  2904  00DB  0870               	movf	?___wmul,w
  2905  00DC  00B3               	movwf	sprintf@width^(0+128)
  2906  00DD                     l4026:
  2907                           
  2908                           ;doprnt.c: 618: width += *f++ - '0';
  2909  00DD  0822               	movf	sprintf@f^(0+128),w
  2910  00DE  0084               	movwf	4
  2911  00DF  0823               	movf	(sprintf@f+1)^(0+128),w
  2912  00E0  0085               	movwf	5
  2913  00E1  0800               	movf	0,w	;code access
  2914  00E2  3ED0               	addlw	208
  2915  00E3  00A8               	movwf	??_sprintf^(0+128)
  2916  00E4  30FF               	movlw	255
  2917  00E5  1803               	skipnc
  2918  00E6  3000               	movlw	0
  2919  00E7  00A9               	movwf	(??_sprintf^(0+128)+1)
  2920  00E8  0828               	movf	??_sprintf^(0+128),w
  2921  00E9  07B3               	addwf	sprintf@width^(0+128),f
  2922  00EA  0829               	movf	(??_sprintf+1)^(0+128),w
  2923  00EB  3DB4               	addwfc	(sprintf@width+1)^(0+128),f
  2924  00EC                     l4028:
  2925  00EC  3001               	movlw	1
  2926  00ED  07A2               	addwf	sprintf@f^(0+128),f
  2927  00EE  3000               	movlw	0
  2928  00EF  3DA3               	addwfc	(sprintf@f+1)^(0+128),f
  2929  00F0                     l4030:
  2930                           
  2931                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  2932  00F0  0822               	movf	sprintf@f^(0+128),w
  2933  00F1  0084               	movwf	4
  2934  00F2  0823               	movf	(sprintf@f+1)^(0+128),w
  2935  00F3  0085               	movwf	5
  2936  00F4  0800               	movf	0,w	;code access
  2937  00F5  319C  24AB  3180   	fcall	_isdigit
  2938  00F8  1803               	btfsc	3,0
  2939  00F9  28FB               	goto	u5251
  2940  00FA  28FC               	goto	u5250
  2941  00FB                     u5251:
  2942  00FB  28CC               	goto	l4024
  2943  00FC                     u5250:
  2944  00FC                     l4032:
  2945                           
  2946                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  2947  00FC  0021               	movlb	1	; select bank1
  2948  00FD  0822               	movf	sprintf@f^(0+128),w
  2949  00FE  0084               	movwf	4
  2950  00FF  0823               	movf	(sprintf@f+1)^(0+128),w
  2951  0100  0085               	movwf	5
  2952  0101  0012               	moviw fsr0++
  2953  0102  3A2E               	xorlw	46
  2954  0103  1D03               	btfss	3,2
  2955  0104  2906               	goto	u5261
  2956  0105  2907               	goto	u5260
  2957  0106                     u5261:
  2958  0106  2940               	goto	l4048
  2959  0107                     u5260:
  2960  0107                     l4034:
  2961                           
  2962                           ;doprnt.c: 629: flag |= 0x4000;
  2963  0107  173A               	bsf	(sprintf@flag^(0+128)+1),6
  2964  0108                     l4036:
  2965                           
  2966                           ;doprnt.c: 630: f++;
  2967  0108  3001               	movlw	1
  2968  0109  07A2               	addwf	sprintf@f^(0+128),f
  2969  010A  3000               	movlw	0
  2970  010B  3DA3               	addwfc	(sprintf@f+1)^(0+128),f
  2971  010C                     l4038:
  2972                           
  2973                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  2974  010C  01C5               	clrf	sprintf@prec^(0+128)
  2975  010D  01C6               	clrf	(sprintf@prec+1)^(0+128)
  2976                           
  2977                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  2978  010E  2933               	goto	l4046
  2979  010F                     l4040:
  2980                           
  2981                           ;doprnt.c: 647: prec *= 10;
  2982  010F  300A               	movlw	10
  2983  0110  00F0               	movwf	___wmul@multiplier
  2984  0111  3000               	movlw	0
  2985  0112  00F1               	movwf	___wmul@multiplier+1
  2986  0113  0021               	movlb	1	; select bank1
  2987  0114  0846               	movf	(sprintf@prec+1)^(0+128),w
  2988  0115  00F3               	movwf	___wmul@multiplicand+1
  2989  0116  0845               	movf	sprintf@prec^(0+128),w
  2990  0117  00F2               	movwf	___wmul@multiplicand
  2991  0118  319C  24DA  3180   	fcall	___wmul
  2992  011B  0871               	movf	?___wmul+1,w
  2993  011C  0021               	movlb	1	; select bank1
  2994  011D  00C6               	movwf	(sprintf@prec+1)^(0+128)
  2995  011E  0870               	movf	?___wmul,w
  2996  011F  00C5               	movwf	sprintf@prec^(0+128)
  2997  0120                     l4042:
  2998                           
  2999                           ;doprnt.c: 648: prec += *f++ - '0';
  3000  0120  0822               	movf	sprintf@f^(0+128),w
  3001  0121  0084               	movwf	4
  3002  0122  0823               	movf	(sprintf@f+1)^(0+128),w
  3003  0123  0085               	movwf	5
  3004  0124  0800               	movf	0,w	;code access
  3005  0125  3ED0               	addlw	208
  3006  0126  00A8               	movwf	??_sprintf^(0+128)
  3007  0127  30FF               	movlw	255
  3008  0128  1803               	skipnc
  3009  0129  3000               	movlw	0
  3010  012A  00A9               	movwf	(??_sprintf^(0+128)+1)
  3011  012B  0828               	movf	??_sprintf^(0+128),w
  3012  012C  07C5               	addwf	sprintf@prec^(0+128),f
  3013  012D  0829               	movf	(??_sprintf+1)^(0+128),w
  3014  012E  3DC6               	addwfc	(sprintf@prec+1)^(0+128),f
  3015  012F                     l4044:
  3016  012F  3001               	movlw	1
  3017  0130  07A2               	addwf	sprintf@f^(0+128),f
  3018  0131  3000               	movlw	0
  3019  0132  3DA3               	addwfc	(sprintf@f+1)^(0+128),f
  3020  0133                     l4046:
  3021  0133  0822               	movf	sprintf@f^(0+128),w
  3022  0134  0084               	movwf	4
  3023  0135  0823               	movf	(sprintf@f+1)^(0+128),w
  3024  0136  0085               	movwf	5
  3025  0137  0800               	movf	0,w	;code access
  3026  0138  319C  24AB  3180   	fcall	_isdigit
  3027  013B  1803               	btfsc	3,0
  3028  013C  293E               	goto	u5271
  3029  013D  293F               	goto	u5270
  3030  013E                     u5271:
  3031  013E  290F               	goto	l4040
  3032  013F                     u5270:
  3033  013F  294A               	goto	l4054
  3034  0140                     l4048:
  3035                           
  3036                           ;doprnt.c: 652: prec = 0;
  3037  0140  01C5               	clrf	sprintf@prec^(0+128)
  3038  0141  01C6               	clrf	(sprintf@prec+1)^(0+128)
  3039  0142                     l4050:
  3040                           
  3041                           ;doprnt.c: 654: flag |= 0x1000;
  3042  0142  163A               	bsf	(sprintf@flag^(0+128)+1),4
  3043  0143  294A               	goto	l4054
  3044  0144                     l439:	
  3045                           ;doprnt.c: 667: case 'l':
  3046                           
  3047                           
  3048                           ;doprnt.c: 669: flag |= 0x10;
  3049  0144  1639               	bsf	sprintf@flag^(0+128),4
  3050                           
  3051                           ;doprnt.c: 670: goto loop;
  3052  0145  294A               	goto	l4054
  3053  0146                     l440:	
  3054                           ;doprnt.c: 688: case 'f':
  3055                           
  3056                           
  3057                           ;doprnt.c: 689: flag |= 0x400;
  3058  0146  153A               	bsf	(sprintf@flag^(0+128)+1),2
  3059                           
  3060                           ;doprnt.c: 690: break;
  3061  0147  296B               	goto	l4056
  3062  0148                     l445:	
  3063                           ;doprnt.c: 843: case 'u':
  3064                           
  3065                           
  3066                           ;doprnt.c: 844: flag |= 0x40;
  3067  0148  1739               	bsf	sprintf@flag^(0+128),6
  3068                           
  3069                           ;doprnt.c: 845: break;
  3070  0149  296B               	goto	l4056
  3071  014A                     l4054:
  3072  014A  0021               	movlb	1	; select bank1
  3073  014B  0823               	movf	(sprintf@f+1)^(0+128),w
  3074  014C  00A9               	movwf	(??_sprintf^(0+128)+1)
  3075  014D  0822               	movf	sprintf@f^(0+128),w
  3076  014E  00A8               	movwf	??_sprintf^(0+128)
  3077  014F  0AA2               	incf	sprintf@f^(0+128),f
  3078  0150  1903               	skipnz
  3079  0151  0AA3               	incf	(sprintf@f+1)^(0+128),f
  3080  0152  0828               	movf	??_sprintf^(0+128),w
  3081  0153  0084               	movwf	4
  3082  0154  0829               	movf	(??_sprintf+1)^(0+128),w
  3083  0155  0085               	movwf	5
  3084  0156  0800               	movf	0,w	;code access
  3085  0157  00C7               	movwf	sprintf@c^(0+128)
  3086                           
  3087                           ; Switch size 1, requested type "simple"
  3088                           ; Number of cases is 6, Range of values is 0 to 117
  3089                           ; switch strategies available:
  3090                           ; Name         Instructions Cycles
  3091                           ; simple_byte           19    10 (average)
  3092                           ; direct_byte          242     6 (fixed)
  3093                           ; jumptable            260     6 (fixed)
  3094                           ;	Chosen strategy is simple_byte
  3095  0158  3A00               	xorlw	0	; case 0
  3096  0159  1903               	skipnz
  3097  015A  2FD4               	goto	l4310
  3098  015B  3A64               	xorlw	100	; case 100
  3099  015C  1903               	skipnz
  3100  015D  296B               	goto	l4056
  3101  015E  3A02               	xorlw	2	; case 102
  3102  015F  1903               	skipnz
  3103  0160  2946               	goto	l440
  3104  0161  3A0F               	xorlw	15	; case 105
  3105  0162  1903               	skipnz
  3106  0163  296B               	goto	l4056
  3107  0164  3A05               	xorlw	5	; case 108
  3108  0165  1903               	skipnz
  3109  0166  2944               	goto	l439
  3110  0167  3A19               	xorlw	25	; case 117
  3111  0168  1903               	skipnz
  3112  0169  2948               	goto	l445
  3113  016A  2FC0               	goto	l4308
  3114  016B                     l4056:
  3115                           
  3116                           ;doprnt.c: 851: if(flag & (0x700)) {
  3117  016B  3000               	movlw	0
  3118  016C  0539               	andwf	sprintf@flag^(0+128),w
  3119  016D  00A8               	movwf	??_sprintf^(0+128)
  3120  016E  3007               	movlw	7
  3121  016F  053A               	andwf	(sprintf@flag+1)^(0+128),w
  3122  0170  00A9               	movwf	(??_sprintf+1)^(0+128)
  3123  0171  0828               	movf	??_sprintf^(0+128),w
  3124  0172  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3125  0173  1903               	btfsc	3,2
  3126  0174  2976               	goto	u5281
  3127  0175  2977               	goto	u5280
  3128  0176                     u5281:
  3129  0176  2E25               	goto	l446
  3130  0177                     u5280:
  3131  0177                     l4058:
  3132                           
  3133                           ;doprnt.c: 853: if(flag & 0x1000)
  3134  0177  1E3A               	btfss	(sprintf@flag+1)^(0+128),4
  3135  0178  297A               	goto	u5291
  3136  0179  297B               	goto	u5290
  3137  017A                     u5291:
  3138  017A  297F               	goto	l4062
  3139  017B                     u5290:
  3140  017B                     l4060:
  3141                           
  3142                           ;doprnt.c: 855: prec = 6;
  3143  017B  3006               	movlw	6
  3144  017C  00C5               	movwf	sprintf@prec^(0+128)
  3145  017D  3000               	movlw	0
  3146  017E  00C6               	movwf	(sprintf@prec^(0+128)+1)
  3147  017F                     l4062:
  3148                           
  3149                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3150  017F  0832               	movf	sprintf@ap^(0+128),w
  3151  0180  0086               	movwf	6
  3152  0181  0187               	clrf	7
  3153  0182  3F40               	moviw [0]fsr1
  3154  0183  00C1               	movwf	sprintf@fval^(0+128)
  3155  0184  3F41               	moviw [1]fsr1
  3156  0185  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3157  0186  3F42               	moviw [2]fsr1
  3158  0187  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3159  0188  3F43               	moviw [3]fsr1
  3160  0189  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3161  018A                     l4064:
  3162  018A  3004               	movlw	4
  3163  018B  00A8               	movwf	??_sprintf^(0+128)
  3164  018C  0828               	movf	??_sprintf^(0+128),w
  3165  018D  07B2               	addwf	sprintf@ap^(0+128),f
  3166  018E                     l4066:
  3167                           
  3168                           ;doprnt.c: 857: if(fval < 0.0) {
  3169  018E  0844               	movf	(sprintf@fval+3)^(0+128),w
  3170  018F  00F3               	movwf	___flge@ff1+3
  3171  0190  0843               	movf	(sprintf@fval+2)^(0+128),w
  3172  0191  00F2               	movwf	___flge@ff1+2
  3173  0192  0842               	movf	(sprintf@fval+1)^(0+128),w
  3174  0193  00F1               	movwf	___flge@ff1+1
  3175  0194  0841               	movf	sprintf@fval^(0+128),w
  3176  0195  00F0               	movwf	___flge@ff1
  3177  0196  3000               	movlw	0
  3178  0197  00F7               	movwf	___flge@ff2+3
  3179  0198  3000               	movlw	0
  3180  0199  00F6               	movwf	___flge@ff2+2
  3181  019A  3000               	movlw	0
  3182  019B  00F5               	movwf	___flge@ff2+1
  3183  019C  3000               	movlw	0
  3184  019D  00F4               	movwf	___flge@ff2
  3185  019E  3180  2018  3180   	fcall	___flge
  3186  01A1  1803               	btfsc	3,0
  3187  01A2  29A4               	goto	u5301
  3188  01A3  29A5               	goto	u5300
  3189  01A4                     u5301:
  3190  01A4  29BE               	goto	l4072
  3191  01A5                     u5300:
  3192  01A5                     l4068:
  3193                           
  3194                           ;doprnt.c: 858: fval = -fval;
  3195  01A5  0021               	movlb	1	; select bank1
  3196  01A6  0844               	movf	(sprintf@fval+3)^(0+128),w
  3197  01A7  00F3               	movwf	___flneg@f1+3
  3198  01A8  0843               	movf	(sprintf@fval+2)^(0+128),w
  3199  01A9  00F2               	movwf	___flneg@f1+2
  3200  01AA  0842               	movf	(sprintf@fval+1)^(0+128),w
  3201  01AB  00F1               	movwf	___flneg@f1+1
  3202  01AC  0841               	movf	sprintf@fval^(0+128),w
  3203  01AD  00F0               	movwf	___flneg@f1
  3204  01AE  319C  2464  3180   	fcall	___flneg
  3205  01B1  0873               	movf	?___flneg+3,w
  3206  01B2  0021               	movlb	1	; select bank1
  3207  01B3  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3208  01B4  0872               	movf	?___flneg+2,w
  3209  01B5  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3210  01B6  0871               	movf	?___flneg+1,w
  3211  01B7  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3212  01B8  0870               	movf	?___flneg,w
  3213  01B9  00C1               	movwf	sprintf@fval^(0+128)
  3214  01BA                     l4070:
  3215                           
  3216                           ;doprnt.c: 859: flag |= 0x03;
  3217  01BA  3003               	movlw	3
  3218  01BB  04B9               	iorwf	sprintf@flag^(0+128),f
  3219  01BC  3000               	movlw	0
  3220  01BD  04BA               	iorwf	(sprintf@flag+1)^(0+128),f
  3221  01BE                     l4072:
  3222                           
  3223                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  3224  01BE  0021               	movlb	1	; select bank1
  3225  01BF  01BB               	clrf	sprintf@eexp^(0+128)
  3226  01C0  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  3227  01C1                     l4074:
  3228                           
  3229                           ;doprnt.c: 862: if( fval!=0) {
  3230  01C1  0844               	movf	(sprintf@fval+3)^(0+128),w
  3231  01C2  00F3               	movwf	___fleq@ff1+3
  3232  01C3  0843               	movf	(sprintf@fval+2)^(0+128),w
  3233  01C4  00F2               	movwf	___fleq@ff1+2
  3234  01C5  0842               	movf	(sprintf@fval+1)^(0+128),w
  3235  01C6  00F1               	movwf	___fleq@ff1+1
  3236  01C7  0841               	movf	sprintf@fval^(0+128),w
  3237  01C8  00F0               	movwf	___fleq@ff1
  3238  01C9  3000               	movlw	0
  3239  01CA  00F7               	movwf	___fleq@ff2+3
  3240  01CB  3000               	movlw	0
  3241  01CC  00F6               	movwf	___fleq@ff2+2
  3242  01CD  3000               	movlw	0
  3243  01CE  00F5               	movwf	___fleq@ff2+1
  3244  01CF  3000               	movlw	0
  3245  01D0  00F4               	movwf	___fleq@ff2
  3246  01D1  319E  26A5  3180   	fcall	___fleq
  3247  01D4  1803               	btfsc	3,0
  3248  01D5  29D7               	goto	u5311
  3249  01D6  29D8               	goto	u5310
  3250  01D7                     u5311:
  3251  01D7  2A8F               	goto	l449
  3252  01D8                     u5310:
  3253  01D8                     l4076:
  3254                           
  3255                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  3256  01D8  1003               	clrc
  3257  01D9  0021               	movlb	1	; select bank1
  3258  01DA  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  3259  01DB  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  3260  01DC  3E82               	addlw	130
  3261  01DD  00BB               	movwf	sprintf@eexp^(0+128)
  3262  01DE  30FF               	movlw	255
  3263  01DF  1803               	skipnc
  3264  01E0  3000               	movlw	0
  3265  01E1  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  3266  01E2                     l4078:
  3267                           
  3268                           ;doprnt.c: 864: eexp--;
  3269  01E2  30FF               	movlw	255
  3270  01E3  07BB               	addwf	sprintf@eexp^(0+128),f
  3271  01E4  30FF               	movlw	255
  3272  01E5  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  3273  01E6                     l4080:
  3274                           
  3275                           ;doprnt.c: 865: eexp *= 3;
  3276  01E6  3003               	movlw	3
  3277  01E7  00F0               	movwf	___wmul@multiplier
  3278  01E8  3000               	movlw	0
  3279  01E9  00F1               	movwf	___wmul@multiplier+1
  3280  01EA  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3281  01EB  00F3               	movwf	___wmul@multiplicand+1
  3282  01EC  083B               	movf	sprintf@eexp^(0+128),w
  3283  01ED  00F2               	movwf	___wmul@multiplicand
  3284  01EE  319C  24DA  3180   	fcall	___wmul
  3285  01F1  0871               	movf	?___wmul+1,w
  3286  01F2  0021               	movlb	1	; select bank1
  3287  01F3  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  3288  01F4  0870               	movf	?___wmul,w
  3289  01F5  00BB               	movwf	sprintf@eexp^(0+128)
  3290  01F6                     l4082:
  3291                           
  3292                           ;doprnt.c: 866: eexp /= 10;
  3293  01F6  300A               	movlw	10
  3294  01F7  00F7               	movwf	___awdiv@divisor
  3295  01F8  3000               	movlw	0
  3296  01F9  00F8               	movwf	___awdiv@divisor+1
  3297  01FA  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3298  01FB  00FA               	movwf	___awdiv@dividend+1
  3299  01FC  083B               	movf	sprintf@eexp^(0+128),w
  3300  01FD  00F9               	movwf	___awdiv@dividend
  3301  01FE  319F  27A0  3180   	fcall	___awdiv
  3302  0201  0878               	movf	?___awdiv+1,w
  3303  0202  0021               	movlb	1	; select bank1
  3304  0203  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  3305  0204  0877               	movf	?___awdiv,w
  3306  0205  00BB               	movwf	sprintf@eexp^(0+128)
  3307  0206                     l4084:
  3308                           
  3309                           ;doprnt.c: 867: if(eexp < 0)
  3310  0206  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  3311  0207  2A09               	goto	u5321
  3312  0208  2A0A               	goto	u5320
  3313  0209                     u5321:
  3314  0209  2A0E               	goto	l4088
  3315  020A                     u5320:
  3316  020A                     l4086:
  3317                           
  3318                           ;doprnt.c: 868: eexp--;
  3319  020A  30FF               	movlw	255
  3320  020B  07BB               	addwf	sprintf@eexp^(0+128),f
  3321  020C  30FF               	movlw	255
  3322  020D  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  3323  020E                     l4088:
  3324                           
  3325                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  3326  020E  033B               	decf	sprintf@eexp^(0+128),w
  3327  020F  3AFF               	xorlw	255
  3328  0210  318D  2584  3180   	fcall	_scale
  3329  0213  0020               	movlb	0	; select bank0
  3330  0214  0841               	movf	?_scale+3,w
  3331  0215  0021               	movlb	1	; select bank1
  3332  0216  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  3333  0217  0020               	movlb	0	; select bank0
  3334  0218  0840               	movf	?_scale+2,w
  3335  0219  0021               	movlb	1	; select bank1
  3336  021A  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  3337  021B  0020               	movlb	0	; select bank0
  3338  021C  083F               	movf	?_scale+1,w
  3339  021D  0021               	movlb	1	; select bank1
  3340  021E  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  3341  021F  0020               	movlb	0	; select bank0
  3342  0220  083E               	movf	?_scale,w
  3343  0221  0021               	movlb	1	; select bank1
  3344  0222  00B5               	movwf	sprintf@tmpval^(0+128)
  3345  0223                     l4090:
  3346                           
  3347                           ;doprnt.c: 873: tmpval.integ *= fval;
  3348  0223  0844               	movf	(sprintf@fval+3)^(0+128),w
  3349  0224  0020               	movlb	0	; select bank0
  3350  0225  00A7               	movwf	___flmul@b+3
  3351  0226  0021               	movlb	1	; select bank1
  3352  0227  0843               	movf	(sprintf@fval+2)^(0+128),w
  3353  0228  0020               	movlb	0	; select bank0
  3354  0229  00A6               	movwf	___flmul@b+2
  3355  022A  0021               	movlb	1	; select bank1
  3356  022B  0842               	movf	(sprintf@fval+1)^(0+128),w
  3357  022C  0020               	movlb	0	; select bank0
  3358  022D  00A5               	movwf	___flmul@b+1
  3359  022E  0021               	movlb	1	; select bank1
  3360  022F  0841               	movf	sprintf@fval^(0+128),w
  3361  0230  0020               	movlb	0	; select bank0
  3362  0231  00A4               	movwf	___flmul@b
  3363  0232  0021               	movlb	1	; select bank1
  3364  0233  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  3365  0234  0020               	movlb	0	; select bank0
  3366  0235  00AB               	movwf	___flmul@a+3
  3367  0236  0021               	movlb	1	; select bank1
  3368  0237  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  3369  0238  0020               	movlb	0	; select bank0
  3370  0239  00AA               	movwf	___flmul@a+2
  3371  023A  0021               	movlb	1	; select bank1
  3372  023B  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  3373  023C  0020               	movlb	0	; select bank0
  3374  023D  00A9               	movwf	___flmul@a+1
  3375  023E  0021               	movlb	1	; select bank1
  3376  023F  0835               	movf	sprintf@tmpval^(0+128),w
  3377  0240  0020               	movlb	0	; select bank0
  3378  0241  00A8               	movwf	___flmul@a
  3379  0242  318B  232D  3180   	fcall	___flmul
  3380  0245  0020               	movlb	0	; select bank0
  3381  0246  0827               	movf	?___flmul+3,w
  3382  0247  0021               	movlb	1	; select bank1
  3383  0248  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  3384  0249  0020               	movlb	0	; select bank0
  3385  024A  0826               	movf	?___flmul+2,w
  3386  024B  0021               	movlb	1	; select bank1
  3387  024C  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  3388  024D  0020               	movlb	0	; select bank0
  3389  024E  0825               	movf	?___flmul+1,w
  3390  024F  0021               	movlb	1	; select bank1
  3391  0250  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  3392  0251  0020               	movlb	0	; select bank0
  3393  0252  0824               	movf	?___flmul,w
  3394  0253  0021               	movlb	1	; select bank1
  3395  0254  00B5               	movwf	sprintf@tmpval^(0+128)
  3396  0255                     l4092:
  3397                           
  3398                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  3399  0255  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  3400  0256  00F3               	movwf	___flge@ff1+3
  3401  0257  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  3402  0258  00F2               	movwf	___flge@ff1+2
  3403  0259  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  3404  025A  00F1               	movwf	___flge@ff1+1
  3405  025B  0835               	movf	sprintf@tmpval^(0+128),w
  3406  025C  00F0               	movwf	___flge@ff1
  3407  025D  303F               	movlw	63
  3408  025E  00F7               	movwf	___flge@ff2+3
  3409  025F  3080               	movlw	128
  3410  0260  00F6               	movwf	___flge@ff2+2
  3411  0261  3000               	movlw	0
  3412  0262  00F5               	movwf	___flge@ff2+1
  3413  0263  3000               	movlw	0
  3414  0264  00F4               	movwf	___flge@ff2
  3415  0265  3180  2018  3180   	fcall	___flge
  3416  0268  1803               	btfsc	3,0
  3417  0269  2A6B               	goto	u5331
  3418  026A  2A6C               	goto	u5330
  3419  026B                     u5331:
  3420  026B  2A72               	goto	l4096
  3421  026C                     u5330:
  3422  026C                     l4094:
  3423                           
  3424                           ;doprnt.c: 875: eexp--;
  3425  026C  30FF               	movlw	255
  3426  026D  0021               	movlb	1	; select bank1
  3427  026E  07BB               	addwf	sprintf@eexp^(0+128),f
  3428  026F  30FF               	movlw	255
  3429  0270  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  3430  0271  2A8F               	goto	l449
  3431  0272                     l4096:
  3432                           
  3433                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  3434  0272  0021               	movlb	1	; select bank1
  3435  0273  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  3436  0274  00F3               	movwf	___flge@ff1+3
  3437  0275  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  3438  0276  00F2               	movwf	___flge@ff1+2
  3439  0277  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  3440  0278  00F1               	movwf	___flge@ff1+1
  3441  0279  0835               	movf	sprintf@tmpval^(0+128),w
  3442  027A  00F0               	movwf	___flge@ff1
  3443  027B  3041               	movlw	65
  3444  027C  00F7               	movwf	___flge@ff2+3
  3445  027D  3020               	movlw	32
  3446  027E  00F6               	movwf	___flge@ff2+2
  3447  027F  3000               	movlw	0
  3448  0280  00F5               	movwf	___flge@ff2+1
  3449  0281  3000               	movlw	0
  3450  0282  00F4               	movwf	___flge@ff2
  3451  0283  3180  2018  3180   	fcall	___flge
  3452  0286  1C03               	btfss	3,0
  3453  0287  2A89               	goto	u5341
  3454  0288  2A8A               	goto	u5340
  3455  0289                     u5341:
  3456  0289  2A8F               	goto	l449
  3457  028A                     u5340:
  3458  028A                     l4098:
  3459                           
  3460                           ;doprnt.c: 877: eexp++;
  3461  028A  3001               	movlw	1
  3462  028B  0021               	movlb	1	; select bank1
  3463  028C  07BB               	addwf	sprintf@eexp^(0+128),f
  3464  028D  3000               	movlw	0
  3465  028E  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  3466  028F                     l449:
  3467                           
  3468                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  3469  028F  0021               	movlb	1	; select bank1
  3470  0290  0846               	movf	(sprintf@prec+1)^(0+128),w
  3471  0291  3A80               	xorlw	128
  3472  0292  00A8               	movwf	??_sprintf^(0+128)
  3473  0293  3080               	movlw	128
  3474  0294  0228               	subwf	??_sprintf^(0+128),w
  3475  0295  1D03               	skipz
  3476  0296  2A99               	goto	u5355
  3477  0297  300D               	movlw	13
  3478  0298  0245               	subwf	sprintf@prec^(0+128),w
  3479  0299                     u5355:
  3480  0299  1803               	skipnc
  3481  029A  2A9C               	goto	u5351
  3482  029B  2A9D               	goto	u5350
  3483  029C                     u5351:
  3484  029C  2ACE               	goto	l4102
  3485  029D                     u5350:
  3486  029D                     l4100:
  3487                           
  3488                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  3489  029D  0021               	movlb	1	; select bank1
  3490  029E  0845               	movf	sprintf@prec^(0+128),w
  3491  029F  3194  24C4  3180   	fcall	_fround
  3492  02A2  0020               	movlb	0	; select bank0
  3493  02A3  0841               	movf	?_fround+3,w
  3494  02A4  00D4               	movwf	___fladd@b+3
  3495  02A5  0840               	movf	?_fround+2,w
  3496  02A6  00D3               	movwf	___fladd@b+2
  3497  02A7  083F               	movf	?_fround+1,w
  3498  02A8  00D2               	movwf	___fladd@b+1
  3499  02A9  083E               	movf	?_fround,w
  3500  02AA  00D1               	movwf	___fladd@b
  3501  02AB  0021               	movlb	1	; select bank1
  3502  02AC  0844               	movf	(sprintf@fval+3)^(0+128),w
  3503  02AD  0020               	movlb	0	; select bank0
  3504  02AE  00D8               	movwf	___fladd@a+3
  3505  02AF  0021               	movlb	1	; select bank1
  3506  02B0  0843               	movf	(sprintf@fval+2)^(0+128),w
  3507  02B1  0020               	movlb	0	; select bank0
  3508  02B2  00D7               	movwf	___fladd@a+2
  3509  02B3  0021               	movlb	1	; select bank1
  3510  02B4  0842               	movf	(sprintf@fval+1)^(0+128),w
  3511  02B5  0020               	movlb	0	; select bank0
  3512  02B6  00D6               	movwf	___fladd@a+1
  3513  02B7  0021               	movlb	1	; select bank1
  3514  02B8  0841               	movf	sprintf@fval^(0+128),w
  3515  02B9  0020               	movlb	0	; select bank0
  3516  02BA  00D5               	movwf	___fladd@a
  3517  02BB  3188  20F5  3180   	fcall	___fladd
  3518  02BE  0020               	movlb	0	; select bank0
  3519  02BF  0854               	movf	?___fladd+3,w
  3520  02C0  0021               	movlb	1	; select bank1
  3521  02C1  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3522  02C2  0020               	movlb	0	; select bank0
  3523  02C3  0853               	movf	?___fladd+2,w
  3524  02C4  0021               	movlb	1	; select bank1
  3525  02C5  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3526  02C6  0020               	movlb	0	; select bank0
  3527  02C7  0852               	movf	?___fladd+1,w
  3528  02C8  0021               	movlb	1	; select bank1
  3529  02C9  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3530  02CA  0020               	movlb	0	; select bank0
  3531  02CB  0851               	movf	?___fladd,w
  3532  02CC  0021               	movlb	1	; select bank1
  3533  02CD  00C1               	movwf	sprintf@fval^(0+128)
  3534  02CE                     l4102:
  3535                           
  3536                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3537  02CE  0021               	movlb	1	; select bank1
  3538  02CF  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3539  02D0  3A80               	xorlw	128
  3540  02D1  00A8               	movwf	??_sprintf^(0+128)
  3541  02D2  3080               	movlw	128
  3542  02D3  0228               	subwf	??_sprintf^(0+128),w
  3543  02D4  1D03               	skipz
  3544  02D5  2AD8               	goto	u5365
  3545  02D6  300A               	movlw	10
  3546  02D7  023B               	subwf	sprintf@eexp^(0+128),w
  3547  02D8                     u5365:
  3548  02D8  1803               	skipnc
  3549  02D9  2ADB               	goto	u5361
  3550  02DA  2ADC               	goto	u5360
  3551  02DB                     u5361:
  3552  02DB  2B1E               	goto	l4110
  3553  02DC                     u5360:
  3554  02DC                     l4104:
  3555  02DC  0021               	movlb	1	; select bank1
  3556  02DD  0844               	movf	(sprintf@fval+3)^(0+128),w
  3557  02DE  00F3               	movwf	___fleq@ff1+3
  3558  02DF  0843               	movf	(sprintf@fval+2)^(0+128),w
  3559  02E0  00F2               	movwf	___fleq@ff1+2
  3560  02E1  0842               	movf	(sprintf@fval+1)^(0+128),w
  3561  02E2  00F1               	movwf	___fleq@ff1+1
  3562  02E3  0841               	movf	sprintf@fval^(0+128),w
  3563  02E4  00F0               	movwf	___fleq@ff1
  3564  02E5  3000               	movlw	0
  3565  02E6  00F7               	movwf	___fleq@ff2+3
  3566  02E7  3000               	movlw	0
  3567  02E8  00F6               	movwf	___fleq@ff2+2
  3568  02E9  3000               	movlw	0
  3569  02EA  00F5               	movwf	___fleq@ff2+1
  3570  02EB  3000               	movlw	0
  3571  02EC  00F4               	movwf	___fleq@ff2
  3572  02ED  319E  26A5  3180   	fcall	___fleq
  3573  02F0  1803               	btfsc	3,0
  3574  02F1  2AF3               	goto	u5371
  3575  02F2  2AF4               	goto	u5370
  3576  02F3                     u5371:
  3577  02F3  2B7A               	goto	l4124
  3578  02F4                     u5370:
  3579  02F4                     l4106:
  3580  02F4  0021               	movlb	1	; select bank1
  3581  02F5  0844               	movf	(sprintf@fval+3)^(0+128),w
  3582  02F6  0020               	movlb	0	; select bank0
  3583  02F7  00D6               	movwf	___fltol@f1+3
  3584  02F8  0021               	movlb	1	; select bank1
  3585  02F9  0843               	movf	(sprintf@fval+2)^(0+128),w
  3586  02FA  0020               	movlb	0	; select bank0
  3587  02FB  00D5               	movwf	___fltol@f1+2
  3588  02FC  0021               	movlb	1	; select bank1
  3589  02FD  0842               	movf	(sprintf@fval+1)^(0+128),w
  3590  02FE  0020               	movlb	0	; select bank0
  3591  02FF  00D4               	movwf	___fltol@f1+1
  3592  0300  0021               	movlb	1	; select bank1
  3593  0301  0841               	movf	sprintf@fval^(0+128),w
  3594  0302  0020               	movlb	0	; select bank0
  3595  0303  00D3               	movwf	___fltol@f1
  3596  0304  3190  202E  3180   	fcall	___fltol
  3597  0307  0020               	movlb	0	; select bank0
  3598  0308  0856               	movf	?___fltol+3,w
  3599  0309  0455               	iorwf	?___fltol+2,w
  3600  030A  0454               	iorwf	?___fltol+1,w
  3601  030B  0453               	iorwf	?___fltol,w
  3602  030C  1D03               	skipz
  3603  030D  2B0F               	goto	u5381
  3604  030E  2B10               	goto	u5380
  3605  030F                     u5381:
  3606  030F  2B7A               	goto	l4124
  3607  0310                     u5380:
  3608  0310                     l4108:
  3609  0310  0021               	movlb	1	; select bank1
  3610  0311  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3611  0312  3A80               	xorlw	128
  3612  0313  00A8               	movwf	??_sprintf^(0+128)
  3613  0314  3080               	movlw	128
  3614  0315  0228               	subwf	??_sprintf^(0+128),w
  3615  0316  1D03               	skipz
  3616  0317  2B1A               	goto	u5395
  3617  0318  3002               	movlw	2
  3618  0319  023B               	subwf	sprintf@eexp^(0+128),w
  3619  031A                     u5395:
  3620  031A  1C03               	skipc
  3621  031B  2B1D               	goto	u5391
  3622  031C  2B1E               	goto	u5390
  3623  031D                     u5391:
  3624  031D  2B7A               	goto	l4124
  3625  031E                     u5390:
  3626  031E                     l4110:
  3627                           
  3628                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  3629  031E  0021               	movlb	1	; select bank1
  3630  031F  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  3631  0320  00F3               	movwf	___flge@ff1+3
  3632  0321  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  3633  0322  00F2               	movwf	___flge@ff1+2
  3634  0323  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  3635  0324  00F1               	movwf	___flge@ff1+1
  3636  0325  0835               	movf	sprintf@tmpval^(0+128),w
  3637  0326  00F0               	movwf	___flge@ff1
  3638  0327  3040               	movlw	64
  3639  0328  00F7               	movwf	___flge@ff2+3
  3640  0329  3089               	movlw	137
  3641  032A  00F6               	movwf	___flge@ff2+2
  3642  032B  3070               	movlw	112
  3643  032C  00F5               	movwf	___flge@ff2+1
  3644  032D  305F               	movlw	95
  3645  032E  00F4               	movwf	___flge@ff2
  3646  032F  3180  2018  3180   	fcall	___flge
  3647  0332  1803               	btfsc	3,0
  3648  0333  2B35               	goto	u5401
  3649  0334  2B36               	goto	u5400
  3650  0335                     u5401:
  3651  0335  2B3C               	goto	l4114
  3652  0336                     u5400:
  3653  0336                     l4112:
  3654                           
  3655                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3656  0336  30F7               	movlw	247
  3657  0337  0021               	movlb	1	; select bank1
  3658  0338  07BB               	addwf	sprintf@eexp^(0+128),f
  3659  0339  30FF               	movlw	255
  3660  033A  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  3661                           
  3662                           ;doprnt.c: 1148: }else{
  3663  033B  2B41               	goto	l4116
  3664  033C                     l4114:
  3665                           
  3666                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3667  033C  30F8               	movlw	248
  3668  033D  0021               	movlb	1	; select bank1
  3669  033E  07BB               	addwf	sprintf@eexp^(0+128),f
  3670  033F  30FF               	movlw	255
  3671  0340  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  3672  0341                     l4116:
  3673                           
  3674                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3675  0341  083B               	movf	sprintf@eexp^(0+128),w
  3676  0342  318D  2584  3180   	fcall	_scale
  3677  0345  0020               	movlb	0	; select bank0
  3678  0346  0841               	movf	?_scale+3,w
  3679  0347  0021               	movlb	1	; select bank1
  3680  0348  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  3681  0349  0020               	movlb	0	; select bank0
  3682  034A  0840               	movf	?_scale+2,w
  3683  034B  0021               	movlb	1	; select bank1
  3684  034C  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  3685  034D  0020               	movlb	0	; select bank0
  3686  034E  083F               	movf	?_scale+1,w
  3687  034F  0021               	movlb	1	; select bank1
  3688  0350  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  3689  0351  0020               	movlb	0	; select bank0
  3690  0352  083E               	movf	?_scale,w
  3691  0353  0021               	movlb	1	; select bank1
  3692  0354  00B5               	movwf	sprintf@tmpval^(0+128)
  3693  0355                     l4118:
  3694  0355  0844               	movf	(sprintf@fval+3)^(0+128),w
  3695  0356  00F3               	movwf	__div_to_l_@f1+3
  3696  0357  0843               	movf	(sprintf@fval+2)^(0+128),w
  3697  0358  00F2               	movwf	__div_to_l_@f1+2
  3698  0359  0842               	movf	(sprintf@fval+1)^(0+128),w
  3699  035A  00F1               	movwf	__div_to_l_@f1+1
  3700  035B  0841               	movf	sprintf@fval^(0+128),w
  3701  035C  00F0               	movwf	__div_to_l_@f1
  3702  035D  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  3703  035E  00F7               	movwf	__div_to_l_@f2+3
  3704  035F  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  3705  0360  00F6               	movwf	__div_to_l_@f2+2
  3706  0361  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  3707  0362  00F5               	movwf	__div_to_l_@f2+1
  3708  0363  0835               	movf	sprintf@tmpval^(0+128),w
  3709  0364  00F4               	movwf	__div_to_l_@f2
  3710  0365  3191  214F  3180   	fcall	__div_to_l_
  3711  0368  0873               	movf	?__div_to_l_+3,w
  3712  0369  0021               	movlb	1	; select bank1
  3713  036A  00C0               	movwf	(sprintf@val+3)^(0+128)
  3714  036B  0872               	movf	?__div_to_l_+2,w
  3715  036C  00BF               	movwf	(sprintf@val+2)^(0+128)
  3716  036D  0871               	movf	?__div_to_l_+1,w
  3717  036E  00BE               	movwf	(sprintf@val+1)^(0+128)
  3718  036F  0870               	movf	?__div_to_l_,w
  3719  0370  00BD               	movwf	sprintf@val^(0+128)
  3720  0371                     l4122:
  3721                           
  3722                           ;doprnt.c: 1155: fval = 0.0;
  3723  0371  3000               	movlw	0
  3724  0372  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3725  0373  3000               	movlw	0
  3726  0374  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3727  0375  3000               	movlw	0
  3728  0376  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3729  0377  3000               	movlw	0
  3730  0378  00C1               	movwf	sprintf@fval^(0+128)
  3731                           
  3732                           ;doprnt.c: 1156: } else {
  3733  0379  2BD7               	goto	l4128
  3734  037A                     l4124:
  3735                           
  3736                           ;doprnt.c: 1157: val = (unsigned long)fval;
  3737  037A  0021               	movlb	1	; select bank1
  3738  037B  0844               	movf	(sprintf@fval+3)^(0+128),w
  3739  037C  0020               	movlb	0	; select bank0
  3740  037D  00D6               	movwf	___fltol@f1+3
  3741  037E  0021               	movlb	1	; select bank1
  3742  037F  0843               	movf	(sprintf@fval+2)^(0+128),w
  3743  0380  0020               	movlb	0	; select bank0
  3744  0381  00D5               	movwf	___fltol@f1+2
  3745  0382  0021               	movlb	1	; select bank1
  3746  0383  0842               	movf	(sprintf@fval+1)^(0+128),w
  3747  0384  0020               	movlb	0	; select bank0
  3748  0385  00D4               	movwf	___fltol@f1+1
  3749  0386  0021               	movlb	1	; select bank1
  3750  0387  0841               	movf	sprintf@fval^(0+128),w
  3751  0388  0020               	movlb	0	; select bank0
  3752  0389  00D3               	movwf	___fltol@f1
  3753  038A  3190  202E  3180   	fcall	___fltol
  3754  038D  0020               	movlb	0	; select bank0
  3755  038E  0856               	movf	?___fltol+3,w
  3756  038F  0021               	movlb	1	; select bank1
  3757  0390  00C0               	movwf	(sprintf@val+3)^(0+128)
  3758  0391  0020               	movlb	0	; select bank0
  3759  0392  0855               	movf	?___fltol+2,w
  3760  0393  0021               	movlb	1	; select bank1
  3761  0394  00BF               	movwf	(sprintf@val+2)^(0+128)
  3762  0395  0020               	movlb	0	; select bank0
  3763  0396  0854               	movf	?___fltol+1,w
  3764  0397  0021               	movlb	1	; select bank1
  3765  0398  00BE               	movwf	(sprintf@val+1)^(0+128)
  3766  0399  0020               	movlb	0	; select bank0
  3767  039A  0853               	movf	?___fltol,w
  3768  039B  0021               	movlb	1	; select bank1
  3769  039C  00BD               	movwf	sprintf@val^(0+128)
  3770                           
  3771                           ;doprnt.c: 1158: fval -= (double)val;
  3772  039D  0840               	movf	(sprintf@val+3)^(0+128),w
  3773  039E  00F3               	movwf	___xxtofl@val+3
  3774  039F  083F               	movf	(sprintf@val+2)^(0+128),w
  3775  03A0  00F2               	movwf	___xxtofl@val+2
  3776  03A1  083E               	movf	(sprintf@val+1)^(0+128),w
  3777  03A2  00F1               	movwf	___xxtofl@val+1
  3778  03A3  083D               	movf	sprintf@val^(0+128),w
  3779  03A4  00F0               	movwf	___xxtofl@val
  3780  03A5  3000               	movlw	0
  3781  03A6  3190  20A3  3180   	fcall	___xxtofl
  3782  03A9  0873               	movf	?___xxtofl+3,w
  3783  03AA  0020               	movlb	0	; select bank0
  3784  03AB  00E8               	movwf	___flsub@a+3
  3785  03AC  0872               	movf	?___xxtofl+2,w
  3786  03AD  00E7               	movwf	___flsub@a+2
  3787  03AE  0871               	movf	?___xxtofl+1,w
  3788  03AF  00E6               	movwf	___flsub@a+1
  3789  03B0  0870               	movf	?___xxtofl,w
  3790  03B1  00E5               	movwf	___flsub@a
  3791  03B2  0021               	movlb	1	; select bank1
  3792  03B3  0844               	movf	(sprintf@fval+3)^(0+128),w
  3793  03B4  0020               	movlb	0	; select bank0
  3794  03B5  00EC               	movwf	___flsub@b+3
  3795  03B6  0021               	movlb	1	; select bank1
  3796  03B7  0843               	movf	(sprintf@fval+2)^(0+128),w
  3797  03B8  0020               	movlb	0	; select bank0
  3798  03B9  00EB               	movwf	___flsub@b+2
  3799  03BA  0021               	movlb	1	; select bank1
  3800  03BB  0842               	movf	(sprintf@fval+1)^(0+128),w
  3801  03BC  0020               	movlb	0	; select bank0
  3802  03BD  00EA               	movwf	___flsub@b+1
  3803  03BE  0021               	movlb	1	; select bank1
  3804  03BF  0841               	movf	sprintf@fval^(0+128),w
  3805  03C0  0020               	movlb	0	; select bank0
  3806  03C1  00E9               	movwf	___flsub@b
  3807  03C2  319C  24F9  3180   	fcall	___flsub
  3808  03C5  0020               	movlb	0	; select bank0
  3809  03C6  0868               	movf	?___flsub+3,w
  3810  03C7  0021               	movlb	1	; select bank1
  3811  03C8  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3812  03C9  0020               	movlb	0	; select bank0
  3813  03CA  0867               	movf	?___flsub+2,w
  3814  03CB  0021               	movlb	1	; select bank1
  3815  03CC  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3816  03CD  0020               	movlb	0	; select bank0
  3817  03CE  0866               	movf	?___flsub+1,w
  3818  03CF  0021               	movlb	1	; select bank1
  3819  03D0  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3820  03D1  0020               	movlb	0	; select bank0
  3821  03D2  0865               	movf	?___flsub,w
  3822  03D3  0021               	movlb	1	; select bank1
  3823  03D4  00C1               	movwf	sprintf@fval^(0+128)
  3824  03D5                     l4126:
  3825                           
  3826                           ;doprnt.c: 1159: eexp = 0;
  3827  03D5  01BB               	clrf	sprintf@eexp^(0+128)
  3828  03D6  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  3829  03D7                     l4128:
  3830                           
  3831                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  3832  03D7  01C7               	clrf	sprintf@c^(0+128)
  3833  03D8  0AC7               	incf	sprintf@c^(0+128),f
  3834  03D9                     l4134:
  3835                           
  3836                           ;doprnt.c: 1163: if(val < dpowers[c])
  3837  03D9  0847               	movf	sprintf@c^(0+128),w
  3838  03DA  00A8               	movwf	??_sprintf^(0+128)
  3839  03DB  01A9               	clrf	(??_sprintf^(0+128)+1)
  3840  03DC  35A8               	lslf	??_sprintf^(0+128),f
  3841  03DD  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  3842  03DE  35A8               	lslf	??_sprintf^(0+128),f
  3843  03DF  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  3844  03E0  3000               	movlw	low (_dpowers| (0+32768))
  3845  03E1  0728               	addwf	??_sprintf^(0+128),w
  3846  03E2  0084               	movwf	4
  3847  03E3  30A0               	movlw	high (_dpowers| (0+32768))
  3848  03E4  3D29               	addwfc	(??_sprintf+1)^(0+128),w
  3849  03E5  0085               	movwf	5
  3850  03E6  3F00               	moviw [0]fsr0
  3851  03E7  00AA               	movwf	(??_sprintf+2)^(0+128)
  3852  03E8  3F01               	moviw [1]fsr0
  3853  03E9  00AB               	movwf	((??_sprintf+2)^(0+128)+1)
  3854  03EA  3F02               	moviw [2]fsr0
  3855  03EB  00AC               	movwf	((??_sprintf+2)^(0+128)+2)
  3856  03EC  3F03               	moviw [3]fsr0
  3857  03ED  00AD               	movwf	((??_sprintf+2)^(0+128)+3)
  3858  03EE  082D               	movf	(??_sprintf+5)^(0+128),w
  3859  03EF  0240               	subwf	(sprintf@val+3)^(0+128),w
  3860  03F0  1D03               	skipz
  3861  03F1  2BFC               	goto	u5415
  3862  03F2  082C               	movf	(??_sprintf+4)^(0+128),w
  3863  03F3  023F               	subwf	(sprintf@val+2)^(0+128),w
  3864  03F4  1D03               	skipz
  3865  03F5  2BFC               	goto	u5415
  3866  03F6  082B               	movf	(??_sprintf+3)^(0+128),w
  3867  03F7  023E               	subwf	(sprintf@val+1)^(0+128),w
  3868  03F8  1D03               	skipz
  3869  03F9  2BFC               	goto	u5415
  3870  03FA  082A               	movf	(??_sprintf+2)^(0+128),w
  3871  03FB  023D               	subwf	sprintf@val^(0+128),w
  3872  03FC                     u5415:
  3873  03FC  1803               	skipnc
  3874  03FD  2BFF               	goto	u5411
  3875  03FE  2C00               	goto	u5410
  3876  03FF                     u5411:
  3877  03FF  2C01               	goto	l4138
  3878  0400                     u5410:
  3879  0400  2C0B               	goto	l4140
  3880  0401                     l4138:
  3881  0401  3001               	movlw	1
  3882  0402  00A8               	movwf	??_sprintf^(0+128)
  3883  0403  0828               	movf	??_sprintf^(0+128),w
  3884  0404  07C7               	addwf	sprintf@c^(0+128),f
  3885  0405  300A               	movlw	10
  3886  0406  0647               	xorwf	sprintf@c^(0+128),w
  3887  0407  1D03               	btfss	3,2
  3888  0408  2C0A               	goto	u5421
  3889  0409  2C0B               	goto	u5420
  3890  040A                     u5421:
  3891  040A  2BD9               	goto	l4134
  3892  040B                     u5420:
  3893  040B                     l4140:
  3894                           
  3895                           ;doprnt.c: 1168: width -= prec + c + eexp;
  3896  040B  0847               	movf	sprintf@c^(0+128),w
  3897  040C  0745               	addwf	sprintf@prec^(0+128),w
  3898  040D  00A8               	movwf	??_sprintf^(0+128)
  3899  040E  0846               	movf	(sprintf@prec+1)^(0+128),w
  3900  040F  1803               	skipnc
  3901  0410  0A46               	incf	(sprintf@prec+1)^(0+128),w
  3902  0411  00A9               	movwf	(??_sprintf^(0+128)+1)
  3903  0412  083B               	movf	sprintf@eexp^(0+128),w
  3904  0413  0728               	addwf	??_sprintf^(0+128),w
  3905  0414  00AA               	movwf	(??_sprintf+2)^(0+128)
  3906  0415  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3907  0416  3D29               	addwfc	(??_sprintf+1)^(0+128),w
  3908  0417  00AB               	movwf	(??_sprintf+3)^(0+128)
  3909  0418  082A               	movf	(??_sprintf+2)^(0+128),w
  3910  0419  02B3               	subwf	sprintf@width^(0+128),f
  3911  041A  082B               	movf	(??_sprintf+3)^(0+128),w
  3912  041B  3BB4               	subwfb	(sprintf@width+1)^(0+128),f
  3913                           
  3914                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  3915  041C  0845               	movf	sprintf@prec^(0+128),w
  3916  041D  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  3917  041E  1903               	btfsc	3,2
  3918  041F  2C21               	goto	u5431
  3919  0420  2C22               	goto	u5430
  3920  0421                     u5431:
  3921  0421  2C26               	goto	l4144
  3922  0422                     u5430:
  3923  0422                     l4142:
  3924                           
  3925                           ;doprnt.c: 1174: width--;
  3926  0422  30FF               	movlw	255
  3927  0423  07B3               	addwf	sprintf@width^(0+128),f
  3928  0424  30FF               	movlw	255
  3929  0425  3DB4               	addwfc	(sprintf@width+1)^(0+128),f
  3930  0426                     l4144:
  3931                           
  3932                           ;doprnt.c: 1175: if(flag & 0x03)
  3933  0426  3003               	movlw	3
  3934  0427  0539               	andwf	sprintf@flag^(0+128),w
  3935  0428  00A8               	movwf	??_sprintf^(0+128)
  3936  0429  3000               	movlw	0
  3937  042A  053A               	andwf	(sprintf@flag+1)^(0+128),w
  3938  042B  00A9               	movwf	(??_sprintf+1)^(0+128)
  3939  042C  0828               	movf	??_sprintf^(0+128),w
  3940  042D  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3941  042E  1903               	btfsc	3,2
  3942  042F  2C31               	goto	u5441
  3943  0430  2C32               	goto	u5440
  3944  0431                     u5441:
  3945  0431  2C43               	goto	l4154
  3946  0432                     u5440:
  3947  0432                     l4146:
  3948                           
  3949                           ;doprnt.c: 1176: width--;
  3950  0432  30FF               	movlw	255
  3951  0433  07B3               	addwf	sprintf@width^(0+128),f
  3952  0434  30FF               	movlw	255
  3953  0435  3DB4               	addwfc	(sprintf@width+1)^(0+128),f
  3954  0436  2C43               	goto	l4154
  3955  0437                     l4148:
  3956                           
  3957                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  3958  0437  0021               	movlb	1	; select bank1
  3959  0438  0820               	movf	sprintf@sp^(0+128),w
  3960  0439  0086               	movwf	6
  3961  043A  0821               	movf	(sprintf@sp+1)^(0+128),w
  3962  043B  0087               	movwf	7
  3963  043C  3020               	movlw	32
  3964  043D  0081               	movwf	1
  3965  043E                     l4150:
  3966  043E  3001               	movlw	1
  3967  043F  07A0               	addwf	sprintf@sp^(0+128),f
  3968  0440  3000               	movlw	0
  3969  0441  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  3970  0442  2C32               	goto	l4146
  3971  0443                     l4154:
  3972  0443  0834               	movf	(sprintf@width+1)^(0+128),w
  3973  0444  3A80               	xorlw	128
  3974  0445  00A8               	movwf	??_sprintf^(0+128)
  3975  0446  3080               	movlw	128
  3976  0447  0228               	subwf	??_sprintf^(0+128),w
  3977  0448  1D03               	skipz
  3978  0449  2C4C               	goto	u5455
  3979  044A  3001               	movlw	1
  3980  044B  0233               	subwf	sprintf@width^(0+128),w
  3981  044C                     u5455:
  3982  044C  1803               	skipnc
  3983  044D  2C4F               	goto	u5451
  3984  044E  2C50               	goto	u5450
  3985  044F                     u5451:
  3986  044F  2C37               	goto	l4148
  3987  0450                     u5450:
  3988  0450                     l4156:
  3989                           
  3990                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  3991  0450  3003               	movlw	3
  3992  0451  0021               	movlb	1	; select bank1
  3993  0452  0539               	andwf	sprintf@flag^(0+128),w
  3994  0453  00A8               	movwf	??_sprintf^(0+128)
  3995  0454  3000               	movlw	0
  3996  0455  053A               	andwf	(sprintf@flag+1)^(0+128),w
  3997  0456  00A9               	movwf	(??_sprintf+1)^(0+128)
  3998  0457  0828               	movf	??_sprintf^(0+128),w
  3999  0458  0429               	iorwf	(??_sprintf^(0+128)+1),w
  4000  0459  1903               	btfsc	3,2
  4001  045A  2C5C               	goto	u5461
  4002  045B  2C5D               	goto	u5460
  4003  045C                     u5461:
  4004  045C  2CC7               	goto	l4170
  4005  045D                     u5460:
  4006  045D                     l4158:
  4007                           
  4008                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  4009  045D  0820               	movf	sprintf@sp^(0+128),w
  4010  045E  0086               	movwf	6
  4011  045F  0821               	movf	(sprintf@sp+1)^(0+128),w
  4012  0460  0087               	movwf	7
  4013  0461  302D               	movlw	45
  4014  0462  0081               	movwf	1
  4015  0463                     l4160:
  4016  0463  3001               	movlw	1
  4017  0464  07A0               	addwf	sprintf@sp^(0+128),f
  4018  0465  3000               	movlw	0
  4019  0466  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  4020  0467  2CC7               	goto	l4170
  4021  0468                     l4162:
  4022                           
  4023                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  4024  0468  0847               	movf	sprintf@c^(0+128),w
  4025  0469  00A8               	movwf	??_sprintf^(0+128)
  4026  046A  01A9               	clrf	(??_sprintf^(0+128)+1)
  4027  046B  35A8               	lslf	??_sprintf^(0+128),f
  4028  046C  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4029  046D  35A8               	lslf	??_sprintf^(0+128),f
  4030  046E  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4031  046F  3000               	movlw	low (_dpowers| (0+32768))
  4032  0470  0728               	addwf	??_sprintf^(0+128),w
  4033  0471  0084               	movwf	4
  4034  0472  30A0               	movlw	high (_dpowers| (0+32768))
  4035  0473  3D29               	addwfc	(??_sprintf+1)^(0+128),w
  4036  0474  0085               	movwf	5
  4037  0475  3F00               	moviw [0]fsr0
  4038  0476  00F0               	movwf	___lldiv@divisor
  4039  0477  3F01               	moviw [1]fsr0
  4040  0478  00F1               	movwf	___lldiv@divisor+1
  4041  0479  3F02               	moviw [2]fsr0
  4042  047A  00F2               	movwf	___lldiv@divisor+2
  4043  047B  3F03               	moviw [3]fsr0
  4044  047C  00F3               	movwf	___lldiv@divisor+3
  4045  047D  0840               	movf	(sprintf@val+3)^(0+128),w
  4046  047E  00F7               	movwf	___lldiv@dividend+3
  4047  047F  083F               	movf	(sprintf@val+2)^(0+128),w
  4048  0480  00F6               	movwf	___lldiv@dividend+2
  4049  0481  083E               	movf	(sprintf@val+1)^(0+128),w
  4050  0482  00F5               	movwf	___lldiv@dividend+1
  4051  0483  083D               	movf	sprintf@val^(0+128),w
  4052  0484  00F4               	movwf	___lldiv@dividend
  4053  0485  319F  2746  3180   	fcall	___lldiv
  4054  0488  0873               	movf	?___lldiv+3,w
  4055  0489  0021               	movlb	1	; select bank1
  4056  048A  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  4057  048B  0872               	movf	?___lldiv+2,w
  4058  048C  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  4059  048D  0871               	movf	?___lldiv+1,w
  4060  048E  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  4061  048F  0870               	movf	?___lldiv,w
  4062  0490  00B5               	movwf	sprintf@tmpval^(0+128)
  4063  0491                     l4164:
  4064                           
  4065                           ;doprnt.c: 1228: tmpval.vd %= 10;
  4066  0491  3000               	movlw	0
  4067  0492  0020               	movlb	0	; select bank0
  4068  0493  00A3               	movwf	___llmod@divisor+3
  4069  0494  3000               	movlw	0
  4070  0495  00A2               	movwf	___llmod@divisor+2
  4071  0496  3000               	movlw	0
  4072  0497  00A1               	movwf	___llmod@divisor+1
  4073  0498  300A               	movlw	10
  4074  0499  00A0               	movwf	___llmod@divisor
  4075  049A  0021               	movlb	1	; select bank1
  4076  049B  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  4077  049C  0020               	movlb	0	; select bank0
  4078  049D  00A7               	movwf	___llmod@dividend+3
  4079  049E  0021               	movlb	1	; select bank1
  4080  049F  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  4081  04A0  0020               	movlb	0	; select bank0
  4082  04A1  00A6               	movwf	___llmod@dividend+2
  4083  04A2  0021               	movlb	1	; select bank1
  4084  04A3  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  4085  04A4  0020               	movlb	0	; select bank0
  4086  04A5  00A5               	movwf	___llmod@dividend+1
  4087  04A6  0021               	movlb	1	; select bank1
  4088  04A7  0835               	movf	sprintf@tmpval^(0+128),w
  4089  04A8  0020               	movlb	0	; select bank0
  4090  04A9  00A4               	movwf	___llmod@dividend
  4091  04AA  319E  260C  3180   	fcall	___llmod
  4092  04AD  0020               	movlb	0	; select bank0
  4093  04AE  0823               	movf	?___llmod+3,w
  4094  04AF  0021               	movlb	1	; select bank1
  4095  04B0  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  4096  04B1  0020               	movlb	0	; select bank0
  4097  04B2  0822               	movf	?___llmod+2,w
  4098  04B3  0021               	movlb	1	; select bank1
  4099  04B4  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  4100  04B5  0020               	movlb	0	; select bank0
  4101  04B6  0821               	movf	?___llmod+1,w
  4102  04B7  0021               	movlb	1	; select bank1
  4103  04B8  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  4104  04B9  0020               	movlb	0	; select bank0
  4105  04BA  0820               	movf	?___llmod,w
  4106  04BB  0021               	movlb	1	; select bank1
  4107  04BC  00B5               	movwf	sprintf@tmpval^(0+128)
  4108  04BD                     l4166:
  4109                           
  4110                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  4111  04BD  0835               	movf	sprintf@tmpval^(0+128),w
  4112  04BE  3E30               	addlw	48
  4113  04BF  00A8               	movwf	??_sprintf^(0+128)
  4114  04C0  0820               	movf	sprintf@sp^(0+128),w
  4115  04C1  0086               	movwf	6
  4116  04C2  0821               	movf	(sprintf@sp+1)^(0+128),w
  4117  04C3  0087               	movwf	7
  4118  04C4  0828               	movf	??_sprintf^(0+128),w
  4119  04C5  0081               	movwf	1
  4120  04C6  2C63               	goto	l4160
  4121  04C7                     l4170:
  4122  04C7  3001               	movlw	1
  4123  04C8  02C7               	subwf	sprintf@c^(0+128),f
  4124  04C9  0A47               	incf	sprintf@c^(0+128),w
  4125  04CA  1D03               	btfss	3,2
  4126  04CB  2CCD               	goto	u5471
  4127  04CC  2CCE               	goto	u5470
  4128  04CD                     u5471:
  4129  04CD  2C68               	goto	l4162
  4130  04CE                     u5470:
  4131  04CE  2CDE               	goto	l4178
  4132  04CF                     l4172:
  4133                           
  4134                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  4135  04CF  0021               	movlb	1	; select bank1
  4136  04D0  0820               	movf	sprintf@sp^(0+128),w
  4137  04D1  0086               	movwf	6
  4138  04D2  0821               	movf	(sprintf@sp+1)^(0+128),w
  4139  04D3  0087               	movwf	7
  4140  04D4  3030               	movlw	48
  4141  04D5  0081               	movwf	1
  4142  04D6                     l4174:
  4143  04D6  3001               	movlw	1
  4144  04D7  07A0               	addwf	sprintf@sp^(0+128),f
  4145  04D8  3000               	movlw	0
  4146  04D9  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  4147  04DA                     l4176:
  4148                           
  4149                           ;doprnt.c: 1235: eexp--;
  4150  04DA  30FF               	movlw	255
  4151  04DB  07BB               	addwf	sprintf@eexp^(0+128),f
  4152  04DC  30FF               	movlw	255
  4153  04DD  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  4154  04DE                     l4178:
  4155  04DE  083C               	movf	(sprintf@eexp+1)^(0+128),w
  4156  04DF  3A80               	xorlw	128
  4157  04E0  00A8               	movwf	??_sprintf^(0+128)
  4158  04E1  3080               	movlw	128
  4159  04E2  0228               	subwf	??_sprintf^(0+128),w
  4160  04E3  1D03               	skipz
  4161  04E4  2CE7               	goto	u5485
  4162  04E5  3001               	movlw	1
  4163  04E6  023B               	subwf	sprintf@eexp^(0+128),w
  4164  04E7                     u5485:
  4165  04E7  1803               	skipnc
  4166  04E8  2CEA               	goto	u5481
  4167  04E9  2CEB               	goto	u5480
  4168  04EA                     u5481:
  4169  04EA  2CCF               	goto	l4172
  4170  04EB                     u5480:
  4171  04EB                     l4180:
  4172                           
  4173                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  4174  04EB  0021               	movlb	1	; select bank1
  4175  04EC  0846               	movf	(sprintf@prec+1)^(0+128),w
  4176  04ED  3A80               	xorlw	128
  4177  04EE  00A8               	movwf	??_sprintf^(0+128)
  4178  04EF  3080               	movlw	128
  4179  04F0  0228               	subwf	??_sprintf^(0+128),w
  4180  04F1  1D03               	skipz
  4181  04F2  2CF5               	goto	u5495
  4182  04F3  3009               	movlw	9
  4183  04F4  0245               	subwf	sprintf@prec^(0+128),w
  4184  04F5                     u5495:
  4185  04F5  1C03               	skipc
  4186  04F6  2CF8               	goto	u5491
  4187  04F7  2CF9               	goto	u5490
  4188  04F8                     u5491:
  4189  04F8  2CFF               	goto	l4184
  4190  04F9                     u5490:
  4191  04F9                     l4182:
  4192                           
  4193                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4194  04F9  3008               	movlw	8
  4195  04FA  0021               	movlb	1	; select bank1
  4196  04FB  00A8               	movwf	??_sprintf^(0+128)
  4197  04FC  0828               	movf	??_sprintf^(0+128),w
  4198  04FD  00C7               	movwf	sprintf@c^(0+128)
  4199  04FE  2D04               	goto	l481
  4200  04FF                     l4184:
  4201                           
  4202                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  4203  04FF  0021               	movlb	1	; select bank1
  4204  0500  0845               	movf	sprintf@prec^(0+128),w
  4205  0501  00A8               	movwf	??_sprintf^(0+128)
  4206  0502  0828               	movf	??_sprintf^(0+128),w
  4207  0503  00C7               	movwf	sprintf@c^(0+128)
  4208  0504                     l481:
  4209                           
  4210                           ;doprnt.c: 1241: prec -= (int)c;
  4211  0504  0847               	movf	sprintf@c^(0+128),w
  4212  0505  00A8               	movwf	??_sprintf^(0+128)
  4213  0506  01A9               	clrf	(??_sprintf^(0+128)+1)
  4214  0507  0828               	movf	??_sprintf^(0+128),w
  4215  0508  02C5               	subwf	sprintf@prec^(0+128),f
  4216  0509  0829               	movf	(??_sprintf+1)^(0+128),w
  4217  050A  3BC6               	subwfb	(sprintf@prec+1)^(0+128),f
  4218  050B                     l4186:
  4219                           
  4220                           ;doprnt.c: 1245: if(c)
  4221  050B  0847               	movf	sprintf@c^(0+128),w
  4222  050C  1903               	btfsc	3,2
  4223  050D  2D0F               	goto	u5501
  4224  050E  2D10               	goto	u5500
  4225  050F                     u5501:
  4226  050F  2D1A               	goto	l4192
  4227  0510                     u5500:
  4228  0510                     l4188:
  4229                           
  4230                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  4231  0510  0820               	movf	sprintf@sp^(0+128),w
  4232  0511  0086               	movwf	6
  4233  0512  0821               	movf	(sprintf@sp+1)^(0+128),w
  4234  0513  0087               	movwf	7
  4235  0514  302E               	movlw	46
  4236  0515  0081               	movwf	1
  4237  0516                     l4190:
  4238  0516  3001               	movlw	1
  4239  0517  07A0               	addwf	sprintf@sp^(0+128),f
  4240  0518  3000               	movlw	0
  4241  0519  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  4242  051A                     l4192:
  4243                           
  4244                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4245  051A  0847               	movf	sprintf@c^(0+128),w
  4246  051B  318D  2584  3180   	fcall	_scale
  4247  051E  0020               	movlb	0	; select bank0
  4248  051F  0841               	movf	?_scale+3,w
  4249  0520  0021               	movlb	1	; select bank1
  4250  0521  00B1               	movwf	(_sprintf$1082+3)^(0+128)
  4251  0522  0020               	movlb	0	; select bank0
  4252  0523  0840               	movf	?_scale+2,w
  4253  0524  0021               	movlb	1	; select bank1
  4254  0525  00B0               	movwf	(_sprintf$1082+2)^(0+128)
  4255  0526  0020               	movlb	0	; select bank0
  4256  0527  083F               	movf	?_scale+1,w
  4257  0528  0021               	movlb	1	; select bank1
  4258  0529  00AF               	movwf	(_sprintf$1082+1)^(0+128)
  4259  052A  0020               	movlb	0	; select bank0
  4260  052B  083E               	movf	?_scale,w
  4261  052C  0021               	movlb	1	; select bank1
  4262  052D  00AE               	movwf	_sprintf$1082^(0+128)
  4263  052E                     l4194:
  4264                           
  4265                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4266  052E  0831               	movf	(_sprintf$1082+3)^(0+128),w
  4267  052F  0020               	movlb	0	; select bank0
  4268  0530  00AB               	movwf	___flmul@a+3
  4269  0531  0021               	movlb	1	; select bank1
  4270  0532  0830               	movf	(_sprintf$1082+2)^(0+128),w
  4271  0533  0020               	movlb	0	; select bank0
  4272  0534  00AA               	movwf	___flmul@a+2
  4273  0535  0021               	movlb	1	; select bank1
  4274  0536  082F               	movf	(_sprintf$1082+1)^(0+128),w
  4275  0537  0020               	movlb	0	; select bank0
  4276  0538  00A9               	movwf	___flmul@a+1
  4277  0539  0021               	movlb	1	; select bank1
  4278  053A  082E               	movf	_sprintf$1082^(0+128),w
  4279  053B  0020               	movlb	0	; select bank0
  4280  053C  00A8               	movwf	___flmul@a
  4281  053D  0021               	movlb	1	; select bank1
  4282  053E  0844               	movf	(sprintf@fval+3)^(0+128),w
  4283  053F  0020               	movlb	0	; select bank0
  4284  0540  00A7               	movwf	___flmul@b+3
  4285  0541  0021               	movlb	1	; select bank1
  4286  0542  0843               	movf	(sprintf@fval+2)^(0+128),w
  4287  0543  0020               	movlb	0	; select bank0
  4288  0544  00A6               	movwf	___flmul@b+2
  4289  0545  0021               	movlb	1	; select bank1
  4290  0546  0842               	movf	(sprintf@fval+1)^(0+128),w
  4291  0547  0020               	movlb	0	; select bank0
  4292  0548  00A5               	movwf	___flmul@b+1
  4293  0549  0021               	movlb	1	; select bank1
  4294  054A  0841               	movf	sprintf@fval^(0+128),w
  4295  054B  0020               	movlb	0	; select bank0
  4296  054C  00A4               	movwf	___flmul@b
  4297  054D  318B  232D  3180   	fcall	___flmul
  4298  0550  0020               	movlb	0	; select bank0
  4299  0551  0827               	movf	?___flmul+3,w
  4300  0552  00D6               	movwf	___fltol@f1+3
  4301  0553  0826               	movf	?___flmul+2,w
  4302  0554  00D5               	movwf	___fltol@f1+2
  4303  0555  0825               	movf	?___flmul+1,w
  4304  0556  00D4               	movwf	___fltol@f1+1
  4305  0557  0824               	movf	?___flmul,w
  4306  0558  00D3               	movwf	___fltol@f1
  4307  0559  3190  202E  3180   	fcall	___fltol
  4308  055C  0020               	movlb	0	; select bank0
  4309  055D  0856               	movf	?___fltol+3,w
  4310  055E  0021               	movlb	1	; select bank1
  4311  055F  00C0               	movwf	(sprintf@val+3)^(0+128)
  4312  0560  0020               	movlb	0	; select bank0
  4313  0561  0855               	movf	?___fltol+2,w
  4314  0562  0021               	movlb	1	; select bank1
  4315  0563  00BF               	movwf	(sprintf@val+2)^(0+128)
  4316  0564  0020               	movlb	0	; select bank0
  4317  0565  0854               	movf	?___fltol+1,w
  4318  0566  0021               	movlb	1	; select bank1
  4319  0567  00BE               	movwf	(sprintf@val+1)^(0+128)
  4320  0568  0020               	movlb	0	; select bank0
  4321  0569  0853               	movf	?___fltol,w
  4322  056A  0021               	movlb	1	; select bank1
  4323  056B  00BD               	movwf	sprintf@val^(0+128)
  4324                           
  4325                           ;doprnt.c: 1254: while(c--) {
  4326  056C  2E08               	goto	l4206
  4327  056D                     l4196:
  4328                           
  4329                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  4330  056D  0847               	movf	sprintf@c^(0+128),w
  4331  056E  00A8               	movwf	??_sprintf^(0+128)
  4332  056F  01A9               	clrf	(??_sprintf^(0+128)+1)
  4333  0570  35A8               	lslf	??_sprintf^(0+128),f
  4334  0571  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4335  0572  35A8               	lslf	??_sprintf^(0+128),f
  4336  0573  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4337  0574  3000               	movlw	low (_dpowers| (0+32768))
  4338  0575  0728               	addwf	??_sprintf^(0+128),w
  4339  0576  0084               	movwf	4
  4340  0577  30A0               	movlw	high (_dpowers| (0+32768))
  4341  0578  3D29               	addwfc	(??_sprintf+1)^(0+128),w
  4342  0579  0085               	movwf	5
  4343  057A  3F00               	moviw [0]fsr0
  4344  057B  00F0               	movwf	___lldiv@divisor
  4345  057C  3F01               	moviw [1]fsr0
  4346  057D  00F1               	movwf	___lldiv@divisor+1
  4347  057E  3F02               	moviw [2]fsr0
  4348  057F  00F2               	movwf	___lldiv@divisor+2
  4349  0580  3F03               	moviw [3]fsr0
  4350  0581  00F3               	movwf	___lldiv@divisor+3
  4351  0582  0840               	movf	(sprintf@val+3)^(0+128),w
  4352  0583  00F7               	movwf	___lldiv@dividend+3
  4353  0584  083F               	movf	(sprintf@val+2)^(0+128),w
  4354  0585  00F6               	movwf	___lldiv@dividend+2
  4355  0586  083E               	movf	(sprintf@val+1)^(0+128),w
  4356  0587  00F5               	movwf	___lldiv@dividend+1
  4357  0588  083D               	movf	sprintf@val^(0+128),w
  4358  0589  00F4               	movwf	___lldiv@dividend
  4359  058A  319F  2746  3180   	fcall	___lldiv
  4360  058D  0873               	movf	?___lldiv+3,w
  4361  058E  0021               	movlb	1	; select bank1
  4362  058F  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  4363  0590  0872               	movf	?___lldiv+2,w
  4364  0591  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  4365  0592  0871               	movf	?___lldiv+1,w
  4366  0593  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  4367  0594  0870               	movf	?___lldiv,w
  4368  0595  00B5               	movwf	sprintf@tmpval^(0+128)
  4369  0596                     l4198:
  4370                           
  4371                           ;doprnt.c: 1256: tmpval.vd %= 10;
  4372  0596  3000               	movlw	0
  4373  0597  0020               	movlb	0	; select bank0
  4374  0598  00A3               	movwf	___llmod@divisor+3
  4375  0599  3000               	movlw	0
  4376  059A  00A2               	movwf	___llmod@divisor+2
  4377  059B  3000               	movlw	0
  4378  059C  00A1               	movwf	___llmod@divisor+1
  4379  059D  300A               	movlw	10
  4380  059E  00A0               	movwf	___llmod@divisor
  4381  059F  0021               	movlb	1	; select bank1
  4382  05A0  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  4383  05A1  0020               	movlb	0	; select bank0
  4384  05A2  00A7               	movwf	___llmod@dividend+3
  4385  05A3  0021               	movlb	1	; select bank1
  4386  05A4  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  4387  05A5  0020               	movlb	0	; select bank0
  4388  05A6  00A6               	movwf	___llmod@dividend+2
  4389  05A7  0021               	movlb	1	; select bank1
  4390  05A8  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  4391  05A9  0020               	movlb	0	; select bank0
  4392  05AA  00A5               	movwf	___llmod@dividend+1
  4393  05AB  0021               	movlb	1	; select bank1
  4394  05AC  0835               	movf	sprintf@tmpval^(0+128),w
  4395  05AD  0020               	movlb	0	; select bank0
  4396  05AE  00A4               	movwf	___llmod@dividend
  4397  05AF  319E  260C  3180   	fcall	___llmod
  4398  05B2  0020               	movlb	0	; select bank0
  4399  05B3  0823               	movf	?___llmod+3,w
  4400  05B4  0021               	movlb	1	; select bank1
  4401  05B5  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  4402  05B6  0020               	movlb	0	; select bank0
  4403  05B7  0822               	movf	?___llmod+2,w
  4404  05B8  0021               	movlb	1	; select bank1
  4405  05B9  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  4406  05BA  0020               	movlb	0	; select bank0
  4407  05BB  0821               	movf	?___llmod+1,w
  4408  05BC  0021               	movlb	1	; select bank1
  4409  05BD  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  4410  05BE  0020               	movlb	0	; select bank0
  4411  05BF  0820               	movf	?___llmod,w
  4412  05C0  0021               	movlb	1	; select bank1
  4413  05C1  00B5               	movwf	sprintf@tmpval^(0+128)
  4414  05C2                     l4200:
  4415                           
  4416                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  4417  05C2  0835               	movf	sprintf@tmpval^(0+128),w
  4418  05C3  3E30               	addlw	48
  4419  05C4  00A8               	movwf	??_sprintf^(0+128)
  4420  05C5  0820               	movf	sprintf@sp^(0+128),w
  4421  05C6  0086               	movwf	6
  4422  05C7  0821               	movf	(sprintf@sp+1)^(0+128),w
  4423  05C8  0087               	movwf	7
  4424  05C9  0828               	movf	??_sprintf^(0+128),w
  4425  05CA  0081               	movwf	1
  4426  05CB                     l4202:
  4427  05CB  3001               	movlw	1
  4428  05CC  07A0               	addwf	sprintf@sp^(0+128),f
  4429  05CD  3000               	movlw	0
  4430  05CE  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  4431  05CF                     l4204:
  4432                           
  4433                           ;doprnt.c: 1258: val %= dpowers[c];
  4434  05CF  0847               	movf	sprintf@c^(0+128),w
  4435  05D0  00A8               	movwf	??_sprintf^(0+128)
  4436  05D1  01A9               	clrf	(??_sprintf^(0+128)+1)
  4437  05D2  35A8               	lslf	??_sprintf^(0+128),f
  4438  05D3  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4439  05D4  35A8               	lslf	??_sprintf^(0+128),f
  4440  05D5  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4441  05D6  3000               	movlw	low (_dpowers| (0+32768))
  4442  05D7  0728               	addwf	??_sprintf^(0+128),w
  4443  05D8  0084               	movwf	4
  4444  05D9  30A0               	movlw	high (_dpowers| (0+32768))
  4445  05DA  3D29               	addwfc	(??_sprintf+1)^(0+128),w
  4446  05DB  0085               	movwf	5
  4447  05DC  3F00               	moviw [0]fsr0
  4448  05DD  0020               	movlb	0	; select bank0
  4449  05DE  00A0               	movwf	___llmod@divisor
  4450  05DF  3F01               	moviw [1]fsr0
  4451  05E0  00A1               	movwf	___llmod@divisor+1
  4452  05E1  3F02               	moviw [2]fsr0
  4453  05E2  00A2               	movwf	___llmod@divisor+2
  4454  05E3  3F03               	moviw [3]fsr0
  4455  05E4  00A3               	movwf	___llmod@divisor+3
  4456  05E5  0021               	movlb	1	; select bank1
  4457  05E6  0840               	movf	(sprintf@val+3)^(0+128),w
  4458  05E7  0020               	movlb	0	; select bank0
  4459  05E8  00A7               	movwf	___llmod@dividend+3
  4460  05E9  0021               	movlb	1	; select bank1
  4461  05EA  083F               	movf	(sprintf@val+2)^(0+128),w
  4462  05EB  0020               	movlb	0	; select bank0
  4463  05EC  00A6               	movwf	___llmod@dividend+2
  4464  05ED  0021               	movlb	1	; select bank1
  4465  05EE  083E               	movf	(sprintf@val+1)^(0+128),w
  4466  05EF  0020               	movlb	0	; select bank0
  4467  05F0  00A5               	movwf	___llmod@dividend+1
  4468  05F1  0021               	movlb	1	; select bank1
  4469  05F2  083D               	movf	sprintf@val^(0+128),w
  4470  05F3  0020               	movlb	0	; select bank0
  4471  05F4  00A4               	movwf	___llmod@dividend
  4472  05F5  319E  260C  3180   	fcall	___llmod
  4473  05F8  0020               	movlb	0	; select bank0
  4474  05F9  0823               	movf	?___llmod+3,w
  4475  05FA  0021               	movlb	1	; select bank1
  4476  05FB  00C0               	movwf	(sprintf@val+3)^(0+128)
  4477  05FC  0020               	movlb	0	; select bank0
  4478  05FD  0822               	movf	?___llmod+2,w
  4479  05FE  0021               	movlb	1	; select bank1
  4480  05FF  00BF               	movwf	(sprintf@val+2)^(0+128)
  4481  0600  0020               	movlb	0	; select bank0
  4482  0601  0821               	movf	?___llmod+1,w
  4483  0602  0021               	movlb	1	; select bank1
  4484  0603  00BE               	movwf	(sprintf@val+1)^(0+128)
  4485  0604  0020               	movlb	0	; select bank0
  4486  0605  0820               	movf	?___llmod,w
  4487  0606  0021               	movlb	1	; select bank1
  4488  0607  00BD               	movwf	sprintf@val^(0+128)
  4489  0608                     l4206:
  4490  0608  3001               	movlw	1
  4491  0609  02C7               	subwf	sprintf@c^(0+128),f
  4492  060A  0A47               	incf	sprintf@c^(0+128),w
  4493  060B  1D03               	btfss	3,2
  4494  060C  2E0E               	goto	u5511
  4495  060D  2E0F               	goto	u5510
  4496  060E                     u5511:
  4497  060E  2D6D               	goto	l4196
  4498  060F                     u5510:
  4499  060F  2E1E               	goto	l4214
  4500  0610                     l4208:
  4501                           
  4502                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  4503  0610  0820               	movf	sprintf@sp^(0+128),w
  4504  0611  0086               	movwf	6
  4505  0612  0821               	movf	(sprintf@sp+1)^(0+128),w
  4506  0613  0087               	movwf	7
  4507  0614  3030               	movlw	48
  4508  0615  0081               	movwf	1
  4509  0616                     l4210:
  4510  0616  3001               	movlw	1
  4511  0617  07A0               	addwf	sprintf@sp^(0+128),f
  4512  0618  3000               	movlw	0
  4513  0619  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  4514  061A                     l4212:
  4515                           
  4516                           ;doprnt.c: 1263: prec--;
  4517  061A  30FF               	movlw	255
  4518  061B  07C5               	addwf	sprintf@prec^(0+128),f
  4519  061C  30FF               	movlw	255
  4520  061D  3DC6               	addwfc	(sprintf@prec+1)^(0+128),f
  4521  061E                     l4214:
  4522  061E  0845               	movf	sprintf@prec^(0+128),w
  4523  061F  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  4524  0620  1D03               	btfss	3,2
  4525  0621  2E23               	goto	u5521
  4526  0622  2E24               	goto	u5520
  4527  0623                     u5521:
  4528  0623  2E10               	goto	l4208
  4529  0624                     u5520:
  4530  0624  2FC0               	goto	l4308
  4531  0625                     l446:
  4532                           
  4533                           ;doprnt.c: 1272: };doprnt.c: 1277: if((flag & 0x40) == 0x00)
  4534  0625  1B39               	btfsc	sprintf@flag^(0+128),6
  4535  0626  2E28               	goto	u5531
  4536  0627  2E29               	goto	u5530
  4537  0628                     u5531:
  4538  0628  2E65               	goto	l489
  4539  0629                     u5530:
  4540  0629                     l4216:
  4541                           
  4542                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  4543  0629  1E39               	btfss	sprintf@flag^(0+128),4
  4544  062A  2E2C               	goto	u5541
  4545  062B  2E2D               	goto	u5540
  4546  062C                     u5541:
  4547  062C  2E3D               	goto	l4222
  4548  062D                     u5540:
  4549  062D                     l4218:
  4550                           
  4551                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  4552  062D  0832               	movf	sprintf@ap^(0+128),w
  4553  062E  0086               	movwf	6
  4554  062F  0187               	clrf	7
  4555  0630  3F40               	moviw [0]fsr1
  4556  0631  00BD               	movwf	sprintf@val^(0+128)
  4557  0632  3F41               	moviw [1]fsr1
  4558  0633  00BE               	movwf	(sprintf@val+1)^(0+128)
  4559  0634  3F42               	moviw [2]fsr1
  4560  0635  00BF               	movwf	(sprintf@val+2)^(0+128)
  4561  0636  3F43               	moviw [3]fsr1
  4562  0637  00C0               	movwf	(sprintf@val+3)^(0+128)
  4563  0638                     l4220:
  4564  0638  3004               	movlw	4
  4565  0639  00A8               	movwf	??_sprintf^(0+128)
  4566  063A  0828               	movf	??_sprintf^(0+128),w
  4567  063B  07B2               	addwf	sprintf@ap^(0+128),f
  4568  063C  2E51               	goto	l4226
  4569  063D                     l4222:
  4570                           
  4571                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  4572  063D  0832               	movf	sprintf@ap^(0+128),w
  4573  063E  0086               	movwf	6
  4574  063F  0187               	clrf	7
  4575  0640  3F40               	moviw [0]fsr1
  4576  0641  00A8               	movwf	??_sprintf^(0+128)
  4577  0642  3F41               	moviw [1]fsr1
  4578  0643  00A9               	movwf	(??_sprintf^(0+128)+1)
  4579  0644  0828               	movf	??_sprintf^(0+128),w
  4580  0645  00BD               	movwf	sprintf@val^(0+128)
  4581  0646  0829               	movf	(??_sprintf+1)^(0+128),w
  4582  0647  00BE               	movwf	(sprintf@val+1)^(0+128)
  4583  0648  0D89               	rlf	9,f
  4584  0649  3B89               	subwfb	9,f
  4585  064A  0989               	comf	9,f
  4586  064B  00BF               	movwf	(sprintf@val+2)^(0+128)
  4587  064C  00C0               	movwf	(sprintf@val+3)^(0+128)
  4588  064D                     l4224:
  4589  064D  3002               	movlw	2
  4590  064E  00A8               	movwf	??_sprintf^(0+128)
  4591  064F  0828               	movf	??_sprintf^(0+128),w
  4592  0650  07B2               	addwf	sprintf@ap^(0+128),f
  4593  0651                     l4226:
  4594                           
  4595                           ;doprnt.c: 1287: if((long)val < 0) {
  4596  0651  1FC0               	btfss	(sprintf@val+3)^(0+128),7
  4597  0652  2E54               	goto	u5551
  4598  0653  2E55               	goto	u5550
  4599  0654                     u5551:
  4600  0654  2E8A               	goto	l4240
  4601  0655                     u5550:
  4602  0655                     l4228:
  4603                           
  4604                           ;doprnt.c: 1288: flag |= 0x03;
  4605  0655  3003               	movlw	3
  4606  0656  04B9               	iorwf	sprintf@flag^(0+128),f
  4607  0657  3000               	movlw	0
  4608  0658  04BA               	iorwf	(sprintf@flag+1)^(0+128),f
  4609  0659                     l4230:
  4610                           
  4611                           ;doprnt.c: 1289: val = -val;
  4612  0659  09BD               	comf	sprintf@val^(0+128),f
  4613  065A  09BE               	comf	(sprintf@val+1)^(0+128),f
  4614  065B  09BF               	comf	(sprintf@val+2)^(0+128),f
  4615  065C  09C0               	comf	(sprintf@val+3)^(0+128),f
  4616  065D  0ABD               	incf	sprintf@val^(0+128),f
  4617  065E  1903               	skipnz
  4618  065F  0ABE               	incf	(sprintf@val+1)^(0+128),f
  4619  0660  1903               	skipnz
  4620  0661  0ABF               	incf	(sprintf@val+2)^(0+128),f
  4621  0662  1903               	skipnz
  4622  0663  0AC0               	incf	(sprintf@val+3)^(0+128),f
  4623  0664  2E8A               	goto	l4240
  4624  0665                     l489:
  4625                           
  4626                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  4627  0665  1E39               	btfss	sprintf@flag^(0+128),4
  4628  0666  2E68               	goto	u5561
  4629  0667  2E69               	goto	u5560
  4630  0668                     u5561:
  4631  0668  2E79               	goto	l4236
  4632  0669                     u5560:
  4633  0669                     l4232:
  4634                           
  4635                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  4636  0669  0832               	movf	sprintf@ap^(0+128),w
  4637  066A  0086               	movwf	6
  4638  066B  0187               	clrf	7
  4639  066C  3F40               	moviw [0]fsr1
  4640  066D  00BD               	movwf	sprintf@val^(0+128)
  4641  066E  3F41               	moviw [1]fsr1
  4642  066F  00BE               	movwf	(sprintf@val+1)^(0+128)
  4643  0670  3F42               	moviw [2]fsr1
  4644  0671  00BF               	movwf	(sprintf@val+2)^(0+128)
  4645  0672  3F43               	moviw [3]fsr1
  4646  0673  00C0               	movwf	(sprintf@val+3)^(0+128)
  4647  0674                     l4234:
  4648  0674  3004               	movlw	4
  4649  0675  00A8               	movwf	??_sprintf^(0+128)
  4650  0676  0828               	movf	??_sprintf^(0+128),w
  4651  0677  07B2               	addwf	sprintf@ap^(0+128),f
  4652  0678  2E8A               	goto	l4240
  4653  0679                     l4236:
  4654                           
  4655                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  4656  0679  0832               	movf	sprintf@ap^(0+128),w
  4657  067A  0086               	movwf	6
  4658  067B  0187               	clrf	7
  4659  067C  3F40               	moviw [0]fsr1
  4660  067D  00A8               	movwf	??_sprintf^(0+128)
  4661  067E  3F41               	moviw [1]fsr1
  4662  067F  00A9               	movwf	(??_sprintf^(0+128)+1)
  4663  0680  0828               	movf	??_sprintf^(0+128),w
  4664  0681  00BD               	movwf	sprintf@val^(0+128)
  4665  0682  0829               	movf	(??_sprintf+1)^(0+128),w
  4666  0683  00BE               	movwf	(sprintf@val^(0+128)+1)
  4667  0684  01BF               	clrf	(sprintf@val^(0+128)+2)
  4668  0685  01C0               	clrf	(sprintf@val^(0+128)+3)
  4669  0686                     l4238:
  4670  0686  3002               	movlw	2
  4671  0687  00A8               	movwf	??_sprintf^(0+128)
  4672  0688  0828               	movf	??_sprintf^(0+128),w
  4673  0689  07B2               	addwf	sprintf@ap^(0+128),f
  4674  068A                     l4240:
  4675                           
  4676                           ;doprnt.c: 1313: };doprnt.c: 1316: if(prec == 0 && val == 0)
  4677  068A  0845               	movf	sprintf@prec^(0+128),w
  4678  068B  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  4679  068C  1D03               	btfss	3,2
  4680  068D  2E8F               	goto	u5571
  4681  068E  2E90               	goto	u5570
  4682  068F                     u5571:
  4683  068F  2E9C               	goto	l4246
  4684  0690                     u5570:
  4685  0690                     l4242:
  4686  0690  0840               	movf	(sprintf@val+3)^(0+128),w
  4687  0691  043F               	iorwf	(sprintf@val+2)^(0+128),w
  4688  0692  043E               	iorwf	(sprintf@val+1)^(0+128),w
  4689  0693  043D               	iorwf	sprintf@val^(0+128),w
  4690  0694  1D03               	skipz
  4691  0695  2E97               	goto	u5581
  4692  0696  2E98               	goto	u5580
  4693  0697                     u5581:
  4694  0697  2E9C               	goto	l4246
  4695  0698                     u5580:
  4696  0698                     l4244:
  4697                           
  4698                           ;doprnt.c: 1317: prec++;
  4699  0698  3001               	movlw	1
  4700  0699  07C5               	addwf	sprintf@prec^(0+128),f
  4701  069A  3000               	movlw	0
  4702  069B  3DC6               	addwfc	(sprintf@prec+1)^(0+128),f
  4703  069C                     l4246:
  4704                           
  4705                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4706  069C  01C7               	clrf	sprintf@c^(0+128)
  4707  069D  0AC7               	incf	sprintf@c^(0+128),f
  4708  069E                     l4252:
  4709                           
  4710                           ;doprnt.c: 1332: if(val < dpowers[c])
  4711  069E  0847               	movf	sprintf@c^(0+128),w
  4712  069F  00A8               	movwf	??_sprintf^(0+128)
  4713  06A0  01A9               	clrf	(??_sprintf^(0+128)+1)
  4714  06A1  35A8               	lslf	??_sprintf^(0+128),f
  4715  06A2  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4716  06A3  35A8               	lslf	??_sprintf^(0+128),f
  4717  06A4  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4718  06A5  3000               	movlw	low (_dpowers| (0+32768))
  4719  06A6  0728               	addwf	??_sprintf^(0+128),w
  4720  06A7  0084               	movwf	4
  4721  06A8  30A0               	movlw	high (_dpowers| (0+32768))
  4722  06A9  3D29               	addwfc	(??_sprintf+1)^(0+128),w
  4723  06AA  0085               	movwf	5
  4724  06AB  3F00               	moviw [0]fsr0
  4725  06AC  00AA               	movwf	(??_sprintf+2)^(0+128)
  4726  06AD  3F01               	moviw [1]fsr0
  4727  06AE  00AB               	movwf	((??_sprintf+2)^(0+128)+1)
  4728  06AF  3F02               	moviw [2]fsr0
  4729  06B0  00AC               	movwf	((??_sprintf+2)^(0+128)+2)
  4730  06B1  3F03               	moviw [3]fsr0
  4731  06B2  00AD               	movwf	((??_sprintf+2)^(0+128)+3)
  4732  06B3  082D               	movf	(??_sprintf+5)^(0+128),w
  4733  06B4  0240               	subwf	(sprintf@val+3)^(0+128),w
  4734  06B5  1D03               	skipz
  4735  06B6  2EC1               	goto	u5595
  4736  06B7  082C               	movf	(??_sprintf+4)^(0+128),w
  4737  06B8  023F               	subwf	(sprintf@val+2)^(0+128),w
  4738  06B9  1D03               	skipz
  4739  06BA  2EC1               	goto	u5595
  4740  06BB  082B               	movf	(??_sprintf+3)^(0+128),w
  4741  06BC  023E               	subwf	(sprintf@val+1)^(0+128),w
  4742  06BD  1D03               	skipz
  4743  06BE  2EC1               	goto	u5595
  4744  06BF  082A               	movf	(??_sprintf+2)^(0+128),w
  4745  06C0  023D               	subwf	sprintf@val^(0+128),w
  4746  06C1                     u5595:
  4747  06C1  1803               	skipnc
  4748  06C2  2EC4               	goto	u5591
  4749  06C3  2EC5               	goto	u5590
  4750  06C4                     u5591:
  4751  06C4  2EC6               	goto	l4256
  4752  06C5                     u5590:
  4753  06C5  2ED0               	goto	l4258
  4754  06C6                     l4256:
  4755  06C6  3001               	movlw	1
  4756  06C7  00A8               	movwf	??_sprintf^(0+128)
  4757  06C8  0828               	movf	??_sprintf^(0+128),w
  4758  06C9  07C7               	addwf	sprintf@c^(0+128),f
  4759  06CA  300A               	movlw	10
  4760  06CB  0647               	xorwf	sprintf@c^(0+128),w
  4761  06CC  1D03               	btfss	3,2
  4762  06CD  2ECF               	goto	u5601
  4763  06CE  2ED0               	goto	u5600
  4764  06CF                     u5601:
  4765  06CF  2E9E               	goto	l4252
  4766  06D0                     u5600:
  4767  06D0                     l4258:
  4768                           
  4769                           ;doprnt.c: 1365: if(c < prec)
  4770  06D0  0846               	movf	(sprintf@prec+1)^(0+128),w
  4771  06D1  3A80               	xorlw	128
  4772  06D2  3C80               	sublw	128
  4773  06D3  1D03               	skipz
  4774  06D4  2ED7               	goto	u5615
  4775  06D5  0845               	movf	sprintf@prec^(0+128),w
  4776  06D6  0247               	subwf	sprintf@c^(0+128),w
  4777  06D7                     u5615:
  4778  06D7  1803               	skipnc
  4779  06D8  2EDA               	goto	u5611
  4780  06D9  2EDB               	goto	u5610
  4781  06DA                     u5611:
  4782  06DA  2EE1               	goto	l4262
  4783  06DB                     u5610:
  4784  06DB                     l4260:
  4785                           
  4786                           ;doprnt.c: 1366: c = (char)prec;
  4787  06DB  0021               	movlb	1	; select bank1
  4788  06DC  0845               	movf	sprintf@prec^(0+128),w
  4789  06DD  00A8               	movwf	??_sprintf^(0+128)
  4790  06DE  0828               	movf	??_sprintf^(0+128),w
  4791  06DF  00C7               	movwf	sprintf@c^(0+128)
  4792  06E0  2EF7               	goto	l4266
  4793  06E1                     l4262:
  4794                           
  4795                           ;doprnt.c: 1367: else if(prec < c)
  4796  06E1  0021               	movlb	1	; select bank1
  4797  06E2  0846               	movf	(sprintf@prec+1)^(0+128),w
  4798  06E3  3A80               	xorlw	128
  4799  06E4  00A8               	movwf	??_sprintf^(0+128)
  4800  06E5  3080               	movlw	128
  4801  06E6  0228               	subwf	??_sprintf^(0+128),w
  4802  06E7  1D03               	skipz
  4803  06E8  2EEB               	goto	u5625
  4804  06E9  0847               	movf	sprintf@c^(0+128),w
  4805  06EA  0245               	subwf	sprintf@prec^(0+128),w
  4806  06EB                     u5625:
  4807  06EB  1803               	skipnc
  4808  06EC  2EEE               	goto	u5621
  4809  06ED  2EEF               	goto	u5620
  4810  06EE                     u5621:
  4811  06EE  2EF7               	goto	l4266
  4812  06EF                     u5620:
  4813  06EF                     l4264:
  4814                           
  4815                           ;doprnt.c: 1368: prec = c;
  4816  06EF  0021               	movlb	1	; select bank1
  4817  06F0  0847               	movf	sprintf@c^(0+128),w
  4818  06F1  00A8               	movwf	??_sprintf^(0+128)
  4819  06F2  01A9               	clrf	(??_sprintf^(0+128)+1)
  4820  06F3  0828               	movf	??_sprintf^(0+128),w
  4821  06F4  00C5               	movwf	sprintf@prec^(0+128)
  4822  06F5  0829               	movf	(??_sprintf+1)^(0+128),w
  4823  06F6  00C6               	movwf	(sprintf@prec+1)^(0+128)
  4824  06F7                     l4266:
  4825                           
  4826                           ;doprnt.c: 1371: if(width && flag & 0x03)
  4827  06F7  0021               	movlb	1	; select bank1
  4828  06F8  0833               	movf	sprintf@width^(0+128),w
  4829  06F9  0434               	iorwf	(sprintf@width+1)^(0+128),w
  4830  06FA  1903               	btfsc	3,2
  4831  06FB  2EFD               	goto	u5631
  4832  06FC  2EFE               	goto	u5630
  4833  06FD                     u5631:
  4834  06FD  2F0E               	goto	l4272
  4835  06FE                     u5630:
  4836  06FE                     l4268:
  4837  06FE  3003               	movlw	3
  4838  06FF  0539               	andwf	sprintf@flag^(0+128),w
  4839  0700  00A8               	movwf	??_sprintf^(0+128)
  4840  0701  3000               	movlw	0
  4841  0702  053A               	andwf	(sprintf@flag+1)^(0+128),w
  4842  0703  00A9               	movwf	(??_sprintf+1)^(0+128)
  4843  0704  0828               	movf	??_sprintf^(0+128),w
  4844  0705  0429               	iorwf	(??_sprintf^(0+128)+1),w
  4845  0706  1903               	btfsc	3,2
  4846  0707  2F09               	goto	u5641
  4847  0708  2F0A               	goto	u5640
  4848  0709                     u5641:
  4849  0709  2F0E               	goto	l4272
  4850  070A                     u5640:
  4851  070A                     l4270:
  4852                           
  4853                           ;doprnt.c: 1372: width--;
  4854  070A  30FF               	movlw	255
  4855  070B  07B3               	addwf	sprintf@width^(0+128),f
  4856  070C  30FF               	movlw	255
  4857  070D  3DB4               	addwfc	(sprintf@width+1)^(0+128),f
  4858  070E                     l4272:
  4859                           
  4860                           ;doprnt.c: 1374: if(flag & 0x4000) {
  4861  070E  1F3A               	btfss	(sprintf@flag+1)^(0+128),6
  4862  070F  2F11               	goto	u5651
  4863  0710  2F12               	goto	u5650
  4864  0711                     u5651:
  4865  0711  2F29               	goto	l4280
  4866  0712                     u5650:
  4867  0712                     l4274:
  4868                           
  4869                           ;doprnt.c: 1375: if(width > prec)
  4870  0712  0846               	movf	(sprintf@prec+1)^(0+128),w
  4871  0713  3A80               	xorlw	128
  4872  0714  00A8               	movwf	??_sprintf^(0+128)
  4873  0715  0834               	movf	(sprintf@width+1)^(0+128),w
  4874  0716  3A80               	xorlw	128
  4875  0717  0228               	subwf	??_sprintf^(0+128),w
  4876  0718  1D03               	skipz
  4877  0719  2F1C               	goto	u5665
  4878  071A  0833               	movf	sprintf@width^(0+128),w
  4879  071B  0245               	subwf	sprintf@prec^(0+128),w
  4880  071C                     u5665:
  4881  071C  1803               	skipnc
  4882  071D  2F1F               	goto	u5661
  4883  071E  2F20               	goto	u5660
  4884  071F                     u5661:
  4885  071F  2F26               	goto	l4278
  4886  0720                     u5660:
  4887  0720                     l4276:
  4888                           
  4889                           ;doprnt.c: 1376: width -= prec;
  4890  0720  0021               	movlb	1	; select bank1
  4891  0721  0845               	movf	sprintf@prec^(0+128),w
  4892  0722  02B3               	subwf	sprintf@width^(0+128),f
  4893  0723  0846               	movf	(sprintf@prec+1)^(0+128),w
  4894  0724  3BB4               	subwfb	(sprintf@width+1)^(0+128),f
  4895  0725  2F29               	goto	l4280
  4896  0726                     l4278:
  4897                           
  4898                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  4899  0726  0021               	movlb	1	; select bank1
  4900  0727  01B3               	clrf	sprintf@width^(0+128)
  4901  0728  01B4               	clrf	(sprintf@width+1)^(0+128)
  4902  0729                     l4280:
  4903                           
  4904                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  4905  0729  0834               	movf	(sprintf@width+1)^(0+128),w
  4906  072A  3A80               	xorlw	128
  4907  072B  3C80               	sublw	128
  4908  072C  1D03               	skipz
  4909  072D  2F30               	goto	u5675
  4910  072E  0833               	movf	sprintf@width^(0+128),w
  4911  072F  0247               	subwf	sprintf@c^(0+128),w
  4912  0730                     u5675:
  4913  0730  1803               	skipnc
  4914  0731  2F33               	goto	u5671
  4915  0732  2F34               	goto	u5670
  4916  0733                     u5671:
  4917  0733  2F3D               	goto	l4284
  4918  0734                     u5670:
  4919  0734                     l4282:
  4920                           
  4921                           ;doprnt.c: 1408: width -= c;
  4922  0734  0021               	movlb	1	; select bank1
  4923  0735  0847               	movf	sprintf@c^(0+128),w
  4924  0736  00A8               	movwf	??_sprintf^(0+128)
  4925  0737  01A9               	clrf	(??_sprintf^(0+128)+1)
  4926  0738  0828               	movf	??_sprintf^(0+128),w
  4927  0739  02B3               	subwf	sprintf@width^(0+128),f
  4928  073A  0829               	movf	(??_sprintf+1)^(0+128),w
  4929  073B  3BB4               	subwfb	(sprintf@width+1)^(0+128),f
  4930  073C  2F40               	goto	l4286
  4931  073D                     l4284:
  4932                           
  4933                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  4934  073D  0021               	movlb	1	; select bank1
  4935  073E  01B3               	clrf	sprintf@width^(0+128)
  4936  073F  01B4               	clrf	(sprintf@width+1)^(0+128)
  4937  0740                     l4286:
  4938                           
  4939                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  4940  0740  0833               	movf	sprintf@width^(0+128),w
  4941  0741  0434               	iorwf	(sprintf@width+1)^(0+128),w
  4942  0742  1903               	btfsc	3,2
  4943  0743  2F45               	goto	u5681
  4944  0744  2F46               	goto	u5680
  4945  0745                     u5681:
  4946  0745  2F5A               	goto	l4294
  4947  0746                     u5680:
  4948  0746                     l4288:
  4949                           
  4950                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  4951  0746  0820               	movf	sprintf@sp^(0+128),w
  4952  0747  0086               	movwf	6
  4953  0748  0821               	movf	(sprintf@sp+1)^(0+128),w
  4954  0749  0087               	movwf	7
  4955  074A  3020               	movlw	32
  4956  074B  0081               	movwf	1
  4957  074C                     l4290:
  4958  074C  3001               	movlw	1
  4959  074D  07A0               	addwf	sprintf@sp^(0+128),f
  4960  074E  3000               	movlw	0
  4961  074F  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  4962  0750                     l4292:
  4963                           
  4964                           ;doprnt.c: 1457: while(--width);
  4965  0750  30FF               	movlw	255
  4966  0751  07B3               	addwf	sprintf@width^(0+128),f
  4967  0752  30FF               	movlw	255
  4968  0753  3DB4               	addwfc	(sprintf@width+1)^(0+128),f
  4969  0754  0833               	movf	sprintf@width^(0+128),w
  4970  0755  0434               	iorwf	(sprintf@width+1)^(0+128),w
  4971  0756  1D03               	btfss	3,2
  4972  0757  2F59               	goto	u5691
  4973  0758  2F5A               	goto	u5690
  4974  0759                     u5691:
  4975  0759  2F46               	goto	l4288
  4976  075A                     u5690:
  4977  075A                     l4294:
  4978                           
  4979                           ;doprnt.c: 1464: if(flag & 0x03)
  4980  075A  3003               	movlw	3
  4981  075B  0539               	andwf	sprintf@flag^(0+128),w
  4982  075C  00A8               	movwf	??_sprintf^(0+128)
  4983  075D  3000               	movlw	0
  4984  075E  053A               	andwf	(sprintf@flag+1)^(0+128),w
  4985  075F  00A9               	movwf	(??_sprintf+1)^(0+128)
  4986  0760  0828               	movf	??_sprintf^(0+128),w
  4987  0761  0429               	iorwf	(??_sprintf^(0+128)+1),w
  4988  0762  1903               	btfsc	3,2
  4989  0763  2F65               	goto	u5701
  4990  0764  2F66               	goto	u5700
  4991  0765                     u5701:
  4992  0765  2FB4               	goto	l4306
  4993  0766                     u5700:
  4994  0766                     l4296:
  4995                           
  4996                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  4997  0766  0820               	movf	sprintf@sp^(0+128),w
  4998  0767  0086               	movwf	6
  4999  0768  0821               	movf	(sprintf@sp+1)^(0+128),w
  5000  0769  0087               	movwf	7
  5001  076A  302D               	movlw	45
  5002  076B  0081               	movwf	1
  5003  076C                     l4298:
  5004  076C  3001               	movlw	1
  5005  076D  07A0               	addwf	sprintf@sp^(0+128),f
  5006  076E  3000               	movlw	0
  5007  076F  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  5008  0770  2FB4               	goto	l4306
  5009  0771                     l4300:
  5010                           
  5011                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  5012  0771  3000               	movlw	0
  5013  0772  0020               	movlb	0	; select bank0
  5014  0773  00A3               	movwf	___llmod@divisor+3
  5015  0774  3000               	movlw	0
  5016  0775  00A2               	movwf	___llmod@divisor+2
  5017  0776  3000               	movlw	0
  5018  0777  00A1               	movwf	___llmod@divisor+1
  5019  0778  300A               	movlw	10
  5020  0779  00A0               	movwf	___llmod@divisor
  5021  077A  0021               	movlb	1	; select bank1
  5022  077B  0846               	movf	(sprintf@prec+1)^(0+128),w
  5023  077C  0085               	movwf	5
  5024  077D  0845               	movf	sprintf@prec^(0+128),w
  5025  077E  0084               	movwf	4
  5026  077F  3584               	lslf	4,f
  5027  0780  0D85               	rlf	5,f
  5028  0781  3584               	lslf	4,f
  5029  0782  0D85               	rlf	5,f
  5030  0783  3000               	movlw	low (_dpowers| (0+32768))
  5031  0784  0784               	addwf	4,f
  5032  0785  30A0               	movlw	high (_dpowers| (0+32768))
  5033  0786  3D85               	addwfc	5,f
  5034  0787  3F00               	moviw [0]fsr0
  5035  0788  00F0               	movwf	___lldiv@divisor
  5036  0789  3F01               	moviw [1]fsr0
  5037  078A  00F1               	movwf	___lldiv@divisor+1
  5038  078B  3F02               	moviw [2]fsr0
  5039  078C  00F2               	movwf	___lldiv@divisor+2
  5040  078D  3F03               	moviw [3]fsr0
  5041  078E  00F3               	movwf	___lldiv@divisor+3
  5042  078F  0840               	movf	(sprintf@val+3)^(0+128),w
  5043  0790  00F7               	movwf	___lldiv@dividend+3
  5044  0791  083F               	movf	(sprintf@val+2)^(0+128),w
  5045  0792  00F6               	movwf	___lldiv@dividend+2
  5046  0793  083E               	movf	(sprintf@val+1)^(0+128),w
  5047  0794  00F5               	movwf	___lldiv@dividend+1
  5048  0795  083D               	movf	sprintf@val^(0+128),w
  5049  0796  00F4               	movwf	___lldiv@dividend
  5050  0797  319F  2746  3180   	fcall	___lldiv
  5051  079A  0873               	movf	?___lldiv+3,w
  5052  079B  0020               	movlb	0	; select bank0
  5053  079C  00A7               	movwf	___llmod@dividend+3
  5054  079D  0872               	movf	?___lldiv+2,w
  5055  079E  00A6               	movwf	___llmod@dividend+2
  5056  079F  0871               	movf	?___lldiv+1,w
  5057  07A0  00A5               	movwf	___llmod@dividend+1
  5058  07A1  0870               	movf	?___lldiv,w
  5059  07A2  00A4               	movwf	___llmod@dividend
  5060  07A3  319E  260C  3180   	fcall	___llmod
  5061  07A6  0020               	movlb	0	; select bank0
  5062  07A7  0820               	movf	?___llmod,w
  5063  07A8  3E30               	addlw	48
  5064  07A9  0021               	movlb	1	; select bank1
  5065  07AA  00A8               	movwf	??_sprintf^(0+128)
  5066  07AB  0828               	movf	??_sprintf^(0+128),w
  5067  07AC  00C7               	movwf	sprintf@c^(0+128)
  5068  07AD                     l4302:
  5069                           
  5070                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  5071  07AD  0820               	movf	sprintf@sp^(0+128),w
  5072  07AE  0086               	movwf	6
  5073  07AF  0821               	movf	(sprintf@sp+1)^(0+128),w
  5074  07B0  0087               	movwf	7
  5075  07B1  0847               	movf	sprintf@c^(0+128),w
  5076  07B2  0081               	movwf	1
  5077  07B3  2F6C               	goto	l4298
  5078  07B4                     l4306:
  5079  07B4  30FF               	movlw	255
  5080  07B5  07C5               	addwf	sprintf@prec^(0+128),f
  5081  07B6  30FF               	movlw	255
  5082  07B7  3DC6               	addwfc	(sprintf@prec+1)^(0+128),f
  5083  07B8  0A45               	incf	sprintf@prec^(0+128),w
  5084  07B9  1D03               	skipz
  5085  07BA  2FBF               	goto	u5711
  5086  07BB  0A46               	incf	(sprintf@prec+1)^(0+128),w
  5087  07BC  1D03               	btfss	3,2
  5088  07BD  2FBF               	goto	u5711
  5089  07BE  2FC0               	goto	u5710
  5090  07BF                     u5711:
  5091  07BF  2F71               	goto	l4300
  5092  07C0                     u5710:
  5093  07C0                     l4308:
  5094  07C0  0823               	movf	(sprintf@f+1)^(0+128),w
  5095  07C1  00A9               	movwf	(??_sprintf^(0+128)+1)
  5096  07C2  0822               	movf	sprintf@f^(0+128),w
  5097  07C3  00A8               	movwf	??_sprintf^(0+128)
  5098  07C4  0AA2               	incf	sprintf@f^(0+128),f
  5099  07C5  1903               	skipnz
  5100  07C6  0AA3               	incf	(sprintf@f+1)^(0+128),f
  5101  07C7  0828               	movf	??_sprintf^(0+128),w
  5102  07C8  0084               	movwf	4
  5103  07C9  0829               	movf	(??_sprintf+1)^(0+128),w
  5104  07CA  0085               	movwf	5
  5105  07CB  0800               	movf	0,w	;code access
  5106  07CC  00AA               	movwf	(??_sprintf+2)^(0+128)
  5107  07CD  082A               	movf	(??_sprintf+2)^(0+128),w
  5108  07CE  00C7               	movwf	sprintf@c^(0+128)
  5109  07CF  0847               	movf	sprintf@c^(0+128),w
  5110  07D0  1D03               	btfss	3,2
  5111  07D1  2FD3               	goto	u5721
  5112  07D2  2FD4               	goto	u5720
  5113  07D3                     u5721:
  5114  07D3  28A8               	goto	l4012
  5115  07D4                     u5720:
  5116  07D4                     l4310:
  5117                           
  5118                           ;doprnt.c: 1564: *sp = 0;
  5119  07D4  0820               	movf	sprintf@sp^(0+128),w
  5120  07D5  0086               	movwf	6
  5121  07D6  0821               	movf	(sprintf@sp+1)^(0+128),w
  5122  07D7  0087               	movwf	7
  5123  07D8  0181               	clrf	1
  5124  07D9                     l517:
  5125  07D9  0008               	return
  5126  07DA                     __end_of_sprintf:
  5127                           
  5128                           	psect	text2
  5129  0D84                     __ptext2:	
  5130 ;; *************** function _scale *****************
  5131 ;; Defined at:
  5132 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  scl             1    wreg     char 
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;  scl             1   50[BANK0 ] char 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  4   30[BANK0 ] char 
  5139 ;; Registers used:
  5140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5146 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;Total ram usage:       21 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 2
  5153 ;; This function calls:
  5154 ;;		___awdiv
  5155 ;;		___awmod
  5156 ;;		___flmul
  5157 ;; This function is called by:
  5158 ;;		_sprintf
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           
  5163                           ;psect for function _scale
  5164  0D84                     _scale:
  5165                           
  5166                           ;incstack = 0
  5167                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5168                           ;scale@scl stored from wreg
  5169  0D84  0020               	movlb	0	; select bank0
  5170  0D85  00D2               	movwf	scale@scl
  5171  0D86                     l3366:
  5172                           
  5173                           ;doprnt.c: 436: if(scl < 0) {
  5174  0D86  1FD2               	btfss	scale@scl,7
  5175  0D87  2D89               	goto	u4031
  5176  0D88  2D8A               	goto	u4030
  5177  0D89                     u4031:
  5178  0D89  2EC6               	goto	l3388
  5179  0D8A                     u4030:
  5180  0D8A                     l3368:
  5181                           
  5182                           ;doprnt.c: 437: scl = -scl;
  5183  0D8A  09D2               	comf	scale@scl,f
  5184  0D8B  0AD2               	incf	scale@scl,f
  5185  0D8C                     l3370:
  5186                           
  5187                           ;doprnt.c: 438: if(scl>=110)
  5188  0D8C  0852               	movf	scale@scl,w
  5189  0D8D  3A80               	xorlw	128
  5190  0D8E  3E12               	addlw	-238
  5191  0D8F  1C03               	skipc
  5192  0D90  2D92               	goto	u4041
  5193  0D91  2D93               	goto	u4040
  5194  0D92                     u4041:
  5195  0D92  2E3F               	goto	l3378
  5196  0D93                     u4040:
  5197  0D93                     l3372:
  5198                           
  5199                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5200  0D93  300A               	movlw	10
  5201  0D94  00F7               	movwf	___awdiv@divisor
  5202  0D95  3000               	movlw	0
  5203  0D96  00F8               	movwf	___awdiv@divisor+1
  5204  0D97  0852               	movf	scale@scl,w
  5205  0D98  00F2               	movwf	___awmod@dividend
  5206  0D99  01F3               	clrf	___awmod@dividend+1
  5207  0D9A  1BF2               	btfsc	___awmod@dividend,7
  5208  0D9B  03F3               	decf	___awmod@dividend+1,f
  5209  0D9C  3064               	movlw	100
  5210  0D9D  00F0               	movwf	___awmod@divisor
  5211  0D9E  3000               	movlw	0
  5212  0D9F  00F1               	movwf	___awmod@divisor+1
  5213  0DA0  319E  26F3  318D   	fcall	___awmod
  5214  0DA3  0871               	movf	?___awmod+1,w
  5215  0DA4  00FA               	movwf	___awdiv@dividend+1
  5216  0DA5  0870               	movf	?___awmod,w
  5217  0DA6  00F9               	movwf	___awdiv@dividend
  5218  0DA7  319F  27A0  318D   	fcall	___awdiv
  5219  0DAA  0877               	movf	?___awdiv,w
  5220  0DAB  3E09               	addlw	9
  5221  0DAC  0020               	movlb	0	; select bank0
  5222  0DAD  00C2               	movwf	??_scale
  5223  0DAE  01C3               	clrf	??_scale+1
  5224  0DAF  35C2               	lslf	??_scale,f
  5225  0DB0  0DC3               	rlf	??_scale+1,f
  5226  0DB1  35C2               	lslf	??_scale,f
  5227  0DB2  0DC3               	rlf	??_scale+1,f
  5228  0DB3  306B               	movlw	low (__npowers_| (0+32768))
  5229  0DB4  0742               	addwf	??_scale,w
  5230  0DB5  0084               	movwf	4
  5231  0DB6  30A0               	movlw	high (__npowers_| (0+32768))
  5232  0DB7  3D43               	addwfc	??_scale+1,w
  5233  0DB8  0085               	movwf	5
  5234  0DB9  3F00               	moviw [0]fsr0
  5235  0DBA  00C4               	movwf	??_scale+2
  5236  0DBB  3F01               	moviw [1]fsr0
  5237  0DBC  00C5               	movwf	??_scale+3
  5238  0DBD  3F02               	moviw [2]fsr0
  5239  0DBE  00C6               	movwf	??_scale+4
  5240  0DBF  3F03               	moviw [3]fsr0
  5241  0DC0  00C7               	movwf	??_scale+5
  5242  0DC1  0847               	movf	??_scale+5,w
  5243  0DC2  00A7               	movwf	___flmul@b+3
  5244  0DC3  0846               	movf	??_scale+4,w
  5245  0DC4  00A6               	movwf	___flmul@b+2
  5246  0DC5  0845               	movf	??_scale+3,w
  5247  0DC6  00A5               	movwf	___flmul@b+1
  5248  0DC7  0844               	movf	??_scale+2,w
  5249  0DC8  00A4               	movwf	___flmul@b
  5250  0DC9  3064               	movlw	100
  5251  0DCA  00F7               	movwf	___awdiv@divisor
  5252  0DCB  3000               	movlw	0
  5253  0DCC  00F8               	movwf	___awdiv@divisor+1
  5254  0DCD  0852               	movf	scale@scl,w
  5255  0DCE  00F9               	movwf	___awdiv@dividend
  5256  0DCF  01FA               	clrf	___awdiv@dividend+1
  5257  0DD0  1BF9               	btfsc	___awdiv@dividend,7
  5258  0DD1  03FA               	decf	___awdiv@dividend+1,f
  5259  0DD2  319F  27A0  318D   	fcall	___awdiv
  5260  0DD5  0877               	movf	?___awdiv,w
  5261  0DD6  3E12               	addlw	18
  5262  0DD7  0020               	movlb	0	; select bank0
  5263  0DD8  00C8               	movwf	??_scale+6
  5264  0DD9  01C9               	clrf	??_scale+7
  5265  0DDA  35C8               	lslf	??_scale+6,f
  5266  0DDB  0DC9               	rlf	??_scale+7,f
  5267  0DDC  35C8               	lslf	??_scale+6,f
  5268  0DDD  0DC9               	rlf	??_scale+7,f
  5269  0DDE  306B               	movlw	low (__npowers_| (0+32768))
  5270  0DDF  0748               	addwf	??_scale+6,w
  5271  0DE0  0084               	movwf	4
  5272  0DE1  30A0               	movlw	high (__npowers_| (0+32768))
  5273  0DE2  3D49               	addwfc	??_scale+7,w
  5274  0DE3  0085               	movwf	5
  5275  0DE4  3F00               	moviw [0]fsr0
  5276  0DE5  00CA               	movwf	??_scale+8
  5277  0DE6  3F01               	moviw [1]fsr0
  5278  0DE7  00CB               	movwf	??_scale+9
  5279  0DE8  3F02               	moviw [2]fsr0
  5280  0DE9  00CC               	movwf	??_scale+10
  5281  0DEA  3F03               	moviw [3]fsr0
  5282  0DEB  00CD               	movwf	??_scale+11
  5283  0DEC  084D               	movf	??_scale+11,w
  5284  0DED  00AB               	movwf	___flmul@a+3
  5285  0DEE  084C               	movf	??_scale+10,w
  5286  0DEF  00AA               	movwf	___flmul@a+2
  5287  0DF0  084B               	movf	??_scale+9,w
  5288  0DF1  00A9               	movwf	___flmul@a+1
  5289  0DF2  084A               	movf	??_scale+8,w
  5290  0DF3  00A8               	movwf	___flmul@a
  5291  0DF4  318B  232D  318D   	fcall	___flmul
  5292  0DF7  0020               	movlb	0	; select bank0
  5293  0DF8  0827               	movf	?___flmul+3,w
  5294  0DF9  00D1               	movwf	_scale$1081+3
  5295  0DFA  0826               	movf	?___flmul+2,w
  5296  0DFB  00D0               	movwf	_scale$1081+2
  5297  0DFC  0825               	movf	?___flmul+1,w
  5298  0DFD  00CF               	movwf	_scale$1081+1
  5299  0DFE  0824               	movf	?___flmul,w
  5300  0DFF  00CE               	movwf	_scale$1081
  5301                           
  5302                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5303  0E00  300A               	movlw	10
  5304  0E01  00F0               	movwf	___awmod@divisor
  5305  0E02  3000               	movlw	0
  5306  0E03  00F1               	movwf	___awmod@divisor+1
  5307  0E04  0852               	movf	scale@scl,w
  5308  0E05  00F2               	movwf	___awmod@dividend
  5309  0E06  01F3               	clrf	___awmod@dividend+1
  5310  0E07  1BF2               	btfsc	___awmod@dividend,7
  5311  0E08  03F3               	decf	___awmod@dividend+1,f
  5312  0E09  319E  26F3  318D   	fcall	___awmod
  5313  0E0C  0870               	movf	?___awmod,w
  5314  0E0D  0020               	movlb	0	; select bank0
  5315  0E0E  00C2               	movwf	??_scale
  5316  0E0F  01C3               	clrf	??_scale+1
  5317  0E10  35C2               	lslf	??_scale,f
  5318  0E11  0DC3               	rlf	??_scale+1,f
  5319  0E12  35C2               	lslf	??_scale,f
  5320  0E13  0DC3               	rlf	??_scale+1,f
  5321  0E14  306B               	movlw	low (__npowers_| (0+32768))
  5322  0E15  0742               	addwf	??_scale,w
  5323  0E16  0084               	movwf	4
  5324  0E17  30A0               	movlw	high (__npowers_| (0+32768))
  5325  0E18  3D43               	addwfc	??_scale+1,w
  5326  0E19  0085               	movwf	5
  5327  0E1A  3F00               	moviw [0]fsr0
  5328  0E1B  00C4               	movwf	??_scale+2
  5329  0E1C  3F01               	moviw [1]fsr0
  5330  0E1D  00C5               	movwf	??_scale+3
  5331  0E1E  3F02               	moviw [2]fsr0
  5332  0E1F  00C6               	movwf	??_scale+4
  5333  0E20  3F03               	moviw [3]fsr0
  5334  0E21  00C7               	movwf	??_scale+5
  5335  0E22  0847               	movf	??_scale+5,w
  5336  0E23  00A7               	movwf	___flmul@b+3
  5337  0E24  0846               	movf	??_scale+4,w
  5338  0E25  00A6               	movwf	___flmul@b+2
  5339  0E26  0845               	movf	??_scale+3,w
  5340  0E27  00A5               	movwf	___flmul@b+1
  5341  0E28  0844               	movf	??_scale+2,w
  5342  0E29  00A4               	movwf	___flmul@b
  5343  0E2A  0851               	movf	_scale$1081+3,w
  5344  0E2B  00AB               	movwf	___flmul@a+3
  5345  0E2C  0850               	movf	_scale$1081+2,w
  5346  0E2D  00AA               	movwf	___flmul@a+2
  5347  0E2E  084F               	movf	_scale$1081+1,w
  5348  0E2F  00A9               	movwf	___flmul@a+1
  5349  0E30  084E               	movf	_scale$1081,w
  5350  0E31  00A8               	movwf	___flmul@a
  5351  0E32  318B  232D  318D   	fcall	___flmul
  5352  0E35  0020               	movlb	0	; select bank0
  5353  0E36  0827               	movf	?___flmul+3,w
  5354  0E37  00C1               	movwf	?_scale+3
  5355  0E38  0826               	movf	?___flmul+2,w
  5356  0E39  00C0               	movwf	?_scale+2
  5357  0E3A  0825               	movf	?___flmul+1,w
  5358  0E3B  00BF               	movwf	?_scale+1
  5359  0E3C  0824               	movf	?___flmul,w
  5360  0E3D  00BE               	movwf	?_scale
  5361  0E3E  2FFF               	goto	l416
  5362  0E3F                     l3378:
  5363                           
  5364                           ;doprnt.c: 440: else if(scl > 10)
  5365  0E3F  0852               	movf	scale@scl,w
  5366  0E40  3A80               	xorlw	128
  5367  0E41  3E75               	addlw	-139
  5368  0E42  1C03               	skipc
  5369  0E43  2E45               	goto	u4051
  5370  0E44  2E46               	goto	u4050
  5371  0E45                     u4051:
  5372  0E45  2EA8               	goto	l3384
  5373  0E46                     u4050:
  5374  0E46                     l3380:
  5375                           
  5376                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  5377  0E46  300A               	movlw	10
  5378  0E47  00F0               	movwf	___awmod@divisor
  5379  0E48  3000               	movlw	0
  5380  0E49  00F1               	movwf	___awmod@divisor+1
  5381  0E4A  0852               	movf	scale@scl,w
  5382  0E4B  00F2               	movwf	___awmod@dividend
  5383  0E4C  01F3               	clrf	___awmod@dividend+1
  5384  0E4D  1BF2               	btfsc	___awmod@dividend,7
  5385  0E4E  03F3               	decf	___awmod@dividend+1,f
  5386  0E4F  319E  26F3  318D   	fcall	___awmod
  5387  0E52  0870               	movf	?___awmod,w
  5388  0E53  0020               	movlb	0	; select bank0
  5389  0E54  00C2               	movwf	??_scale
  5390  0E55  01C3               	clrf	??_scale+1
  5391  0E56  35C2               	lslf	??_scale,f
  5392  0E57  0DC3               	rlf	??_scale+1,f
  5393  0E58  35C2               	lslf	??_scale,f
  5394  0E59  0DC3               	rlf	??_scale+1,f
  5395  0E5A  306B               	movlw	low (__npowers_| (0+32768))
  5396  0E5B  0742               	addwf	??_scale,w
  5397  0E5C  0084               	movwf	4
  5398  0E5D  30A0               	movlw	high (__npowers_| (0+32768))
  5399  0E5E  3D43               	addwfc	??_scale+1,w
  5400  0E5F  0085               	movwf	5
  5401  0E60  3F00               	moviw [0]fsr0
  5402  0E61  00C4               	movwf	??_scale+2
  5403  0E62  3F01               	moviw [1]fsr0
  5404  0E63  00C5               	movwf	??_scale+3
  5405  0E64  3F02               	moviw [2]fsr0
  5406  0E65  00C6               	movwf	??_scale+4
  5407  0E66  3F03               	moviw [3]fsr0
  5408  0E67  00C7               	movwf	??_scale+5
  5409  0E68  0847               	movf	??_scale+5,w
  5410  0E69  00A7               	movwf	___flmul@b+3
  5411  0E6A  0846               	movf	??_scale+4,w
  5412  0E6B  00A6               	movwf	___flmul@b+2
  5413  0E6C  0845               	movf	??_scale+3,w
  5414  0E6D  00A5               	movwf	___flmul@b+1
  5415  0E6E  0844               	movf	??_scale+2,w
  5416  0E6F  00A4               	movwf	___flmul@b
  5417  0E70  300A               	movlw	10
  5418  0E71  00F7               	movwf	___awdiv@divisor
  5419  0E72  3000               	movlw	0
  5420  0E73  00F8               	movwf	___awdiv@divisor+1
  5421  0E74  0852               	movf	scale@scl,w
  5422  0E75  00F9               	movwf	___awdiv@dividend
  5423  0E76  01FA               	clrf	___awdiv@dividend+1
  5424  0E77  1BF9               	btfsc	___awdiv@dividend,7
  5425  0E78  03FA               	decf	___awdiv@dividend+1,f
  5426  0E79  319F  27A0  318D   	fcall	___awdiv
  5427  0E7C  0877               	movf	?___awdiv,w
  5428  0E7D  3E09               	addlw	9
  5429  0E7E  0020               	movlb	0	; select bank0
  5430  0E7F  00C8               	movwf	??_scale+6
  5431  0E80  01C9               	clrf	??_scale+7
  5432  0E81  35C8               	lslf	??_scale+6,f
  5433  0E82  0DC9               	rlf	??_scale+7,f
  5434  0E83  35C8               	lslf	??_scale+6,f
  5435  0E84  0DC9               	rlf	??_scale+7,f
  5436  0E85  306B               	movlw	low (__npowers_| (0+32768))
  5437  0E86  0748               	addwf	??_scale+6,w
  5438  0E87  0084               	movwf	4
  5439  0E88  30A0               	movlw	high (__npowers_| (0+32768))
  5440  0E89  3D49               	addwfc	??_scale+7,w
  5441  0E8A  0085               	movwf	5
  5442  0E8B  3F00               	moviw [0]fsr0
  5443  0E8C  00CA               	movwf	??_scale+8
  5444  0E8D  3F01               	moviw [1]fsr0
  5445  0E8E  00CB               	movwf	??_scale+9
  5446  0E8F  3F02               	moviw [2]fsr0
  5447  0E90  00CC               	movwf	??_scale+10
  5448  0E91  3F03               	moviw [3]fsr0
  5449  0E92  00CD               	movwf	??_scale+11
  5450  0E93  084D               	movf	??_scale+11,w
  5451  0E94  00AB               	movwf	___flmul@a+3
  5452  0E95  084C               	movf	??_scale+10,w
  5453  0E96  00AA               	movwf	___flmul@a+2
  5454  0E97  084B               	movf	??_scale+9,w
  5455  0E98  00A9               	movwf	___flmul@a+1
  5456  0E99  084A               	movf	??_scale+8,w
  5457  0E9A  00A8               	movwf	___flmul@a
  5458  0E9B  318B  232D  318D   	fcall	___flmul
  5459  0E9E  0020               	movlb	0	; select bank0
  5460  0E9F  0827               	movf	?___flmul+3,w
  5461  0EA0  00C1               	movwf	?_scale+3
  5462  0EA1  0826               	movf	?___flmul+2,w
  5463  0EA2  00C0               	movwf	?_scale+2
  5464  0EA3  0825               	movf	?___flmul+1,w
  5465  0EA4  00BF               	movwf	?_scale+1
  5466  0EA5  0824               	movf	?___flmul,w
  5467  0EA6  00BE               	movwf	?_scale
  5468  0EA7  2FFF               	goto	l416
  5469  0EA8                     l3384:
  5470                           
  5471                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  5472  0EA8  0852               	movf	scale@scl,w
  5473  0EA9  00C2               	movwf	??_scale
  5474  0EAA  01C3               	clrf	??_scale+1
  5475  0EAB  35C2               	lslf	??_scale,f
  5476  0EAC  0DC3               	rlf	??_scale+1,f
  5477  0EAD  35C2               	lslf	??_scale,f
  5478  0EAE  0DC3               	rlf	??_scale+1,f
  5479  0EAF  306B               	movlw	low (__npowers_| (0+32768))
  5480  0EB0  0742               	addwf	??_scale,w
  5481  0EB1  0084               	movwf	4
  5482  0EB2  30A0               	movlw	high (__npowers_| (0+32768))
  5483  0EB3  3D43               	addwfc	??_scale+1,w
  5484  0EB4  0085               	movwf	5
  5485  0EB5  3F00               	moviw [0]fsr0
  5486  0EB6  00C4               	movwf	??_scale+2
  5487  0EB7  3F01               	moviw [1]fsr0
  5488  0EB8  00C5               	movwf	??_scale+3
  5489  0EB9  3F02               	moviw [2]fsr0
  5490  0EBA  00C6               	movwf	??_scale+4
  5491  0EBB  3F03               	moviw [3]fsr0
  5492  0EBC  00C7               	movwf	??_scale+5
  5493  0EBD  0847               	movf	??_scale+5,w
  5494  0EBE  00C1               	movwf	?_scale+3
  5495  0EBF  0846               	movf	??_scale+4,w
  5496  0EC0  00C0               	movwf	?_scale+2
  5497  0EC1  0845               	movf	??_scale+3,w
  5498  0EC2  00BF               	movwf	?_scale+1
  5499  0EC3  0844               	movf	??_scale+2,w
  5500  0EC4  00BE               	movwf	?_scale
  5501  0EC5  2FFF               	goto	l416
  5502  0EC6                     l3388:
  5503                           
  5504                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  5505  0EC6  0852               	movf	scale@scl,w
  5506  0EC7  3A80               	xorlw	128
  5507  0EC8  3E12               	addlw	-238
  5508  0EC9  1C03               	skipc
  5509  0ECA  2ECC               	goto	u4061
  5510  0ECB  2ECD               	goto	u4060
  5511  0ECC                     u4061:
  5512  0ECC  2F79               	goto	l3396
  5513  0ECD                     u4060:
  5514  0ECD                     l3390:
  5515                           
  5516                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5517  0ECD  300A               	movlw	10
  5518  0ECE  00F7               	movwf	___awdiv@divisor
  5519  0ECF  3000               	movlw	0
  5520  0ED0  00F8               	movwf	___awdiv@divisor+1
  5521  0ED1  0852               	movf	scale@scl,w
  5522  0ED2  00F2               	movwf	___awmod@dividend
  5523  0ED3  01F3               	clrf	___awmod@dividend+1
  5524  0ED4  1BF2               	btfsc	___awmod@dividend,7
  5525  0ED5  03F3               	decf	___awmod@dividend+1,f
  5526  0ED6  3064               	movlw	100
  5527  0ED7  00F0               	movwf	___awmod@divisor
  5528  0ED8  3000               	movlw	0
  5529  0ED9  00F1               	movwf	___awmod@divisor+1
  5530  0EDA  319E  26F3  318D   	fcall	___awmod
  5531  0EDD  0871               	movf	?___awmod+1,w
  5532  0EDE  00FA               	movwf	___awdiv@dividend+1
  5533  0EDF  0870               	movf	?___awmod,w
  5534  0EE0  00F9               	movwf	___awdiv@dividend
  5535  0EE1  319F  27A0  318D   	fcall	___awdiv
  5536  0EE4  0877               	movf	?___awdiv,w
  5537  0EE5  3E09               	addlw	9
  5538  0EE6  0020               	movlb	0	; select bank0
  5539  0EE7  00C2               	movwf	??_scale
  5540  0EE8  01C3               	clrf	??_scale+1
  5541  0EE9  35C2               	lslf	??_scale,f
  5542  0EEA  0DC3               	rlf	??_scale+1,f
  5543  0EEB  35C2               	lslf	??_scale,f
  5544  0EEC  0DC3               	rlf	??_scale+1,f
  5545  0EED  3037               	movlw	low (__powers_| (0+32768))
  5546  0EEE  0742               	addwf	??_scale,w
  5547  0EEF  0084               	movwf	4
  5548  0EF0  30A0               	movlw	high (__powers_| (0+32768))
  5549  0EF1  3D43               	addwfc	??_scale+1,w
  5550  0EF2  0085               	movwf	5
  5551  0EF3  3F00               	moviw [0]fsr0
  5552  0EF4  00C4               	movwf	??_scale+2
  5553  0EF5  3F01               	moviw [1]fsr0
  5554  0EF6  00C5               	movwf	??_scale+3
  5555  0EF7  3F02               	moviw [2]fsr0
  5556  0EF8  00C6               	movwf	??_scale+4
  5557  0EF9  3F03               	moviw [3]fsr0
  5558  0EFA  00C7               	movwf	??_scale+5
  5559  0EFB  0847               	movf	??_scale+5,w
  5560  0EFC  00A7               	movwf	___flmul@b+3
  5561  0EFD  0846               	movf	??_scale+4,w
  5562  0EFE  00A6               	movwf	___flmul@b+2
  5563  0EFF  0845               	movf	??_scale+3,w
  5564  0F00  00A5               	movwf	___flmul@b+1
  5565  0F01  0844               	movf	??_scale+2,w
  5566  0F02  00A4               	movwf	___flmul@b
  5567  0F03  3064               	movlw	100
  5568  0F04  00F7               	movwf	___awdiv@divisor
  5569  0F05  3000               	movlw	0
  5570  0F06  00F8               	movwf	___awdiv@divisor+1
  5571  0F07  0852               	movf	scale@scl,w
  5572  0F08  00F9               	movwf	___awdiv@dividend
  5573  0F09  01FA               	clrf	___awdiv@dividend+1
  5574  0F0A  1BF9               	btfsc	___awdiv@dividend,7
  5575  0F0B  03FA               	decf	___awdiv@dividend+1,f
  5576  0F0C  319F  27A0  318D   	fcall	___awdiv
  5577  0F0F  0877               	movf	?___awdiv,w
  5578  0F10  3E12               	addlw	18
  5579  0F11  0020               	movlb	0	; select bank0
  5580  0F12  00C8               	movwf	??_scale+6
  5581  0F13  01C9               	clrf	??_scale+7
  5582  0F14  35C8               	lslf	??_scale+6,f
  5583  0F15  0DC9               	rlf	??_scale+7,f
  5584  0F16  35C8               	lslf	??_scale+6,f
  5585  0F17  0DC9               	rlf	??_scale+7,f
  5586  0F18  3037               	movlw	low (__powers_| (0+32768))
  5587  0F19  0748               	addwf	??_scale+6,w
  5588  0F1A  0084               	movwf	4
  5589  0F1B  30A0               	movlw	high (__powers_| (0+32768))
  5590  0F1C  3D49               	addwfc	??_scale+7,w
  5591  0F1D  0085               	movwf	5
  5592  0F1E  3F00               	moviw [0]fsr0
  5593  0F1F  00CA               	movwf	??_scale+8
  5594  0F20  3F01               	moviw [1]fsr0
  5595  0F21  00CB               	movwf	??_scale+9
  5596  0F22  3F02               	moviw [2]fsr0
  5597  0F23  00CC               	movwf	??_scale+10
  5598  0F24  3F03               	moviw [3]fsr0
  5599  0F25  00CD               	movwf	??_scale+11
  5600  0F26  084D               	movf	??_scale+11,w
  5601  0F27  00AB               	movwf	___flmul@a+3
  5602  0F28  084C               	movf	??_scale+10,w
  5603  0F29  00AA               	movwf	___flmul@a+2
  5604  0F2A  084B               	movf	??_scale+9,w
  5605  0F2B  00A9               	movwf	___flmul@a+1
  5606  0F2C  084A               	movf	??_scale+8,w
  5607  0F2D  00A8               	movwf	___flmul@a
  5608  0F2E  318B  232D  318D   	fcall	___flmul
  5609  0F31  0020               	movlb	0	; select bank0
  5610  0F32  0827               	movf	?___flmul+3,w
  5611  0F33  00D1               	movwf	_scale$1081+3
  5612  0F34  0826               	movf	?___flmul+2,w
  5613  0F35  00D0               	movwf	_scale$1081+2
  5614  0F36  0825               	movf	?___flmul+1,w
  5615  0F37  00CF               	movwf	_scale$1081+1
  5616  0F38  0824               	movf	?___flmul,w
  5617  0F39  00CE               	movwf	_scale$1081
  5618                           
  5619                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5620  0F3A  300A               	movlw	10
  5621  0F3B  00F0               	movwf	___awmod@divisor
  5622  0F3C  3000               	movlw	0
  5623  0F3D  00F1               	movwf	___awmod@divisor+1
  5624  0F3E  0852               	movf	scale@scl,w
  5625  0F3F  00F2               	movwf	___awmod@dividend
  5626  0F40  01F3               	clrf	___awmod@dividend+1
  5627  0F41  1BF2               	btfsc	___awmod@dividend,7
  5628  0F42  03F3               	decf	___awmod@dividend+1,f
  5629  0F43  319E  26F3  318D   	fcall	___awmod
  5630  0F46  0870               	movf	?___awmod,w
  5631  0F47  0020               	movlb	0	; select bank0
  5632  0F48  00C2               	movwf	??_scale
  5633  0F49  01C3               	clrf	??_scale+1
  5634  0F4A  35C2               	lslf	??_scale,f
  5635  0F4B  0DC3               	rlf	??_scale+1,f
  5636  0F4C  35C2               	lslf	??_scale,f
  5637  0F4D  0DC3               	rlf	??_scale+1,f
  5638  0F4E  3037               	movlw	low (__powers_| (0+32768))
  5639  0F4F  0742               	addwf	??_scale,w
  5640  0F50  0084               	movwf	4
  5641  0F51  30A0               	movlw	high (__powers_| (0+32768))
  5642  0F52  3D43               	addwfc	??_scale+1,w
  5643  0F53  0085               	movwf	5
  5644  0F54  3F00               	moviw [0]fsr0
  5645  0F55  00C4               	movwf	??_scale+2
  5646  0F56  3F01               	moviw [1]fsr0
  5647  0F57  00C5               	movwf	??_scale+3
  5648  0F58  3F02               	moviw [2]fsr0
  5649  0F59  00C6               	movwf	??_scale+4
  5650  0F5A  3F03               	moviw [3]fsr0
  5651  0F5B  00C7               	movwf	??_scale+5
  5652  0F5C  0847               	movf	??_scale+5,w
  5653  0F5D  00A7               	movwf	___flmul@b+3
  5654  0F5E  0846               	movf	??_scale+4,w
  5655  0F5F  00A6               	movwf	___flmul@b+2
  5656  0F60  0845               	movf	??_scale+3,w
  5657  0F61  00A5               	movwf	___flmul@b+1
  5658  0F62  0844               	movf	??_scale+2,w
  5659  0F63  00A4               	movwf	___flmul@b
  5660  0F64  0851               	movf	_scale$1081+3,w
  5661  0F65  00AB               	movwf	___flmul@a+3
  5662  0F66  0850               	movf	_scale$1081+2,w
  5663  0F67  00AA               	movwf	___flmul@a+2
  5664  0F68  084F               	movf	_scale$1081+1,w
  5665  0F69  00A9               	movwf	___flmul@a+1
  5666  0F6A  084E               	movf	_scale$1081,w
  5667  0F6B  00A8               	movwf	___flmul@a
  5668  0F6C  318B  232D  318D   	fcall	___flmul
  5669  0F6F  0020               	movlb	0	; select bank0
  5670  0F70  0827               	movf	?___flmul+3,w
  5671  0F71  00C1               	movwf	?_scale+3
  5672  0F72  0826               	movf	?___flmul+2,w
  5673  0F73  00C0               	movwf	?_scale+2
  5674  0F74  0825               	movf	?___flmul+1,w
  5675  0F75  00BF               	movwf	?_scale+1
  5676  0F76  0824               	movf	?___flmul,w
  5677  0F77  00BE               	movwf	?_scale
  5678  0F78  2FFF               	goto	l416
  5679  0F79                     l3396:
  5680                           
  5681                           ;doprnt.c: 446: else if(scl > 10)
  5682  0F79  0852               	movf	scale@scl,w
  5683  0F7A  3A80               	xorlw	128
  5684  0F7B  3E75               	addlw	-139
  5685  0F7C  1C03               	skipc
  5686  0F7D  2F7F               	goto	u4071
  5687  0F7E  2F80               	goto	u4070
  5688  0F7F                     u4071:
  5689  0F7F  2FE2               	goto	l3402
  5690  0F80                     u4070:
  5691  0F80                     l3398:
  5692                           
  5693                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  5694  0F80  300A               	movlw	10
  5695  0F81  00F0               	movwf	___awmod@divisor
  5696  0F82  3000               	movlw	0
  5697  0F83  00F1               	movwf	___awmod@divisor+1
  5698  0F84  0852               	movf	scale@scl,w
  5699  0F85  00F2               	movwf	___awmod@dividend
  5700  0F86  01F3               	clrf	___awmod@dividend+1
  5701  0F87  1BF2               	btfsc	___awmod@dividend,7
  5702  0F88  03F3               	decf	___awmod@dividend+1,f
  5703  0F89  319E  26F3  318D   	fcall	___awmod
  5704  0F8C  0870               	movf	?___awmod,w
  5705  0F8D  0020               	movlb	0	; select bank0
  5706  0F8E  00C2               	movwf	??_scale
  5707  0F8F  01C3               	clrf	??_scale+1
  5708  0F90  35C2               	lslf	??_scale,f
  5709  0F91  0DC3               	rlf	??_scale+1,f
  5710  0F92  35C2               	lslf	??_scale,f
  5711  0F93  0DC3               	rlf	??_scale+1,f
  5712  0F94  3037               	movlw	low (__powers_| (0+32768))
  5713  0F95  0742               	addwf	??_scale,w
  5714  0F96  0084               	movwf	4
  5715  0F97  30A0               	movlw	high (__powers_| (0+32768))
  5716  0F98  3D43               	addwfc	??_scale+1,w
  5717  0F99  0085               	movwf	5
  5718  0F9A  3F00               	moviw [0]fsr0
  5719  0F9B  00C4               	movwf	??_scale+2
  5720  0F9C  3F01               	moviw [1]fsr0
  5721  0F9D  00C5               	movwf	??_scale+3
  5722  0F9E  3F02               	moviw [2]fsr0
  5723  0F9F  00C6               	movwf	??_scale+4
  5724  0FA0  3F03               	moviw [3]fsr0
  5725  0FA1  00C7               	movwf	??_scale+5
  5726  0FA2  0847               	movf	??_scale+5,w
  5727  0FA3  00A7               	movwf	___flmul@b+3
  5728  0FA4  0846               	movf	??_scale+4,w
  5729  0FA5  00A6               	movwf	___flmul@b+2
  5730  0FA6  0845               	movf	??_scale+3,w
  5731  0FA7  00A5               	movwf	___flmul@b+1
  5732  0FA8  0844               	movf	??_scale+2,w
  5733  0FA9  00A4               	movwf	___flmul@b
  5734  0FAA  300A               	movlw	10
  5735  0FAB  00F7               	movwf	___awdiv@divisor
  5736  0FAC  3000               	movlw	0
  5737  0FAD  00F8               	movwf	___awdiv@divisor+1
  5738  0FAE  0852               	movf	scale@scl,w
  5739  0FAF  00F9               	movwf	___awdiv@dividend
  5740  0FB0  01FA               	clrf	___awdiv@dividend+1
  5741  0FB1  1BF9               	btfsc	___awdiv@dividend,7
  5742  0FB2  03FA               	decf	___awdiv@dividend+1,f
  5743  0FB3  319F  27A0  318D   	fcall	___awdiv
  5744  0FB6  0877               	movf	?___awdiv,w
  5745  0FB7  3E09               	addlw	9
  5746  0FB8  0020               	movlb	0	; select bank0
  5747  0FB9  00C8               	movwf	??_scale+6
  5748  0FBA  01C9               	clrf	??_scale+7
  5749  0FBB  35C8               	lslf	??_scale+6,f
  5750  0FBC  0DC9               	rlf	??_scale+7,f
  5751  0FBD  35C8               	lslf	??_scale+6,f
  5752  0FBE  0DC9               	rlf	??_scale+7,f
  5753  0FBF  3037               	movlw	low (__powers_| (0+32768))
  5754  0FC0  0748               	addwf	??_scale+6,w
  5755  0FC1  0084               	movwf	4
  5756  0FC2  30A0               	movlw	high (__powers_| (0+32768))
  5757  0FC3  3D49               	addwfc	??_scale+7,w
  5758  0FC4  0085               	movwf	5
  5759  0FC5  3F00               	moviw [0]fsr0
  5760  0FC6  00CA               	movwf	??_scale+8
  5761  0FC7  3F01               	moviw [1]fsr0
  5762  0FC8  00CB               	movwf	??_scale+9
  5763  0FC9  3F02               	moviw [2]fsr0
  5764  0FCA  00CC               	movwf	??_scale+10
  5765  0FCB  3F03               	moviw [3]fsr0
  5766  0FCC  00CD               	movwf	??_scale+11
  5767  0FCD  084D               	movf	??_scale+11,w
  5768  0FCE  00AB               	movwf	___flmul@a+3
  5769  0FCF  084C               	movf	??_scale+10,w
  5770  0FD0  00AA               	movwf	___flmul@a+2
  5771  0FD1  084B               	movf	??_scale+9,w
  5772  0FD2  00A9               	movwf	___flmul@a+1
  5773  0FD3  084A               	movf	??_scale+8,w
  5774  0FD4  00A8               	movwf	___flmul@a
  5775  0FD5  318B  232D  318D   	fcall	___flmul
  5776  0FD8  0020               	movlb	0	; select bank0
  5777  0FD9  0827               	movf	?___flmul+3,w
  5778  0FDA  00C1               	movwf	?_scale+3
  5779  0FDB  0826               	movf	?___flmul+2,w
  5780  0FDC  00C0               	movwf	?_scale+2
  5781  0FDD  0825               	movf	?___flmul+1,w
  5782  0FDE  00BF               	movwf	?_scale+1
  5783  0FDF  0824               	movf	?___flmul,w
  5784  0FE0  00BE               	movwf	?_scale
  5785  0FE1  2FFF               	goto	l416
  5786  0FE2                     l3402:
  5787                           
  5788                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  5789  0FE2  0852               	movf	scale@scl,w
  5790  0FE3  00C2               	movwf	??_scale
  5791  0FE4  01C3               	clrf	??_scale+1
  5792  0FE5  35C2               	lslf	??_scale,f
  5793  0FE6  0DC3               	rlf	??_scale+1,f
  5794  0FE7  35C2               	lslf	??_scale,f
  5795  0FE8  0DC3               	rlf	??_scale+1,f
  5796  0FE9  3037               	movlw	low (__powers_| (0+32768))
  5797  0FEA  0742               	addwf	??_scale,w
  5798  0FEB  0084               	movwf	4
  5799  0FEC  30A0               	movlw	high (__powers_| (0+32768))
  5800  0FED  3D43               	addwfc	??_scale+1,w
  5801  0FEE  0085               	movwf	5
  5802  0FEF  3F00               	moviw [0]fsr0
  5803  0FF0  00C4               	movwf	??_scale+2
  5804  0FF1  3F01               	moviw [1]fsr0
  5805  0FF2  00C5               	movwf	??_scale+3
  5806  0FF3  3F02               	moviw [2]fsr0
  5807  0FF4  00C6               	movwf	??_scale+4
  5808  0FF5  3F03               	moviw [3]fsr0
  5809  0FF6  00C7               	movwf	??_scale+5
  5810  0FF7  0847               	movf	??_scale+5,w
  5811  0FF8  00C1               	movwf	?_scale+3
  5812  0FF9  0846               	movf	??_scale+4,w
  5813  0FFA  00C0               	movwf	?_scale+2
  5814  0FFB  0845               	movf	??_scale+3,w
  5815  0FFC  00BF               	movwf	?_scale+1
  5816  0FFD  0844               	movf	??_scale+2,w
  5817  0FFE  00BE               	movwf	?_scale
  5818  0FFF                     l416:
  5819  0FFF  0008               	return
  5820  1000                     __end_of_scale:
  5821                           
  5822                           	psect	text3
  5823  1EF3                     __ptext3:	
  5824 ;; *************** function ___awmod *****************
  5825 ;; Defined at:
  5826 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  divisor         2    0[COMMON] int 
  5829 ;;  dividend        2    2[COMMON] int 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  sign            1    6[COMMON] unsigned char 
  5832 ;;  counter         1    5[COMMON] unsigned char 
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  2    0[COMMON] int 
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5842 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5844 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5845 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5846 ;;Total ram usage:        7 bytes
  5847 ;; Hardware stack levels used: 1
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_scale
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           
  5856                           ;psect for function ___awmod
  5857  1EF3                     ___awmod:
  5858  1EF3                     l2848:	
  5859                           ;incstack = 0
  5860                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5861                           
  5862  1EF3  01F6               	clrf	___awmod@sign
  5863  1EF4                     l2850:
  5864  1EF4  1FF3               	btfss	___awmod@dividend+1,7
  5865  1EF5  2EF7               	goto	u3081
  5866  1EF6  2EF8               	goto	u3080
  5867  1EF7                     u3081:
  5868  1EF7  2EFF               	goto	l2856
  5869  1EF8                     u3080:
  5870  1EF8                     l2852:
  5871  1EF8  09F2               	comf	___awmod@dividend,f
  5872  1EF9  09F3               	comf	___awmod@dividend+1,f
  5873  1EFA  0AF2               	incf	___awmod@dividend,f
  5874  1EFB  1903               	skipnz
  5875  1EFC  0AF3               	incf	___awmod@dividend+1,f
  5876  1EFD                     l2854:
  5877  1EFD  01F6               	clrf	___awmod@sign
  5878  1EFE  0AF6               	incf	___awmod@sign,f
  5879  1EFF                     l2856:
  5880  1EFF  1FF1               	btfss	___awmod@divisor+1,7
  5881  1F00  2F02               	goto	u3091
  5882  1F01  2F03               	goto	u3090
  5883  1F02                     u3091:
  5884  1F02  2F08               	goto	l2860
  5885  1F03                     u3090:
  5886  1F03                     l2858:
  5887  1F03  09F0               	comf	___awmod@divisor,f
  5888  1F04  09F1               	comf	___awmod@divisor+1,f
  5889  1F05  0AF0               	incf	___awmod@divisor,f
  5890  1F06  1903               	skipnz
  5891  1F07  0AF1               	incf	___awmod@divisor+1,f
  5892  1F08                     l2860:
  5893  1F08  0870               	movf	___awmod@divisor,w
  5894  1F09  0471               	iorwf	___awmod@divisor+1,w
  5895  1F0A  1903               	btfsc	3,2
  5896  1F0B  2F0D               	goto	u3101
  5897  1F0C  2F0E               	goto	u3100
  5898  1F0D                     u3101:
  5899  1F0D  2F37               	goto	l2878
  5900  1F0E                     u3100:
  5901  1F0E                     l2862:
  5902  1F0E  01F5               	clrf	___awmod@counter
  5903  1F0F  0AF5               	incf	___awmod@counter,f
  5904  1F10  2F1A               	goto	l2868
  5905  1F11                     l2864:
  5906  1F11  3001               	movlw	1
  5907  1F12                     u3115:
  5908  1F12  35F0               	lslf	___awmod@divisor,f
  5909  1F13  0DF1               	rlf	___awmod@divisor+1,f
  5910  1F14  0B89               	decfsz	9,f
  5911  1F15  2F12               	goto	u3115
  5912  1F16                     l2866:
  5913  1F16  3001               	movlw	1
  5914  1F17  00F4               	movwf	??___awmod
  5915  1F18  0874               	movf	??___awmod,w
  5916  1F19  07F5               	addwf	___awmod@counter,f
  5917  1F1A                     l2868:
  5918  1F1A  1FF1               	btfss	___awmod@divisor+1,7
  5919  1F1B  2F1D               	goto	u3121
  5920  1F1C  2F1E               	goto	u3120
  5921  1F1D                     u3121:
  5922  1F1D  2F11               	goto	l2864
  5923  1F1E                     u3120:
  5924  1F1E                     l2870:
  5925  1F1E  0871               	movf	___awmod@divisor+1,w
  5926  1F1F  0273               	subwf	___awmod@dividend+1,w
  5927  1F20  1D03               	skipz
  5928  1F21  2F24               	goto	u3135
  5929  1F22  0870               	movf	___awmod@divisor,w
  5930  1F23  0272               	subwf	___awmod@dividend,w
  5931  1F24                     u3135:
  5932  1F24  1C03               	skipc
  5933  1F25  2F27               	goto	u3131
  5934  1F26  2F28               	goto	u3130
  5935  1F27                     u3131:
  5936  1F27  2F2C               	goto	l2874
  5937  1F28                     u3130:
  5938  1F28                     l2872:
  5939  1F28  0870               	movf	___awmod@divisor,w
  5940  1F29  02F2               	subwf	___awmod@dividend,f
  5941  1F2A  0871               	movf	___awmod@divisor+1,w
  5942  1F2B  3BF3               	subwfb	___awmod@dividend+1,f
  5943  1F2C                     l2874:
  5944  1F2C  3001               	movlw	1
  5945  1F2D                     u3145:
  5946  1F2D  36F1               	lsrf	___awmod@divisor+1,f
  5947  1F2E  0CF0               	rrf	___awmod@divisor,f
  5948  1F2F  0B89               	decfsz	9,f
  5949  1F30  2F2D               	goto	u3145
  5950  1F31                     l2876:
  5951  1F31  3001               	movlw	1
  5952  1F32  02F5               	subwf	___awmod@counter,f
  5953  1F33  1D03               	btfss	3,2
  5954  1F34  2F36               	goto	u3151
  5955  1F35  2F37               	goto	u3150
  5956  1F36                     u3151:
  5957  1F36  2F1E               	goto	l2870
  5958  1F37                     u3150:
  5959  1F37                     l2878:
  5960  1F37  0876               	movf	___awmod@sign,w
  5961  1F38  1903               	btfsc	3,2
  5962  1F39  2F3B               	goto	u3161
  5963  1F3A  2F3C               	goto	u3160
  5964  1F3B                     u3161:
  5965  1F3B  2F41               	goto	l2882
  5966  1F3C                     u3160:
  5967  1F3C                     l2880:
  5968  1F3C  09F2               	comf	___awmod@dividend,f
  5969  1F3D  09F3               	comf	___awmod@dividend+1,f
  5970  1F3E  0AF2               	incf	___awmod@dividend,f
  5971  1F3F  1903               	skipnz
  5972  1F40  0AF3               	incf	___awmod@dividend+1,f
  5973  1F41                     l2882:
  5974  1F41  0873               	movf	___awmod@dividend+1,w
  5975  1F42  00F1               	movwf	?___awmod+1
  5976  1F43  0872               	movf	___awmod@dividend,w
  5977  1F44  00F0               	movwf	?___awmod
  5978  1F45                     l687:
  5979  1F45  0008               	return
  5980  1F46                     __end_of___awmod:
  5981                           
  5982                           	psect	text4
  5983  1FA0                     __ptext4:	
  5984 ;; *************** function ___awdiv *****************
  5985 ;; Defined at:
  5986 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  divisor         2    7[COMMON] int 
  5989 ;;  dividend        2    9[COMMON] int 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;  quotient        2    2[BANK0 ] int 
  5992 ;;  sign            1    1[BANK0 ] unsigned char 
  5993 ;;  counter         1    0[BANK0 ] unsigned char 
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  2    7[COMMON] int 
  5996 ;; Registers used:
  5997 ;;		wreg, status,2, status,0
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6003 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6004 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6006 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6007 ;;Total ram usage:        9 bytes
  6008 ;; Hardware stack levels used: 1
  6009 ;; This function calls:
  6010 ;;		Nothing
  6011 ;; This function is called by:
  6012 ;;		_scale
  6013 ;;		_sprintf
  6014 ;; This function uses a non-reentrant model
  6015 ;;
  6016                           
  6017                           
  6018                           ;psect for function ___awdiv
  6019  1FA0                     ___awdiv:
  6020  1FA0                     l2804:	
  6021                           ;incstack = 0
  6022                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6023                           
  6024  1FA0  0020               	movlb	0	; select bank0
  6025  1FA1  01A1               	clrf	___awdiv@sign
  6026  1FA2                     l2806:
  6027  1FA2  1FF8               	btfss	___awdiv@divisor+1,7
  6028  1FA3  2FA5               	goto	u2981
  6029  1FA4  2FA6               	goto	u2980
  6030  1FA5                     u2981:
  6031  1FA5  2FAD               	goto	l2812
  6032  1FA6                     u2980:
  6033  1FA6                     l2808:
  6034  1FA6  09F7               	comf	___awdiv@divisor,f
  6035  1FA7  09F8               	comf	___awdiv@divisor+1,f
  6036  1FA8  0AF7               	incf	___awdiv@divisor,f
  6037  1FA9  1903               	skipnz
  6038  1FAA  0AF8               	incf	___awdiv@divisor+1,f
  6039  1FAB                     l2810:
  6040  1FAB  01A1               	clrf	___awdiv@sign
  6041  1FAC  0AA1               	incf	___awdiv@sign,f
  6042  1FAD                     l2812:
  6043  1FAD  1FFA               	btfss	___awdiv@dividend+1,7
  6044  1FAE  2FB0               	goto	u2991
  6045  1FAF  2FB1               	goto	u2990
  6046  1FB0                     u2991:
  6047  1FB0  2FBA               	goto	l2818
  6048  1FB1                     u2990:
  6049  1FB1                     l2814:
  6050  1FB1  09F9               	comf	___awdiv@dividend,f
  6051  1FB2  09FA               	comf	___awdiv@dividend+1,f
  6052  1FB3  0AF9               	incf	___awdiv@dividend,f
  6053  1FB4  1903               	skipnz
  6054  1FB5  0AFA               	incf	___awdiv@dividend+1,f
  6055  1FB6                     l2816:
  6056  1FB6  3001               	movlw	1
  6057  1FB7  00FB               	movwf	??___awdiv
  6058  1FB8  087B               	movf	??___awdiv,w
  6059  1FB9  06A1               	xorwf	___awdiv@sign,f
  6060  1FBA                     l2818:
  6061  1FBA  01A2               	clrf	___awdiv@quotient
  6062  1FBB  01A3               	clrf	___awdiv@quotient+1
  6063  1FBC                     l2820:
  6064  1FBC  0877               	movf	___awdiv@divisor,w
  6065  1FBD  0478               	iorwf	___awdiv@divisor+1,w
  6066  1FBE  1903               	btfsc	3,2
  6067  1FBF  2FC1               	goto	u3001
  6068  1FC0  2FC2               	goto	u3000
  6069  1FC1                     u3001:
  6070  1FC1  2FF1               	goto	l2840
  6071  1FC2                     u3000:
  6072  1FC2                     l2822:
  6073  1FC2  01A0               	clrf	___awdiv@counter
  6074  1FC3  0AA0               	incf	___awdiv@counter,f
  6075  1FC4  2FCE               	goto	l2828
  6076  1FC5                     l2824:
  6077  1FC5  3001               	movlw	1
  6078  1FC6                     u3015:
  6079  1FC6  35F7               	lslf	___awdiv@divisor,f
  6080  1FC7  0DF8               	rlf	___awdiv@divisor+1,f
  6081  1FC8  0B89               	decfsz	9,f
  6082  1FC9  2FC6               	goto	u3015
  6083  1FCA                     l2826:
  6084  1FCA  3001               	movlw	1
  6085  1FCB  00FB               	movwf	??___awdiv
  6086  1FCC  087B               	movf	??___awdiv,w
  6087  1FCD  07A0               	addwf	___awdiv@counter,f
  6088  1FCE                     l2828:
  6089  1FCE  1FF8               	btfss	___awdiv@divisor+1,7
  6090  1FCF  2FD1               	goto	u3021
  6091  1FD0  2FD2               	goto	u3020
  6092  1FD1                     u3021:
  6093  1FD1  2FC5               	goto	l2824
  6094  1FD2                     u3020:
  6095  1FD2                     l2830:
  6096  1FD2  3001               	movlw	1
  6097  1FD3                     u3035:
  6098  1FD3  35A2               	lslf	___awdiv@quotient,f
  6099  1FD4  0DA3               	rlf	___awdiv@quotient+1,f
  6100  1FD5  0B89               	decfsz	9,f
  6101  1FD6  2FD3               	goto	u3035
  6102  1FD7  0878               	movf	___awdiv@divisor+1,w
  6103  1FD8  027A               	subwf	___awdiv@dividend+1,w
  6104  1FD9  1D03               	skipz
  6105  1FDA  2FDD               	goto	u3045
  6106  1FDB  0877               	movf	___awdiv@divisor,w
  6107  1FDC  0279               	subwf	___awdiv@dividend,w
  6108  1FDD                     u3045:
  6109  1FDD  1C03               	skipc
  6110  1FDE  2FE0               	goto	u3041
  6111  1FDF  2FE1               	goto	u3040
  6112  1FE0                     u3041:
  6113  1FE0  2FE6               	goto	l2836
  6114  1FE1                     u3040:
  6115  1FE1                     l2832:
  6116  1FE1  0877               	movf	___awdiv@divisor,w
  6117  1FE2  02F9               	subwf	___awdiv@dividend,f
  6118  1FE3  0878               	movf	___awdiv@divisor+1,w
  6119  1FE4  3BFA               	subwfb	___awdiv@dividend+1,f
  6120  1FE5                     l2834:
  6121  1FE5  1422               	bsf	___awdiv@quotient,0
  6122  1FE6                     l2836:
  6123  1FE6  3001               	movlw	1
  6124  1FE7                     u3055:
  6125  1FE7  36F8               	lsrf	___awdiv@divisor+1,f
  6126  1FE8  0CF7               	rrf	___awdiv@divisor,f
  6127  1FE9  0B89               	decfsz	9,f
  6128  1FEA  2FE7               	goto	u3055
  6129  1FEB                     l2838:
  6130  1FEB  3001               	movlw	1
  6131  1FEC  02A0               	subwf	___awdiv@counter,f
  6132  1FED  1D03               	btfss	3,2
  6133  1FEE  2FF0               	goto	u3061
  6134  1FEF  2FF1               	goto	u3060
  6135  1FF0                     u3061:
  6136  1FF0  2FD2               	goto	l2830
  6137  1FF1                     u3060:
  6138  1FF1                     l2840:
  6139  1FF1  0821               	movf	___awdiv@sign,w
  6140  1FF2  1903               	btfsc	3,2
  6141  1FF3  2FF5               	goto	u3071
  6142  1FF4  2FF6               	goto	u3070
  6143  1FF5                     u3071:
  6144  1FF5  2FFB               	goto	l2844
  6145  1FF6                     u3070:
  6146  1FF6                     l2842:
  6147  1FF6  09A2               	comf	___awdiv@quotient,f
  6148  1FF7  09A3               	comf	___awdiv@quotient+1,f
  6149  1FF8  0AA2               	incf	___awdiv@quotient,f
  6150  1FF9  1903               	skipnz
  6151  1FFA  0AA3               	incf	___awdiv@quotient+1,f
  6152  1FFB                     l2844:
  6153  1FFB  0823               	movf	___awdiv@quotient+1,w
  6154  1FFC  00F8               	movwf	?___awdiv+1
  6155  1FFD  0822               	movf	___awdiv@quotient,w
  6156  1FFE  00F7               	movwf	?___awdiv
  6157  1FFF                     l674:
  6158  1FFF  0008               	return
  6159  2000                     __end_of___awdiv:
  6160                           
  6161                           	psect	text5
  6162  1CAB                     __ptext5:	
  6163 ;; *************** function _isdigit *****************
  6164 ;; Defined at:
  6165 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  c               1    wreg     unsigned char 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  c               1    1[COMMON] unsigned char 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;		None               void
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6182 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6183 ;;Total ram usage:        2 bytes
  6184 ;; Hardware stack levels used: 1
  6185 ;; This function calls:
  6186 ;;		Nothing
  6187 ;; This function is called by:
  6188 ;;		_sprintf
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           
  6193                           ;psect for function _isdigit
  6194  1CAB                     _isdigit:
  6195                           
  6196                           ;incstack = 0
  6197                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6198                           ;isdigit@c stored from wreg
  6199  1CAB  00F1               	movwf	isdigit@c
  6200  1CAC                     l3406:
  6201  1CAC  01F0               	clrf	_isdigit$886
  6202  1CAD                     l3408:
  6203  1CAD  303A               	movlw	58
  6204  1CAE  0271               	subwf	isdigit@c,w
  6205  1CAF  1803               	skipnc
  6206  1CB0  2CB2               	goto	u4081
  6207  1CB1  2CB3               	goto	u4080
  6208  1CB2                     u4081:
  6209  1CB2  2CBB               	goto	l3414
  6210  1CB3                     u4080:
  6211  1CB3                     l3410:
  6212  1CB3  3030               	movlw	48
  6213  1CB4  0271               	subwf	isdigit@c,w
  6214  1CB5  1C03               	skipc
  6215  1CB6  2CB8               	goto	u4091
  6216  1CB7  2CB9               	goto	u4090
  6217  1CB8                     u4091:
  6218  1CB8  2CBB               	goto	l3414
  6219  1CB9                     u4090:
  6220  1CB9                     l3412:
  6221  1CB9  01F0               	clrf	_isdigit$886
  6222  1CBA  0AF0               	incf	_isdigit$886,f
  6223  1CBB                     l3414:
  6224  1CBB  0C70               	rrf	_isdigit$886,w
  6225  1CBC                     l1008:
  6226  1CBC  0008               	return
  6227  1CBD                     __end_of_isdigit:
  6228                           
  6229                           	psect	text6
  6230  14C4                     __ptext6:	
  6231 ;; *************** function _fround *****************
  6232 ;; Defined at:
  6233 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  prec            1    wreg     unsigned char 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  prec            1   48[BANK0 ] unsigned char 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  4   30[BANK0 ] unsigned char 
  6240 ;; Registers used:
  6241 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6247 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6248 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6251 ;;Total ram usage:       19 bytes
  6252 ;; Hardware stack levels used: 1
  6253 ;; Hardware stack levels required when called: 2
  6254 ;; This function calls:
  6255 ;;		___flmul
  6256 ;;		___lwdiv
  6257 ;;		___lwmod
  6258 ;; This function is called by:
  6259 ;;		_sprintf
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           
  6264                           ;psect for function _fround
  6265  14C4                     _fround:
  6266                           
  6267                           ;incstack = 0
  6268                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6269                           ;fround@prec stored from wreg
  6270  14C4  0020               	movlb	0	; select bank0
  6271  14C5  00D0               	movwf	fround@prec
  6272  14C6                     l3348:
  6273                           
  6274                           ;doprnt.c: 421: if(prec>=110)
  6275  14C6  306E               	movlw	110
  6276  14C7  0250               	subwf	fround@prec,w
  6277  14C8  1C03               	skipc
  6278  14C9  2CCB               	goto	u4011
  6279  14CA  2CCC               	goto	u4010
  6280  14CB                     u4011:
  6281  14CB  2D95               	goto	l3356
  6282  14CC                     u4010:
  6283  14CC                     l3350:
  6284                           
  6285                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6286  14CC  303F               	movlw	63
  6287  14CD  00A7               	movwf	___flmul@b+3
  6288  14CE  3000               	movlw	0
  6289  14CF  00A6               	movwf	___flmul@b+2
  6290  14D0  3000               	movlw	0
  6291  14D1  00A5               	movwf	___flmul@b+1
  6292  14D2  3000               	movlw	0
  6293  14D3  00A4               	movwf	___flmul@b
  6294  14D4  3064               	movlw	100
  6295  14D5  00F6               	movwf	___lwdiv@divisor
  6296  14D6  3000               	movlw	0
  6297  14D7  00F7               	movwf	___lwdiv@divisor+1
  6298  14D8  0850               	movf	fround@prec,w
  6299  14D9  00C2               	movwf	??_fround
  6300  14DA  01C3               	clrf	??_fround+1
  6301  14DB  0842               	movf	??_fround,w
  6302  14DC  00F8               	movwf	___lwdiv@dividend
  6303  14DD  0843               	movf	??_fround+1,w
  6304  14DE  00F9               	movwf	___lwdiv@dividend+1
  6305  14DF  319D  25D0  3194   	fcall	___lwdiv
  6306  14E2  0877               	movf	?___lwdiv+1,w
  6307  14E3  0085               	movwf	5
  6308  14E4  0876               	movf	?___lwdiv,w
  6309  14E5  0084               	movwf	4
  6310  14E6  3584               	lslf	4,f
  6311  14E7  0D85               	rlf	5,f
  6312  14E8  3584               	lslf	4,f
  6313  14E9  0D85               	rlf	5,f
  6314  14EA  30B3               	movlw	low ((__npowers_+72)| (0+32768))
  6315  14EB  0784               	addwf	4,f
  6316  14EC  30A0               	movlw	high ((__npowers_+72)| (0+32768))
  6317  14ED  3D85               	addwfc	5,f
  6318  14EE  3F00               	moviw [0]fsr0
  6319  14EF  0020               	movlb	0	; select bank0
  6320  14F0  00C4               	movwf	??_fround+2
  6321  14F1  3F01               	moviw [1]fsr0
  6322  14F2  00C5               	movwf	??_fround+3
  6323  14F3  3F02               	moviw [2]fsr0
  6324  14F4  00C6               	movwf	??_fround+4
  6325  14F5  3F03               	moviw [3]fsr0
  6326  14F6  00C7               	movwf	??_fround+5
  6327  14F7  0847               	movf	??_fround+5,w
  6328  14F8  00AB               	movwf	___flmul@a+3
  6329  14F9  0846               	movf	??_fround+4,w
  6330  14FA  00AA               	movwf	___flmul@a+2
  6331  14FB  0845               	movf	??_fround+3,w
  6332  14FC  00A9               	movwf	___flmul@a+1
  6333  14FD  0844               	movf	??_fround+2,w
  6334  14FE  00A8               	movwf	___flmul@a
  6335  14FF  318B  232D  3194   	fcall	___flmul
  6336  1502  0020               	movlb	0	; select bank0
  6337  1503  0827               	movf	?___flmul+3,w
  6338  1504  00CF               	movwf	_fround$1079+3
  6339  1505  0826               	movf	?___flmul+2,w
  6340  1506  00CE               	movwf	_fround$1079+2
  6341  1507  0825               	movf	?___flmul+1,w
  6342  1508  00CD               	movwf	_fround$1079+1
  6343  1509  0824               	movf	?___flmul,w
  6344  150A  00CC               	movwf	_fround$1079
  6345                           
  6346                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6347  150B  300A               	movlw	10
  6348  150C  00F6               	movwf	___lwdiv@divisor
  6349  150D  3000               	movlw	0
  6350  150E  00F7               	movwf	___lwdiv@divisor+1
  6351  150F  0850               	movf	fround@prec,w
  6352  1510  00C2               	movwf	??_fround
  6353  1511  01C3               	clrf	??_fround+1
  6354  1512  0842               	movf	??_fround,w
  6355  1513  00F2               	movwf	___lwmod@dividend
  6356  1514  0843               	movf	??_fround+1,w
  6357  1515  00F3               	movwf	___lwmod@dividend+1
  6358  1516  3064               	movlw	100
  6359  1517  00F0               	movwf	___lwmod@divisor
  6360  1518  3000               	movlw	0
  6361  1519  00F1               	movwf	___lwmod@divisor+1
  6362  151A  319D  2564  3194   	fcall	___lwmod
  6363  151D  0871               	movf	?___lwmod+1,w
  6364  151E  00F9               	movwf	___lwdiv@dividend+1
  6365  151F  0870               	movf	?___lwmod,w
  6366  1520  00F8               	movwf	___lwdiv@dividend
  6367  1521  319D  25D0  3194   	fcall	___lwdiv
  6368  1524  0877               	movf	?___lwdiv+1,w
  6369  1525  0085               	movwf	5
  6370  1526  0876               	movf	?___lwdiv,w
  6371  1527  0084               	movwf	4
  6372  1528  3584               	lslf	4,f
  6373  1529  0D85               	rlf	5,f
  6374  152A  3584               	lslf	4,f
  6375  152B  0D85               	rlf	5,f
  6376  152C  308F               	movlw	low ((__npowers_+36)| (0+32768))
  6377  152D  0784               	addwf	4,f
  6378  152E  30A0               	movlw	high ((__npowers_+36)| (0+32768))
  6379  152F  3D85               	addwfc	5,f
  6380  1530  3F00               	moviw [0]fsr0
  6381  1531  0020               	movlb	0	; select bank0
  6382  1532  00C4               	movwf	??_fround+2
  6383  1533  3F01               	moviw [1]fsr0
  6384  1534  00C5               	movwf	??_fround+3
  6385  1535  3F02               	moviw [2]fsr0
  6386  1536  00C6               	movwf	??_fround+4
  6387  1537  3F03               	moviw [3]fsr0
  6388  1538  00C7               	movwf	??_fround+5
  6389  1539  0847               	movf	??_fround+5,w
  6390  153A  00A7               	movwf	___flmul@b+3
  6391  153B  0846               	movf	??_fround+4,w
  6392  153C  00A6               	movwf	___flmul@b+2
  6393  153D  0845               	movf	??_fround+3,w
  6394  153E  00A5               	movwf	___flmul@b+1
  6395  153F  0844               	movf	??_fround+2,w
  6396  1540  00A4               	movwf	___flmul@b
  6397  1541  084F               	movf	_fround$1079+3,w
  6398  1542  00AB               	movwf	___flmul@a+3
  6399  1543  084E               	movf	_fround$1079+2,w
  6400  1544  00AA               	movwf	___flmul@a+2
  6401  1545  084D               	movf	_fround$1079+1,w
  6402  1546  00A9               	movwf	___flmul@a+1
  6403  1547  084C               	movf	_fround$1079,w
  6404  1548  00A8               	movwf	___flmul@a
  6405  1549  318B  232D  3194   	fcall	___flmul
  6406  154C  0020               	movlb	0	; select bank0
  6407  154D  0827               	movf	?___flmul+3,w
  6408  154E  00CB               	movwf	_fround$1080+3
  6409  154F  0826               	movf	?___flmul+2,w
  6410  1550  00CA               	movwf	_fround$1080+2
  6411  1551  0825               	movf	?___flmul+1,w
  6412  1552  00C9               	movwf	_fround$1080+1
  6413  1553  0824               	movf	?___flmul,w
  6414  1554  00C8               	movwf	_fround$1080
  6415                           
  6416                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6417  1555  300A               	movlw	10
  6418  1556  00F0               	movwf	___lwmod@divisor
  6419  1557  3000               	movlw	0
  6420  1558  00F1               	movwf	___lwmod@divisor+1
  6421  1559  0850               	movf	fround@prec,w
  6422  155A  00C2               	movwf	??_fround
  6423  155B  01C3               	clrf	??_fround+1
  6424  155C  0842               	movf	??_fround,w
  6425  155D  00F2               	movwf	___lwmod@dividend
  6426  155E  0843               	movf	??_fround+1,w
  6427  155F  00F3               	movwf	___lwmod@dividend+1
  6428  1560  319D  2564  3194   	fcall	___lwmod
  6429  1563  0871               	movf	?___lwmod+1,w
  6430  1564  0085               	movwf	5
  6431  1565  0870               	movf	?___lwmod,w
  6432  1566  0084               	movwf	4
  6433  1567  3584               	lslf	4,f
  6434  1568  0D85               	rlf	5,f
  6435  1569  3584               	lslf	4,f
  6436  156A  0D85               	rlf	5,f
  6437  156B  306B               	movlw	low (__npowers_| (0+32768))
  6438  156C  0784               	addwf	4,f
  6439  156D  30A0               	movlw	high (__npowers_| (0+32768))
  6440  156E  3D85               	addwfc	5,f
  6441  156F  3F00               	moviw [0]fsr0
  6442  1570  0020               	movlb	0	; select bank0
  6443  1571  00C4               	movwf	??_fround+2
  6444  1572  3F01               	moviw [1]fsr0
  6445  1573  00C5               	movwf	??_fround+3
  6446  1574  3F02               	moviw [2]fsr0
  6447  1575  00C6               	movwf	??_fround+4
  6448  1576  3F03               	moviw [3]fsr0
  6449  1577  00C7               	movwf	??_fround+5
  6450  1578  0847               	movf	??_fround+5,w
  6451  1579  00A7               	movwf	___flmul@b+3
  6452  157A  0846               	movf	??_fround+4,w
  6453  157B  00A6               	movwf	___flmul@b+2
  6454  157C  0845               	movf	??_fround+3,w
  6455  157D  00A5               	movwf	___flmul@b+1
  6456  157E  0844               	movf	??_fround+2,w
  6457  157F  00A4               	movwf	___flmul@b
  6458  1580  084B               	movf	_fround$1080+3,w
  6459  1581  00AB               	movwf	___flmul@a+3
  6460  1582  084A               	movf	_fround$1080+2,w
  6461  1583  00AA               	movwf	___flmul@a+2
  6462  1584  0849               	movf	_fround$1080+1,w
  6463  1585  00A9               	movwf	___flmul@a+1
  6464  1586  0848               	movf	_fround$1080,w
  6465  1587  00A8               	movwf	___flmul@a
  6466  1588  318B  232D  3194   	fcall	___flmul
  6467  158B  0020               	movlb	0	; select bank0
  6468  158C  0827               	movf	?___flmul+3,w
  6469  158D  00C1               	movwf	?_fround+3
  6470  158E  0826               	movf	?___flmul+2,w
  6471  158F  00C0               	movwf	?_fround+2
  6472  1590  0825               	movf	?___flmul+1,w
  6473  1591  00BF               	movwf	?_fround+1
  6474  1592  0824               	movf	?___flmul,w
  6475  1593  00BE               	movwf	?_fround
  6476  1594  2E4B               	goto	l409
  6477  1595                     l3356:
  6478                           
  6479                           ;doprnt.c: 423: else if(prec > 10)
  6480  1595  300B               	movlw	11
  6481  1596  0250               	subwf	fround@prec,w
  6482  1597  1C03               	skipc
  6483  1598  2D9A               	goto	u4021
  6484  1599  2D9B               	goto	u4020
  6485  159A                     u4021:
  6486  159A  2E1A               	goto	l3362
  6487  159B                     u4020:
  6488  159B                     l3358:
  6489                           
  6490                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6491  159B  303F               	movlw	63
  6492  159C  00A7               	movwf	___flmul@b+3
  6493  159D  3000               	movlw	0
  6494  159E  00A6               	movwf	___flmul@b+2
  6495  159F  3000               	movlw	0
  6496  15A0  00A5               	movwf	___flmul@b+1
  6497  15A1  3000               	movlw	0
  6498  15A2  00A4               	movwf	___flmul@b
  6499  15A3  300A               	movlw	10
  6500  15A4  00F6               	movwf	___lwdiv@divisor
  6501  15A5  3000               	movlw	0
  6502  15A6  00F7               	movwf	___lwdiv@divisor+1
  6503  15A7  0850               	movf	fround@prec,w
  6504  15A8  00C2               	movwf	??_fround
  6505  15A9  01C3               	clrf	??_fround+1
  6506  15AA  0842               	movf	??_fround,w
  6507  15AB  00F8               	movwf	___lwdiv@dividend
  6508  15AC  0843               	movf	??_fround+1,w
  6509  15AD  00F9               	movwf	___lwdiv@dividend+1
  6510  15AE  319D  25D0  3194   	fcall	___lwdiv
  6511  15B1  0877               	movf	?___lwdiv+1,w
  6512  15B2  0085               	movwf	5
  6513  15B3  0876               	movf	?___lwdiv,w
  6514  15B4  0084               	movwf	4
  6515  15B5  3584               	lslf	4,f
  6516  15B6  0D85               	rlf	5,f
  6517  15B7  3584               	lslf	4,f
  6518  15B8  0D85               	rlf	5,f
  6519  15B9  308F               	movlw	low ((__npowers_+36)| (0+32768))
  6520  15BA  0784               	addwf	4,f
  6521  15BB  30A0               	movlw	high ((__npowers_+36)| (0+32768))
  6522  15BC  3D85               	addwfc	5,f
  6523  15BD  3F00               	moviw [0]fsr0
  6524  15BE  0020               	movlb	0	; select bank0
  6525  15BF  00C4               	movwf	??_fround+2
  6526  15C0  3F01               	moviw [1]fsr0
  6527  15C1  00C5               	movwf	??_fround+3
  6528  15C2  3F02               	moviw [2]fsr0
  6529  15C3  00C6               	movwf	??_fround+4
  6530  15C4  3F03               	moviw [3]fsr0
  6531  15C5  00C7               	movwf	??_fround+5
  6532  15C6  0847               	movf	??_fround+5,w
  6533  15C7  00AB               	movwf	___flmul@a+3
  6534  15C8  0846               	movf	??_fround+4,w
  6535  15C9  00AA               	movwf	___flmul@a+2
  6536  15CA  0845               	movf	??_fround+3,w
  6537  15CB  00A9               	movwf	___flmul@a+1
  6538  15CC  0844               	movf	??_fround+2,w
  6539  15CD  00A8               	movwf	___flmul@a
  6540  15CE  318B  232D  3194   	fcall	___flmul
  6541  15D1  0020               	movlb	0	; select bank0
  6542  15D2  0827               	movf	?___flmul+3,w
  6543  15D3  00CF               	movwf	_fround$1079+3
  6544  15D4  0826               	movf	?___flmul+2,w
  6545  15D5  00CE               	movwf	_fround$1079+2
  6546  15D6  0825               	movf	?___flmul+1,w
  6547  15D7  00CD               	movwf	_fround$1079+1
  6548  15D8  0824               	movf	?___flmul,w
  6549  15D9  00CC               	movwf	_fround$1079
  6550                           
  6551                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6552  15DA  300A               	movlw	10
  6553  15DB  00F0               	movwf	___lwmod@divisor
  6554  15DC  3000               	movlw	0
  6555  15DD  00F1               	movwf	___lwmod@divisor+1
  6556  15DE  0850               	movf	fround@prec,w
  6557  15DF  00C2               	movwf	??_fround
  6558  15E0  01C3               	clrf	??_fround+1
  6559  15E1  0842               	movf	??_fround,w
  6560  15E2  00F2               	movwf	___lwmod@dividend
  6561  15E3  0843               	movf	??_fround+1,w
  6562  15E4  00F3               	movwf	___lwmod@dividend+1
  6563  15E5  319D  2564  3194   	fcall	___lwmod
  6564  15E8  0871               	movf	?___lwmod+1,w
  6565  15E9  0085               	movwf	5
  6566  15EA  0870               	movf	?___lwmod,w
  6567  15EB  0084               	movwf	4
  6568  15EC  3584               	lslf	4,f
  6569  15ED  0D85               	rlf	5,f
  6570  15EE  3584               	lslf	4,f
  6571  15EF  0D85               	rlf	5,f
  6572  15F0  306B               	movlw	low (__npowers_| (0+32768))
  6573  15F1  0784               	addwf	4,f
  6574  15F2  30A0               	movlw	high (__npowers_| (0+32768))
  6575  15F3  3D85               	addwfc	5,f
  6576  15F4  3F00               	moviw [0]fsr0
  6577  15F5  0020               	movlb	0	; select bank0
  6578  15F6  00C4               	movwf	??_fround+2
  6579  15F7  3F01               	moviw [1]fsr0
  6580  15F8  00C5               	movwf	??_fround+3
  6581  15F9  3F02               	moviw [2]fsr0
  6582  15FA  00C6               	movwf	??_fround+4
  6583  15FB  3F03               	moviw [3]fsr0
  6584  15FC  00C7               	movwf	??_fround+5
  6585  15FD  0847               	movf	??_fround+5,w
  6586  15FE  00A7               	movwf	___flmul@b+3
  6587  15FF  0846               	movf	??_fround+4,w
  6588  1600  00A6               	movwf	___flmul@b+2
  6589  1601  0845               	movf	??_fround+3,w
  6590  1602  00A5               	movwf	___flmul@b+1
  6591  1603  0844               	movf	??_fround+2,w
  6592  1604  00A4               	movwf	___flmul@b
  6593  1605  084F               	movf	_fround$1079+3,w
  6594  1606  00AB               	movwf	___flmul@a+3
  6595  1607  084E               	movf	_fround$1079+2,w
  6596  1608  00AA               	movwf	___flmul@a+2
  6597  1609  084D               	movf	_fround$1079+1,w
  6598  160A  00A9               	movwf	___flmul@a+1
  6599  160B  084C               	movf	_fround$1079,w
  6600  160C  00A8               	movwf	___flmul@a
  6601  160D  318B  232D  3194   	fcall	___flmul
  6602  1610  0020               	movlb	0	; select bank0
  6603  1611  0827               	movf	?___flmul+3,w
  6604  1612  00C1               	movwf	?_fround+3
  6605  1613  0826               	movf	?___flmul+2,w
  6606  1614  00C0               	movwf	?_fround+2
  6607  1615  0825               	movf	?___flmul+1,w
  6608  1616  00BF               	movwf	?_fround+1
  6609  1617  0824               	movf	?___flmul,w
  6610  1618  00BE               	movwf	?_fround
  6611  1619  2E4B               	goto	l409
  6612  161A                     l3362:
  6613                           
  6614                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  6615  161A  303F               	movlw	63
  6616  161B  00A7               	movwf	___flmul@b+3
  6617  161C  3000               	movlw	0
  6618  161D  00A6               	movwf	___flmul@b+2
  6619  161E  3000               	movlw	0
  6620  161F  00A5               	movwf	___flmul@b+1
  6621  1620  3000               	movlw	0
  6622  1621  00A4               	movwf	___flmul@b
  6623  1622  0850               	movf	fround@prec,w
  6624  1623  00C2               	movwf	??_fround
  6625  1624  01C3               	clrf	??_fround+1
  6626  1625  35C2               	lslf	??_fround,f
  6627  1626  0DC3               	rlf	??_fround+1,f
  6628  1627  35C2               	lslf	??_fround,f
  6629  1628  0DC3               	rlf	??_fround+1,f
  6630  1629  306B               	movlw	low (__npowers_| (0+32768))
  6631  162A  0742               	addwf	??_fround,w
  6632  162B  0084               	movwf	4
  6633  162C  30A0               	movlw	high (__npowers_| (0+32768))
  6634  162D  3D43               	addwfc	??_fround+1,w
  6635  162E  0085               	movwf	5
  6636  162F  3F00               	moviw [0]fsr0
  6637  1630  00C4               	movwf	??_fround+2
  6638  1631  3F01               	moviw [1]fsr0
  6639  1632  00C5               	movwf	??_fround+3
  6640  1633  3F02               	moviw [2]fsr0
  6641  1634  00C6               	movwf	??_fround+4
  6642  1635  3F03               	moviw [3]fsr0
  6643  1636  00C7               	movwf	??_fround+5
  6644  1637  0847               	movf	??_fround+5,w
  6645  1638  00AB               	movwf	___flmul@a+3
  6646  1639  0846               	movf	??_fround+4,w
  6647  163A  00AA               	movwf	___flmul@a+2
  6648  163B  0845               	movf	??_fround+3,w
  6649  163C  00A9               	movwf	___flmul@a+1
  6650  163D  0844               	movf	??_fround+2,w
  6651  163E  00A8               	movwf	___flmul@a
  6652  163F  318B  232D  3194   	fcall	___flmul
  6653  1642  0020               	movlb	0	; select bank0
  6654  1643  0827               	movf	?___flmul+3,w
  6655  1644  00C1               	movwf	?_fround+3
  6656  1645  0826               	movf	?___flmul+2,w
  6657  1646  00C0               	movwf	?_fround+2
  6658  1647  0825               	movf	?___flmul+1,w
  6659  1648  00BF               	movwf	?_fround+1
  6660  1649  0824               	movf	?___flmul,w
  6661  164A  00BE               	movwf	?_fround
  6662  164B                     l409:
  6663  164B  0008               	return
  6664  164C                     __end_of_fround:
  6665                           
  6666                           	psect	text7
  6667  1D64                     __ptext7:	
  6668 ;; *************** function ___lwmod *****************
  6669 ;; Defined at:
  6670 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  divisor         2    0[COMMON] unsigned int 
  6673 ;;  dividend        2    2[COMMON] unsigned int 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  counter         1    5[COMMON] unsigned char 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  2    0[COMMON] unsigned int 
  6678 ;; Registers used:
  6679 ;;		wreg, status,2, status,0
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;Total ram usage:        6 bytes
  6690 ;; Hardware stack levels used: 1
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_fround
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           
  6699                           ;psect for function ___lwmod
  6700  1D64                     ___lwmod:
  6701  1D64                     l2912:	
  6702                           ;incstack = 0
  6703                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6704                           
  6705  1D64  0870               	movf	___lwmod@divisor,w
  6706  1D65  0471               	iorwf	___lwmod@divisor+1,w
  6707  1D66  1903               	btfsc	3,2
  6708  1D67  2D69               	goto	u3241
  6709  1D68  2D6A               	goto	u3240
  6710  1D69                     u3241:
  6711  1D69  2D93               	goto	l2930
  6712  1D6A                     u3240:
  6713  1D6A                     l2914:
  6714  1D6A  01F5               	clrf	___lwmod@counter
  6715  1D6B  0AF5               	incf	___lwmod@counter,f
  6716  1D6C  2D76               	goto	l2920
  6717  1D6D                     l2916:
  6718  1D6D  3001               	movlw	1
  6719  1D6E                     u3255:
  6720  1D6E  35F0               	lslf	___lwmod@divisor,f
  6721  1D6F  0DF1               	rlf	___lwmod@divisor+1,f
  6722  1D70  0B89               	decfsz	9,f
  6723  1D71  2D6E               	goto	u3255
  6724  1D72                     l2918:
  6725  1D72  3001               	movlw	1
  6726  1D73  00F4               	movwf	??___lwmod
  6727  1D74  0874               	movf	??___lwmod,w
  6728  1D75  07F5               	addwf	___lwmod@counter,f
  6729  1D76                     l2920:
  6730  1D76  1FF1               	btfss	___lwmod@divisor+1,7
  6731  1D77  2D79               	goto	u3261
  6732  1D78  2D7A               	goto	u3260
  6733  1D79                     u3261:
  6734  1D79  2D6D               	goto	l2916
  6735  1D7A                     u3260:
  6736  1D7A                     l2922:
  6737  1D7A  0871               	movf	___lwmod@divisor+1,w
  6738  1D7B  0273               	subwf	___lwmod@dividend+1,w
  6739  1D7C  1D03               	skipz
  6740  1D7D  2D80               	goto	u3275
  6741  1D7E  0870               	movf	___lwmod@divisor,w
  6742  1D7F  0272               	subwf	___lwmod@dividend,w
  6743  1D80                     u3275:
  6744  1D80  1C03               	skipc
  6745  1D81  2D83               	goto	u3271
  6746  1D82  2D84               	goto	u3270
  6747  1D83                     u3271:
  6748  1D83  2D88               	goto	l2926
  6749  1D84                     u3270:
  6750  1D84                     l2924:
  6751  1D84  0870               	movf	___lwmod@divisor,w
  6752  1D85  02F2               	subwf	___lwmod@dividend,f
  6753  1D86  0871               	movf	___lwmod@divisor+1,w
  6754  1D87  3BF3               	subwfb	___lwmod@dividend+1,f
  6755  1D88                     l2926:
  6756  1D88  3001               	movlw	1
  6757  1D89                     u3285:
  6758  1D89  36F1               	lsrf	___lwmod@divisor+1,f
  6759  1D8A  0CF0               	rrf	___lwmod@divisor,f
  6760  1D8B  0B89               	decfsz	9,f
  6761  1D8C  2D89               	goto	u3285
  6762  1D8D                     l2928:
  6763  1D8D  3001               	movlw	1
  6764  1D8E  02F5               	subwf	___lwmod@counter,f
  6765  1D8F  1D03               	btfss	3,2
  6766  1D90  2D92               	goto	u3291
  6767  1D91  2D93               	goto	u3290
  6768  1D92                     u3291:
  6769  1D92  2D7A               	goto	l2922
  6770  1D93                     u3290:
  6771  1D93                     l2930:
  6772  1D93  0873               	movf	___lwmod@dividend+1,w
  6773  1D94  00F1               	movwf	?___lwmod+1
  6774  1D95  0872               	movf	___lwmod@dividend,w
  6775  1D96  00F0               	movwf	?___lwmod
  6776  1D97                     l837:
  6777  1D97  0008               	return
  6778  1D98                     __end_of___lwmod:
  6779                           
  6780                           	psect	text8
  6781  1DD0                     __ptext8:	
  6782 ;; *************** function ___lwdiv *****************
  6783 ;; Defined at:
  6784 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  divisor         2    6[COMMON] unsigned int 
  6787 ;;  dividend        2    8[COMMON] unsigned int 
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;  quotient        2   11[COMMON] unsigned int 
  6790 ;;  counter         1   13[COMMON] unsigned char 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  2    6[COMMON] unsigned int 
  6793 ;; Registers used:
  6794 ;;		wreg, status,2, status,0
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6802 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6803 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6804 ;;Total ram usage:        8 bytes
  6805 ;; Hardware stack levels used: 1
  6806 ;; This function calls:
  6807 ;;		Nothing
  6808 ;; This function is called by:
  6809 ;;		_fround
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           
  6814                           ;psect for function ___lwdiv
  6815  1DD0                     ___lwdiv:
  6816  1DD0                     l2886:	
  6817                           ;incstack = 0
  6818                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6819                           
  6820  1DD0  01FB               	clrf	___lwdiv@quotient
  6821  1DD1  01FC               	clrf	___lwdiv@quotient+1
  6822  1DD2                     l2888:
  6823  1DD2  0876               	movf	___lwdiv@divisor,w
  6824  1DD3  0477               	iorwf	___lwdiv@divisor+1,w
  6825  1DD4  1903               	btfsc	3,2
  6826  1DD5  2DD7               	goto	u3171
  6827  1DD6  2DD8               	goto	u3170
  6828  1DD7                     u3171:
  6829  1DD7  2E07               	goto	l2908
  6830  1DD8                     u3170:
  6831  1DD8                     l2890:
  6832  1DD8  01FD               	clrf	___lwdiv@counter
  6833  1DD9  0AFD               	incf	___lwdiv@counter,f
  6834  1DDA  2DE4               	goto	l2896
  6835  1DDB                     l2892:
  6836  1DDB  3001               	movlw	1
  6837  1DDC                     u3185:
  6838  1DDC  35F6               	lslf	___lwdiv@divisor,f
  6839  1DDD  0DF7               	rlf	___lwdiv@divisor+1,f
  6840  1DDE  0B89               	decfsz	9,f
  6841  1DDF  2DDC               	goto	u3185
  6842  1DE0                     l2894:
  6843  1DE0  3001               	movlw	1
  6844  1DE1  00FA               	movwf	??___lwdiv
  6845  1DE2  087A               	movf	??___lwdiv,w
  6846  1DE3  07FD               	addwf	___lwdiv@counter,f
  6847  1DE4                     l2896:
  6848  1DE4  1FF7               	btfss	___lwdiv@divisor+1,7
  6849  1DE5  2DE7               	goto	u3191
  6850  1DE6  2DE8               	goto	u3190
  6851  1DE7                     u3191:
  6852  1DE7  2DDB               	goto	l2892
  6853  1DE8                     u3190:
  6854  1DE8                     l2898:
  6855  1DE8  3001               	movlw	1
  6856  1DE9                     u3205:
  6857  1DE9  35FB               	lslf	___lwdiv@quotient,f
  6858  1DEA  0DFC               	rlf	___lwdiv@quotient+1,f
  6859  1DEB  0B89               	decfsz	9,f
  6860  1DEC  2DE9               	goto	u3205
  6861  1DED  0877               	movf	___lwdiv@divisor+1,w
  6862  1DEE  0279               	subwf	___lwdiv@dividend+1,w
  6863  1DEF  1D03               	skipz
  6864  1DF0  2DF3               	goto	u3215
  6865  1DF1  0876               	movf	___lwdiv@divisor,w
  6866  1DF2  0278               	subwf	___lwdiv@dividend,w
  6867  1DF3                     u3215:
  6868  1DF3  1C03               	skipc
  6869  1DF4  2DF6               	goto	u3211
  6870  1DF5  2DF7               	goto	u3210
  6871  1DF6                     u3211:
  6872  1DF6  2DFC               	goto	l2904
  6873  1DF7                     u3210:
  6874  1DF7                     l2900:
  6875  1DF7  0876               	movf	___lwdiv@divisor,w
  6876  1DF8  02F8               	subwf	___lwdiv@dividend,f
  6877  1DF9  0877               	movf	___lwdiv@divisor+1,w
  6878  1DFA  3BF9               	subwfb	___lwdiv@dividend+1,f
  6879  1DFB                     l2902:
  6880  1DFB  147B               	bsf	___lwdiv@quotient,0
  6881  1DFC                     l2904:
  6882  1DFC  3001               	movlw	1
  6883  1DFD                     u3225:
  6884  1DFD  36F7               	lsrf	___lwdiv@divisor+1,f
  6885  1DFE  0CF6               	rrf	___lwdiv@divisor,f
  6886  1DFF  0B89               	decfsz	9,f
  6887  1E00  2DFD               	goto	u3225
  6888  1E01                     l2906:
  6889  1E01  3001               	movlw	1
  6890  1E02  02FD               	subwf	___lwdiv@counter,f
  6891  1E03  1D03               	btfss	3,2
  6892  1E04  2E06               	goto	u3231
  6893  1E05  2E07               	goto	u3230
  6894  1E06                     u3231:
  6895  1E06  2DE8               	goto	l2898
  6896  1E07                     u3230:
  6897  1E07                     l2908:
  6898  1E07  087C               	movf	___lwdiv@quotient+1,w
  6899  1E08  00F7               	movwf	?___lwdiv+1
  6900  1E09  087B               	movf	___lwdiv@quotient,w
  6901  1E0A  00F6               	movwf	?___lwdiv
  6902  1E0B                     l827:
  6903  1E0B  0008               	return
  6904  1E0C                     __end_of___lwdiv:
  6905                           
  6906                           	psect	text9
  6907  0B2D                     __ptext9:	
  6908 ;; *************** function ___flmul *****************
  6909 ;; Defined at:
  6910 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  b               4    4[BANK0 ] unsigned int 
  6913 ;;  a               4    8[BANK0 ] unsigned int 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;  prod            4   24[BANK0 ] struct .
  6916 ;;  grs             4   18[BANK0 ] unsigned long 
  6917 ;;  temp            2   28[BANK0 ] struct .
  6918 ;;  bexp            1   23[BANK0 ] unsigned char 
  6919 ;;  aexp            1   22[BANK0 ] unsigned char 
  6920 ;;  sign            1   17[BANK0 ] unsigned char 
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  4    4[BANK0 ] unsigned char 
  6923 ;; Registers used:
  6924 ;;		wreg, status,2, status,0, pclath, cstack
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6930 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6931 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6932 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6933 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6934 ;;Total ram usage:       26 bytes
  6935 ;; Hardware stack levels used: 1
  6936 ;; Hardware stack levels required when called: 1
  6937 ;; This function calls:
  6938 ;;		__Umul8_16
  6939 ;; This function is called by:
  6940 ;;		_fround
  6941 ;;		_scale
  6942 ;;		_sprintf
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           
  6947                           ;psect for function ___flmul
  6948  0B2D                     ___flmul:
  6949  0B2D                     l3128:	
  6950                           ;incstack = 0
  6951                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  6952                           
  6953  0B2D  0020               	movlb	0	; select bank0
  6954  0B2E  0827               	movf	___flmul@b+3,w
  6955  0B2F  3980               	andlw	128
  6956  0B30  00AC               	movwf	??___flmul
  6957  0B31  082C               	movf	??___flmul,w
  6958  0B32  00B1               	movwf	___flmul@sign
  6959  0B33                     l3130:
  6960  0B33  3527               	lslf	___flmul@b+3,w
  6961  0B34  00AC               	movwf	??___flmul
  6962  0B35  082C               	movf	??___flmul,w
  6963  0B36  00B7               	movwf	___flmul@bexp
  6964  0B37                     l3132:
  6965  0B37  1FA6               	btfss	___flmul@b+2,7
  6966  0B38  2B3A               	goto	u3731
  6967  0B39  2B3B               	goto	u3730
  6968  0B3A                     u3731:
  6969  0B3A  2B3C               	goto	l3136
  6970  0B3B                     u3730:
  6971  0B3B                     l3134:
  6972  0B3B  1437               	bsf	___flmul@bexp,0
  6973  0B3C                     l3136:
  6974  0B3C  0837               	movf	___flmul@bexp,w
  6975  0B3D  1903               	btfsc	3,2
  6976  0B3E  2B40               	goto	u3741
  6977  0B3F  2B41               	goto	u3740
  6978  0B40                     u3741:
  6979  0B40  2B50               	goto	l3144
  6980  0B41                     u3740:
  6981  0B41                     l3138:
  6982  0B41  0A37               	incf	___flmul@bexp,w
  6983  0B42  1D03               	btfss	3,2
  6984  0B43  2B45               	goto	u3751
  6985  0B44  2B46               	goto	u3750
  6986  0B45                     u3751:
  6987  0B45  2B4E               	goto	l3142
  6988  0B46                     u3750:
  6989  0B46                     l3140:
  6990  0B46  3000               	movlw	0
  6991  0B47  00A7               	movwf	___flmul@b+3
  6992  0B48  3000               	movlw	0
  6993  0B49  00A6               	movwf	___flmul@b+2
  6994  0B4A  3000               	movlw	0
  6995  0B4B  00A5               	movwf	___flmul@b+1
  6996  0B4C  3000               	movlw	0
  6997  0B4D  00A4               	movwf	___flmul@b
  6998  0B4E                     l3142:
  6999  0B4E  17A6               	bsf	___flmul@b+2,7
  7000  0B4F  2B58               	goto	l3146
  7001  0B50                     l3144:
  7002  0B50  3000               	movlw	0
  7003  0B51  00A7               	movwf	___flmul@b+3
  7004  0B52  3000               	movlw	0
  7005  0B53  00A6               	movwf	___flmul@b+2
  7006  0B54  3000               	movlw	0
  7007  0B55  00A5               	movwf	___flmul@b+1
  7008  0B56  3000               	movlw	0
  7009  0B57  00A4               	movwf	___flmul@b
  7010  0B58                     l3146:
  7011  0B58  082B               	movf	___flmul@a+3,w
  7012  0B59  3980               	andlw	128
  7013  0B5A  00AC               	movwf	??___flmul
  7014  0B5B  082C               	movf	??___flmul,w
  7015  0B5C  06B1               	xorwf	___flmul@sign,f
  7016  0B5D                     l3148:
  7017  0B5D  352B               	lslf	___flmul@a+3,w
  7018  0B5E  00AC               	movwf	??___flmul
  7019  0B5F  082C               	movf	??___flmul,w
  7020  0B60  00B6               	movwf	___flmul@aexp
  7021  0B61                     l3150:
  7022  0B61  1FAA               	btfss	___flmul@a+2,7
  7023  0B62  2B64               	goto	u3761
  7024  0B63  2B65               	goto	u3760
  7025  0B64                     u3761:
  7026  0B64  2B66               	goto	l3154
  7027  0B65                     u3760:
  7028  0B65                     l3152:
  7029  0B65  1436               	bsf	___flmul@aexp,0
  7030  0B66                     l3154:
  7031  0B66  0836               	movf	___flmul@aexp,w
  7032  0B67  1903               	btfsc	3,2
  7033  0B68  2B6A               	goto	u3771
  7034  0B69  2B6B               	goto	u3770
  7035  0B6A                     u3771:
  7036  0B6A  2B7A               	goto	l3162
  7037  0B6B                     u3770:
  7038  0B6B                     l3156:
  7039  0B6B  0A36               	incf	___flmul@aexp,w
  7040  0B6C  1D03               	btfss	3,2
  7041  0B6D  2B6F               	goto	u3781
  7042  0B6E  2B70               	goto	u3780
  7043  0B6F                     u3781:
  7044  0B6F  2B78               	goto	l3160
  7045  0B70                     u3780:
  7046  0B70                     l3158:
  7047  0B70  3000               	movlw	0
  7048  0B71  00AB               	movwf	___flmul@a+3
  7049  0B72  3000               	movlw	0
  7050  0B73  00AA               	movwf	___flmul@a+2
  7051  0B74  3000               	movlw	0
  7052  0B75  00A9               	movwf	___flmul@a+1
  7053  0B76  3000               	movlw	0
  7054  0B77  00A8               	movwf	___flmul@a
  7055  0B78                     l3160:
  7056  0B78  17AA               	bsf	___flmul@a+2,7
  7057  0B79  2B82               	goto	l3164
  7058  0B7A                     l3162:
  7059  0B7A  3000               	movlw	0
  7060  0B7B  00AB               	movwf	___flmul@a+3
  7061  0B7C  3000               	movlw	0
  7062  0B7D  00AA               	movwf	___flmul@a+2
  7063  0B7E  3000               	movlw	0
  7064  0B7F  00A9               	movwf	___flmul@a+1
  7065  0B80  3000               	movlw	0
  7066  0B81  00A8               	movwf	___flmul@a
  7067  0B82                     l3164:
  7068  0B82  0836               	movf	___flmul@aexp,w
  7069  0B83  1903               	btfsc	3,2
  7070  0B84  2B86               	goto	u3791
  7071  0B85  2B87               	goto	u3790
  7072  0B86                     u3791:
  7073  0B86  2B8C               	goto	l3168
  7074  0B87                     u3790:
  7075  0B87                     l3166:
  7076  0B87  0837               	movf	___flmul@bexp,w
  7077  0B88  1D03               	btfss	3,2
  7078  0B89  2B8B               	goto	u3801
  7079  0B8A  2B8C               	goto	u3800
  7080  0B8B                     u3801:
  7081  0B8B  2B95               	goto	l3172
  7082  0B8C                     u3800:
  7083  0B8C                     l3168:
  7084  0B8C  3000               	movlw	0
  7085  0B8D  00A7               	movwf	?___flmul+3
  7086  0B8E  3000               	movlw	0
  7087  0B8F  00A6               	movwf	?___flmul+2
  7088  0B90  3000               	movlw	0
  7089  0B91  00A5               	movwf	?___flmul+1
  7090  0B92  3000               	movlw	0
  7091  0B93  00A4               	movwf	?___flmul
  7092  0B94  2D83               	goto	l944
  7093  0B95                     l3172:
  7094  0B95  0824               	movf	___flmul@b,w
  7095  0B96  00AC               	movwf	??___flmul
  7096  0B97  082C               	movf	??___flmul,w
  7097  0B98  00F0               	movwf	__Umul8_16@multiplicand
  7098  0B99  082A               	movf	___flmul@a+2,w
  7099  0B9A  319D  2519  318B   	fcall	__Umul8_16
  7100  0B9D  0871               	movf	?__Umul8_16+1,w
  7101  0B9E  0020               	movlb	0	; select bank0
  7102  0B9F  00BD               	movwf	___flmul@temp+1
  7103  0BA0  0870               	movf	?__Umul8_16,w
  7104  0BA1  00BC               	movwf	___flmul@temp
  7105  0BA2                     l3174:
  7106  0BA2  083C               	movf	___flmul@temp,w
  7107  0BA3  00AC               	movwf	??___flmul
  7108  0BA4  01AD               	clrf	??___flmul+1
  7109  0BA5  01AE               	clrf	??___flmul+2
  7110  0BA6  01AF               	clrf	??___flmul+3
  7111  0BA7  082F               	movf	??___flmul+3,w
  7112  0BA8  00B5               	movwf	___flmul@grs+3
  7113  0BA9  082E               	movf	??___flmul+2,w
  7114  0BAA  00B4               	movwf	___flmul@grs+2
  7115  0BAB  082D               	movf	??___flmul+1,w
  7116  0BAC  00B3               	movwf	___flmul@grs+1
  7117  0BAD  082C               	movf	??___flmul,w
  7118  0BAE  00B2               	movwf	___flmul@grs
  7119  0BAF                     l3176:
  7120  0BAF  083D               	movf	___flmul@temp+1,w
  7121  0BB0  00AC               	movwf	??___flmul
  7122  0BB1  01AD               	clrf	??___flmul+1
  7123  0BB2  01AE               	clrf	??___flmul+2
  7124  0BB3  01AF               	clrf	??___flmul+3
  7125  0BB4  082F               	movf	??___flmul+3,w
  7126  0BB5  00BB               	movwf	___flmul@prod+3
  7127  0BB6  082E               	movf	??___flmul+2,w
  7128  0BB7  00BA               	movwf	___flmul@prod+2
  7129  0BB8  082D               	movf	??___flmul+1,w
  7130  0BB9  00B9               	movwf	___flmul@prod+1
  7131  0BBA  082C               	movf	??___flmul,w
  7132  0BBB  00B8               	movwf	___flmul@prod
  7133  0BBC  0825               	movf	___flmul@b+1,w
  7134  0BBD  00AC               	movwf	??___flmul
  7135  0BBE  082C               	movf	??___flmul,w
  7136  0BBF  00F0               	movwf	__Umul8_16@multiplicand
  7137  0BC0  0829               	movf	___flmul@a+1,w
  7138  0BC1  319D  2519  318B   	fcall	__Umul8_16
  7139  0BC4  0871               	movf	?__Umul8_16+1,w
  7140  0BC5  0020               	movlb	0	; select bank0
  7141  0BC6  00BD               	movwf	___flmul@temp+1
  7142  0BC7  0870               	movf	?__Umul8_16,w
  7143  0BC8  00BC               	movwf	___flmul@temp
  7144  0BC9                     l3178:
  7145  0BC9  083C               	movf	___flmul@temp,w
  7146  0BCA  00AC               	movwf	??___flmul
  7147  0BCB  01AD               	clrf	??___flmul+1
  7148  0BCC  01AE               	clrf	??___flmul+2
  7149  0BCD  01AF               	clrf	??___flmul+3
  7150  0BCE  082C               	movf	??___flmul,w
  7151  0BCF  07B2               	addwf	___flmul@grs,f
  7152  0BD0  082D               	movf	??___flmul+1,w
  7153  0BD1  3DB3               	addwfc	___flmul@grs+1,f
  7154  0BD2  082E               	movf	??___flmul+2,w
  7155  0BD3  3DB4               	addwfc	___flmul@grs+2,f
  7156  0BD4  082F               	movf	??___flmul+3,w
  7157  0BD5  3DB5               	addwfc	___flmul@grs+3,f
  7158  0BD6                     l3180:
  7159  0BD6  083D               	movf	___flmul@temp+1,w
  7160  0BD7  00AC               	movwf	??___flmul
  7161  0BD8  01AD               	clrf	??___flmul+1
  7162  0BD9  01AE               	clrf	??___flmul+2
  7163  0BDA  01AF               	clrf	??___flmul+3
  7164  0BDB  082C               	movf	??___flmul,w
  7165  0BDC  07B8               	addwf	___flmul@prod,f
  7166  0BDD  082D               	movf	??___flmul+1,w
  7167  0BDE  3DB9               	addwfc	___flmul@prod+1,f
  7168  0BDF  082E               	movf	??___flmul+2,w
  7169  0BE0  3DBA               	addwfc	___flmul@prod+2,f
  7170  0BE1  082F               	movf	??___flmul+3,w
  7171  0BE2  3DBB               	addwfc	___flmul@prod+3,f
  7172  0BE3  0826               	movf	___flmul@b+2,w
  7173  0BE4  00AC               	movwf	??___flmul
  7174  0BE5  082C               	movf	??___flmul,w
  7175  0BE6  00F0               	movwf	__Umul8_16@multiplicand
  7176  0BE7  0828               	movf	___flmul@a,w
  7177  0BE8  319D  2519  318B   	fcall	__Umul8_16
  7178  0BEB  0871               	movf	?__Umul8_16+1,w
  7179  0BEC  0020               	movlb	0	; select bank0
  7180  0BED  00BD               	movwf	___flmul@temp+1
  7181  0BEE  0870               	movf	?__Umul8_16,w
  7182  0BEF  00BC               	movwf	___flmul@temp
  7183  0BF0                     l3182:
  7184  0BF0  083C               	movf	___flmul@temp,w
  7185  0BF1  00AC               	movwf	??___flmul
  7186  0BF2  01AD               	clrf	??___flmul+1
  7187  0BF3  01AE               	clrf	??___flmul+2
  7188  0BF4  01AF               	clrf	??___flmul+3
  7189  0BF5  082C               	movf	??___flmul,w
  7190  0BF6  07B2               	addwf	___flmul@grs,f
  7191  0BF7  082D               	movf	??___flmul+1,w
  7192  0BF8  3DB3               	addwfc	___flmul@grs+1,f
  7193  0BF9  082E               	movf	??___flmul+2,w
  7194  0BFA  3DB4               	addwfc	___flmul@grs+2,f
  7195  0BFB  082F               	movf	??___flmul+3,w
  7196  0BFC  3DB5               	addwfc	___flmul@grs+3,f
  7197  0BFD                     l3184:
  7198  0BFD  083D               	movf	___flmul@temp+1,w
  7199  0BFE  00AC               	movwf	??___flmul
  7200  0BFF  01AD               	clrf	??___flmul+1
  7201  0C00  01AE               	clrf	??___flmul+2
  7202  0C01  01AF               	clrf	??___flmul+3
  7203  0C02  082C               	movf	??___flmul,w
  7204  0C03  07B8               	addwf	___flmul@prod,f
  7205  0C04  082D               	movf	??___flmul+1,w
  7206  0C05  3DB9               	addwfc	___flmul@prod+1,f
  7207  0C06  082E               	movf	??___flmul+2,w
  7208  0C07  3DBA               	addwfc	___flmul@prod+2,f
  7209  0C08  082F               	movf	??___flmul+3,w
  7210  0C09  3DBB               	addwfc	___flmul@prod+3,f
  7211  0C0A                     l3186:
  7212  0C0A  3008               	movlw	8
  7213  0C0B                     u3815:
  7214  0C0B  35B2               	lslf	___flmul@grs,f
  7215  0C0C  0DB3               	rlf	___flmul@grs+1,f
  7216  0C0D  0DB4               	rlf	___flmul@grs+2,f
  7217  0C0E  0DB5               	rlf	___flmul@grs+3,f
  7218  0C0F  0B89               	decfsz	9,f
  7219  0C10  2C0B               	goto	u3815
  7220  0C11                     l3188:
  7221  0C11  0825               	movf	___flmul@b+1,w
  7222  0C12  00AC               	movwf	??___flmul
  7223  0C13  082C               	movf	??___flmul,w
  7224  0C14  00F0               	movwf	__Umul8_16@multiplicand
  7225  0C15  0828               	movf	___flmul@a,w
  7226  0C16  319D  2519  318B   	fcall	__Umul8_16
  7227  0C19  0871               	movf	?__Umul8_16+1,w
  7228  0C1A  0020               	movlb	0	; select bank0
  7229  0C1B  00BD               	movwf	___flmul@temp+1
  7230  0C1C  0870               	movf	?__Umul8_16,w
  7231  0C1D  00BC               	movwf	___flmul@temp
  7232  0C1E                     l3190:
  7233  0C1E  083C               	movf	___flmul@temp,w
  7234  0C1F  07B2               	addwf	___flmul@grs,f
  7235  0C20  083D               	movf	___flmul@temp+1,w
  7236  0C21  3DB3               	addwfc	___flmul@grs+1,f
  7237  0C22  3000               	movlw	0
  7238  0C23  3DB4               	addwfc	___flmul@grs+2,f
  7239  0C24  3DB5               	addwfc	___flmul@grs+3,f
  7240  0C25                     l3192:
  7241  0C25  0824               	movf	___flmul@b,w
  7242  0C26  00AC               	movwf	??___flmul
  7243  0C27  082C               	movf	??___flmul,w
  7244  0C28  00F0               	movwf	__Umul8_16@multiplicand
  7245  0C29  0829               	movf	___flmul@a+1,w
  7246  0C2A  319D  2519  318B   	fcall	__Umul8_16
  7247  0C2D  0871               	movf	?__Umul8_16+1,w
  7248  0C2E  0020               	movlb	0	; select bank0
  7249  0C2F  00BD               	movwf	___flmul@temp+1
  7250  0C30  0870               	movf	?__Umul8_16,w
  7251  0C31  00BC               	movwf	___flmul@temp
  7252  0C32                     l3194:
  7253  0C32  083C               	movf	___flmul@temp,w
  7254  0C33  07B2               	addwf	___flmul@grs,f
  7255  0C34  083D               	movf	___flmul@temp+1,w
  7256  0C35  3DB3               	addwfc	___flmul@grs+1,f
  7257  0C36  3000               	movlw	0
  7258  0C37  3DB4               	addwfc	___flmul@grs+2,f
  7259  0C38  3DB5               	addwfc	___flmul@grs+3,f
  7260  0C39                     l3196:
  7261  0C39  3008               	movlw	8
  7262  0C3A                     u3825:
  7263  0C3A  35B2               	lslf	___flmul@grs,f
  7264  0C3B  0DB3               	rlf	___flmul@grs+1,f
  7265  0C3C  0DB4               	rlf	___flmul@grs+2,f
  7266  0C3D  0DB5               	rlf	___flmul@grs+3,f
  7267  0C3E  0B89               	decfsz	9,f
  7268  0C3F  2C3A               	goto	u3825
  7269  0C40  0824               	movf	___flmul@b,w
  7270  0C41  00AC               	movwf	??___flmul
  7271  0C42  082C               	movf	??___flmul,w
  7272  0C43  00F0               	movwf	__Umul8_16@multiplicand
  7273  0C44  0828               	movf	___flmul@a,w
  7274  0C45  319D  2519  318B   	fcall	__Umul8_16
  7275  0C48  0871               	movf	?__Umul8_16+1,w
  7276  0C49  0020               	movlb	0	; select bank0
  7277  0C4A  00BD               	movwf	___flmul@temp+1
  7278  0C4B  0870               	movf	?__Umul8_16,w
  7279  0C4C  00BC               	movwf	___flmul@temp
  7280  0C4D                     l3198:
  7281  0C4D  083C               	movf	___flmul@temp,w
  7282  0C4E  07B2               	addwf	___flmul@grs,f
  7283  0C4F  083D               	movf	___flmul@temp+1,w
  7284  0C50  3DB3               	addwfc	___flmul@grs+1,f
  7285  0C51  3000               	movlw	0
  7286  0C52  3DB4               	addwfc	___flmul@grs+2,f
  7287  0C53  3DB5               	addwfc	___flmul@grs+3,f
  7288  0C54                     l3200:
  7289  0C54  0825               	movf	___flmul@b+1,w
  7290  0C55  00AC               	movwf	??___flmul
  7291  0C56  082C               	movf	??___flmul,w
  7292  0C57  00F0               	movwf	__Umul8_16@multiplicand
  7293  0C58  082A               	movf	___flmul@a+2,w
  7294  0C59  319D  2519  318B   	fcall	__Umul8_16
  7295  0C5C  0871               	movf	?__Umul8_16+1,w
  7296  0C5D  0020               	movlb	0	; select bank0
  7297  0C5E  00BD               	movwf	___flmul@temp+1
  7298  0C5F  0870               	movf	?__Umul8_16,w
  7299  0C60  00BC               	movwf	___flmul@temp
  7300  0C61  083C               	movf	___flmul@temp,w
  7301  0C62  07B8               	addwf	___flmul@prod,f
  7302  0C63  083D               	movf	___flmul@temp+1,w
  7303  0C64  3DB9               	addwfc	___flmul@prod+1,f
  7304  0C65  3000               	movlw	0
  7305  0C66  3DBA               	addwfc	___flmul@prod+2,f
  7306  0C67  3DBB               	addwfc	___flmul@prod+3,f
  7307  0C68                     l3202:
  7308  0C68  0826               	movf	___flmul@b+2,w
  7309  0C69  00AC               	movwf	??___flmul
  7310  0C6A  082C               	movf	??___flmul,w
  7311  0C6B  00F0               	movwf	__Umul8_16@multiplicand
  7312  0C6C  0829               	movf	___flmul@a+1,w
  7313  0C6D  319D  2519  318B   	fcall	__Umul8_16
  7314  0C70  0871               	movf	?__Umul8_16+1,w
  7315  0C71  0020               	movlb	0	; select bank0
  7316  0C72  00BD               	movwf	___flmul@temp+1
  7317  0C73  0870               	movf	?__Umul8_16,w
  7318  0C74  00BC               	movwf	___flmul@temp
  7319  0C75                     l3204:
  7320  0C75  083C               	movf	___flmul@temp,w
  7321  0C76  07B8               	addwf	___flmul@prod,f
  7322  0C77  083D               	movf	___flmul@temp+1,w
  7323  0C78  3DB9               	addwfc	___flmul@prod+1,f
  7324  0C79  3000               	movlw	0
  7325  0C7A  3DBA               	addwfc	___flmul@prod+2,f
  7326  0C7B  3DBB               	addwfc	___flmul@prod+3,f
  7327  0C7C  0826               	movf	___flmul@b+2,w
  7328  0C7D  00AC               	movwf	??___flmul
  7329  0C7E  082C               	movf	??___flmul,w
  7330  0C7F  00F0               	movwf	__Umul8_16@multiplicand
  7331  0C80  082A               	movf	___flmul@a+2,w
  7332  0C81  319D  2519  318B   	fcall	__Umul8_16
  7333  0C84  0871               	movf	?__Umul8_16+1,w
  7334  0C85  0020               	movlb	0	; select bank0
  7335  0C86  00BD               	movwf	___flmul@temp+1
  7336  0C87  0870               	movf	?__Umul8_16,w
  7337  0C88  00BC               	movwf	___flmul@temp
  7338  0C89                     l3206:
  7339  0C89  083C               	movf	___flmul@temp,w
  7340  0C8A  00AC               	movwf	??___flmul
  7341  0C8B  083D               	movf	___flmul@temp+1,w
  7342  0C8C  00AD               	movwf	??___flmul+1
  7343  0C8D  01AE               	clrf	??___flmul+2
  7344  0C8E  01AF               	clrf	??___flmul+3
  7345  0C8F  3008               	movlw	8
  7346  0C90                     u3835:
  7347  0C90  35AC               	lslf	??___flmul,f
  7348  0C91  0DAD               	rlf	??___flmul+1,f
  7349  0C92  0DAE               	rlf	??___flmul+2,f
  7350  0C93  0DAF               	rlf	??___flmul+3,f
  7351  0C94                     u3830:
  7352  0C94  0B89               	decfsz	9,f
  7353  0C95  2C90               	goto	u3835
  7354  0C96  082C               	movf	??___flmul,w
  7355  0C97  07B8               	addwf	___flmul@prod,f
  7356  0C98  082D               	movf	??___flmul+1,w
  7357  0C99  3DB9               	addwfc	___flmul@prod+1,f
  7358  0C9A  082E               	movf	??___flmul+2,w
  7359  0C9B  3DBA               	addwfc	___flmul@prod+2,f
  7360  0C9C  082F               	movf	??___flmul+3,w
  7361  0C9D  3DBB               	addwfc	___flmul@prod+3,f
  7362  0C9E                     l3208:
  7363  0C9E  0832               	movf	___flmul@grs,w
  7364  0C9F  00AC               	movwf	??___flmul
  7365  0CA0  0833               	movf	___flmul@grs+1,w
  7366  0CA1  00AD               	movwf	??___flmul+1
  7367  0CA2  0834               	movf	___flmul@grs+2,w
  7368  0CA3  00AE               	movwf	??___flmul+2
  7369  0CA4  0835               	movf	___flmul@grs+3,w
  7370  0CA5  00AF               	movwf	??___flmul+3
  7371  0CA6  3018               	movlw	24
  7372  0CA7                     u3845:
  7373  0CA7  36AF               	lsrf	??___flmul+3,f
  7374  0CA8  0CAE               	rrf	??___flmul+2,f
  7375  0CA9  0CAD               	rrf	??___flmul+1,f
  7376  0CAA  0CAC               	rrf	??___flmul,f
  7377  0CAB                     u3840:
  7378  0CAB  0B89               	decfsz	9,f
  7379  0CAC  2CA7               	goto	u3845
  7380  0CAD  082C               	movf	??___flmul,w
  7381  0CAE  07B8               	addwf	___flmul@prod,f
  7382  0CAF  082D               	movf	??___flmul+1,w
  7383  0CB0  3DB9               	addwfc	___flmul@prod+1,f
  7384  0CB1  082E               	movf	??___flmul+2,w
  7385  0CB2  3DBA               	addwfc	___flmul@prod+2,f
  7386  0CB3  082F               	movf	??___flmul+3,w
  7387  0CB4  3DBB               	addwfc	___flmul@prod+3,f
  7388  0CB5                     l3210:
  7389  0CB5  3008               	movlw	8
  7390  0CB6                     u3855:
  7391  0CB6  35B2               	lslf	___flmul@grs,f
  7392  0CB7  0DB3               	rlf	___flmul@grs+1,f
  7393  0CB8  0DB4               	rlf	___flmul@grs+2,f
  7394  0CB9  0DB5               	rlf	___flmul@grs+3,f
  7395  0CBA  0B89               	decfsz	9,f
  7396  0CBB  2CB6               	goto	u3855
  7397  0CBC                     l3212:
  7398  0CBC  0837               	movf	___flmul@bexp,w
  7399  0CBD  0736               	addwf	___flmul@aexp,w
  7400  0CBE  00AC               	movwf	??___flmul
  7401  0CBF  01AD               	clrf	??___flmul+1
  7402  0CC0  0DAD               	rlf	??___flmul+1,f
  7403  0CC1  082C               	movf	??___flmul,w
  7404  0CC2  3E82               	addlw	130
  7405  0CC3  00BC               	movwf	___flmul@temp
  7406  0CC4  30FF               	movlw	255
  7407  0CC5  3D2D               	addwfc	??___flmul+1,w
  7408  0CC6  00BD               	movwf	___flmul@temp+1
  7409  0CC7  2CDF               	goto	l3224
  7410  0CC8                     l3214:
  7411  0CC8  3001               	movlw	1
  7412  0CC9                     u3865:
  7413  0CC9  35B8               	lslf	___flmul@prod,f
  7414  0CCA  0DB9               	rlf	___flmul@prod+1,f
  7415  0CCB  0DBA               	rlf	___flmul@prod+2,f
  7416  0CCC  0DBB               	rlf	___flmul@prod+3,f
  7417  0CCD  0B89               	decfsz	9,f
  7418  0CCE  2CC9               	goto	u3865
  7419  0CCF                     l3216:
  7420  0CCF  1FB5               	btfss	___flmul@grs+3,7
  7421  0CD0  2CD2               	goto	u3871
  7422  0CD1  2CD3               	goto	u3870
  7423  0CD2                     u3871:
  7424  0CD2  2CD4               	goto	l3220
  7425  0CD3                     u3870:
  7426  0CD3                     l3218:
  7427  0CD3  1438               	bsf	___flmul@prod,0
  7428  0CD4                     l3220:
  7429  0CD4  3001               	movlw	1
  7430  0CD5                     u3885:
  7431  0CD5  35B2               	lslf	___flmul@grs,f
  7432  0CD6  0DB3               	rlf	___flmul@grs+1,f
  7433  0CD7  0DB4               	rlf	___flmul@grs+2,f
  7434  0CD8  0DB5               	rlf	___flmul@grs+3,f
  7435  0CD9  0B89               	decfsz	9,f
  7436  0CDA  2CD5               	goto	u3885
  7437  0CDB                     l3222:
  7438  0CDB  30FF               	movlw	255
  7439  0CDC  07BC               	addwf	___flmul@temp,f
  7440  0CDD  30FF               	movlw	255
  7441  0CDE  3DBD               	addwfc	___flmul@temp+1,f
  7442  0CDF                     l3224:
  7443  0CDF  1FBA               	btfss	___flmul@prod+2,7
  7444  0CE0  2CE2               	goto	u3891
  7445  0CE1  2CE3               	goto	u3890
  7446  0CE2                     u3891:
  7447  0CE2  2CC8               	goto	l3214
  7448  0CE3                     u3890:
  7449  0CE3                     l3226:
  7450  0CE3  01B6               	clrf	___flmul@aexp
  7451  0CE4                     l3228:
  7452  0CE4  1FB5               	btfss	___flmul@grs+3,7
  7453  0CE5  2CE7               	goto	u3901
  7454  0CE6  2CE8               	goto	u3900
  7455  0CE7                     u3901:
  7456  0CE7  2D04               	goto	l3236
  7457  0CE8                     u3900:
  7458  0CE8                     l3230:
  7459  0CE8  30FF               	movlw	255
  7460  0CE9  0532               	andwf	___flmul@grs,w
  7461  0CEA  00AC               	movwf	??___flmul
  7462  0CEB  30FF               	movlw	255
  7463  0CEC  0533               	andwf	___flmul@grs+1,w
  7464  0CED  00AD               	movwf	??___flmul+1
  7465  0CEE  30FF               	movlw	255
  7466  0CEF  0534               	andwf	___flmul@grs+2,w
  7467  0CF0  00AE               	movwf	??___flmul+2
  7468  0CF1  307F               	movlw	127
  7469  0CF2  0535               	andwf	___flmul@grs+3,w
  7470  0CF3  00AF               	movwf	??___flmul+3
  7471  0CF4  082F               	movf	??___flmul+3,w
  7472  0CF5  042E               	iorwf	??___flmul+2,w
  7473  0CF6  042D               	iorwf	??___flmul+1,w
  7474  0CF7  042C               	iorwf	??___flmul,w
  7475  0CF8  1903               	skipnz
  7476  0CF9  2CFB               	goto	u3911
  7477  0CFA  2CFC               	goto	u3910
  7478  0CFB                     u3911:
  7479  0CFB  2CFF               	goto	l950
  7480  0CFC                     u3910:
  7481  0CFC                     l3232:
  7482  0CFC  01B6               	clrf	___flmul@aexp
  7483  0CFD  0AB6               	incf	___flmul@aexp,f
  7484  0CFE  2D04               	goto	l3236
  7485  0CFF                     l950:
  7486  0CFF  1C38               	btfss	___flmul@prod,0
  7487  0D00  2D02               	goto	u3921
  7488  0D01  2D03               	goto	u3920
  7489  0D02                     u3921:
  7490  0D02  2D04               	goto	l3236
  7491  0D03                     u3920:
  7492  0D03  2CFC               	goto	l3232
  7493  0D04                     l3236:
  7494  0D04  0836               	movf	___flmul@aexp,w
  7495  0D05  1903               	btfsc	3,2
  7496  0D06  2D08               	goto	u3931
  7497  0D07  2D09               	goto	u3930
  7498  0D08                     u3931:
  7499  0D08  2D31               	goto	l3246
  7500  0D09                     u3930:
  7501  0D09                     l3238:
  7502  0D09  3001               	movlw	1
  7503  0D0A  07B8               	addwf	___flmul@prod,f
  7504  0D0B  3000               	movlw	0
  7505  0D0C  3DB9               	addwfc	___flmul@prod+1,f
  7506  0D0D  3000               	movlw	0
  7507  0D0E  3DBA               	addwfc	___flmul@prod+2,f
  7508  0D0F  3000               	movlw	0
  7509  0D10  3DBB               	addwfc	___flmul@prod+3,f
  7510  0D11                     l3240:
  7511  0D11  1C3B               	btfss	___flmul@prod+3,0
  7512  0D12  2D14               	goto	u3941
  7513  0D13  2D15               	goto	u3940
  7514  0D14                     u3941:
  7515  0D14  2D31               	goto	l3246
  7516  0D15                     u3940:
  7517  0D15                     l3242:
  7518  0D15  0838               	movf	___flmul@prod,w
  7519  0D16  00AC               	movwf	??___flmul
  7520  0D17  0839               	movf	___flmul@prod+1,w
  7521  0D18  00AD               	movwf	??___flmul+1
  7522  0D19  083A               	movf	___flmul@prod+2,w
  7523  0D1A  00AE               	movwf	??___flmul+2
  7524  0D1B  083B               	movf	___flmul@prod+3,w
  7525  0D1C  00AF               	movwf	??___flmul+3
  7526  0D1D  3001               	movlw	1
  7527  0D1E  00B0               	movwf	??___flmul+4
  7528  0D1F                     u3955:
  7529  0D1F  37AF               	asrf	??___flmul+3,f
  7530  0D20  0CAE               	rrf	??___flmul+2,f
  7531  0D21  0CAD               	rrf	??___flmul+1,f
  7532  0D22  0CAC               	rrf	??___flmul,f
  7533  0D23                     u3950:
  7534  0D23  0BB0               	decfsz	??___flmul+4,f
  7535  0D24  2D1F               	goto	u3955
  7536  0D25  082F               	movf	??___flmul+3,w
  7537  0D26  00BB               	movwf	___flmul@prod+3
  7538  0D27  082E               	movf	??___flmul+2,w
  7539  0D28  00BA               	movwf	___flmul@prod+2
  7540  0D29  082D               	movf	??___flmul+1,w
  7541  0D2A  00B9               	movwf	___flmul@prod+1
  7542  0D2B  082C               	movf	??___flmul,w
  7543  0D2C  00B8               	movwf	___flmul@prod
  7544  0D2D                     l3244:
  7545  0D2D  3001               	movlw	1
  7546  0D2E  07BC               	addwf	___flmul@temp,f
  7547  0D2F  3000               	movlw	0
  7548  0D30  3DBD               	addwfc	___flmul@temp+1,f
  7549  0D31                     l3246:
  7550  0D31  083D               	movf	___flmul@temp+1,w
  7551  0D32  3A80               	xorlw	128
  7552  0D33  00AC               	movwf	??___flmul
  7553  0D34  3080               	movlw	128
  7554  0D35  022C               	subwf	??___flmul,w
  7555  0D36  1D03               	skipz
  7556  0D37  2D3A               	goto	u3965
  7557  0D38  30FF               	movlw	255
  7558  0D39  023C               	subwf	___flmul@temp,w
  7559  0D3A                     u3965:
  7560  0D3A  1C03               	skipc
  7561  0D3B  2D3D               	goto	u3961
  7562  0D3C  2D3E               	goto	u3960
  7563  0D3D                     u3961:
  7564  0D3D  2D48               	goto	l3250
  7565  0D3E                     u3960:
  7566  0D3E                     l3248:
  7567  0D3E  307F               	movlw	127
  7568  0D3F  0020               	movlb	0	; select bank0
  7569  0D40  00BB               	movwf	___flmul@prod+3
  7570  0D41  3080               	movlw	128
  7571  0D42  00BA               	movwf	___flmul@prod+2
  7572  0D43  3000               	movlw	0
  7573  0D44  00B9               	movwf	___flmul@prod+1
  7574  0D45  3000               	movlw	0
  7575  0D46  00B8               	movwf	___flmul@prod
  7576  0D47  2D77               	goto	l956
  7577  0D48                     l3250:
  7578  0D48  0020               	movlb	0	; select bank0
  7579  0D49  083D               	movf	___flmul@temp+1,w
  7580  0D4A  3A80               	xorlw	128
  7581  0D4B  00AC               	movwf	??___flmul
  7582  0D4C  3080               	movlw	128
  7583  0D4D  022C               	subwf	??___flmul,w
  7584  0D4E  1D03               	skipz
  7585  0D4F  2D52               	goto	u3975
  7586  0D50  3001               	movlw	1
  7587  0D51  023C               	subwf	___flmul@temp,w
  7588  0D52                     u3975:
  7589  0D52  1803               	skipnc
  7590  0D53  2D55               	goto	u3971
  7591  0D54  2D56               	goto	u3970
  7592  0D55                     u3971:
  7593  0D55  2D61               	goto	l3256
  7594  0D56                     u3970:
  7595  0D56                     l3252:
  7596  0D56  3000               	movlw	0
  7597  0D57  0020               	movlb	0	; select bank0
  7598  0D58  00BB               	movwf	___flmul@prod+3
  7599  0D59  3000               	movlw	0
  7600  0D5A  00BA               	movwf	___flmul@prod+2
  7601  0D5B  3000               	movlw	0
  7602  0D5C  00B9               	movwf	___flmul@prod+1
  7603  0D5D  3000               	movlw	0
  7604  0D5E  00B8               	movwf	___flmul@prod
  7605  0D5F                     l3254:
  7606  0D5F  01B1               	clrf	___flmul@sign
  7607  0D60  2D77               	goto	l956
  7608  0D61                     l3256:
  7609  0D61  0020               	movlb	0	; select bank0
  7610  0D62  083C               	movf	___flmul@temp,w
  7611  0D63  00AC               	movwf	??___flmul
  7612  0D64  082C               	movf	??___flmul,w
  7613  0D65  00B7               	movwf	___flmul@bexp
  7614  0D66  30FF               	movlw	255
  7615  0D67  05B8               	andwf	___flmul@prod,f
  7616  0D68  30FF               	movlw	255
  7617  0D69  05B9               	andwf	___flmul@prod+1,f
  7618  0D6A  307F               	movlw	127
  7619  0D6B  05BA               	andwf	___flmul@prod+2,f
  7620  0D6C  3000               	movlw	0
  7621  0D6D  05BB               	andwf	___flmul@prod+3,f
  7622  0D6E                     l3258:
  7623  0D6E  1C37               	btfss	___flmul@bexp,0
  7624  0D6F  2D71               	goto	u3981
  7625  0D70  2D72               	goto	u3980
  7626  0D71                     u3981:
  7627  0D71  2D73               	goto	l3262
  7628  0D72                     u3980:
  7629  0D72                     l3260:
  7630  0D72  17BA               	bsf	___flmul@prod+2,7
  7631  0D73                     l3262:
  7632  0D73  3637               	lsrf	___flmul@bexp,w
  7633  0D74  00AC               	movwf	??___flmul
  7634  0D75  082C               	movf	??___flmul,w
  7635  0D76  00BB               	movwf	___flmul@prod+3
  7636  0D77                     l956:
  7637  0D77  0831               	movf	___flmul@sign,w
  7638  0D78  00AC               	movwf	??___flmul
  7639  0D79  082C               	movf	??___flmul,w
  7640  0D7A  04BB               	iorwf	___flmul@prod+3,f
  7641  0D7B                     l3264:
  7642  0D7B  083B               	movf	___flmul@prod+3,w
  7643  0D7C  00A7               	movwf	?___flmul+3
  7644  0D7D  083A               	movf	___flmul@prod+2,w
  7645  0D7E  00A6               	movwf	?___flmul+2
  7646  0D7F  0839               	movf	___flmul@prod+1,w
  7647  0D80  00A5               	movwf	?___flmul+1
  7648  0D81  0838               	movf	___flmul@prod,w
  7649  0D82  00A4               	movwf	?___flmul
  7650  0D83                     l944:
  7651  0D83  0008               	return
  7652  0D84                     __end_of___flmul:
  7653                           
  7654                           	psect	text10
  7655  1D19                     __ptext10:	
  7656 ;; *************** function __Umul8_16 *****************
  7657 ;; Defined at:
  7658 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  multiplier      1    wreg     unsigned char 
  7661 ;;  multiplicand    1    0[COMMON] unsigned char 
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;  multiplier      1    8[COMMON] unsigned char 
  7664 ;;  word_mpld       2    6[COMMON] unsigned int 
  7665 ;;  product         2    4[COMMON] unsigned int 
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  2    0[COMMON] unsigned int 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2, status,0
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7676 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;Total ram usage:        9 bytes
  7680 ;; Hardware stack levels used: 1
  7681 ;; This function calls:
  7682 ;;		Nothing
  7683 ;; This function is called by:
  7684 ;;		___flmul
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           
  7689                           ;psect for function __Umul8_16
  7690  1D19                     __Umul8_16:
  7691                           
  7692                           ;incstack = 0
  7693                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7694                           ;__Umul8_16@multiplier stored from wreg
  7695  1D19  00F8               	movwf	__Umul8_16@multiplier
  7696  1D1A                     l2774:
  7697  1D1A  01F4               	clrf	__Umul8_16@product
  7698  1D1B  01F5               	clrf	__Umul8_16@product+1
  7699  1D1C                     l2776:
  7700  1D1C  0870               	movf	__Umul8_16@multiplicand,w
  7701  1D1D  00F2               	movwf	??__Umul8_16
  7702  1D1E  01F3               	clrf	??__Umul8_16+1
  7703  1D1F  0872               	movf	??__Umul8_16,w
  7704  1D20  00F6               	movwf	__Umul8_16@word_mpld
  7705  1D21  0873               	movf	??__Umul8_16+1,w
  7706  1D22  00F7               	movwf	__Umul8_16@word_mpld+1
  7707  1D23                     l2778:
  7708  1D23  1C78               	btfss	__Umul8_16@multiplier,0
  7709  1D24  2D26               	goto	u2941
  7710  1D25  2D27               	goto	u2940
  7711  1D26                     u2941:
  7712  1D26  2D2B               	goto	l963
  7713  1D27                     u2940:
  7714  1D27                     l2780:
  7715  1D27  0876               	movf	__Umul8_16@word_mpld,w
  7716  1D28  07F4               	addwf	__Umul8_16@product,f
  7717  1D29  0877               	movf	__Umul8_16@word_mpld+1,w
  7718  1D2A  3DF5               	addwfc	__Umul8_16@product+1,f
  7719  1D2B                     l963:
  7720  1D2B  3001               	movlw	1
  7721  1D2C                     u2955:
  7722  1D2C  35F6               	lslf	__Umul8_16@word_mpld,f
  7723  1D2D  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7724  1D2E  0B89               	decfsz	9,f
  7725  1D2F  2D2C               	goto	u2955
  7726  1D30  1003               	clrc
  7727  1D31  0CF8               	rrf	__Umul8_16@multiplier,f
  7728  1D32                     l2782:
  7729  1D32  0878               	movf	__Umul8_16@multiplier,w
  7730  1D33  1D03               	btfss	3,2
  7731  1D34  2D36               	goto	u2961
  7732  1D35  2D37               	goto	u2960
  7733  1D36                     u2961:
  7734  1D36  2D23               	goto	l2778
  7735  1D37                     u2960:
  7736  1D37                     l2784:
  7737  1D37  0875               	movf	__Umul8_16@product+1,w
  7738  1D38  00F1               	movwf	?__Umul8_16+1
  7739  1D39  0874               	movf	__Umul8_16@product,w
  7740  1D3A  00F0               	movwf	?__Umul8_16
  7741  1D3B                     l965:
  7742  1D3B  0008               	return
  7743  1D3C                     __end_of__Umul8_16:
  7744                           
  7745                           	psect	text11
  7746  11FE                     __ptext11:	
  7747 ;; *************** function __tdiv_to_l_ *****************
  7748 ;; Defined at:
  7749 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;  f1              4    0[COMMON] float 
  7752 ;;  f2              4    4[COMMON] float 
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;  quot            4    0[BANK0 ] unsigned long 
  7755 ;;  exp1            1    5[BANK0 ] unsigned char 
  7756 ;;  cntr            1    4[BANK0 ] unsigned char 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  4    0[COMMON] unsigned long 
  7759 ;; Registers used:
  7760 ;;		wreg, status,2, status,0
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7766 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7767 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7768 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7769 ;;      Totals:        12       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7770 ;;Total ram usage:       18 bytes
  7771 ;; Hardware stack levels used: 1
  7772 ;; This function calls:
  7773 ;;		Nothing
  7774 ;; This function is called by:
  7775 ;;		_sprintf
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           
  7780                           ;psect for function __tdiv_to_l_
  7781  11FE                     __tdiv_to_l_:
  7782  11FE                     l3418:	
  7783                           ;incstack = 0
  7784                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7785                           
  7786  11FE  0870               	movf	__tdiv_to_l_@f1,w
  7787  11FF  00F8               	movwf	??__tdiv_to_l_
  7788  1200  0871               	movf	__tdiv_to_l_@f1+1,w
  7789  1201  00F9               	movwf	??__tdiv_to_l_+1
  7790  1202  0872               	movf	__tdiv_to_l_@f1+2,w
  7791  1203  00FA               	movwf	??__tdiv_to_l_+2
  7792  1204  1003               	clrc
  7793  1205  0D79               	rlf	??__tdiv_to_l_+1,w
  7794  1206  0D7A               	rlf	??__tdiv_to_l_+2,w
  7795  1207  00FB               	movwf	??__tdiv_to_l_+3
  7796  1208  087B               	movf	??__tdiv_to_l_+3,w
  7797  1209  0020               	movlb	0	; select bank0
  7798  120A  00A5               	movwf	__tdiv_to_l_@exp1
  7799  120B  0825               	movf	__tdiv_to_l_@exp1,w
  7800  120C  1D03               	btfss	3,2
  7801  120D  2A0F               	goto	u4101
  7802  120E  2A10               	goto	u4100
  7803  120F                     u4101:
  7804  120F  2A19               	goto	l3424
  7805  1210                     u4100:
  7806  1210                     l3420:
  7807  1210  3000               	movlw	0
  7808  1211  00F3               	movwf	?__tdiv_to_l_+3
  7809  1212  3000               	movlw	0
  7810  1213  00F2               	movwf	?__tdiv_to_l_+2
  7811  1214  3000               	movlw	0
  7812  1215  00F1               	movwf	?__tdiv_to_l_+1
  7813  1216  3000               	movlw	0
  7814  1217  00F0               	movwf	?__tdiv_to_l_
  7815  1218  2AAD               	goto	l738
  7816  1219                     l3424:
  7817  1219  0874               	movf	__tdiv_to_l_@f2,w
  7818  121A  00F8               	movwf	??__tdiv_to_l_
  7819  121B  0875               	movf	__tdiv_to_l_@f2+1,w
  7820  121C  00F9               	movwf	??__tdiv_to_l_+1
  7821  121D  0876               	movf	__tdiv_to_l_@f2+2,w
  7822  121E  00FA               	movwf	??__tdiv_to_l_+2
  7823  121F  1003               	clrc
  7824  1220  0D79               	rlf	??__tdiv_to_l_+1,w
  7825  1221  0D7A               	rlf	??__tdiv_to_l_+2,w
  7826  1222  00FB               	movwf	??__tdiv_to_l_+3
  7827  1223  087B               	movf	??__tdiv_to_l_+3,w
  7828  1224  00A4               	movwf	__tdiv_to_l_@cntr
  7829  1225  0824               	movf	__tdiv_to_l_@cntr,w
  7830  1226  1D03               	btfss	3,2
  7831  1227  2A29               	goto	u4111
  7832  1228  2A2A               	goto	u4110
  7833  1229                     u4111:
  7834  1229  2A2B               	goto	l739
  7835  122A                     u4110:
  7836  122A  2A10               	goto	l3420
  7837  122B                     l739:
  7838  122B  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7839  122C                     l3430:
  7840  122C  30FF               	movlw	255
  7841  122D  05F0               	andwf	__tdiv_to_l_@f1,f
  7842  122E  30FF               	movlw	255
  7843  122F  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7844  1230  3000               	movlw	0
  7845  1231  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7846  1232                     l3432:
  7847  1232  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7848  1233  30FF               	movlw	255
  7849  1234  05F4               	andwf	__tdiv_to_l_@f2,f
  7850  1235  30FF               	movlw	255
  7851  1236  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7852  1237  3000               	movlw	0
  7853  1238  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7854  1239  3000               	movlw	0
  7855  123A  00A3               	movwf	__tdiv_to_l_@quot+3
  7856  123B  3000               	movlw	0
  7857  123C  00A2               	movwf	__tdiv_to_l_@quot+2
  7858  123D  3000               	movlw	0
  7859  123E  00A1               	movwf	__tdiv_to_l_@quot+1
  7860  123F  3000               	movlw	0
  7861  1240  00A0               	movwf	__tdiv_to_l_@quot
  7862  1241                     l3434:
  7863  1241  307F               	movlw	127
  7864  1242  02A5               	subwf	__tdiv_to_l_@exp1,f
  7865  1243                     l3436:
  7866  1243  3098               	movlw	152
  7867  1244  0724               	addwf	__tdiv_to_l_@cntr,w
  7868  1245  00F8               	movwf	??__tdiv_to_l_
  7869  1246  0878               	movf	??__tdiv_to_l_,w
  7870  1247  02A5               	subwf	__tdiv_to_l_@exp1,f
  7871  1248  3018               	movlw	24
  7872  1249  00F8               	movwf	??__tdiv_to_l_
  7873  124A  0878               	movf	??__tdiv_to_l_,w
  7874  124B  00A4               	movwf	__tdiv_to_l_@cntr
  7875  124C                     l3438:
  7876  124C  3001               	movlw	1
  7877  124D                     u4125:
  7878  124D  35A0               	lslf	__tdiv_to_l_@quot,f
  7879  124E  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7880  124F  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7881  1250  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7882  1251  0B89               	decfsz	9,f
  7883  1252  2A4D               	goto	u4125
  7884  1253                     l3440:
  7885  1253  0876               	movf	__tdiv_to_l_@f2+2,w
  7886  1254  0272               	subwf	__tdiv_to_l_@f1+2,w
  7887  1255  1D03               	skipz
  7888  1256  2A5D               	goto	u4135
  7889  1257  0875               	movf	__tdiv_to_l_@f2+1,w
  7890  1258  0271               	subwf	__tdiv_to_l_@f1+1,w
  7891  1259  1D03               	skipz
  7892  125A  2A5D               	goto	u4135
  7893  125B  0874               	movf	__tdiv_to_l_@f2,w
  7894  125C  0270               	subwf	__tdiv_to_l_@f1,w
  7895  125D                     u4135:
  7896  125D  1C03               	skipc
  7897  125E  2A60               	goto	u4131
  7898  125F  2A61               	goto	u4130
  7899  1260                     u4131:
  7900  1260  2A68               	goto	l3446
  7901  1261                     u4130:
  7902  1261                     l3442:
  7903  1261  0874               	movf	__tdiv_to_l_@f2,w
  7904  1262  02F0               	subwf	__tdiv_to_l_@f1,f
  7905  1263  0875               	movf	__tdiv_to_l_@f2+1,w
  7906  1264  3BF1               	subwfb	__tdiv_to_l_@f1+1,f
  7907  1265  0876               	movf	__tdiv_to_l_@f2+2,w
  7908  1266  3BF2               	subwfb	__tdiv_to_l_@f1+2,f
  7909  1267                     l3444:
  7910  1267  1420               	bsf	__tdiv_to_l_@quot,0
  7911  1268                     l3446:
  7912  1268  3001               	movlw	1
  7913  1269                     u4145:
  7914  1269  35F0               	lslf	__tdiv_to_l_@f1,f
  7915  126A  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7916  126B  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7917  126C  0B89               	decfsz	9,f
  7918  126D  2A69               	goto	u4145
  7919  126E                     l3448:
  7920  126E  3001               	movlw	1
  7921  126F  02A4               	subwf	__tdiv_to_l_@cntr,f
  7922  1270  1D03               	btfss	3,2
  7923  1271  2A73               	goto	u4151
  7924  1272  2A74               	goto	u4150
  7925  1273                     u4151:
  7926  1273  2A4C               	goto	l3438
  7927  1274                     u4150:
  7928  1274                     l742:
  7929  1274  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7930  1275  2A77               	goto	u4161
  7931  1276  2A78               	goto	u4160
  7932  1277                     u4161:
  7933  1277  2A90               	goto	l3458
  7934  1278                     u4160:
  7935  1278                     l3450:
  7936  1278  0825               	movf	__tdiv_to_l_@exp1,w
  7937  1279  3A80               	xorlw	128
  7938  127A  3E97               	addlw	151
  7939  127B  1803               	skipnc
  7940  127C  2A7E               	goto	u4171
  7941  127D  2A7F               	goto	u4170
  7942  127E                     u4171:
  7943  127E  2A80               	goto	l3456
  7944  127F                     u4170:
  7945  127F  2A10               	goto	l3420
  7946  1280                     l3456:
  7947  1280  3001               	movlw	1
  7948  1281                     u4185:
  7949  1281  36A3               	lsrf	__tdiv_to_l_@quot+3,f
  7950  1282  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7951  1283  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7952  1284  0CA0               	rrf	__tdiv_to_l_@quot,f
  7953  1285  0B89               	decfsz	9,f
  7954  1286  2A81               	goto	u4185
  7955  1287  3001               	movlw	1
  7956  1288  00F8               	movwf	??__tdiv_to_l_
  7957  1289  0878               	movf	??__tdiv_to_l_,w
  7958  128A  07A5               	addwf	__tdiv_to_l_@exp1,f
  7959  128B  1D03               	btfss	3,2
  7960  128C  2A8E               	goto	u4191
  7961  128D  2A8F               	goto	u4190
  7962  128E                     u4191:
  7963  128E  2A80               	goto	l3456
  7964  128F                     u4190:
  7965  128F  2AA5               	goto	l3466
  7966  1290                     l3458:
  7967  1290  3018               	movlw	24
  7968  1291  0225               	subwf	__tdiv_to_l_@exp1,w
  7969  1292  1C03               	skipc
  7970  1293  2A95               	goto	u4201
  7971  1294  2A96               	goto	u4200
  7972  1295                     u4201:
  7973  1295  2AA0               	goto	l749
  7974  1296                     u4200:
  7975  1296  2A10               	goto	l3420
  7976  1297                     l3464:
  7977  1297  3001               	movlw	1
  7978  1298                     u4215:
  7979  1298  35A0               	lslf	__tdiv_to_l_@quot,f
  7980  1299  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7981  129A  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7982  129B  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7983  129C  0B89               	decfsz	9,f
  7984  129D  2A98               	goto	u4215
  7985  129E  3001               	movlw	1
  7986  129F  02A5               	subwf	__tdiv_to_l_@exp1,f
  7987  12A0                     l749:
  7988  12A0  0825               	movf	__tdiv_to_l_@exp1,w
  7989  12A1  1D03               	btfss	3,2
  7990  12A2  2AA4               	goto	u4221
  7991  12A3  2AA5               	goto	u4220
  7992  12A4                     u4221:
  7993  12A4  2A97               	goto	l3464
  7994  12A5                     u4220:
  7995  12A5                     l3466:
  7996  12A5  0823               	movf	__tdiv_to_l_@quot+3,w
  7997  12A6  00F3               	movwf	?__tdiv_to_l_+3
  7998  12A7  0822               	movf	__tdiv_to_l_@quot+2,w
  7999  12A8  00F2               	movwf	?__tdiv_to_l_+2
  8000  12A9  0821               	movf	__tdiv_to_l_@quot+1,w
  8001  12AA  00F1               	movwf	?__tdiv_to_l_+1
  8002  12AB  0820               	movf	__tdiv_to_l_@quot,w
  8003  12AC  00F0               	movwf	?__tdiv_to_l_
  8004  12AD                     l738:
  8005  12AD  0008               	return
  8006  12AE                     __end_of__tdiv_to_l_:
  8007                           
  8008                           	psect	text12
  8009  114F                     __ptext12:	
  8010 ;; *************** function __div_to_l_ *****************
  8011 ;; Defined at:
  8012 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;  f1              4    0[COMMON] unsigned long 
  8015 ;;  f2              4    4[COMMON] unsigned long 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  quot            4    0[BANK0 ] unsigned long 
  8018 ;;  exp1            1    5[BANK0 ] unsigned char 
  8019 ;;  cntr            1    4[BANK0 ] unsigned char 
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  4    0[COMMON] unsigned long 
  8022 ;; Registers used:
  8023 ;;		wreg, status,2, status,0
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8029 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;Total ram usage:       15 bytes
  8034 ;; Hardware stack levels used: 1
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_sprintf
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           
  8043                           ;psect for function __div_to_l_
  8044  114F                     __div_to_l_:
  8045  114F                     l3470:	
  8046                           ;incstack = 0
  8047                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  8048                           
  8049  114F  1003               	clrc
  8050  1150  0D72               	rlf	__div_to_l_@f1+2,w
  8051  1151  0D73               	rlf	__div_to_l_@f1+3,w
  8052  1152  00F8               	movwf	??__div_to_l_
  8053  1153  0878               	movf	??__div_to_l_,w
  8054  1154  0020               	movlb	0	; select bank0
  8055  1155  00A5               	movwf	__div_to_l_@exp1
  8056  1156  0825               	movf	__div_to_l_@exp1,w
  8057  1157  1D03               	btfss	3,2
  8058  1158  295A               	goto	u4231
  8059  1159  295B               	goto	u4230
  8060  115A                     u4231:
  8061  115A  2964               	goto	l3476
  8062  115B                     u4230:
  8063  115B                     l3472:
  8064  115B  3000               	movlw	0
  8065  115C  00F3               	movwf	?__div_to_l_+3
  8066  115D  3000               	movlw	0
  8067  115E  00F2               	movwf	?__div_to_l_+2
  8068  115F  3000               	movlw	0
  8069  1160  00F1               	movwf	?__div_to_l_+1
  8070  1161  3000               	movlw	0
  8071  1162  00F0               	movwf	?__div_to_l_
  8072  1163  29FD               	goto	l691
  8073  1164                     l3476:
  8074  1164  1003               	clrc
  8075  1165  0D76               	rlf	__div_to_l_@f2+2,w
  8076  1166  0D77               	rlf	__div_to_l_@f2+3,w
  8077  1167  00F8               	movwf	??__div_to_l_
  8078  1168  0878               	movf	??__div_to_l_,w
  8079  1169  00A4               	movwf	__div_to_l_@cntr
  8080  116A  0824               	movf	__div_to_l_@cntr,w
  8081  116B  1D03               	btfss	3,2
  8082  116C  296E               	goto	u4241
  8083  116D  296F               	goto	u4240
  8084  116E                     u4241:
  8085  116E  2970               	goto	l692
  8086  116F                     u4240:
  8087  116F  295B               	goto	l3472
  8088  1170                     l692:
  8089  1170  17F2               	bsf	__div_to_l_@f1+2,7
  8090  1171                     l3482:
  8091  1171  30FF               	movlw	255
  8092  1172  05F0               	andwf	__div_to_l_@f1,f
  8093  1173  30FF               	movlw	255
  8094  1174  05F1               	andwf	__div_to_l_@f1+1,f
  8095  1175  30FF               	movlw	255
  8096  1176  05F2               	andwf	__div_to_l_@f1+2,f
  8097  1177  3000               	movlw	0
  8098  1178  05F3               	andwf	__div_to_l_@f1+3,f
  8099  1179                     l3484:
  8100  1179  17F6               	bsf	__div_to_l_@f2+2,7
  8101  117A  30FF               	movlw	255
  8102  117B  05F4               	andwf	__div_to_l_@f2,f
  8103  117C  30FF               	movlw	255
  8104  117D  05F5               	andwf	__div_to_l_@f2+1,f
  8105  117E  30FF               	movlw	255
  8106  117F  05F6               	andwf	__div_to_l_@f2+2,f
  8107  1180  3000               	movlw	0
  8108  1181  05F7               	andwf	__div_to_l_@f2+3,f
  8109  1182  3000               	movlw	0
  8110  1183  00A3               	movwf	__div_to_l_@quot+3
  8111  1184  3000               	movlw	0
  8112  1185  00A2               	movwf	__div_to_l_@quot+2
  8113  1186  3000               	movlw	0
  8114  1187  00A1               	movwf	__div_to_l_@quot+1
  8115  1188  3000               	movlw	0
  8116  1189  00A0               	movwf	__div_to_l_@quot
  8117  118A                     l3486:
  8118  118A  307F               	movlw	127
  8119  118B  02A5               	subwf	__div_to_l_@exp1,f
  8120  118C                     l3488:
  8121  118C  30A0               	movlw	160
  8122  118D  0724               	addwf	__div_to_l_@cntr,w
  8123  118E  00F8               	movwf	??__div_to_l_
  8124  118F  0878               	movf	??__div_to_l_,w
  8125  1190  02A5               	subwf	__div_to_l_@exp1,f
  8126  1191  3020               	movlw	32
  8127  1192  00F8               	movwf	??__div_to_l_
  8128  1193  0878               	movf	??__div_to_l_,w
  8129  1194  00A4               	movwf	__div_to_l_@cntr
  8130  1195                     l3490:
  8131  1195  3001               	movlw	1
  8132  1196                     u4255:
  8133  1196  35A0               	lslf	__div_to_l_@quot,f
  8134  1197  0DA1               	rlf	__div_to_l_@quot+1,f
  8135  1198  0DA2               	rlf	__div_to_l_@quot+2,f
  8136  1199  0DA3               	rlf	__div_to_l_@quot+3,f
  8137  119A  0B89               	decfsz	9,f
  8138  119B  2996               	goto	u4255
  8139  119C                     l3492:
  8140  119C  0877               	movf	__div_to_l_@f2+3,w
  8141  119D  0273               	subwf	__div_to_l_@f1+3,w
  8142  119E  1D03               	skipz
  8143  119F  29AA               	goto	u4265
  8144  11A0  0876               	movf	__div_to_l_@f2+2,w
  8145  11A1  0272               	subwf	__div_to_l_@f1+2,w
  8146  11A2  1D03               	skipz
  8147  11A3  29AA               	goto	u4265
  8148  11A4  0875               	movf	__div_to_l_@f2+1,w
  8149  11A5  0271               	subwf	__div_to_l_@f1+1,w
  8150  11A6  1D03               	skipz
  8151  11A7  29AA               	goto	u4265
  8152  11A8  0874               	movf	__div_to_l_@f2,w
  8153  11A9  0270               	subwf	__div_to_l_@f1,w
  8154  11AA                     u4265:
  8155  11AA  1C03               	skipc
  8156  11AB  29AD               	goto	u4261
  8157  11AC  29AE               	goto	u4260
  8158  11AD                     u4261:
  8159  11AD  29B7               	goto	l3498
  8160  11AE                     u4260:
  8161  11AE                     l3494:
  8162  11AE  0874               	movf	__div_to_l_@f2,w
  8163  11AF  02F0               	subwf	__div_to_l_@f1,f
  8164  11B0  0875               	movf	__div_to_l_@f2+1,w
  8165  11B1  3BF1               	subwfb	__div_to_l_@f1+1,f
  8166  11B2  0876               	movf	__div_to_l_@f2+2,w
  8167  11B3  3BF2               	subwfb	__div_to_l_@f1+2,f
  8168  11B4  0877               	movf	__div_to_l_@f2+3,w
  8169  11B5  3BF3               	subwfb	__div_to_l_@f1+3,f
  8170  11B6                     l3496:
  8171  11B6  1420               	bsf	__div_to_l_@quot,0
  8172  11B7                     l3498:
  8173  11B7  3001               	movlw	1
  8174  11B8                     u4275:
  8175  11B8  35F0               	lslf	__div_to_l_@f1,f
  8176  11B9  0DF1               	rlf	__div_to_l_@f1+1,f
  8177  11BA  0DF2               	rlf	__div_to_l_@f1+2,f
  8178  11BB  0DF3               	rlf	__div_to_l_@f1+3,f
  8179  11BC  0B89               	decfsz	9,f
  8180  11BD  29B8               	goto	u4275
  8181  11BE                     l3500:
  8182  11BE  3001               	movlw	1
  8183  11BF  02A4               	subwf	__div_to_l_@cntr,f
  8184  11C0  1D03               	btfss	3,2
  8185  11C1  29C3               	goto	u4281
  8186  11C2  29C4               	goto	u4280
  8187  11C3                     u4281:
  8188  11C3  2995               	goto	l3490
  8189  11C4                     u4280:
  8190  11C4                     l695:
  8191  11C4  1FA5               	btfss	__div_to_l_@exp1,7
  8192  11C5  29C7               	goto	u4291
  8193  11C6  29C8               	goto	u4290
  8194  11C7                     u4291:
  8195  11C7  29E0               	goto	l3510
  8196  11C8                     u4290:
  8197  11C8                     l3502:
  8198  11C8  0825               	movf	__div_to_l_@exp1,w
  8199  11C9  3A80               	xorlw	128
  8200  11CA  3E9F               	addlw	159
  8201  11CB  1803               	skipnc
  8202  11CC  29CE               	goto	u4301
  8203  11CD  29CF               	goto	u4300
  8204  11CE                     u4301:
  8205  11CE  29D0               	goto	l3508
  8206  11CF                     u4300:
  8207  11CF  295B               	goto	l3472
  8208  11D0                     l3508:
  8209  11D0  3001               	movlw	1
  8210  11D1                     u4315:
  8211  11D1  36A3               	lsrf	__div_to_l_@quot+3,f
  8212  11D2  0CA2               	rrf	__div_to_l_@quot+2,f
  8213  11D3  0CA1               	rrf	__div_to_l_@quot+1,f
  8214  11D4  0CA0               	rrf	__div_to_l_@quot,f
  8215  11D5  0B89               	decfsz	9,f
  8216  11D6  29D1               	goto	u4315
  8217  11D7  3001               	movlw	1
  8218  11D8  00F8               	movwf	??__div_to_l_
  8219  11D9  0878               	movf	??__div_to_l_,w
  8220  11DA  07A5               	addwf	__div_to_l_@exp1,f
  8221  11DB  1D03               	btfss	3,2
  8222  11DC  29DE               	goto	u4321
  8223  11DD  29DF               	goto	u4320
  8224  11DE                     u4321:
  8225  11DE  29D0               	goto	l3508
  8226  11DF                     u4320:
  8227  11DF  29F5               	goto	l3518
  8228  11E0                     l3510:
  8229  11E0  3020               	movlw	32
  8230  11E1  0225               	subwf	__div_to_l_@exp1,w
  8231  11E2  1C03               	skipc
  8232  11E3  29E5               	goto	u4331
  8233  11E4  29E6               	goto	u4330
  8234  11E5                     u4331:
  8235  11E5  29F0               	goto	l702
  8236  11E6                     u4330:
  8237  11E6  295B               	goto	l3472
  8238  11E7                     l3516:
  8239  11E7  3001               	movlw	1
  8240  11E8                     u4345:
  8241  11E8  35A0               	lslf	__div_to_l_@quot,f
  8242  11E9  0DA1               	rlf	__div_to_l_@quot+1,f
  8243  11EA  0DA2               	rlf	__div_to_l_@quot+2,f
  8244  11EB  0DA3               	rlf	__div_to_l_@quot+3,f
  8245  11EC  0B89               	decfsz	9,f
  8246  11ED  29E8               	goto	u4345
  8247  11EE  3001               	movlw	1
  8248  11EF  02A5               	subwf	__div_to_l_@exp1,f
  8249  11F0                     l702:
  8250  11F0  0825               	movf	__div_to_l_@exp1,w
  8251  11F1  1D03               	btfss	3,2
  8252  11F2  29F4               	goto	u4351
  8253  11F3  29F5               	goto	u4350
  8254  11F4                     u4351:
  8255  11F4  29E7               	goto	l3516
  8256  11F5                     u4350:
  8257  11F5                     l3518:
  8258  11F5  0823               	movf	__div_to_l_@quot+3,w
  8259  11F6  00F3               	movwf	?__div_to_l_+3
  8260  11F7  0822               	movf	__div_to_l_@quot+2,w
  8261  11F8  00F2               	movwf	?__div_to_l_+2
  8262  11F9  0821               	movf	__div_to_l_@quot+1,w
  8263  11FA  00F1               	movwf	?__div_to_l_+1
  8264  11FB  0820               	movf	__div_to_l_@quot,w
  8265  11FC  00F0               	movwf	?__div_to_l_
  8266  11FD                     l691:
  8267  11FD  0008               	return
  8268  11FE                     __end_of__div_to_l_:
  8269                           
  8270                           	psect	text13
  8271  1CDA                     __ptext13:	
  8272 ;; *************** function ___wmul *****************
  8273 ;; Defined at:
  8274 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;  multiplier      2    0[COMMON] unsigned int 
  8277 ;;  multiplicand    2    2[COMMON] unsigned int 
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;  product         2    4[COMMON] unsigned int 
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  2    0[COMMON] unsigned int 
  8282 ;; Registers used:
  8283 ;;		wreg, status,2, status,0
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8293 ;;Total ram usage:        6 bytes
  8294 ;; Hardware stack levels used: 1
  8295 ;; This function calls:
  8296 ;;		Nothing
  8297 ;; This function is called by:
  8298 ;;		_sprintf
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           
  8303                           ;psect for function ___wmul
  8304  1CDA                     ___wmul:
  8305  1CDA                     l3522:	
  8306                           ;incstack = 0
  8307                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8308                           
  8309  1CDA  01F4               	clrf	___wmul@product
  8310  1CDB  01F5               	clrf	___wmul@product+1
  8311  1CDC                     l3524:
  8312  1CDC  1C70               	btfss	___wmul@multiplier,0
  8313  1CDD  2CDF               	goto	u4361
  8314  1CDE  2CE0               	goto	u4360
  8315  1CDF                     u4361:
  8316  1CDF  2CE4               	goto	l521
  8317  1CE0                     u4360:
  8318  1CE0                     l3526:
  8319  1CE0  0872               	movf	___wmul@multiplicand,w
  8320  1CE1  07F4               	addwf	___wmul@product,f
  8321  1CE2  0873               	movf	___wmul@multiplicand+1,w
  8322  1CE3  3DF5               	addwfc	___wmul@product+1,f
  8323  1CE4                     l521:
  8324  1CE4  3001               	movlw	1
  8325  1CE5                     u4375:
  8326  1CE5  35F2               	lslf	___wmul@multiplicand,f
  8327  1CE6  0DF3               	rlf	___wmul@multiplicand+1,f
  8328  1CE7  0B89               	decfsz	9,f
  8329  1CE8  2CE5               	goto	u4375
  8330  1CE9                     l3528:
  8331  1CE9  3001               	movlw	1
  8332  1CEA                     u4385:
  8333  1CEA  36F1               	lsrf	___wmul@multiplier+1,f
  8334  1CEB  0CF0               	rrf	___wmul@multiplier,f
  8335  1CEC  0B89               	decfsz	9,f
  8336  1CED  2CEA               	goto	u4385
  8337  1CEE                     l3530:
  8338  1CEE  0870               	movf	___wmul@multiplier,w
  8339  1CEF  0471               	iorwf	___wmul@multiplier+1,w
  8340  1CF0  1D03               	btfss	3,2
  8341  1CF1  2CF3               	goto	u4391
  8342  1CF2  2CF4               	goto	u4390
  8343  1CF3                     u4391:
  8344  1CF3  2CDC               	goto	l3524
  8345  1CF4                     u4390:
  8346  1CF4                     l3532:
  8347  1CF4  0875               	movf	___wmul@product+1,w
  8348  1CF5  00F1               	movwf	?___wmul+1
  8349  1CF6  0874               	movf	___wmul@product,w
  8350  1CF7  00F0               	movwf	?___wmul
  8351  1CF8                     l523:
  8352  1CF8  0008               	return
  8353  1CF9                     __end_of___wmul:
  8354                           
  8355                           	psect	text14
  8356  1E0C                     __ptext14:	
  8357 ;; *************** function ___llmod *****************
  8358 ;; Defined at:
  8359 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;  divisor         4    0[BANK0 ] unsigned long 
  8362 ;;  dividend        4    4[BANK0 ] unsigned long 
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;  counter         1    9[BANK0 ] unsigned char 
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  4    0[BANK0 ] unsigned long 
  8367 ;; Registers used:
  8368 ;;		wreg, status,2, status,0
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8374 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8377 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;Total ram usage:       10 bytes
  8379 ;; Hardware stack levels used: 1
  8380 ;; This function calls:
  8381 ;;		Nothing
  8382 ;; This function is called by:
  8383 ;;		_sprintf
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387                           
  8388                           ;psect for function ___llmod
  8389  1E0C                     ___llmod:
  8390  1E0C                     l3636:	
  8391                           ;incstack = 0
  8392                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8393                           
  8394  1E0C  0020               	movlb	0	; select bank0
  8395  1E0D  0823               	movf	___llmod@divisor+3,w
  8396  1E0E  0422               	iorwf	___llmod@divisor+2,w
  8397  1E0F  0421               	iorwf	___llmod@divisor+1,w
  8398  1E10  0420               	iorwf	___llmod@divisor,w
  8399  1E11  1903               	skipnz
  8400  1E12  2E14               	goto	u4661
  8401  1E13  2E15               	goto	u4660
  8402  1E14                     u4661:
  8403  1E14  2E4E               	goto	l3652
  8404  1E15                     u4660:
  8405  1E15                     l3638:
  8406  1E15  01A9               	clrf	___llmod@counter
  8407  1E16  0AA9               	incf	___llmod@counter,f
  8408  1E17  2E23               	goto	l3642
  8409  1E18                     l3640:
  8410  1E18  3001               	movlw	1
  8411  1E19                     u4675:
  8412  1E19  35A0               	lslf	___llmod@divisor,f
  8413  1E1A  0DA1               	rlf	___llmod@divisor+1,f
  8414  1E1B  0DA2               	rlf	___llmod@divisor+2,f
  8415  1E1C  0DA3               	rlf	___llmod@divisor+3,f
  8416  1E1D  0B89               	decfsz	9,f
  8417  1E1E  2E19               	goto	u4675
  8418  1E1F  3001               	movlw	1
  8419  1E20  00A8               	movwf	??___llmod
  8420  1E21  0828               	movf	??___llmod,w
  8421  1E22  07A9               	addwf	___llmod@counter,f
  8422  1E23                     l3642:
  8423  1E23  1FA3               	btfss	___llmod@divisor+3,7
  8424  1E24  2E26               	goto	u4681
  8425  1E25  2E27               	goto	u4680
  8426  1E26                     u4681:
  8427  1E26  2E18               	goto	l3640
  8428  1E27                     u4680:
  8429  1E27                     l3644:
  8430  1E27  0823               	movf	___llmod@divisor+3,w
  8431  1E28  0227               	subwf	___llmod@dividend+3,w
  8432  1E29  1D03               	skipz
  8433  1E2A  2E35               	goto	u4695
  8434  1E2B  0822               	movf	___llmod@divisor+2,w
  8435  1E2C  0226               	subwf	___llmod@dividend+2,w
  8436  1E2D  1D03               	skipz
  8437  1E2E  2E35               	goto	u4695
  8438  1E2F  0821               	movf	___llmod@divisor+1,w
  8439  1E30  0225               	subwf	___llmod@dividend+1,w
  8440  1E31  1D03               	skipz
  8441  1E32  2E35               	goto	u4695
  8442  1E33  0820               	movf	___llmod@divisor,w
  8443  1E34  0224               	subwf	___llmod@dividend,w
  8444  1E35                     u4695:
  8445  1E35  1C03               	skipc
  8446  1E36  2E38               	goto	u4691
  8447  1E37  2E39               	goto	u4690
  8448  1E38                     u4691:
  8449  1E38  2E41               	goto	l3648
  8450  1E39                     u4690:
  8451  1E39                     l3646:
  8452  1E39  0820               	movf	___llmod@divisor,w
  8453  1E3A  02A4               	subwf	___llmod@dividend,f
  8454  1E3B  0821               	movf	___llmod@divisor+1,w
  8455  1E3C  3BA5               	subwfb	___llmod@dividend+1,f
  8456  1E3D  0822               	movf	___llmod@divisor+2,w
  8457  1E3E  3BA6               	subwfb	___llmod@dividend+2,f
  8458  1E3F  0823               	movf	___llmod@divisor+3,w
  8459  1E40  3BA7               	subwfb	___llmod@dividend+3,f
  8460  1E41                     l3648:
  8461  1E41  3001               	movlw	1
  8462  1E42                     u4705:
  8463  1E42  36A3               	lsrf	___llmod@divisor+3,f
  8464  1E43  0CA2               	rrf	___llmod@divisor+2,f
  8465  1E44  0CA1               	rrf	___llmod@divisor+1,f
  8466  1E45  0CA0               	rrf	___llmod@divisor,f
  8467  1E46  0B89               	decfsz	9,f
  8468  1E47  2E42               	goto	u4705
  8469  1E48                     l3650:
  8470  1E48  3001               	movlw	1
  8471  1E49  02A9               	subwf	___llmod@counter,f
  8472  1E4A  1D03               	btfss	3,2
  8473  1E4B  2E4D               	goto	u4711
  8474  1E4C  2E4E               	goto	u4710
  8475  1E4D                     u4711:
  8476  1E4D  2E27               	goto	l3644
  8477  1E4E                     u4710:
  8478  1E4E                     l3652:
  8479  1E4E  0827               	movf	___llmod@dividend+3,w
  8480  1E4F  00A3               	movwf	?___llmod+3
  8481  1E50  0826               	movf	___llmod@dividend+2,w
  8482  1E51  00A2               	movwf	?___llmod+2
  8483  1E52  0825               	movf	___llmod@dividend+1,w
  8484  1E53  00A1               	movwf	?___llmod+1
  8485  1E54  0824               	movf	___llmod@dividend,w
  8486  1E55  00A0               	movwf	?___llmod
  8487  1E56                     l777:
  8488  1E56  0008               	return
  8489  1E57                     __end_of___llmod:
  8490                           
  8491                           	psect	text15
  8492  102E                     __ptext15:	
  8493 ;; *************** function ___fltol *****************
  8494 ;; Defined at:
  8495 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;  f1              4   51[BANK0 ] unsigned long 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;  exp1            1   61[BANK0 ] unsigned char 
  8500 ;;  sign1           1   60[BANK0 ] unsigned char 
  8501 ;; Return value:  Size  Location     Type
  8502 ;;                  4   51[BANK0 ] long 
  8503 ;; Registers used:
  8504 ;;		wreg, status,2, status,0
  8505 ;; Tracked objects:
  8506 ;;		On entry : 0/0
  8507 ;;		On exit  : 0/0
  8508 ;;		Unchanged: 0/0
  8509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8510 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8514 ;;Total ram usage:       11 bytes
  8515 ;; Hardware stack levels used: 1
  8516 ;; This function calls:
  8517 ;;		Nothing
  8518 ;; This function is called by:
  8519 ;;		_sprintf
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           
  8524                           ;psect for function ___fltol
  8525  102E                     ___fltol:
  8526  102E                     l3600:	
  8527                           ;incstack = 0
  8528                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8529                           
  8530  102E  1003               	clrc
  8531  102F  0020               	movlb	0	; select bank0
  8532  1030  0D55               	rlf	___fltol@f1+2,w
  8533  1031  0D56               	rlf	___fltol@f1+3,w
  8534  1032  00D7               	movwf	??___fltol
  8535  1033  0857               	movf	??___fltol,w
  8536  1034  00DD               	movwf	___fltol@exp1
  8537  1035  085D               	movf	___fltol@exp1,w
  8538  1036  1D03               	btfss	3,2
  8539  1037  2839               	goto	u4561
  8540  1038  283A               	goto	u4560
  8541  1039                     u4561:
  8542  1039  2843               	goto	l3606
  8543  103A                     u4560:
  8544  103A                     l3602:
  8545  103A  3000               	movlw	0
  8546  103B  00D6               	movwf	?___fltol+3
  8547  103C  3000               	movlw	0
  8548  103D  00D5               	movwf	?___fltol+2
  8549  103E  3000               	movlw	0
  8550  103F  00D4               	movwf	?___fltol+1
  8551  1040  3000               	movlw	0
  8552  1041  00D3               	movwf	?___fltol
  8553  1042  28A2               	goto	l724
  8554  1043                     l3606:
  8555  1043  0853               	movf	___fltol@f1,w
  8556  1044  00D7               	movwf	??___fltol
  8557  1045  0854               	movf	___fltol@f1+1,w
  8558  1046  00D8               	movwf	??___fltol+1
  8559  1047  0855               	movf	___fltol@f1+2,w
  8560  1048  00D9               	movwf	??___fltol+2
  8561  1049  0856               	movf	___fltol@f1+3,w
  8562  104A  00DA               	movwf	??___fltol+3
  8563  104B  301F               	movlw	31
  8564  104C                     u4575:
  8565  104C  36DA               	lsrf	??___fltol+3,f
  8566  104D  0CD9               	rrf	??___fltol+2,f
  8567  104E  0CD8               	rrf	??___fltol+1,f
  8568  104F  0CD7               	rrf	??___fltol,f
  8569  1050                     u4570:
  8570  1050  0B89               	decfsz	9,f
  8571  1051  284C               	goto	u4575
  8572  1052  0857               	movf	??___fltol,w
  8573  1053  00DB               	movwf	??___fltol+4
  8574  1054  085B               	movf	??___fltol+4,w
  8575  1055  00DC               	movwf	___fltol@sign1
  8576  1056                     l3608:
  8577  1056  17D5               	bsf	___fltol@f1+2,7
  8578  1057                     l3610:
  8579  1057  30FF               	movlw	255
  8580  1058  05D3               	andwf	___fltol@f1,f
  8581  1059  30FF               	movlw	255
  8582  105A  05D4               	andwf	___fltol@f1+1,f
  8583  105B  30FF               	movlw	255
  8584  105C  05D5               	andwf	___fltol@f1+2,f
  8585  105D  3000               	movlw	0
  8586  105E  05D6               	andwf	___fltol@f1+3,f
  8587  105F                     l3612:
  8588  105F  3096               	movlw	150
  8589  1060  02DD               	subwf	___fltol@exp1,f
  8590  1061                     l3614:
  8591  1061  1FDD               	btfss	___fltol@exp1,7
  8592  1062  2864               	goto	u4581
  8593  1063  2865               	goto	u4580
  8594  1064                     u4581:
  8595  1064  287D               	goto	l3624
  8596  1065                     u4580:
  8597  1065                     l3616:
  8598  1065  085D               	movf	___fltol@exp1,w
  8599  1066  3A80               	xorlw	128
  8600  1067  3E97               	addlw	151
  8601  1068  1803               	skipnc
  8602  1069  286B               	goto	u4591
  8603  106A  286C               	goto	u4590
  8604  106B                     u4591:
  8605  106B  286D               	goto	l3622
  8606  106C                     u4590:
  8607  106C  283A               	goto	l3602
  8608  106D                     l3622:
  8609  106D  3001               	movlw	1
  8610  106E                     u4605:
  8611  106E  36D6               	lsrf	___fltol@f1+3,f
  8612  106F  0CD5               	rrf	___fltol@f1+2,f
  8613  1070  0CD4               	rrf	___fltol@f1+1,f
  8614  1071  0CD3               	rrf	___fltol@f1,f
  8615  1072  0B89               	decfsz	9,f
  8616  1073  286E               	goto	u4605
  8617  1074  3001               	movlw	1
  8618  1075  00D7               	movwf	??___fltol
  8619  1076  0857               	movf	??___fltol,w
  8620  1077  07DD               	addwf	___fltol@exp1,f
  8621  1078  1D03               	btfss	3,2
  8622  1079  287B               	goto	u4611
  8623  107A  287C               	goto	u4610
  8624  107B                     u4611:
  8625  107B  286D               	goto	l3622
  8626  107C                     u4610:
  8627  107C  2892               	goto	l3632
  8628  107D                     l3624:
  8629  107D  3020               	movlw	32
  8630  107E  025D               	subwf	___fltol@exp1,w
  8631  107F  1C03               	skipc
  8632  1080  2882               	goto	u4621
  8633  1081  2883               	goto	u4620
  8634  1082                     u4621:
  8635  1082  288D               	goto	l731
  8636  1083                     u4620:
  8637  1083  283A               	goto	l3602
  8638  1084                     l3630:
  8639  1084  3001               	movlw	1
  8640  1085                     u4635:
  8641  1085  35D3               	lslf	___fltol@f1,f
  8642  1086  0DD4               	rlf	___fltol@f1+1,f
  8643  1087  0DD5               	rlf	___fltol@f1+2,f
  8644  1088  0DD6               	rlf	___fltol@f1+3,f
  8645  1089  0B89               	decfsz	9,f
  8646  108A  2885               	goto	u4635
  8647  108B  3001               	movlw	1
  8648  108C  02DD               	subwf	___fltol@exp1,f
  8649  108D                     l731:
  8650  108D  085D               	movf	___fltol@exp1,w
  8651  108E  1D03               	btfss	3,2
  8652  108F  2891               	goto	u4641
  8653  1090  2892               	goto	u4640
  8654  1091                     u4641:
  8655  1091  2884               	goto	l3630
  8656  1092                     u4640:
  8657  1092                     l3632:
  8658  1092  085C               	movf	___fltol@sign1,w
  8659  1093  1903               	btfsc	3,2
  8660  1094  2896               	goto	u4651
  8661  1095  2897               	goto	u4650
  8662  1096                     u4651:
  8663  1096  28A2               	goto	l734
  8664  1097                     u4650:
  8665  1097                     l3634:
  8666  1097  09D3               	comf	___fltol@f1,f
  8667  1098  09D4               	comf	___fltol@f1+1,f
  8668  1099  09D5               	comf	___fltol@f1+2,f
  8669  109A  09D6               	comf	___fltol@f1+3,f
  8670  109B  0AD3               	incf	___fltol@f1,f
  8671  109C  1903               	skipnz
  8672  109D  0AD4               	incf	___fltol@f1+1,f
  8673  109E  1903               	skipnz
  8674  109F  0AD5               	incf	___fltol@f1+2,f
  8675  10A0  1903               	skipnz
  8676  10A1  0AD6               	incf	___fltol@f1+3,f
  8677  10A2                     l734:
  8678  10A2                     l724:
  8679  10A2  0008               	return
  8680  10A3                     __end_of___fltol:
  8681                           
  8682                           	psect	text16
  8683  1CF9                     __ptext16:	
  8684 ;; *************** function ___flsub *****************
  8685 ;; Defined at:
  8686 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  a               4   69[BANK0 ] long 
  8689 ;;  b               4   73[BANK0 ] long 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;		None
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  4   69[BANK0 ] long 
  8694 ;; Registers used:
  8695 ;;		wreg, status,2, status,0, pclath, cstack
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8701 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8704 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8705 ;;Total ram usage:        8 bytes
  8706 ;; Hardware stack levels used: 1
  8707 ;; Hardware stack levels required when called: 1
  8708 ;; This function calls:
  8709 ;;		___fladd
  8710 ;; This function is called by:
  8711 ;;		_sprintf
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           
  8716                           ;psect for function ___flsub
  8717  1CF9                     ___flsub:
  8718  1CF9                     l3656:	
  8719                           ;incstack = 0
  8720                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  8721                           
  8722  1CF9  3080               	movlw	128
  8723  1CFA  0020               	movlb	0	; select bank0
  8724  1CFB  06E8               	xorwf	___flsub@a+3,f
  8725  1CFC                     l3658:
  8726  1CFC  086C               	movf	___flsub@b+3,w
  8727  1CFD  00D4               	movwf	___fladd@b+3
  8728  1CFE  086B               	movf	___flsub@b+2,w
  8729  1CFF  00D3               	movwf	___fladd@b+2
  8730  1D00  086A               	movf	___flsub@b+1,w
  8731  1D01  00D2               	movwf	___fladd@b+1
  8732  1D02  0869               	movf	___flsub@b,w
  8733  1D03  00D1               	movwf	___fladd@b
  8734  1D04  0868               	movf	___flsub@a+3,w
  8735  1D05  00D8               	movwf	___fladd@a+3
  8736  1D06  0867               	movf	___flsub@a+2,w
  8737  1D07  00D7               	movwf	___fladd@a+2
  8738  1D08  0866               	movf	___flsub@a+1,w
  8739  1D09  00D6               	movwf	___fladd@a+1
  8740  1D0A  0865               	movf	___flsub@a,w
  8741  1D0B  00D5               	movwf	___fladd@a
  8742  1D0C  3188  20F5  319C   	fcall	___fladd
  8743  1D0F  0020               	movlb	0	; select bank0
  8744  1D10  0854               	movf	?___fladd+3,w
  8745  1D11  00E8               	movwf	?___flsub+3
  8746  1D12  0853               	movf	?___fladd+2,w
  8747  1D13  00E7               	movwf	?___flsub+2
  8748  1D14  0852               	movf	?___fladd+1,w
  8749  1D15  00E6               	movwf	?___flsub+1
  8750  1D16  0851               	movf	?___fladd,w
  8751  1D17  00E5               	movwf	?___flsub
  8752  1D18                     l894:
  8753  1D18  0008               	return
  8754  1D19                     __end_of___flsub:
  8755                           
  8756                           	psect	text17
  8757  08F5                     __ptext17:	
  8758 ;; *************** function ___fladd *****************
  8759 ;; Defined at:
  8760 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;  b               4   49[BANK0 ] long 
  8763 ;;  a               4   53[BANK0 ] long 
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;  grs             1   68[BANK0 ] unsigned char 
  8766 ;;  bexp            1   67[BANK0 ] unsigned char 
  8767 ;;  aexp            1   66[BANK0 ] unsigned char 
  8768 ;;  signs           1   65[BANK0 ] unsigned char 
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  4   49[BANK0 ] unsigned char 
  8771 ;; Registers used:
  8772 ;;		wreg, status,2, status,0
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8778 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8779 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8780 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8781 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;Total ram usage:       20 bytes
  8783 ;; Hardware stack levels used: 1
  8784 ;; This function calls:
  8785 ;;		Nothing
  8786 ;; This function is called by:
  8787 ;;		_sprintf
  8788 ;;		___flsub
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           
  8792                           
  8793                           ;psect for function ___fladd
  8794  08F5                     ___fladd:
  8795  08F5                     l2934:	
  8796                           ;incstack = 0
  8797                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  8798                           
  8799  08F5  0020               	movlb	0	; select bank0
  8800  08F6  0854               	movf	___fladd@b+3,w
  8801  08F7  3980               	andlw	128
  8802  08F8  00D9               	movwf	??___fladd
  8803  08F9  0859               	movf	??___fladd,w
  8804  08FA  00E1               	movwf	___fladd@signs
  8805  08FB                     l2936:
  8806  08FB  3554               	lslf	___fladd@b+3,w
  8807  08FC  00D9               	movwf	??___fladd
  8808  08FD  0859               	movf	??___fladd,w
  8809  08FE  00E3               	movwf	___fladd@bexp
  8810  08FF                     l2938:
  8811  08FF  1FD3               	btfss	___fladd@b+2,7
  8812  0900  2902               	goto	u3301
  8813  0901  2903               	goto	u3300
  8814  0902                     u3301:
  8815  0902  2904               	goto	l2942
  8816  0903                     u3300:
  8817  0903                     l2940:
  8818  0903  1463               	bsf	___fladd@bexp,0
  8819  0904                     l2942:
  8820  0904  0863               	movf	___fladd@bexp,w
  8821  0905  1903               	btfsc	3,2
  8822  0906  2908               	goto	u3311
  8823  0907  2909               	goto	u3310
  8824  0908                     u3311:
  8825  0908  2919               	goto	l2952
  8826  0909                     u3310:
  8827  0909                     l2944:
  8828  0909  0A63               	incf	___fladd@bexp,w
  8829  090A  1D03               	btfss	3,2
  8830  090B  290D               	goto	u3321
  8831  090C  290E               	goto	u3320
  8832  090D                     u3321:
  8833  090D  2916               	goto	l2948
  8834  090E                     u3320:
  8835  090E                     l2946:
  8836  090E  3000               	movlw	0
  8837  090F  00D4               	movwf	___fladd@b+3
  8838  0910  3000               	movlw	0
  8839  0911  00D3               	movwf	___fladd@b+2
  8840  0912  3000               	movlw	0
  8841  0913  00D2               	movwf	___fladd@b+1
  8842  0914  3000               	movlw	0
  8843  0915  00D1               	movwf	___fladd@b
  8844  0916                     l2948:
  8845  0916  17D3               	bsf	___fladd@b+2,7
  8846  0917                     l2950:
  8847  0917  01D4               	clrf	___fladd@b+3
  8848  0918  2921               	goto	l2954
  8849  0919                     l2952:
  8850  0919  3000               	movlw	0
  8851  091A  00D4               	movwf	___fladd@b+3
  8852  091B  3000               	movlw	0
  8853  091C  00D3               	movwf	___fladd@b+2
  8854  091D  3000               	movlw	0
  8855  091E  00D2               	movwf	___fladd@b+1
  8856  091F  3000               	movlw	0
  8857  0920  00D1               	movwf	___fladd@b
  8858  0921                     l2954:
  8859  0921  0858               	movf	___fladd@a+3,w
  8860  0922  3980               	andlw	128
  8861  0923  00D9               	movwf	??___fladd
  8862  0924  0859               	movf	??___fladd,w
  8863  0925  00E2               	movwf	___fladd@aexp
  8864  0926                     l2956:
  8865  0926  0862               	movf	___fladd@aexp,w
  8866  0927  0661               	xorwf	___fladd@signs,w
  8867  0928  1903               	skipnz
  8868  0929  292B               	goto	u3331
  8869  092A  292C               	goto	u3330
  8870  092B                     u3331:
  8871  092B  292D               	goto	l2960
  8872  092C                     u3330:
  8873  092C                     l2958:
  8874  092C  1761               	bsf	___fladd@signs,6
  8875  092D                     l2960:
  8876  092D  3558               	lslf	___fladd@a+3,w
  8877  092E  00D9               	movwf	??___fladd
  8878  092F  0859               	movf	??___fladd,w
  8879  0930  00E2               	movwf	___fladd@aexp
  8880  0931                     l2962:
  8881  0931  1FD7               	btfss	___fladd@a+2,7
  8882  0932  2934               	goto	u3341
  8883  0933  2935               	goto	u3340
  8884  0934                     u3341:
  8885  0934  2936               	goto	l2966
  8886  0935                     u3340:
  8887  0935                     l2964:
  8888  0935  1462               	bsf	___fladd@aexp,0
  8889  0936                     l2966:
  8890  0936  0862               	movf	___fladd@aexp,w
  8891  0937  1903               	btfsc	3,2
  8892  0938  293A               	goto	u3351
  8893  0939  293B               	goto	u3350
  8894  093A                     u3351:
  8895  093A  294B               	goto	l2976
  8896  093B                     u3350:
  8897  093B                     l2968:
  8898  093B  0A62               	incf	___fladd@aexp,w
  8899  093C  1D03               	btfss	3,2
  8900  093D  293F               	goto	u3361
  8901  093E  2940               	goto	u3360
  8902  093F                     u3361:
  8903  093F  2948               	goto	l2972
  8904  0940                     u3360:
  8905  0940                     l2970:
  8906  0940  3000               	movlw	0
  8907  0941  00D8               	movwf	___fladd@a+3
  8908  0942  3000               	movlw	0
  8909  0943  00D7               	movwf	___fladd@a+2
  8910  0944  3000               	movlw	0
  8911  0945  00D6               	movwf	___fladd@a+1
  8912  0946  3000               	movlw	0
  8913  0947  00D5               	movwf	___fladd@a
  8914  0948                     l2972:
  8915  0948  17D7               	bsf	___fladd@a+2,7
  8916  0949                     l2974:
  8917  0949  01D8               	clrf	___fladd@a+3
  8918  094A  2953               	goto	l848
  8919  094B                     l2976:
  8920  094B  3000               	movlw	0
  8921  094C  00D8               	movwf	___fladd@a+3
  8922  094D  3000               	movlw	0
  8923  094E  00D7               	movwf	___fladd@a+2
  8924  094F  3000               	movlw	0
  8925  0950  00D6               	movwf	___fladd@a+1
  8926  0951  3000               	movlw	0
  8927  0952  00D5               	movwf	___fladd@a
  8928  0953                     l848:
  8929  0953  0863               	movf	___fladd@bexp,w
  8930  0954  0262               	subwf	___fladd@aexp,w
  8931  0955  1803               	skipnc
  8932  0956  2958               	goto	u3371
  8933  0957  2959               	goto	u3370
  8934  0958                     u3371:
  8935  0958  299D               	goto	l3012
  8936  0959                     u3370:
  8937  0959                     l2978:
  8938  0959  1F61               	btfss	___fladd@signs,6
  8939  095A  295C               	goto	u3381
  8940  095B  295D               	goto	u3380
  8941  095C                     u3381:
  8942  095C  2961               	goto	l2982
  8943  095D                     u3380:
  8944  095D                     l2980:
  8945  095D  3080               	movlw	128
  8946  095E  00D9               	movwf	??___fladd
  8947  095F  0859               	movf	??___fladd,w
  8948  0960  06E1               	xorwf	___fladd@signs,f
  8949  0961                     l2982:
  8950  0961  0863               	movf	___fladd@bexp,w
  8951  0962  00D9               	movwf	??___fladd
  8952  0963  0859               	movf	??___fladd,w
  8953  0964  00E4               	movwf	___fladd@grs
  8954  0965                     l2984:
  8955  0965  0862               	movf	___fladd@aexp,w
  8956  0966  00D9               	movwf	??___fladd
  8957  0967  0859               	movf	??___fladd,w
  8958  0968  00E3               	movwf	___fladd@bexp
  8959  0969                     l2986:
  8960  0969  0864               	movf	___fladd@grs,w
  8961  096A  00D9               	movwf	??___fladd
  8962  096B  0859               	movf	??___fladd,w
  8963  096C  00E2               	movwf	___fladd@aexp
  8964  096D                     l2988:
  8965  096D  0851               	movf	___fladd@b,w
  8966  096E  00D9               	movwf	??___fladd
  8967  096F  0859               	movf	??___fladd,w
  8968  0970  00E4               	movwf	___fladd@grs
  8969  0971                     l2990:
  8970  0971  0855               	movf	___fladd@a,w
  8971  0972  00D9               	movwf	??___fladd
  8972  0973  0859               	movf	??___fladd,w
  8973  0974  00D1               	movwf	___fladd@b
  8974  0975                     l2992:
  8975  0975  0864               	movf	___fladd@grs,w
  8976  0976  00D9               	movwf	??___fladd
  8977  0977  0859               	movf	??___fladd,w
  8978  0978  00D5               	movwf	___fladd@a
  8979  0979                     l2994:
  8980  0979  0852               	movf	___fladd@b+1,w
  8981  097A  00D9               	movwf	??___fladd
  8982  097B  0859               	movf	??___fladd,w
  8983  097C  00E4               	movwf	___fladd@grs
  8984  097D                     l2996:
  8985  097D  0856               	movf	___fladd@a+1,w
  8986  097E  00D9               	movwf	??___fladd
  8987  097F  0859               	movf	??___fladd,w
  8988  0980  00D2               	movwf	___fladd@b+1
  8989  0981                     l2998:
  8990  0981  0864               	movf	___fladd@grs,w
  8991  0982  00D9               	movwf	??___fladd
  8992  0983  0859               	movf	??___fladd,w
  8993  0984  00D6               	movwf	___fladd@a+1
  8994  0985                     l3000:
  8995  0985  0853               	movf	___fladd@b+2,w
  8996  0986  00D9               	movwf	??___fladd
  8997  0987  0859               	movf	??___fladd,w
  8998  0988  00E4               	movwf	___fladd@grs
  8999  0989                     l3002:
  9000  0989  0857               	movf	___fladd@a+2,w
  9001  098A  00D9               	movwf	??___fladd
  9002  098B  0859               	movf	??___fladd,w
  9003  098C  00D3               	movwf	___fladd@b+2
  9004  098D                     l3004:
  9005  098D  0864               	movf	___fladd@grs,w
  9006  098E  00D9               	movwf	??___fladd
  9007  098F  0859               	movf	??___fladd,w
  9008  0990  00D7               	movwf	___fladd@a+2
  9009  0991                     l3006:
  9010  0991  0854               	movf	___fladd@b+3,w
  9011  0992  00D9               	movwf	??___fladd
  9012  0993  0859               	movf	??___fladd,w
  9013  0994  00E4               	movwf	___fladd@grs
  9014  0995                     l3008:
  9015  0995  0858               	movf	___fladd@a+3,w
  9016  0996  00D9               	movwf	??___fladd
  9017  0997  0859               	movf	??___fladd,w
  9018  0998  00D4               	movwf	___fladd@b+3
  9019  0999                     l3010:
  9020  0999  0864               	movf	___fladd@grs,w
  9021  099A  00D9               	movwf	??___fladd
  9022  099B  0859               	movf	??___fladd,w
  9023  099C  00D8               	movwf	___fladd@a+3
  9024  099D                     l3012:
  9025  099D  01E4               	clrf	___fladd@grs
  9026  099E                     l3014:
  9027  099E  0862               	movf	___fladd@aexp,w
  9028  099F  00D9               	movwf	??___fladd
  9029  09A0  01DA               	clrf	??___fladd+1
  9030  09A1  085A               	movf	??___fladd+1,w
  9031  09A2  00DC               	movwf	??___fladd+3
  9032  09A3  0863               	movf	___fladd@bexp,w
  9033  09A4  0259               	subwf	??___fladd,w
  9034  09A5  00DB               	movwf	??___fladd+2
  9035  09A6  1C03               	skipc
  9036  09A7  03DC               	decf	??___fladd+3,f
  9037  09A8  085C               	movf	??___fladd+3,w
  9038  09A9  3A80               	xorlw	128
  9039  09AA  00DD               	movwf	??___fladd+4
  9040  09AB  3080               	movlw	128
  9041  09AC  025D               	subwf	??___fladd+4,w
  9042  09AD  1D03               	skipz
  9043  09AE  29B1               	goto	u3395
  9044  09AF  301A               	movlw	26
  9045  09B0  025B               	subwf	??___fladd+2,w
  9046  09B1                     u3395:
  9047  09B1  1C03               	skipc
  9048  09B2  29B4               	goto	u3391
  9049  09B3  29B5               	goto	u3390
  9050  09B4                     u3391:
  9051  09B4  29ED               	goto	l3030
  9052  09B5                     u3390:
  9053  09B5                     l3016:
  9054  09B5  0020               	movlb	0	; select bank0
  9055  09B6  0854               	movf	___fladd@b+3,w
  9056  09B7  0453               	iorwf	___fladd@b+2,w
  9057  09B8  0452               	iorwf	___fladd@b+1,w
  9058  09B9  0451               	iorwf	___fladd@b,w
  9059  09BA  1D03               	skipz
  9060  09BB  29BD               	goto	u3401
  9061  09BC  29BF               	goto	u3400
  9062  09BD                     u3401:
  9063  09BD  3001               	movlw	1
  9064  09BE  29C0               	goto	u3410
  9065  09BF                     u3400:
  9066  09BF  3000               	movlw	0
  9067  09C0                     u3410:
  9068  09C0  00D9               	movwf	??___fladd
  9069  09C1  0859               	movf	??___fladd,w
  9070  09C2  00E4               	movwf	___fladd@grs
  9071  09C3  3000               	movlw	0
  9072  09C4  00D4               	movwf	___fladd@b+3
  9073  09C5  3000               	movlw	0
  9074  09C6  00D3               	movwf	___fladd@b+2
  9075  09C7  3000               	movlw	0
  9076  09C8  00D2               	movwf	___fladd@b+1
  9077  09C9  3000               	movlw	0
  9078  09CA  00D1               	movwf	___fladd@b
  9079  09CB  0862               	movf	___fladd@aexp,w
  9080  09CC  00D9               	movwf	??___fladd
  9081  09CD  0859               	movf	??___fladd,w
  9082  09CE  00E3               	movwf	___fladd@bexp
  9083  09CF  29F4               	goto	l852
  9084  09D0                     l854:
  9085  09D0  1C64               	btfss	___fladd@grs,0
  9086  09D1  29D3               	goto	u3421
  9087  09D2  29D4               	goto	u3420
  9088  09D3                     u3421:
  9089  09D3  29DA               	goto	l3020
  9090  09D4                     u3420:
  9091  09D4                     l3018:
  9092  09D4  3664               	lsrf	___fladd@grs,w
  9093  09D5  3801               	iorlw	1
  9094  09D6  00D9               	movwf	??___fladd
  9095  09D7  0859               	movf	??___fladd,w
  9096  09D8  00E4               	movwf	___fladd@grs
  9097  09D9  29DC               	goto	l3022
  9098  09DA                     l3020:
  9099  09DA  1003               	clrc
  9100  09DB  0CE4               	rrf	___fladd@grs,f
  9101  09DC                     l3022:
  9102  09DC  1C51               	btfss	___fladd@b,0
  9103  09DD  29DF               	goto	u3431
  9104  09DE  29E0               	goto	u3430
  9105  09DF                     u3431:
  9106  09DF  29E1               	goto	l3026
  9107  09E0                     u3430:
  9108  09E0                     l3024:
  9109  09E0  17E4               	bsf	___fladd@grs,7
  9110  09E1                     l3026:
  9111  09E1  3001               	movlw	1
  9112  09E2  00D9               	movwf	??___fladd
  9113  09E3                     u3445:
  9114  09E3  37D4               	asrf	___fladd@b+3,f
  9115  09E4  0CD3               	rrf	___fladd@b+2,f
  9116  09E5  0CD2               	rrf	___fladd@b+1,f
  9117  09E6  0CD1               	rrf	___fladd@b,f
  9118  09E7  0BD9               	decfsz	??___fladd& (0+127),f
  9119  09E8  29E3               	goto	u3445
  9120  09E9                     l3028:
  9121  09E9  3001               	movlw	1
  9122  09EA  00D9               	movwf	??___fladd
  9123  09EB  0859               	movf	??___fladd,w
  9124  09EC  07E3               	addwf	___fladd@bexp,f
  9125  09ED                     l3030:
  9126  09ED  0020               	movlb	0	; select bank0
  9127  09EE  0862               	movf	___fladd@aexp,w
  9128  09EF  0263               	subwf	___fladd@bexp,w
  9129  09F0  1C03               	skipc
  9130  09F1  29F3               	goto	u3451
  9131  09F2  29F4               	goto	u3450
  9132  09F3                     u3451:
  9133  09F3  29D0               	goto	l854
  9134  09F4                     u3450:
  9135  09F4                     l852:
  9136  09F4  1B61               	btfsc	___fladd@signs,6
  9137  09F5  29F7               	goto	u3461
  9138  09F6  29F8               	goto	u3460
  9139  09F7                     u3461:
  9140  09F7  2A30               	goto	l3056
  9141  09F8                     u3460:
  9142  09F8                     l3032:
  9143  09F8  0863               	movf	___fladd@bexp,w
  9144  09F9  1D03               	btfss	3,2
  9145  09FA  29FC               	goto	u3471
  9146  09FB  29FD               	goto	u3470
  9147  09FC                     u3471:
  9148  09FC  2A06               	goto	l3038
  9149  09FD                     u3470:
  9150  09FD                     l3034:
  9151  09FD  3000               	movlw	0
  9152  09FE  00D4               	movwf	?___fladd+3
  9153  09FF  3000               	movlw	0
  9154  0A00  00D3               	movwf	?___fladd+2
  9155  0A01  3000               	movlw	0
  9156  0A02  00D2               	movwf	?___fladd+1
  9157  0A03  3000               	movlw	0
  9158  0A04  00D1               	movwf	?___fladd
  9159  0A05  2B2C               	goto	l861
  9160  0A06                     l3038:
  9161  0A06  0855               	movf	___fladd@a,w
  9162  0A07  07D1               	addwf	___fladd@b,f
  9163  0A08  0856               	movf	___fladd@a+1,w
  9164  0A09  3DD2               	addwfc	___fladd@b+1,f
  9165  0A0A  0857               	movf	___fladd@a+2,w
  9166  0A0B  3DD3               	addwfc	___fladd@b+2,f
  9167  0A0C  0858               	movf	___fladd@a+3,w
  9168  0A0D  3DD4               	addwfc	___fladd@b+3,f
  9169  0A0E                     l3040:
  9170  0A0E  1C54               	btfss	___fladd@b+3,0
  9171  0A0F  2A11               	goto	u3481
  9172  0A10  2A12               	goto	u3480
  9173  0A11                     u3481:
  9174  0A11  2ABC               	goto	l3090
  9175  0A12                     u3480:
  9176  0A12                     l3042:
  9177  0A12  1C64               	btfss	___fladd@grs,0
  9178  0A13  2A15               	goto	u3491
  9179  0A14  2A16               	goto	u3490
  9180  0A15                     u3491:
  9181  0A15  2A1C               	goto	l3046
  9182  0A16                     u3490:
  9183  0A16                     l3044:
  9184  0A16  3664               	lsrf	___fladd@grs,w
  9185  0A17  3801               	iorlw	1
  9186  0A18  00D9               	movwf	??___fladd
  9187  0A19  0859               	movf	??___fladd,w
  9188  0A1A  00E4               	movwf	___fladd@grs
  9189  0A1B  2A1E               	goto	l3048
  9190  0A1C                     l3046:
  9191  0A1C  1003               	clrc
  9192  0A1D  0CE4               	rrf	___fladd@grs,f
  9193  0A1E                     l3048:
  9194  0A1E  1C51               	btfss	___fladd@b,0
  9195  0A1F  2A21               	goto	u3501
  9196  0A20  2A22               	goto	u3500
  9197  0A21                     u3501:
  9198  0A21  2A23               	goto	l3052
  9199  0A22                     u3500:
  9200  0A22                     l3050:
  9201  0A22  17E4               	bsf	___fladd@grs,7
  9202  0A23                     l3052:
  9203  0A23  3001               	movlw	1
  9204  0A24  00D9               	movwf	??___fladd
  9205  0A25                     u3515:
  9206  0A25  37D4               	asrf	___fladd@b+3,f
  9207  0A26  0CD3               	rrf	___fladd@b+2,f
  9208  0A27  0CD2               	rrf	___fladd@b+1,f
  9209  0A28  0CD1               	rrf	___fladd@b,f
  9210  0A29  0BD9               	decfsz	??___fladd& (0+127),f
  9211  0A2A  2A25               	goto	u3515
  9212  0A2B                     l3054:
  9213  0A2B  3001               	movlw	1
  9214  0A2C  00D9               	movwf	??___fladd
  9215  0A2D  0859               	movf	??___fladd,w
  9216  0A2E  07E3               	addwf	___fladd@bexp,f
  9217  0A2F  2ABC               	goto	l3090
  9218  0A30                     l3056:
  9219  0A30  0854               	movf	___fladd@b+3,w
  9220  0A31  3A80               	xorlw	128
  9221  0A32  00D9               	movwf	??___fladd
  9222  0A33  0858               	movf	___fladd@a+3,w
  9223  0A34  3A80               	xorlw	128
  9224  0A35  0259               	subwf	??___fladd,w
  9225  0A36  1D03               	skipz
  9226  0A37  2A42               	goto	u3523
  9227  0A38  0857               	movf	___fladd@a+2,w
  9228  0A39  0253               	subwf	___fladd@b+2,w
  9229  0A3A  1D03               	skipz
  9230  0A3B  2A42               	goto	u3523
  9231  0A3C  0856               	movf	___fladd@a+1,w
  9232  0A3D  0252               	subwf	___fladd@b+1,w
  9233  0A3E  1D03               	skipz
  9234  0A3F  2A42               	goto	u3523
  9235  0A40  0855               	movf	___fladd@a,w
  9236  0A41  0251               	subwf	___fladd@b,w
  9237  0A42                     u3523:
  9238  0A42  1803               	skipnc
  9239  0A43  2A45               	goto	u3521
  9240  0A44  2A46               	goto	u3520
  9241  0A45                     u3521:
  9242  0A45  2A7E               	goto	l3066
  9243  0A46                     u3520:
  9244  0A46                     l3058:
  9245  0A46  30FF               	movlw	255
  9246  0A47  00D9               	movwf	??___fladd
  9247  0A48  30FF               	movlw	255
  9248  0A49  00DA               	movwf	??___fladd+1
  9249  0A4A  30FF               	movlw	255
  9250  0A4B  00DB               	movwf	??___fladd+2
  9251  0A4C  30FF               	movlw	255
  9252  0A4D  00DC               	movwf	??___fladd+3
  9253  0A4E  0851               	movf	___fladd@b,w
  9254  0A4F  0255               	subwf	___fladd@a,w
  9255  0A50  00DD               	movwf	??___fladd+4
  9256  0A51  0852               	movf	___fladd@b+1,w
  9257  0A52  3B56               	subwfb	___fladd@a+1,w
  9258  0A53  00DE               	movwf	??___fladd+5
  9259  0A54  0853               	movf	___fladd@b+2,w
  9260  0A55  3B57               	subwfb	___fladd@a+2,w
  9261  0A56  00DF               	movwf	??___fladd+6
  9262  0A57  0854               	movf	___fladd@b+3,w
  9263  0A58  3B58               	subwfb	___fladd@a+3,w
  9264  0A59  00E0               	movwf	??___fladd+7
  9265  0A5A  085D               	movf	??___fladd+4,w
  9266  0A5B  07D9               	addwf	??___fladd,f
  9267  0A5C  085E               	movf	??___fladd+5,w
  9268  0A5D  3DDA               	addwfc	??___fladd+1,f
  9269  0A5E  085F               	movf	??___fladd+6,w
  9270  0A5F  3DDB               	addwfc	??___fladd+2,f
  9271  0A60  0860               	movf	??___fladd+7,w
  9272  0A61  3DDC               	addwfc	??___fladd+3,f
  9273  0A62  085C               	movf	??___fladd+3,w
  9274  0A63  00D4               	movwf	___fladd@b+3
  9275  0A64  085B               	movf	??___fladd+2,w
  9276  0A65  00D3               	movwf	___fladd@b+2
  9277  0A66  085A               	movf	??___fladd+1,w
  9278  0A67  00D2               	movwf	___fladd@b+1
  9279  0A68  0859               	movf	??___fladd,w
  9280  0A69  00D1               	movwf	___fladd@b
  9281  0A6A                     l3060:
  9282  0A6A  3080               	movlw	128
  9283  0A6B  00D9               	movwf	??___fladd
  9284  0A6C  0859               	movf	??___fladd,w
  9285  0A6D  06E1               	xorwf	___fladd@signs,f
  9286  0A6E  09E4               	comf	___fladd@grs,f
  9287  0A6F  0AE4               	incf	___fladd@grs,f
  9288  0A70                     l3062:
  9289  0A70  0864               	movf	___fladd@grs,w
  9290  0A71  1D03               	btfss	3,2
  9291  0A72  2A74               	goto	u3531
  9292  0A73  2A75               	goto	u3530
  9293  0A74                     u3531:
  9294  0A74  2A86               	goto	l869
  9295  0A75                     u3530:
  9296  0A75                     l3064:
  9297  0A75  3001               	movlw	1
  9298  0A76  07D1               	addwf	___fladd@b,f
  9299  0A77  3000               	movlw	0
  9300  0A78  3DD2               	addwfc	___fladd@b+1,f
  9301  0A79  3000               	movlw	0
  9302  0A7A  3DD3               	addwfc	___fladd@b+2,f
  9303  0A7B  3000               	movlw	0
  9304  0A7C  3DD4               	addwfc	___fladd@b+3,f
  9305  0A7D  2A86               	goto	l869
  9306  0A7E                     l3066:
  9307  0A7E  0855               	movf	___fladd@a,w
  9308  0A7F  02D1               	subwf	___fladd@b,f
  9309  0A80  0856               	movf	___fladd@a+1,w
  9310  0A81  3BD2               	subwfb	___fladd@b+1,f
  9311  0A82  0857               	movf	___fladd@a+2,w
  9312  0A83  3BD3               	subwfb	___fladd@b+2,f
  9313  0A84  0858               	movf	___fladd@a+3,w
  9314  0A85  3BD4               	subwfb	___fladd@b+3,f
  9315  0A86                     l869:
  9316  0A86  0854               	movf	___fladd@b+3,w
  9317  0A87  0453               	iorwf	___fladd@b+2,w
  9318  0A88  0452               	iorwf	___fladd@b+1,w
  9319  0A89  0451               	iorwf	___fladd@b,w
  9320  0A8A  1D03               	skipz
  9321  0A8B  2A8D               	goto	u3541
  9322  0A8C  2A8E               	goto	u3540
  9323  0A8D                     u3541:
  9324  0A8D  2AB8               	goto	l3088
  9325  0A8E                     u3540:
  9326  0A8E                     l3068:
  9327  0A8E  0864               	movf	___fladd@grs,w
  9328  0A8F  1D03               	btfss	3,2
  9329  0A90  2A92               	goto	u3551
  9330  0A91  2A93               	goto	u3550
  9331  0A92                     u3551:
  9332  0A92  2AB8               	goto	l3088
  9333  0A93                     u3550:
  9334  0A93                     l3070:
  9335  0A93  3000               	movlw	0
  9336  0A94  00D4               	movwf	?___fladd+3
  9337  0A95  3000               	movlw	0
  9338  0A96  00D3               	movwf	?___fladd+2
  9339  0A97  3000               	movlw	0
  9340  0A98  00D2               	movwf	?___fladd+1
  9341  0A99  3000               	movlw	0
  9342  0A9A  00D1               	movwf	?___fladd
  9343  0A9B  2B2C               	goto	l861
  9344  0A9C                     l3074:
  9345  0A9C  3001               	movlw	1
  9346  0A9D                     u3565:
  9347  0A9D  35D1               	lslf	___fladd@b,f
  9348  0A9E  0DD2               	rlf	___fladd@b+1,f
  9349  0A9F  0DD3               	rlf	___fladd@b+2,f
  9350  0AA0  0DD4               	rlf	___fladd@b+3,f
  9351  0AA1  0B89               	decfsz	9,f
  9352  0AA2  2A9D               	goto	u3565
  9353  0AA3                     l3076:
  9354  0AA3  1FE4               	btfss	___fladd@grs,7
  9355  0AA4  2AA6               	goto	u3571
  9356  0AA5  2AA7               	goto	u3570
  9357  0AA6                     u3571:
  9358  0AA6  2AA8               	goto	l873
  9359  0AA7                     u3570:
  9360  0AA7                     l3078:
  9361  0AA7  1451               	bsf	___fladd@b,0
  9362  0AA8                     l873:
  9363  0AA8  1C64               	btfss	___fladd@grs,0
  9364  0AA9  2AAB               	goto	u3581
  9365  0AAA  2AAC               	goto	u3580
  9366  0AAB                     u3581:
  9367  0AAB  2AAF               	goto	l3082
  9368  0AAC                     u3580:
  9369  0AAC                     l3080:
  9370  0AAC  1403               	setc
  9371  0AAD  0DE4               	rlf	___fladd@grs,f
  9372  0AAE  2AB1               	goto	l3084
  9373  0AAF                     l3082:
  9374  0AAF  1003               	clrc
  9375  0AB0  0DE4               	rlf	___fladd@grs,f
  9376  0AB1                     l3084:
  9377  0AB1  0863               	movf	___fladd@bexp,w
  9378  0AB2  1903               	btfsc	3,2
  9379  0AB3  2AB5               	goto	u3591
  9380  0AB4  2AB6               	goto	u3590
  9381  0AB5                     u3591:
  9382  0AB5  2AB8               	goto	l3088
  9383  0AB6                     u3590:
  9384  0AB6                     l3086:
  9385  0AB6  3001               	movlw	1
  9386  0AB7  02E3               	subwf	___fladd@bexp,f
  9387  0AB8                     l3088:
  9388  0AB8  1FD3               	btfss	___fladd@b+2,7
  9389  0AB9  2ABB               	goto	u3601
  9390  0ABA  2ABC               	goto	u3600
  9391  0ABB                     u3601:
  9392  0ABB  2A9C               	goto	l3074
  9393  0ABC                     u3600:
  9394  0ABC                     l3090:
  9395  0ABC  01E2               	clrf	___fladd@aexp
  9396  0ABD                     l3092:
  9397  0ABD  1FE4               	btfss	___fladd@grs,7
  9398  0ABE  2AC0               	goto	u3611
  9399  0ABF  2AC1               	goto	u3610
  9400  0AC0                     u3611:
  9401  0AC0  2ACF               	goto	l3100
  9402  0AC1                     u3610:
  9403  0AC1                     l3094:
  9404  0AC1  0864               	movf	___fladd@grs,w
  9405  0AC2  397F               	andlw	127
  9406  0AC3  1903               	btfsc	3,2
  9407  0AC4  2AC6               	goto	u3621
  9408  0AC5  2AC7               	goto	u3620
  9409  0AC6                     u3621:
  9410  0AC6  2ACA               	goto	l879
  9411  0AC7                     u3620:
  9412  0AC7                     l3096:
  9413  0AC7  01E2               	clrf	___fladd@aexp
  9414  0AC8  0AE2               	incf	___fladd@aexp,f
  9415  0AC9  2ACF               	goto	l3100
  9416  0ACA                     l879:
  9417  0ACA  1C51               	btfss	___fladd@b,0
  9418  0ACB  2ACD               	goto	u3631
  9419  0ACC  2ACE               	goto	u3630
  9420  0ACD                     u3631:
  9421  0ACD  2ACF               	goto	l3100
  9422  0ACE                     u3630:
  9423  0ACE  2AC7               	goto	l3096
  9424  0ACF                     l3100:
  9425  0ACF  0862               	movf	___fladd@aexp,w
  9426  0AD0  1903               	btfsc	3,2
  9427  0AD1  2AD3               	goto	u3641
  9428  0AD2  2AD4               	goto	u3640
  9429  0AD3                     u3641:
  9430  0AD3  2B01               	goto	l882
  9431  0AD4                     u3640:
  9432  0AD4                     l3102:
  9433  0AD4  3001               	movlw	1
  9434  0AD5  07D1               	addwf	___fladd@b,f
  9435  0AD6  3000               	movlw	0
  9436  0AD7  3DD2               	addwfc	___fladd@b+1,f
  9437  0AD8  3000               	movlw	0
  9438  0AD9  3DD3               	addwfc	___fladd@b+2,f
  9439  0ADA  3000               	movlw	0
  9440  0ADB  3DD4               	addwfc	___fladd@b+3,f
  9441  0ADC                     l3104:
  9442  0ADC  1C54               	btfss	___fladd@b+3,0
  9443  0ADD  2ADF               	goto	u3651
  9444  0ADE  2AE0               	goto	u3650
  9445  0ADF                     u3651:
  9446  0ADF  2B01               	goto	l882
  9447  0AE0                     u3650:
  9448  0AE0                     l3106:
  9449  0AE0  0851               	movf	___fladd@b,w
  9450  0AE1  00D9               	movwf	??___fladd
  9451  0AE2  0852               	movf	___fladd@b+1,w
  9452  0AE3  00DA               	movwf	??___fladd+1
  9453  0AE4  0853               	movf	___fladd@b+2,w
  9454  0AE5  00DB               	movwf	??___fladd+2
  9455  0AE6  0854               	movf	___fladd@b+3,w
  9456  0AE7  00DC               	movwf	??___fladd+3
  9457  0AE8  3001               	movlw	1
  9458  0AE9  00DD               	movwf	??___fladd+4
  9459  0AEA                     u3665:
  9460  0AEA  37DC               	asrf	??___fladd+3,f
  9461  0AEB  0CDB               	rrf	??___fladd+2,f
  9462  0AEC  0CDA               	rrf	??___fladd+1,f
  9463  0AED  0CD9               	rrf	??___fladd,f
  9464  0AEE                     u3660:
  9465  0AEE  0BDD               	decfsz	??___fladd+4,f
  9466  0AEF  2AEA               	goto	u3665
  9467  0AF0  085C               	movf	??___fladd+3,w
  9468  0AF1  00D4               	movwf	___fladd@b+3
  9469  0AF2  085B               	movf	??___fladd+2,w
  9470  0AF3  00D3               	movwf	___fladd@b+2
  9471  0AF4  085A               	movf	??___fladd+1,w
  9472  0AF5  00D2               	movwf	___fladd@b+1
  9473  0AF6  0859               	movf	??___fladd,w
  9474  0AF7  00D1               	movwf	___fladd@b
  9475  0AF8  0A63               	incf	___fladd@bexp,w
  9476  0AF9  1903               	btfsc	3,2
  9477  0AFA  2AFC               	goto	u3671
  9478  0AFB  2AFD               	goto	u3670
  9479  0AFC                     u3671:
  9480  0AFC  2B01               	goto	l882
  9481  0AFD                     u3670:
  9482  0AFD                     l3108:
  9483  0AFD  3001               	movlw	1
  9484  0AFE  00D9               	movwf	??___fladd
  9485  0AFF  0859               	movf	??___fladd,w
  9486  0B00  07E3               	addwf	___fladd@bexp,f
  9487  0B01                     l882:
  9488  0B01  0A63               	incf	___fladd@bexp,w
  9489  0B02  1903               	btfsc	3,2
  9490  0B03  2B05               	goto	u3681
  9491  0B04  2B06               	goto	u3680
  9492  0B05                     u3681:
  9493  0B05  2B0B               	goto	l3112
  9494  0B06                     u3680:
  9495  0B06                     l3110:
  9496  0B06  0863               	movf	___fladd@bexp,w
  9497  0B07  1D03               	btfss	3,2
  9498  0B08  2B0A               	goto	u3691
  9499  0B09  2B0B               	goto	u3690
  9500  0B0A                     u3691:
  9501  0B0A  2B19               	goto	l3118
  9502  0B0B                     u3690:
  9503  0B0B                     l3112:
  9504  0B0B  3000               	movlw	0
  9505  0B0C  00D4               	movwf	___fladd@b+3
  9506  0B0D  3000               	movlw	0
  9507  0B0E  00D3               	movwf	___fladd@b+2
  9508  0B0F  3000               	movlw	0
  9509  0B10  00D2               	movwf	___fladd@b+1
  9510  0B11  3000               	movlw	0
  9511  0B12  00D1               	movwf	___fladd@b
  9512  0B13                     l3114:
  9513  0B13  0863               	movf	___fladd@bexp,w
  9514  0B14  1D03               	btfss	3,2
  9515  0B15  2B17               	goto	u3701
  9516  0B16  2B18               	goto	u3700
  9517  0B17                     u3701:
  9518  0B17  2B19               	goto	l3118
  9519  0B18                     u3700:
  9520  0B18                     l3116:
  9521  0B18  01E1               	clrf	___fladd@signs
  9522  0B19                     l3118:
  9523  0B19  1C63               	btfss	___fladd@bexp,0
  9524  0B1A  2B1C               	goto	u3711
  9525  0B1B  2B1D               	goto	u3710
  9526  0B1C                     u3711:
  9527  0B1C  2B1F               	goto	l3122
  9528  0B1D                     u3710:
  9529  0B1D                     l3120:
  9530  0B1D  17D3               	bsf	___fladd@b+2,7
  9531  0B1E  2B23               	goto	l890
  9532  0B1F                     l3122:
  9533  0B1F  307F               	movlw	127
  9534  0B20  00D9               	movwf	??___fladd
  9535  0B21  0859               	movf	??___fladd,w
  9536  0B22  05D3               	andwf	___fladd@b+2,f
  9537  0B23                     l890:
  9538  0B23  3663               	lsrf	___fladd@bexp,w
  9539  0B24  00D9               	movwf	??___fladd
  9540  0B25  0859               	movf	??___fladd,w
  9541  0B26  00D4               	movwf	___fladd@b+3
  9542  0B27                     l3124:
  9543  0B27  1FE1               	btfss	___fladd@signs,7
  9544  0B28  2B2A               	goto	u3721
  9545  0B29  2B2B               	goto	u3720
  9546  0B2A                     u3721:
  9547  0B2A  2B2C               	goto	l891
  9548  0B2B                     u3720:
  9549  0B2B                     l3126:
  9550  0B2B  17D4               	bsf	___fladd@b+3,7
  9551  0B2C                     l891:
  9552  0B2C                     l861:
  9553  0B2C  0008               	return
  9554  0B2D                     __end_of___fladd:
  9555                           
  9556                           	psect	text18
  9557  1C64                     __ptext18:	
  9558 ;; *************** function ___flneg *****************
  9559 ;; Defined at:
  9560 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  f1              4    0[COMMON] unsigned char 
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;		None
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  4    0[COMMON] unsigned char 
  9567 ;; Registers used:
  9568 ;;		wreg
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9574 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9577 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9578 ;;Total ram usage:        4 bytes
  9579 ;; Hardware stack levels used: 1
  9580 ;; This function calls:
  9581 ;;		Nothing
  9582 ;; This function is called by:
  9583 ;;		_sprintf
  9584 ;; This function uses a non-reentrant model
  9585 ;;
  9586                           
  9587                           
  9588                           ;psect for function ___flneg
  9589  1C64                     ___flneg:
  9590  1C64                     l3592:	
  9591                           ;incstack = 0
  9592                           ; Regs used in ___flneg: [wreg]
  9593                           
  9594  1C64  0873               	movf	___flneg@f1+3,w
  9595  1C65  0472               	iorwf	___flneg@f1+2,w
  9596  1C66  0471               	iorwf	___flneg@f1+1,w
  9597  1C67  0470               	iorwf	___flneg@f1,w
  9598  1C68  1903               	skipnz
  9599  1C69  2C6B               	goto	u4551
  9600  1C6A  2C6C               	goto	u4550
  9601  1C6B                     u4551:
  9602  1C6B  2C6E               	goto	l3596
  9603  1C6C                     u4550:
  9604  1C6C                     l3594:
  9605  1C6C  3080               	movlw	128
  9606  1C6D  06F3               	xorwf	___flneg@f1+3,f
  9607  1C6E                     l3596:
  9608  1C6E                     l720:
  9609  1C6E  0008               	return
  9610  1C6F                     __end_of___flneg:
  9611                           
  9612                           	psect	text19
  9613  0018                     __ptext19:	
  9614 ;; *************** function ___flge *****************
  9615 ;; Defined at:
  9616 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  9617 ;; Parameters:    Size  Location     Type
  9618 ;;  ff1             4    0[COMMON] unsigned char 
  9619 ;;  ff2             4    4[COMMON] unsigned char 
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;		None
  9622 ;; Return value:  Size  Location     Type
  9623 ;;		None               void
  9624 ;; Registers used:
  9625 ;;		wreg, status,2, status,0
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9631 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9633 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9634 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;Total ram usage:       12 bytes
  9636 ;; Hardware stack levels used: 1
  9637 ;; This function calls:
  9638 ;;		Nothing
  9639 ;; This function is called by:
  9640 ;;		_sprintf
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           
  9645                           ;psect for function ___flge
  9646  0018                     ___flge:
  9647  0018                     l3572:	
  9648                           ;incstack = 0
  9649                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9650                           
  9651  0018  3000               	movlw	0
  9652  0019  0570               	andwf	___flge@ff1,w
  9653  001A  00F8               	movwf	??___flge
  9654  001B  3000               	movlw	0
  9655  001C  0571               	andwf	___flge@ff1+1,w
  9656  001D  00F9               	movwf	??___flge+1
  9657  001E  3080               	movlw	128
  9658  001F  0572               	andwf	___flge@ff1+2,w
  9659  0020  00FA               	movwf	??___flge+2
  9660  0021  307F               	movlw	127
  9661  0022  0573               	andwf	___flge@ff1+3,w
  9662  0023  00FB               	movwf	??___flge+3
  9663  0024  087B               	movf	??___flge+3,w
  9664  0025  047A               	iorwf	??___flge+2,w
  9665  0026  0479               	iorwf	??___flge+1,w
  9666  0027  0478               	iorwf	??___flge,w
  9667  0028  1D03               	skipz
  9668  0029  282B               	goto	u4501
  9669  002A  282C               	goto	u4500
  9670  002B                     u4501:
  9671  002B  2834               	goto	l712
  9672  002C                     u4500:
  9673  002C                     l3574:
  9674  002C  3000               	movlw	0
  9675  002D  00F3               	movwf	___flge@ff1+3
  9676  002E  3000               	movlw	0
  9677  002F  00F2               	movwf	___flge@ff1+2
  9678  0030  3000               	movlw	0
  9679  0031  00F1               	movwf	___flge@ff1+1
  9680  0032  3000               	movlw	0
  9681  0033  00F0               	movwf	___flge@ff1
  9682  0034                     l712:
  9683  0034  3000               	movlw	0
  9684  0035  0574               	andwf	___flge@ff2,w
  9685  0036  00F8               	movwf	??___flge
  9686  0037  3000               	movlw	0
  9687  0038  0575               	andwf	___flge@ff2+1,w
  9688  0039  00F9               	movwf	??___flge+1
  9689  003A  3080               	movlw	128
  9690  003B  0576               	andwf	___flge@ff2+2,w
  9691  003C  00FA               	movwf	??___flge+2
  9692  003D  307F               	movlw	127
  9693  003E  0577               	andwf	___flge@ff2+3,w
  9694  003F  00FB               	movwf	??___flge+3
  9695  0040  087B               	movf	??___flge+3,w
  9696  0041  047A               	iorwf	??___flge+2,w
  9697  0042  0479               	iorwf	??___flge+1,w
  9698  0043  0478               	iorwf	??___flge,w
  9699  0044  1D03               	skipz
  9700  0045  2847               	goto	u4511
  9701  0046  2848               	goto	u4510
  9702  0047                     u4511:
  9703  0047  2850               	goto	l3578
  9704  0048                     u4510:
  9705  0048                     l3576:
  9706  0048  3000               	movlw	0
  9707  0049  00F7               	movwf	___flge@ff2+3
  9708  004A  3000               	movlw	0
  9709  004B  00F6               	movwf	___flge@ff2+2
  9710  004C  3000               	movlw	0
  9711  004D  00F5               	movwf	___flge@ff2+1
  9712  004E  3000               	movlw	0
  9713  004F  00F4               	movwf	___flge@ff2
  9714  0050                     l3578:
  9715  0050  1FF3               	btfss	___flge@ff1+3,7
  9716  0051  2853               	goto	u4521
  9717  0052  2854               	goto	u4520
  9718  0053                     u4521:
  9719  0053  286C               	goto	l3582
  9720  0054                     u4520:
  9721  0054                     l3580:
  9722  0054  3000               	movlw	0
  9723  0055  00F8               	movwf	??___flge
  9724  0056  3000               	movlw	0
  9725  0057  00F9               	movwf	??___flge+1
  9726  0058  3000               	movlw	0
  9727  0059  00FA               	movwf	??___flge+2
  9728  005A  3080               	movlw	128
  9729  005B  00FB               	movwf	??___flge+3
  9730  005C  0870               	movf	___flge@ff1,w
  9731  005D  02F8               	subwf	??___flge,f
  9732  005E  0871               	movf	___flge@ff1+1,w
  9733  005F  3BF9               	subwfb	??___flge+1,f
  9734  0060  0872               	movf	___flge@ff1+2,w
  9735  0061  3BFA               	subwfb	??___flge+2,f
  9736  0062  0873               	movf	___flge@ff1+3,w
  9737  0063  3BFB               	subwfb	??___flge+3,f
  9738  0064  087B               	movf	??___flge+3,w
  9739  0065  00F3               	movwf	___flge@ff1+3
  9740  0066  087A               	movf	??___flge+2,w
  9741  0067  00F2               	movwf	___flge@ff1+2
  9742  0068  0879               	movf	??___flge+1,w
  9743  0069  00F1               	movwf	___flge@ff1+1
  9744  006A  0878               	movf	??___flge,w
  9745  006B  00F0               	movwf	___flge@ff1
  9746  006C                     l3582:
  9747  006C  1FF7               	btfss	___flge@ff2+3,7
  9748  006D  286F               	goto	u4531
  9749  006E  2870               	goto	u4530
  9750  006F                     u4531:
  9751  006F  2888               	goto	l715
  9752  0070                     u4530:
  9753  0070                     l3584:
  9754  0070  3000               	movlw	0
  9755  0071  00F8               	movwf	??___flge
  9756  0072  3000               	movlw	0
  9757  0073  00F9               	movwf	??___flge+1
  9758  0074  3000               	movlw	0
  9759  0075  00FA               	movwf	??___flge+2
  9760  0076  3080               	movlw	128
  9761  0077  00FB               	movwf	??___flge+3
  9762  0078  0874               	movf	___flge@ff2,w
  9763  0079  02F8               	subwf	??___flge,f
  9764  007A  0875               	movf	___flge@ff2+1,w
  9765  007B  3BF9               	subwfb	??___flge+1,f
  9766  007C  0876               	movf	___flge@ff2+2,w
  9767  007D  3BFA               	subwfb	??___flge+2,f
  9768  007E  0877               	movf	___flge@ff2+3,w
  9769  007F  3BFB               	subwfb	??___flge+3,f
  9770  0080  087B               	movf	??___flge+3,w
  9771  0081  00F7               	movwf	___flge@ff2+3
  9772  0082  087A               	movf	??___flge+2,w
  9773  0083  00F6               	movwf	___flge@ff2+2
  9774  0084  0879               	movf	??___flge+1,w
  9775  0085  00F5               	movwf	___flge@ff2+1
  9776  0086  0878               	movf	??___flge,w
  9777  0087  00F4               	movwf	___flge@ff2
  9778  0088                     l715:
  9779  0088  3080               	movlw	128
  9780  0089  06F3               	xorwf	___flge@ff1+3,f
  9781  008A  3080               	movlw	128
  9782  008B  06F7               	xorwf	___flge@ff2+3,f
  9783  008C  0877               	movf	___flge@ff2+3,w
  9784  008D  0273               	subwf	___flge@ff1+3,w
  9785  008E  1D03               	skipz
  9786  008F  289A               	goto	u4545
  9787  0090  0876               	movf	___flge@ff2+2,w
  9788  0091  0272               	subwf	___flge@ff1+2,w
  9789  0092  1D03               	skipz
  9790  0093  289A               	goto	u4545
  9791  0094  0875               	movf	___flge@ff2+1,w
  9792  0095  0271               	subwf	___flge@ff1+1,w
  9793  0096  1D03               	skipz
  9794  0097  289A               	goto	u4545
  9795  0098  0874               	movf	___flge@ff2,w
  9796  0099  0270               	subwf	___flge@ff1,w
  9797  009A                     u4545:
  9798  009A  1803               	skipnc
  9799  009B  289D               	goto	u4541
  9800  009C  289E               	goto	u4540
  9801  009D                     u4541:
  9802  009D  28A0               	goto	l3588
  9803  009E                     u4540:
  9804  009E                     l3586:
  9805  009E  1003               	clrc
  9806  009F  28A1               	goto	l716
  9807  00A0                     l3588:
  9808  00A0  1403               	setc
  9809  00A1                     l716:
  9810  00A1  0008               	return
  9811  00A2                     __end_of___flge:
  9812                           
  9813                           	psect	text20
  9814  1EA5                     __ptext20:	
  9815 ;; *************** function ___fleq *****************
  9816 ;; Defined at:
  9817 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;  ff1             4    0[COMMON] unsigned char 
  9820 ;;  ff2             4    4[COMMON] unsigned char 
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;		None
  9823 ;; Return value:  Size  Location     Type
  9824 ;;		None               void
  9825 ;; Registers used:
  9826 ;;		wreg, status,2, status,0
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9832 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9836 ;;Total ram usage:       12 bytes
  9837 ;; Hardware stack levels used: 1
  9838 ;; This function calls:
  9839 ;;		Nothing
  9840 ;; This function is called by:
  9841 ;;		_sprintf
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           
  9846                           ;psect for function ___fleq
  9847  1EA5                     ___fleq:
  9848  1EA5                     l3560:	
  9849                           ;incstack = 0
  9850                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9851                           
  9852  1EA5  3000               	movlw	0
  9853  1EA6  0570               	andwf	___fleq@ff1,w
  9854  1EA7  00F8               	movwf	??___fleq
  9855  1EA8  3000               	movlw	0
  9856  1EA9  0571               	andwf	___fleq@ff1+1,w
  9857  1EAA  00F9               	movwf	??___fleq+1
  9858  1EAB  3080               	movlw	128
  9859  1EAC  0572               	andwf	___fleq@ff1+2,w
  9860  1EAD  00FA               	movwf	??___fleq+2
  9861  1EAE  307F               	movlw	127
  9862  1EAF  0573               	andwf	___fleq@ff1+3,w
  9863  1EB0  00FB               	movwf	??___fleq+3
  9864  1EB1  087B               	movf	??___fleq+3,w
  9865  1EB2  047A               	iorwf	??___fleq+2,w
  9866  1EB3  0479               	iorwf	??___fleq+1,w
  9867  1EB4  0478               	iorwf	??___fleq,w
  9868  1EB5  1D03               	skipz
  9869  1EB6  2EB8               	goto	u4471
  9870  1EB7  2EB9               	goto	u4470
  9871  1EB8                     u4471:
  9872  1EB8  2EC1               	goto	l707
  9873  1EB9                     u4470:
  9874  1EB9                     l3562:
  9875  1EB9  3000               	movlw	0
  9876  1EBA  00F3               	movwf	___fleq@ff1+3
  9877  1EBB  3000               	movlw	0
  9878  1EBC  00F2               	movwf	___fleq@ff1+2
  9879  1EBD  3000               	movlw	0
  9880  1EBE  00F1               	movwf	___fleq@ff1+1
  9881  1EBF  3000               	movlw	0
  9882  1EC0  00F0               	movwf	___fleq@ff1
  9883  1EC1                     l707:
  9884  1EC1  3000               	movlw	0
  9885  1EC2  0574               	andwf	___fleq@ff2,w
  9886  1EC3  00F8               	movwf	??___fleq
  9887  1EC4  3000               	movlw	0
  9888  1EC5  0575               	andwf	___fleq@ff2+1,w
  9889  1EC6  00F9               	movwf	??___fleq+1
  9890  1EC7  3080               	movlw	128
  9891  1EC8  0576               	andwf	___fleq@ff2+2,w
  9892  1EC9  00FA               	movwf	??___fleq+2
  9893  1ECA  307F               	movlw	127
  9894  1ECB  0577               	andwf	___fleq@ff2+3,w
  9895  1ECC  00FB               	movwf	??___fleq+3
  9896  1ECD  087B               	movf	??___fleq+3,w
  9897  1ECE  047A               	iorwf	??___fleq+2,w
  9898  1ECF  0479               	iorwf	??___fleq+1,w
  9899  1ED0  0478               	iorwf	??___fleq,w
  9900  1ED1  1D03               	skipz
  9901  1ED2  2ED4               	goto	u4481
  9902  1ED3  2ED5               	goto	u4480
  9903  1ED4                     u4481:
  9904  1ED4  2EDD               	goto	l708
  9905  1ED5                     u4480:
  9906  1ED5                     l3564:
  9907  1ED5  3000               	movlw	0
  9908  1ED6  00F7               	movwf	___fleq@ff2+3
  9909  1ED7  3000               	movlw	0
  9910  1ED8  00F6               	movwf	___fleq@ff2+2
  9911  1ED9  3000               	movlw	0
  9912  1EDA  00F5               	movwf	___fleq@ff2+1
  9913  1EDB  3000               	movlw	0
  9914  1EDC  00F4               	movwf	___fleq@ff2
  9915  1EDD                     l708:
  9916  1EDD  0877               	movf	___fleq@ff2+3,w
  9917  1EDE  0673               	xorwf	___fleq@ff1+3,w
  9918  1EDF  1D03               	skipz
  9919  1EE0  2EEB               	goto	u4495
  9920  1EE1  0876               	movf	___fleq@ff2+2,w
  9921  1EE2  0672               	xorwf	___fleq@ff1+2,w
  9922  1EE3  1D03               	skipz
  9923  1EE4  2EEB               	goto	u4495
  9924  1EE5  0875               	movf	___fleq@ff2+1,w
  9925  1EE6  0671               	xorwf	___fleq@ff1+1,w
  9926  1EE7  1D03               	skipz
  9927  1EE8  2EEB               	goto	u4495
  9928  1EE9  0874               	movf	___fleq@ff2,w
  9929  1EEA  0670               	xorwf	___fleq@ff1,w
  9930  1EEB                     u4495:
  9931  1EEB  1903               	skipnz
  9932  1EEC  2EEE               	goto	u4491
  9933  1EED  2EEF               	goto	u4490
  9934  1EEE                     u4491:
  9935  1EEE  2EF1               	goto	l3568
  9936  1EEF                     u4490:
  9937  1EEF                     l3566:
  9938  1EEF  1003               	clrc
  9939  1EF0  2EF2               	goto	l709
  9940  1EF1                     l3568:
  9941  1EF1  1403               	setc
  9942  1EF2                     l709:
  9943  1EF2  0008               	return
  9944  1EF3                     __end_of___fleq:
  9945                           
  9946                           	psect	text21
  9947  1E57                     __ptext21:	
  9948 ;; *************** function _scale_convert_gram *****************
  9949 ;; Defined at:
  9950 ;;		line 66 in file "loadcell.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;  count           4   13[BANK0 ] unsigned long 
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;  temp            4   21[BANK0 ] float 
  9955 ;; Return value:  Size  Location     Type
  9956 ;;                  4   13[BANK0 ] float 
  9957 ;; Registers used:
  9958 ;;		wreg, status,2, status,0, pclath, cstack
  9959 ;; Tracked objects:
  9960 ;;		On entry : 0/0
  9961 ;;		On exit  : 0/0
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9964 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9965 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9966 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9967 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9968 ;;Total ram usage:       12 bytes
  9969 ;; Hardware stack levels used: 1
  9970 ;; Hardware stack levels required when called: 1
  9971 ;; This function calls:
  9972 ;;		___fldiv
  9973 ;;		___xxtofl
  9974 ;; This function is called by:
  9975 ;;		_main
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           
  9980                           ;psect for function _scale_convert_gram
  9981  1E57                     _scale_convert_gram:
  9982  1E57                     l4314:	
  9983                           ;incstack = 0
  9984                           ; Regs used in _scale_convert_gram: [wreg+status,2+status,0+pclath+cstack]
  9985                           
  9986                           
  9987                           ;loadcell.c: 68: float temp = count - weight_zero;
  9988  1E57  0021               	movlb	1	; select bank1
  9989  1E58  084C               	movf	_weight_zero^(0+128),w
  9990  1E59  0020               	movlb	0	; select bank0
  9991  1E5A  022D               	subwf	scale_convert_gram@count,w
  9992  1E5B  00B1               	movwf	??_scale_convert_gram
  9993  1E5C  0021               	movlb	1	; select bank1
  9994  1E5D  084D               	movf	(_weight_zero+1)^(0+128),w
  9995  1E5E  0020               	movlb	0	; select bank0
  9996  1E5F  3B2E               	subwfb	scale_convert_gram@count+1,w
  9997  1E60  00B2               	movwf	??_scale_convert_gram+1
  9998  1E61  0021               	movlb	1	; select bank1
  9999  1E62  084E               	movf	(_weight_zero+2)^(0+128),w
 10000  1E63  0020               	movlb	0	; select bank0
 10001  1E64  3B2F               	subwfb	scale_convert_gram@count+2,w
 10002  1E65  00B3               	movwf	??_scale_convert_gram+2
 10003  1E66  0021               	movlb	1	; select bank1
 10004  1E67  084F               	movf	(_weight_zero+3)^(0+128),w
 10005  1E68  0020               	movlb	0	; select bank0
 10006  1E69  3B30               	subwfb	scale_convert_gram@count+3,w
 10007  1E6A  00B4               	movwf	??_scale_convert_gram+3
 10008  1E6B  0834               	movf	??_scale_convert_gram+3,w
 10009  1E6C  00F3               	movwf	___xxtofl@val+3
 10010  1E6D  0833               	movf	??_scale_convert_gram+2,w
 10011  1E6E  00F2               	movwf	___xxtofl@val+2
 10012  1E6F  0832               	movf	??_scale_convert_gram+1,w
 10013  1E70  00F1               	movwf	___xxtofl@val+1
 10014  1E71  0831               	movf	??_scale_convert_gram,w
 10015  1E72  00F0               	movwf	___xxtofl@val
 10016  1E73  3000               	movlw	0
 10017  1E74  3190  20A3  319E   	fcall	___xxtofl
 10018  1E77  0873               	movf	?___xxtofl+3,w
 10019  1E78  0020               	movlb	0	; select bank0
 10020  1E79  00B8               	movwf	scale_convert_gram@temp+3
 10021  1E7A  0872               	movf	?___xxtofl+2,w
 10022  1E7B  00B7               	movwf	scale_convert_gram@temp+2
 10023  1E7C  0871               	movf	?___xxtofl+1,w
 10024  1E7D  00B6               	movwf	scale_convert_gram@temp+1
 10025  1E7E  0870               	movf	?___xxtofl,w
 10026  1E7F  00B5               	movwf	scale_convert_gram@temp
 10027                           
 10028                           ;loadcell.c: 69: temp = temp / 493;
 10029  1E80  3043               	movlw	67
 10030  1E81  00F3               	movwf	___fldiv@a+3
 10031  1E82  30F6               	movlw	246
 10032  1E83  00F2               	movwf	___fldiv@a+2
 10033  1E84  3080               	movlw	128
 10034  1E85  00F1               	movwf	___fldiv@a+1
 10035  1E86  3000               	movlw	0
 10036  1E87  00F0               	movwf	___fldiv@a
 10037  1E88  0838               	movf	scale_convert_gram@temp+3,w
 10038  1E89  00F7               	movwf	___fldiv@b+3
 10039  1E8A  0837               	movf	scale_convert_gram@temp+2,w
 10040  1E8B  00F6               	movwf	___fldiv@b+2
 10041  1E8C  0836               	movf	scale_convert_gram@temp+1,w
 10042  1E8D  00F5               	movwf	___fldiv@b+1
 10043  1E8E  0835               	movf	scale_convert_gram@temp,w
 10044  1E8F  00F4               	movwf	___fldiv@b
 10045  1E90  3196  264C  319E   	fcall	___fldiv
 10046  1E93  0873               	movf	?___fldiv+3,w
 10047  1E94  0020               	movlb	0	; select bank0
 10048  1E95  00B8               	movwf	scale_convert_gram@temp+3
 10049  1E96  0872               	movf	?___fldiv+2,w
 10050  1E97  00B7               	movwf	scale_convert_gram@temp+2
 10051  1E98  0871               	movf	?___fldiv+1,w
 10052  1E99  00B6               	movwf	scale_convert_gram@temp+1
 10053  1E9A  0870               	movf	?___fldiv,w
 10054  1E9B  00B5               	movwf	scale_convert_gram@temp
 10055  1E9C                     l4316:
 10056                           
 10057                           ;loadcell.c: 70: return temp;
 10058  1E9C  0838               	movf	scale_convert_gram@temp+3,w
 10059  1E9D  00B0               	movwf	?_scale_convert_gram+3
 10060  1E9E  0837               	movf	scale_convert_gram@temp+2,w
 10061  1E9F  00AF               	movwf	?_scale_convert_gram+2
 10062  1EA0  0836               	movf	scale_convert_gram@temp+1,w
 10063  1EA1  00AE               	movwf	?_scale_convert_gram+1
 10064  1EA2  0835               	movf	scale_convert_gram@temp,w
 10065  1EA3  00AD               	movwf	?_scale_convert_gram
 10066  1EA4                     l145:
 10067  1EA4  0008               	return
 10068  1EA5                     __end_of_scale_convert_gram:
 10069                           
 10070                           	psect	text22
 10071  10A3                     __ptext22:	
 10072 ;; *************** function ___xxtofl *****************
 10073 ;; Defined at:
 10074 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;  sign            1    wreg     unsigned char 
 10077 ;;  val             4    0[COMMON] long 
 10078 ;; Auto vars:     Size  Location     Type
 10079 ;;  sign            1    8[COMMON] unsigned char 
 10080 ;;  arg             4   10[COMMON] unsigned long 
 10081 ;;  exp             1    9[COMMON] unsigned char 
 10082 ;; Return value:  Size  Location     Type
 10083 ;;                  4    0[COMMON] unsigned char 
 10084 ;; Registers used:
 10085 ;;		wreg, status,2, status,0
 10086 ;; Tracked objects:
 10087 ;;		On entry : 0/0
 10088 ;;		On exit  : 0/0
 10089 ;;		Unchanged: 0/0
 10090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10091 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10092 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10093 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10094 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10095 ;;Total ram usage:       14 bytes
 10096 ;; Hardware stack levels used: 1
 10097 ;; This function calls:
 10098 ;;		Nothing
 10099 ;; This function is called by:
 10100 ;;		_scale_convert_gram
 10101 ;;		_sprintf
 10102 ;; This function uses a non-reentrant model
 10103 ;;
 10104                           
 10105                           
 10106                           ;psect for function ___xxtofl
 10107  10A3                     ___xxtofl:
 10108                           
 10109                           ;incstack = 0
 10110                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10111                           ;___xxtofl@sign stored from wreg
 10112  10A3  00F8               	movwf	___xxtofl@sign
 10113  10A4                     l3802:
 10114  10A4  0878               	movf	___xxtofl@sign,w
 10115  10A5  1903               	btfsc	3,2
 10116  10A6  28A8               	goto	u5011
 10117  10A7  28A9               	goto	u5010
 10118  10A8                     u5011:
 10119  10A8  28BD               	goto	l3808
 10120  10A9                     u5010:
 10121  10A9                     l3804:
 10122  10A9  1FF3               	btfss	___xxtofl@val+3,7
 10123  10AA  28AC               	goto	u5021
 10124  10AB  28AD               	goto	u5020
 10125  10AC                     u5021:
 10126  10AC  28BD               	goto	l3808
 10127  10AD                     u5020:
 10128  10AD                     l3806:
 10129  10AD  0970               	comf	___xxtofl@val,w
 10130  10AE  00FA               	movwf	___xxtofl@arg
 10131  10AF  0971               	comf	___xxtofl@val+1,w
 10132  10B0  00FB               	movwf	___xxtofl@arg+1
 10133  10B1  0972               	comf	___xxtofl@val+2,w
 10134  10B2  00FC               	movwf	___xxtofl@arg+2
 10135  10B3  0973               	comf	___xxtofl@val+3,w
 10136  10B4  00FD               	movwf	___xxtofl@arg+3
 10137  10B5  0AFA               	incf	___xxtofl@arg,f
 10138  10B6  1903               	skipnz
 10139  10B7  0AFB               	incf	___xxtofl@arg+1,f
 10140  10B8  1903               	skipnz
 10141  10B9  0AFC               	incf	___xxtofl@arg+2,f
 10142  10BA  1903               	skipnz
 10143  10BB  0AFD               	incf	___xxtofl@arg+3,f
 10144  10BC  28C5               	goto	l988
 10145  10BD                     l3808:
 10146  10BD  0873               	movf	___xxtofl@val+3,w
 10147  10BE  00FD               	movwf	___xxtofl@arg+3
 10148  10BF  0872               	movf	___xxtofl@val+2,w
 10149  10C0  00FC               	movwf	___xxtofl@arg+2
 10150  10C1  0871               	movf	___xxtofl@val+1,w
 10151  10C2  00FB               	movwf	___xxtofl@arg+1
 10152  10C3  0870               	movf	___xxtofl@val,w
 10153  10C4  00FA               	movwf	___xxtofl@arg
 10154  10C5                     l988:
 10155  10C5  0873               	movf	___xxtofl@val+3,w
 10156  10C6  0472               	iorwf	___xxtofl@val+2,w
 10157  10C7  0471               	iorwf	___xxtofl@val+1,w
 10158  10C8  0470               	iorwf	___xxtofl@val,w
 10159  10C9  1D03               	skipz
 10160  10CA  28CC               	goto	u5031
 10161  10CB  28CD               	goto	u5030
 10162  10CC                     u5031:
 10163  10CC  28D6               	goto	l3814
 10164  10CD                     u5030:
 10165  10CD                     l3810:
 10166  10CD  3000               	movlw	0
 10167  10CE  00F3               	movwf	?___xxtofl+3
 10168  10CF  3000               	movlw	0
 10169  10D0  00F2               	movwf	?___xxtofl+2
 10170  10D1  3000               	movlw	0
 10171  10D2  00F1               	movwf	?___xxtofl+1
 10172  10D3  3000               	movlw	0
 10173  10D4  00F0               	movwf	?___xxtofl
 10174  10D5  294E               	goto	l990
 10175  10D6                     l3814:
 10176  10D6  3096               	movlw	150
 10177  10D7  00F4               	movwf	??___xxtofl
 10178  10D8  0874               	movf	??___xxtofl,w
 10179  10D9  00F9               	movwf	___xxtofl@exp
 10180  10DA  28E6               	goto	l3818
 10181  10DB                     l3816:
 10182  10DB  3001               	movlw	1
 10183  10DC  00F4               	movwf	??___xxtofl
 10184  10DD  0874               	movf	??___xxtofl,w
 10185  10DE  07F9               	addwf	___xxtofl@exp,f
 10186  10DF  3001               	movlw	1
 10187  10E0                     u5045:
 10188  10E0  36FD               	lsrf	___xxtofl@arg+3,f
 10189  10E1  0CFC               	rrf	___xxtofl@arg+2,f
 10190  10E2  0CFB               	rrf	___xxtofl@arg+1,f
 10191  10E3  0CFA               	rrf	___xxtofl@arg,f
 10192  10E4  0B89               	decfsz	9,f
 10193  10E5  28E0               	goto	u5045
 10194  10E6                     l3818:
 10195  10E6  30FE               	movlw	254
 10196  10E7  057D               	andwf	___xxtofl@arg+3,w
 10197  10E8  1D03               	btfss	3,2
 10198  10E9  28EB               	goto	u5051
 10199  10EA  28EC               	goto	u5050
 10200  10EB                     u5051:
 10201  10EB  28DB               	goto	l3816
 10202  10EC                     u5050:
 10203  10EC  2900               	goto	l994
 10204  10ED                     l3820:
 10205  10ED  3001               	movlw	1
 10206  10EE  00F4               	movwf	??___xxtofl
 10207  10EF  0874               	movf	??___xxtofl,w
 10208  10F0  07F9               	addwf	___xxtofl@exp,f
 10209  10F1                     l3822:
 10210  10F1  3001               	movlw	1
 10211  10F2  07FA               	addwf	___xxtofl@arg,f
 10212  10F3  3000               	movlw	0
 10213  10F4  3DFB               	addwfc	___xxtofl@arg+1,f
 10214  10F5  3000               	movlw	0
 10215  10F6  3DFC               	addwfc	___xxtofl@arg+2,f
 10216  10F7  3000               	movlw	0
 10217  10F8  3DFD               	addwfc	___xxtofl@arg+3,f
 10218  10F9                     l3824:
 10219  10F9  3001               	movlw	1
 10220  10FA                     u5065:
 10221  10FA  36FD               	lsrf	___xxtofl@arg+3,f
 10222  10FB  0CFC               	rrf	___xxtofl@arg+2,f
 10223  10FC  0CFB               	rrf	___xxtofl@arg+1,f
 10224  10FD  0CFA               	rrf	___xxtofl@arg,f
 10225  10FE  0B89               	decfsz	9,f
 10226  10FF  28FA               	goto	u5065
 10227  1100                     l994:
 10228  1100  30FF               	movlw	255
 10229  1101  057D               	andwf	___xxtofl@arg+3,w
 10230  1102  1D03               	btfss	3,2
 10231  1103  2905               	goto	u5071
 10232  1104  2906               	goto	u5070
 10233  1105                     u5071:
 10234  1105  28ED               	goto	l3820
 10235  1106                     u5070:
 10236  1106  2910               	goto	l3828
 10237  1107                     l3826:
 10238  1107  3001               	movlw	1
 10239  1108  02F9               	subwf	___xxtofl@exp,f
 10240  1109  3001               	movlw	1
 10241  110A                     u5085:
 10242  110A  35FA               	lslf	___xxtofl@arg,f
 10243  110B  0DFB               	rlf	___xxtofl@arg+1,f
 10244  110C  0DFC               	rlf	___xxtofl@arg+2,f
 10245  110D  0DFD               	rlf	___xxtofl@arg+3,f
 10246  110E  0B89               	decfsz	9,f
 10247  110F  290A               	goto	u5085
 10248  1110                     l3828:
 10249  1110  1BFC               	btfsc	___xxtofl@arg+2,7
 10250  1111  2913               	goto	u5091
 10251  1112  2914               	goto	u5090
 10252  1113                     u5091:
 10253  1113  291A               	goto	l1001
 10254  1114                     u5090:
 10255  1114                     l3830:
 10256  1114  3002               	movlw	2
 10257  1115  0279               	subwf	___xxtofl@exp,w
 10258  1116  1803               	skipnc
 10259  1117  2919               	goto	u5101
 10260  1118  291A               	goto	u5100
 10261  1119                     u5101:
 10262  1119  2907               	goto	l3826
 10263  111A                     u5100:
 10264  111A                     l1001:
 10265  111A  1879               	btfsc	___xxtofl@exp,0
 10266  111B  291D               	goto	u5111
 10267  111C  291E               	goto	u5110
 10268  111D                     u5111:
 10269  111D  2926               	goto	l1002
 10270  111E                     u5110:
 10271  111E                     l3832:
 10272  111E  30FF               	movlw	255
 10273  111F  05FA               	andwf	___xxtofl@arg,f
 10274  1120  30FF               	movlw	255
 10275  1121  05FB               	andwf	___xxtofl@arg+1,f
 10276  1122  307F               	movlw	127
 10277  1123  05FC               	andwf	___xxtofl@arg+2,f
 10278  1124  30FF               	movlw	255
 10279  1125  05FD               	andwf	___xxtofl@arg+3,f
 10280  1126                     l1002:
 10281  1126  1003               	clrc
 10282  1127  0CF9               	rrf	___xxtofl@exp,f
 10283  1128                     l3834:
 10284  1128  0879               	movf	___xxtofl@exp,w
 10285  1129  00F4               	movwf	??___xxtofl
 10286  112A  01F5               	clrf	??___xxtofl+1
 10287  112B  01F6               	clrf	??___xxtofl+2
 10288  112C  01F7               	clrf	??___xxtofl+3
 10289  112D  3018               	movlw	24
 10290  112E                     u5125:
 10291  112E  35F4               	lslf	??___xxtofl,f
 10292  112F  0DF5               	rlf	??___xxtofl+1,f
 10293  1130  0DF6               	rlf	??___xxtofl+2,f
 10294  1131  0DF7               	rlf	??___xxtofl+3,f
 10295  1132                     u5120:
 10296  1132  0B89               	decfsz	9,f
 10297  1133  292E               	goto	u5125
 10298  1134  0874               	movf	??___xxtofl,w
 10299  1135  04FA               	iorwf	___xxtofl@arg,f
 10300  1136  0875               	movf	??___xxtofl+1,w
 10301  1137  04FB               	iorwf	___xxtofl@arg+1,f
 10302  1138  0876               	movf	??___xxtofl+2,w
 10303  1139  04FC               	iorwf	___xxtofl@arg+2,f
 10304  113A  0877               	movf	??___xxtofl+3,w
 10305  113B  04FD               	iorwf	___xxtofl@arg+3,f
 10306  113C                     l3836:
 10307  113C  0878               	movf	___xxtofl@sign,w
 10308  113D  1903               	btfsc	3,2
 10309  113E  2940               	goto	u5131
 10310  113F  2941               	goto	u5130
 10311  1140                     u5131:
 10312  1140  2946               	goto	l3842
 10313  1141                     u5130:
 10314  1141                     l3838:
 10315  1141  1FF3               	btfss	___xxtofl@val+3,7
 10316  1142  2944               	goto	u5141
 10317  1143  2945               	goto	u5140
 10318  1144                     u5141:
 10319  1144  2946               	goto	l3842
 10320  1145                     u5140:
 10321  1145                     l3840:
 10322  1145  17FD               	bsf	___xxtofl@arg+3,7
 10323  1146                     l3842:
 10324  1146  087D               	movf	___xxtofl@arg+3,w
 10325  1147  00F3               	movwf	?___xxtofl+3
 10326  1148  087C               	movf	___xxtofl@arg+2,w
 10327  1149  00F2               	movwf	?___xxtofl+2
 10328  114A  087B               	movf	___xxtofl@arg+1,w
 10329  114B  00F1               	movwf	?___xxtofl+1
 10330  114C  087A               	movf	___xxtofl@arg,w
 10331  114D  00F0               	movwf	?___xxtofl
 10332  114E                     l990:
 10333  114E  0008               	return
 10334  114F                     __end_of___xxtofl:
 10335                           
 10336                           	psect	text23
 10337  164C                     __ptext23:	
 10338 ;; *************** function ___fldiv *****************
 10339 ;; Defined at:
 10340 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
 10341 ;; Parameters:    Size  Location     Type
 10342 ;;  a               4    0[COMMON] unsigned char 
 10343 ;;  b               4    4[COMMON] unsigned char 
 10344 ;; Auto vars:     Size  Location     Type
 10345 ;;  grs             4    7[BANK0 ] unsigned long 
 10346 ;;  rem             4    0[BANK0 ] unsigned long 
 10347 ;;  new_exp         2    5[BANK0 ] int 
 10348 ;;  aexp            1   12[BANK0 ] unsigned char 
 10349 ;;  bexp            1   11[BANK0 ] unsigned char 
 10350 ;;  sign            1    4[BANK0 ] unsigned char 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  4    0[COMMON] unsigned char 
 10353 ;; Registers used:
 10354 ;;		wreg, status,2, status,0
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10360 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10362 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10363 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10364 ;;Total ram usage:       26 bytes
 10365 ;; Hardware stack levels used: 1
 10366 ;; This function calls:
 10367 ;;		Nothing
 10368 ;; This function is called by:
 10369 ;;		_scale_convert_gram
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           
 10374                           ;psect for function ___fldiv
 10375  164C                     ___fldiv:
 10376  164C                     l3662:	
 10377                           ;incstack = 0
 10378                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10379                           
 10380  164C  0877               	movf	___fldiv@b+3,w
 10381  164D  3980               	andlw	128
 10382  164E  00F8               	movwf	??___fldiv
 10383  164F  0878               	movf	??___fldiv,w
 10384  1650  0020               	movlb	0	; select bank0
 10385  1651  00A4               	movwf	___fldiv@sign
 10386  1652                     l3664:
 10387  1652  3577               	lslf	___fldiv@b+3,w
 10388  1653  00F8               	movwf	??___fldiv
 10389  1654  0878               	movf	??___fldiv,w
 10390  1655  00AB               	movwf	___fldiv@bexp
 10391  1656                     l3666:
 10392  1656  1FF6               	btfss	___fldiv@b+2,7
 10393  1657  2E59               	goto	u4721
 10394  1658  2E5A               	goto	u4720
 10395  1659                     u4721:
 10396  1659  2E5B               	goto	l3670
 10397  165A                     u4720:
 10398  165A                     l3668:
 10399  165A  142B               	bsf	___fldiv@bexp,0
 10400  165B                     l3670:
 10401  165B  082B               	movf	___fldiv@bexp,w
 10402  165C  1903               	btfsc	3,2
 10403  165D  2E5F               	goto	u4731
 10404  165E  2E60               	goto	u4730
 10405  165F                     u4731:
 10406  165F  2E70               	goto	l3680
 10407  1660                     u4730:
 10408  1660                     l3672:
 10409  1660  0A2B               	incf	___fldiv@bexp,w
 10410  1661  1D03               	btfss	3,2
 10411  1662  2E64               	goto	u4741
 10412  1663  2E65               	goto	u4740
 10413  1664                     u4741:
 10414  1664  2E6D               	goto	l3676
 10415  1665                     u4740:
 10416  1665                     l3674:
 10417  1665  3000               	movlw	0
 10418  1666  00F7               	movwf	___fldiv@b+3
 10419  1667  3000               	movlw	0
 10420  1668  00F6               	movwf	___fldiv@b+2
 10421  1669  3000               	movlw	0
 10422  166A  00F5               	movwf	___fldiv@b+1
 10423  166B  3000               	movlw	0
 10424  166C  00F4               	movwf	___fldiv@b
 10425  166D                     l3676:
 10426  166D  17F6               	bsf	___fldiv@b+2,7
 10427  166E                     l3678:
 10428  166E  01F7               	clrf	___fldiv@b+3
 10429  166F  2E78               	goto	l3682
 10430  1670                     l3680:
 10431  1670  3000               	movlw	0
 10432  1671  00F7               	movwf	___fldiv@b+3
 10433  1672  3000               	movlw	0
 10434  1673  00F6               	movwf	___fldiv@b+2
 10435  1674  3000               	movlw	0
 10436  1675  00F5               	movwf	___fldiv@b+1
 10437  1676  3000               	movlw	0
 10438  1677  00F4               	movwf	___fldiv@b
 10439  1678                     l3682:
 10440  1678  0873               	movf	___fldiv@a+3,w
 10441  1679  3980               	andlw	128
 10442  167A  00F8               	movwf	??___fldiv
 10443  167B  0878               	movf	??___fldiv,w
 10444  167C  06A4               	xorwf	___fldiv@sign,f
 10445  167D                     l3684:
 10446  167D  3573               	lslf	___fldiv@a+3,w
 10447  167E  00F8               	movwf	??___fldiv
 10448  167F  0878               	movf	??___fldiv,w
 10449  1680  00AC               	movwf	___fldiv@aexp
 10450  1681                     l3686:
 10451  1681  1FF2               	btfss	___fldiv@a+2,7
 10452  1682  2E84               	goto	u4751
 10453  1683  2E85               	goto	u4750
 10454  1684                     u4751:
 10455  1684  2E86               	goto	l3690
 10456  1685                     u4750:
 10457  1685                     l3688:
 10458  1685  142C               	bsf	___fldiv@aexp,0
 10459  1686                     l3690:
 10460  1686  082C               	movf	___fldiv@aexp,w
 10461  1687  1903               	btfsc	3,2
 10462  1688  2E8A               	goto	u4761
 10463  1689  2E8B               	goto	u4760
 10464  168A                     u4761:
 10465  168A  2E9B               	goto	l3700
 10466  168B                     u4760:
 10467  168B                     l3692:
 10468  168B  0A2C               	incf	___fldiv@aexp,w
 10469  168C  1D03               	btfss	3,2
 10470  168D  2E8F               	goto	u4771
 10471  168E  2E90               	goto	u4770
 10472  168F                     u4771:
 10473  168F  2E98               	goto	l3696
 10474  1690                     u4770:
 10475  1690                     l3694:
 10476  1690  3000               	movlw	0
 10477  1691  00F3               	movwf	___fldiv@a+3
 10478  1692  3000               	movlw	0
 10479  1693  00F2               	movwf	___fldiv@a+2
 10480  1694  3000               	movlw	0
 10481  1695  00F1               	movwf	___fldiv@a+1
 10482  1696  3000               	movlw	0
 10483  1697  00F0               	movwf	___fldiv@a
 10484  1698                     l3696:
 10485  1698  17F2               	bsf	___fldiv@a+2,7
 10486  1699                     l3698:
 10487  1699  01F3               	clrf	___fldiv@a+3
 10488  169A  2EA3               	goto	l904
 10489  169B                     l3700:
 10490  169B  3000               	movlw	0
 10491  169C  00F3               	movwf	___fldiv@a+3
 10492  169D  3000               	movlw	0
 10493  169E  00F2               	movwf	___fldiv@a+2
 10494  169F  3000               	movlw	0
 10495  16A0  00F1               	movwf	___fldiv@a+1
 10496  16A1  3000               	movlw	0
 10497  16A2  00F0               	movwf	___fldiv@a
 10498  16A3                     l904:
 10499  16A3  0873               	movf	___fldiv@a+3,w
 10500  16A4  0472               	iorwf	___fldiv@a+2,w
 10501  16A5  0471               	iorwf	___fldiv@a+1,w
 10502  16A6  0470               	iorwf	___fldiv@a,w
 10503  16A7  1D03               	skipz
 10504  16A8  2EAA               	goto	u4781
 10505  16A9  2EAB               	goto	u4780
 10506  16AA                     u4781:
 10507  16AA  2EC4               	goto	l3710
 10508  16AB                     u4780:
 10509  16AB                     l3702:
 10510  16AB  3000               	movlw	0
 10511  16AC  00F7               	movwf	___fldiv@b+3
 10512  16AD  3000               	movlw	0
 10513  16AE  00F6               	movwf	___fldiv@b+2
 10514  16AF  3000               	movlw	0
 10515  16B0  00F5               	movwf	___fldiv@b+1
 10516  16B1  3000               	movlw	0
 10517  16B2  00F4               	movwf	___fldiv@b
 10518  16B3  3080               	movlw	128
 10519  16B4  04F6               	iorwf	___fldiv@b+2,f
 10520  16B5  307F               	movlw	127
 10521  16B6  04F7               	iorwf	___fldiv@b+3,f
 10522  16B7                     l3704:
 10523  16B7  0824               	movf	___fldiv@sign,w
 10524  16B8  00F8               	movwf	??___fldiv
 10525  16B9  0878               	movf	??___fldiv,w
 10526  16BA  04F7               	iorwf	___fldiv@b+3,f
 10527  16BB                     l3706:
 10528  16BB  0877               	movf	___fldiv@b+3,w
 10529  16BC  00F3               	movwf	?___fldiv+3
 10530  16BD  0876               	movf	___fldiv@b+2,w
 10531  16BE  00F2               	movwf	?___fldiv+2
 10532  16BF  0875               	movf	___fldiv@b+1,w
 10533  16C0  00F1               	movwf	?___fldiv+1
 10534  16C1  0874               	movf	___fldiv@b,w
 10535  16C2  00F0               	movwf	?___fldiv
 10536  16C3  2FFF               	goto	l906
 10537  16C4                     l3710:
 10538  16C4  082B               	movf	___fldiv@bexp,w
 10539  16C5  1D03               	btfss	3,2
 10540  16C6  2EC8               	goto	u4791
 10541  16C7  2EC9               	goto	u4790
 10542  16C8                     u4791:
 10543  16C8  2ED2               	goto	l3716
 10544  16C9                     u4790:
 10545  16C9                     l3712:
 10546  16C9  3000               	movlw	0
 10547  16CA  00F3               	movwf	?___fldiv+3
 10548  16CB  3000               	movlw	0
 10549  16CC  00F2               	movwf	?___fldiv+2
 10550  16CD  3000               	movlw	0
 10551  16CE  00F1               	movwf	?___fldiv+1
 10552  16CF  3000               	movlw	0
 10553  16D0  00F0               	movwf	?___fldiv
 10554  16D1  2FFF               	goto	l906
 10555  16D2                     l3716:
 10556  16D2  082B               	movf	___fldiv@bexp,w
 10557  16D3  00F8               	movwf	??___fldiv
 10558  16D4  01F9               	clrf	??___fldiv+1
 10559  16D5  0879               	movf	??___fldiv+1,w
 10560  16D6  00FB               	movwf	??___fldiv+3
 10561  16D7  082C               	movf	___fldiv@aexp,w
 10562  16D8  0278               	subwf	??___fldiv,w
 10563  16D9  00FA               	movwf	??___fldiv+2
 10564  16DA  1C03               	skipc
 10565  16DB  03FB               	decf	??___fldiv+3,f
 10566  16DC  087A               	movf	??___fldiv+2,w
 10567  16DD  3E7F               	addlw	127
 10568  16DE  00A5               	movwf	___fldiv@new_exp
 10569  16DF  3000               	movlw	0
 10570  16E0  3D7B               	addwfc	??___fldiv+3,w
 10571  16E1  00A6               	movwf	___fldiv@new_exp+1
 10572  16E2                     l3718:
 10573  16E2  0877               	movf	___fldiv@b+3,w
 10574  16E3  00A3               	movwf	___fldiv@rem+3
 10575  16E4  0876               	movf	___fldiv@b+2,w
 10576  16E5  00A2               	movwf	___fldiv@rem+2
 10577  16E6  0875               	movf	___fldiv@b+1,w
 10578  16E7  00A1               	movwf	___fldiv@rem+1
 10579  16E8  0874               	movf	___fldiv@b,w
 10580  16E9  00A0               	movwf	___fldiv@rem
 10581  16EA                     l3720:
 10582  16EA  3000               	movlw	0
 10583  16EB  00F7               	movwf	___fldiv@b+3
 10584  16EC  3000               	movlw	0
 10585  16ED  00F6               	movwf	___fldiv@b+2
 10586  16EE  3000               	movlw	0
 10587  16EF  00F5               	movwf	___fldiv@b+1
 10588  16F0  3000               	movlw	0
 10589  16F1  00F4               	movwf	___fldiv@b
 10590  16F2                     l3722:
 10591  16F2  3000               	movlw	0
 10592  16F3  00AA               	movwf	___fldiv@grs+3
 10593  16F4  3000               	movlw	0
 10594  16F5  00A9               	movwf	___fldiv@grs+2
 10595  16F6  3000               	movlw	0
 10596  16F7  00A8               	movwf	___fldiv@grs+1
 10597  16F8  3000               	movlw	0
 10598  16F9  00A7               	movwf	___fldiv@grs
 10599  16FA                     l3724:
 10600  16FA  01AC               	clrf	___fldiv@aexp
 10601  16FB  2F3A               	goto	l3744
 10602  16FC                     l3726:
 10603  16FC  082C               	movf	___fldiv@aexp,w
 10604  16FD  1903               	btfsc	3,2
 10605  16FE  2F00               	goto	u4801
 10606  16FF  2F01               	goto	u4800
 10607  1700                     u4801:
 10608  1700  2F1B               	goto	l3736
 10609  1701                     u4800:
 10610  1701                     l3728:
 10611  1701  3001               	movlw	1
 10612  1702                     u4815:
 10613  1702  35A0               	lslf	___fldiv@rem,f
 10614  1703  0DA1               	rlf	___fldiv@rem+1,f
 10615  1704  0DA2               	rlf	___fldiv@rem+2,f
 10616  1705  0DA3               	rlf	___fldiv@rem+3,f
 10617  1706  0B89               	decfsz	9,f
 10618  1707  2F02               	goto	u4815
 10619  1708  3001               	movlw	1
 10620  1709                     u4825:
 10621  1709  35F4               	lslf	___fldiv@b,f
 10622  170A  0DF5               	rlf	___fldiv@b+1,f
 10623  170B  0DF6               	rlf	___fldiv@b+2,f
 10624  170C  0DF7               	rlf	___fldiv@b+3,f
 10625  170D  0B89               	decfsz	9,f
 10626  170E  2F09               	goto	u4825
 10627  170F                     l3730:
 10628  170F  1FAA               	btfss	___fldiv@grs+3,7
 10629  1710  2F12               	goto	u4831
 10630  1711  2F13               	goto	u4830
 10631  1712                     u4831:
 10632  1712  2F14               	goto	l3734
 10633  1713                     u4830:
 10634  1713                     l3732:
 10635  1713  1474               	bsf	___fldiv@b,0
 10636  1714                     l3734:
 10637  1714  3001               	movlw	1
 10638  1715                     u4845:
 10639  1715  35A7               	lslf	___fldiv@grs,f
 10640  1716  0DA8               	rlf	___fldiv@grs+1,f
 10641  1717  0DA9               	rlf	___fldiv@grs+2,f
 10642  1718  0DAA               	rlf	___fldiv@grs+3,f
 10643  1719  0B89               	decfsz	9,f
 10644  171A  2F15               	goto	u4845
 10645  171B                     l3736:
 10646  171B  0873               	movf	___fldiv@a+3,w
 10647  171C  0223               	subwf	___fldiv@rem+3,w
 10648  171D  1D03               	skipz
 10649  171E  2F29               	goto	u4855
 10650  171F  0872               	movf	___fldiv@a+2,w
 10651  1720  0222               	subwf	___fldiv@rem+2,w
 10652  1721  1D03               	skipz
 10653  1722  2F29               	goto	u4855
 10654  1723  0871               	movf	___fldiv@a+1,w
 10655  1724  0221               	subwf	___fldiv@rem+1,w
 10656  1725  1D03               	skipz
 10657  1726  2F29               	goto	u4855
 10658  1727  0870               	movf	___fldiv@a,w
 10659  1728  0220               	subwf	___fldiv@rem,w
 10660  1729                     u4855:
 10661  1729  1C03               	skipc
 10662  172A  2F2C               	goto	u4851
 10663  172B  2F2D               	goto	u4850
 10664  172C                     u4851:
 10665  172C  2F36               	goto	l3742
 10666  172D                     u4850:
 10667  172D                     l3738:
 10668  172D  172A               	bsf	___fldiv@grs+3,6
 10669  172E                     l3740:
 10670  172E  0870               	movf	___fldiv@a,w
 10671  172F  02A0               	subwf	___fldiv@rem,f
 10672  1730  0871               	movf	___fldiv@a+1,w
 10673  1731  3BA1               	subwfb	___fldiv@rem+1,f
 10674  1732  0872               	movf	___fldiv@a+2,w
 10675  1733  3BA2               	subwfb	___fldiv@rem+2,f
 10676  1734  0873               	movf	___fldiv@a+3,w
 10677  1735  3BA3               	subwfb	___fldiv@rem+3,f
 10678  1736                     l3742:
 10679  1736  3001               	movlw	1
 10680  1737  00F8               	movwf	??___fldiv
 10681  1738  0878               	movf	??___fldiv,w
 10682  1739  07AC               	addwf	___fldiv@aexp,f
 10683  173A                     l3744:
 10684  173A  301A               	movlw	26
 10685  173B  022C               	subwf	___fldiv@aexp,w
 10686  173C  1C03               	skipc
 10687  173D  2F3F               	goto	u4861
 10688  173E  2F40               	goto	u4860
 10689  173F                     u4861:
 10690  173F  2EFC               	goto	l3726
 10691  1740                     u4860:
 10692  1740                     l3746:
 10693  1740  0823               	movf	___fldiv@rem+3,w
 10694  1741  0422               	iorwf	___fldiv@rem+2,w
 10695  1742  0421               	iorwf	___fldiv@rem+1,w
 10696  1743  0420               	iorwf	___fldiv@rem,w
 10697  1744  1903               	skipnz
 10698  1745  2F47               	goto	u4871
 10699  1746  2F48               	goto	u4870
 10700  1747                     u4871:
 10701  1747  2F61               	goto	l3760
 10702  1748                     u4870:
 10703  1748                     l3748:
 10704  1748  1427               	bsf	___fldiv@grs,0
 10705  1749  2F61               	goto	l3760
 10706  174A                     l3750:
 10707  174A  3001               	movlw	1
 10708  174B                     u4885:
 10709  174B  35F4               	lslf	___fldiv@b,f
 10710  174C  0DF5               	rlf	___fldiv@b+1,f
 10711  174D  0DF6               	rlf	___fldiv@b+2,f
 10712  174E  0DF7               	rlf	___fldiv@b+3,f
 10713  174F  0B89               	decfsz	9,f
 10714  1750  2F4B               	goto	u4885
 10715  1751                     l3752:
 10716  1751  1FAA               	btfss	___fldiv@grs+3,7
 10717  1752  2F54               	goto	u4891
 10718  1753  2F55               	goto	u4890
 10719  1754                     u4891:
 10720  1754  2F56               	goto	l3756
 10721  1755                     u4890:
 10722  1755                     l3754:
 10723  1755  1474               	bsf	___fldiv@b,0
 10724  1756                     l3756:
 10725  1756  3001               	movlw	1
 10726  1757                     u4905:
 10727  1757  35A7               	lslf	___fldiv@grs,f
 10728  1758  0DA8               	rlf	___fldiv@grs+1,f
 10729  1759  0DA9               	rlf	___fldiv@grs+2,f
 10730  175A  0DAA               	rlf	___fldiv@grs+3,f
 10731  175B  0B89               	decfsz	9,f
 10732  175C  2F57               	goto	u4905
 10733  175D                     l3758:
 10734  175D  30FF               	movlw	255
 10735  175E  07A5               	addwf	___fldiv@new_exp,f
 10736  175F  30FF               	movlw	255
 10737  1760  3DA6               	addwfc	___fldiv@new_exp+1,f
 10738  1761                     l3760:
 10739  1761  1FF6               	btfss	___fldiv@b+2,7
 10740  1762  2F64               	goto	u4911
 10741  1763  2F65               	goto	u4910
 10742  1764                     u4911:
 10743  1764  2F4A               	goto	l3750
 10744  1765                     u4910:
 10745  1765                     l3762:
 10746  1765  01AC               	clrf	___fldiv@aexp
 10747  1766                     l3764:
 10748  1766  1FAA               	btfss	___fldiv@grs+3,7
 10749  1767  2F69               	goto	u4921
 10750  1768  2F6A               	goto	u4920
 10751  1769                     u4921:
 10752  1769  2F86               	goto	l3772
 10753  176A                     u4920:
 10754  176A                     l3766:
 10755  176A  30FF               	movlw	255
 10756  176B  0527               	andwf	___fldiv@grs,w
 10757  176C  00F8               	movwf	??___fldiv
 10758  176D  30FF               	movlw	255
 10759  176E  0528               	andwf	___fldiv@grs+1,w
 10760  176F  00F9               	movwf	??___fldiv+1
 10761  1770  30FF               	movlw	255
 10762  1771  0529               	andwf	___fldiv@grs+2,w
 10763  1772  00FA               	movwf	??___fldiv+2
 10764  1773  307F               	movlw	127
 10765  1774  052A               	andwf	___fldiv@grs+3,w
 10766  1775  00FB               	movwf	??___fldiv+3
 10767  1776  087B               	movf	??___fldiv+3,w
 10768  1777  047A               	iorwf	??___fldiv+2,w
 10769  1778  0479               	iorwf	??___fldiv+1,w
 10770  1779  0478               	iorwf	??___fldiv,w
 10771  177A  1903               	skipnz
 10772  177B  2F7D               	goto	u4931
 10773  177C  2F7E               	goto	u4930
 10774  177D                     u4931:
 10775  177D  2F81               	goto	l920
 10776  177E                     u4930:
 10777  177E                     l3768:
 10778  177E  01AC               	clrf	___fldiv@aexp
 10779  177F  0AAC               	incf	___fldiv@aexp,f
 10780  1780  2F86               	goto	l3772
 10781  1781                     l920:
 10782  1781  1C74               	btfss	___fldiv@b,0
 10783  1782  2F84               	goto	u4941
 10784  1783  2F85               	goto	u4940
 10785  1784                     u4941:
 10786  1784  2F86               	goto	l3772
 10787  1785                     u4940:
 10788  1785  2F7E               	goto	l3768
 10789  1786                     l3772:
 10790  1786  082C               	movf	___fldiv@aexp,w
 10791  1787  1903               	btfsc	3,2
 10792  1788  2F8A               	goto	u4951
 10793  1789  2F8B               	goto	u4950
 10794  178A                     u4951:
 10795  178A  2FB3               	goto	l3782
 10796  178B                     u4950:
 10797  178B                     l3774:
 10798  178B  3001               	movlw	1
 10799  178C  07F4               	addwf	___fldiv@b,f
 10800  178D  3000               	movlw	0
 10801  178E  3DF5               	addwfc	___fldiv@b+1,f
 10802  178F  3000               	movlw	0
 10803  1790  3DF6               	addwfc	___fldiv@b+2,f
 10804  1791  3000               	movlw	0
 10805  1792  3DF7               	addwfc	___fldiv@b+3,f
 10806  1793                     l3776:
 10807  1793  1C77               	btfss	___fldiv@b+3,0
 10808  1794  2F96               	goto	u4961
 10809  1795  2F97               	goto	u4960
 10810  1796                     u4961:
 10811  1796  2FB3               	goto	l3782
 10812  1797                     u4960:
 10813  1797                     l3778:
 10814  1797  0874               	movf	___fldiv@b,w
 10815  1798  00F8               	movwf	??___fldiv
 10816  1799  0875               	movf	___fldiv@b+1,w
 10817  179A  00F9               	movwf	??___fldiv+1
 10818  179B  0876               	movf	___fldiv@b+2,w
 10819  179C  00FA               	movwf	??___fldiv+2
 10820  179D  0877               	movf	___fldiv@b+3,w
 10821  179E  00FB               	movwf	??___fldiv+3
 10822  179F  3001               	movlw	1
 10823  17A0  00FC               	movwf	??___fldiv+4
 10824  17A1                     u4975:
 10825  17A1  37FB               	asrf	??___fldiv+3,f
 10826  17A2  0CFA               	rrf	??___fldiv+2,f
 10827  17A3  0CF9               	rrf	??___fldiv+1,f
 10828  17A4  0CF8               	rrf	??___fldiv,f
 10829  17A5                     u4970:
 10830  17A5  0BFC               	decfsz	??___fldiv+4,f
 10831  17A6  2FA1               	goto	u4975
 10832  17A7  087B               	movf	??___fldiv+3,w
 10833  17A8  00F7               	movwf	___fldiv@b+3
 10834  17A9  087A               	movf	??___fldiv+2,w
 10835  17AA  00F6               	movwf	___fldiv@b+2
 10836  17AB  0879               	movf	??___fldiv+1,w
 10837  17AC  00F5               	movwf	___fldiv@b+1
 10838  17AD  0878               	movf	??___fldiv,w
 10839  17AE  00F4               	movwf	___fldiv@b
 10840  17AF                     l3780:
 10841  17AF  3001               	movlw	1
 10842  17B0  07A5               	addwf	___fldiv@new_exp,f
 10843  17B1  3000               	movlw	0
 10844  17B2  3DA6               	addwfc	___fldiv@new_exp+1,f
 10845  17B3                     l3782:
 10846  17B3  0826               	movf	___fldiv@new_exp+1,w
 10847  17B4  3A80               	xorlw	128
 10848  17B5  00F8               	movwf	??___fldiv
 10849  17B6  3080               	movlw	128
 10850  17B7  0278               	subwf	??___fldiv,w
 10851  17B8  1D03               	skipz
 10852  17B9  2FBC               	goto	u4985
 10853  17BA  30FF               	movlw	255
 10854  17BB  0225               	subwf	___fldiv@new_exp,w
 10855  17BC                     u4985:
 10856  17BC  1C03               	skipc
 10857  17BD  2FBF               	goto	u4981
 10858  17BE  2FC0               	goto	u4980
 10859  17BF                     u4981:
 10860  17BF  2FCD               	goto	l925
 10861  17C0                     u4980:
 10862  17C0                     l3784:
 10863  17C0  30FF               	movlw	255
 10864  17C1  0020               	movlb	0	; select bank0
 10865  17C2  00A5               	movwf	___fldiv@new_exp
 10866  17C3  3000               	movlw	0
 10867  17C4  00A6               	movwf	___fldiv@new_exp+1
 10868  17C5  3000               	movlw	0
 10869  17C6  00F7               	movwf	___fldiv@b+3
 10870  17C7  3000               	movlw	0
 10871  17C8  00F6               	movwf	___fldiv@b+2
 10872  17C9  3000               	movlw	0
 10873  17CA  00F5               	movwf	___fldiv@b+1
 10874  17CB  3000               	movlw	0
 10875  17CC  00F4               	movwf	___fldiv@b
 10876  17CD                     l925:
 10877  17CD  0020               	movlb	0	; select bank0
 10878  17CE  0826               	movf	___fldiv@new_exp+1,w
 10879  17CF  3A80               	xorlw	128
 10880  17D0  00F8               	movwf	??___fldiv
 10881  17D1  3080               	movlw	128
 10882  17D2  0278               	subwf	??___fldiv,w
 10883  17D3  1D03               	skipz
 10884  17D4  2FD7               	goto	u4995
 10885  17D5  3001               	movlw	1
 10886  17D6  0225               	subwf	___fldiv@new_exp,w
 10887  17D7                     u4995:
 10888  17D7  1803               	skipnc
 10889  17D8  2FDA               	goto	u4991
 10890  17D9  2FDB               	goto	u4990
 10891  17DA                     u4991:
 10892  17DA  2FE7               	goto	l926
 10893  17DB                     u4990:
 10894  17DB                     l3786:
 10895  17DB  0020               	movlb	0	; select bank0
 10896  17DC  01A5               	clrf	___fldiv@new_exp
 10897  17DD  01A6               	clrf	___fldiv@new_exp+1
 10898  17DE                     l3788:
 10899  17DE  3000               	movlw	0
 10900  17DF  00F7               	movwf	___fldiv@b+3
 10901  17E0  3000               	movlw	0
 10902  17E1  00F6               	movwf	___fldiv@b+2
 10903  17E2  3000               	movlw	0
 10904  17E3  00F5               	movwf	___fldiv@b+1
 10905  17E4  3000               	movlw	0
 10906  17E5  00F4               	movwf	___fldiv@b
 10907  17E6                     l3790:
 10908  17E6  01A4               	clrf	___fldiv@sign
 10909  17E7                     l926:
 10910  17E7  0020               	movlb	0	; select bank0
 10911  17E8  0825               	movf	___fldiv@new_exp,w
 10912  17E9  00F8               	movwf	??___fldiv
 10913  17EA  0878               	movf	??___fldiv,w
 10914  17EB  00AB               	movwf	___fldiv@bexp
 10915  17EC                     l3792:
 10916  17EC  1C2B               	btfss	___fldiv@bexp,0
 10917  17ED  2FEF               	goto	u5001
 10918  17EE  2FF0               	goto	u5000
 10919  17EF                     u5001:
 10920  17EF  2FF2               	goto	l3796
 10921  17F0                     u5000:
 10922  17F0                     l3794:
 10923  17F0  17F6               	bsf	___fldiv@b+2,7
 10924  17F1  2FF6               	goto	l928
 10925  17F2                     l3796:
 10926  17F2  307F               	movlw	127
 10927  17F3  00F8               	movwf	??___fldiv
 10928  17F4  0878               	movf	??___fldiv,w
 10929  17F5  05F6               	andwf	___fldiv@b+2,f
 10930  17F6                     l928:
 10931  17F6  362B               	lsrf	___fldiv@bexp,w
 10932  17F7  00F8               	movwf	??___fldiv
 10933  17F8  0878               	movf	??___fldiv,w
 10934  17F9  00F7               	movwf	___fldiv@b+3
 10935  17FA  0824               	movf	___fldiv@sign,w
 10936  17FB  00F8               	movwf	??___fldiv
 10937  17FC  0878               	movf	??___fldiv,w
 10938  17FD  04F7               	iorwf	___fldiv@b+3,f
 10939  17FE  2EBB               	goto	l3706
 10940  17FF                     l906:
 10941  17FF  0008               	return
 10942  1800                     __end_of___fldiv:
 10943                           
 10944                           	psect	text24
 10945  0809                     __ptext24:	
 10946 ;; *************** function _lcd_init *****************
 10947 ;; Defined at:
 10948 ;;		line 19 in file "lcd_lib.c"
 10949 ;; Parameters:    Size  Location     Type
 10950 ;;		None
 10951 ;; Auto vars:     Size  Location     Type
 10952 ;;		None
 10953 ;; Return value:  Size  Location     Type
 10954 ;;                  1    wreg      void 
 10955 ;; Registers used:
 10956 ;;		wreg, status,2, status,0, pclath, cstack
 10957 ;; Tracked objects:
 10958 ;;		On entry : 0/0
 10959 ;;		On exit  : 0/0
 10960 ;;		Unchanged: 0/0
 10961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10965 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10966 ;;Total ram usage:        2 bytes
 10967 ;; Hardware stack levels used: 1
 10968 ;; Hardware stack levels required when called: 3
 10969 ;; This function calls:
 10970 ;;		_lcd_cmd
 10971 ;; This function is called by:
 10972 ;;		_main
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           
 10977                           ;psect for function _lcd_init
 10978  0809                     _lcd_init:
 10979  0809                     l3848:	
 10980                           ;incstack = 0
 10981                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
 10982                           
 10983                           
 10984                           ;lcd_lib.c: 20: _delay((unsigned long)((400)*(8000000/4000.0)));
 10985  0809  3005               	movlw	5
 10986  080A  00F3               	movwf	??_lcd_init+1
 10987  080B  300F               	movlw	15
 10988  080C  00F2               	movwf	??_lcd_init
 10989  080D  30F1               	movlw	241
 10990  080E                     u5797:
 10991  080E  0B89               	decfsz	9,f
 10992  080F  280E               	goto	u5797
 10993  0810  0BF2               	decfsz	??_lcd_init,f
 10994  0811  280E               	goto	u5797
 10995  0812  0BF3               	decfsz	??_lcd_init+1,f
 10996  0813  280E               	goto	u5797
 10997  0814  0000               	nop
 10998  0815                     l3850:
 10999                           
 11000                           ;lcd_lib.c: 22: lcd_cmd(0x30);
 11001  0815  3030               	movlw	48
 11002  0816  3180  2004  3188   	fcall	_lcd_cmd
 11003  0819                     l3852:
 11004                           
 11005                           ;lcd_lib.c: 23: lcd_cmd(0x34);
 11006  0819  3034               	movlw	52
 11007  081A  3180  2004  3188   	fcall	_lcd_cmd
 11008  081D                     l3854:
 11009                           
 11010                           ;lcd_lib.c: 24: lcd_cmd(0x30);
 11011  081D  3030               	movlw	48
 11012  081E  3180  2004  3188   	fcall	_lcd_cmd
 11013  0821                     l3856:
 11014                           
 11015                           ;lcd_lib.c: 25: _delay((unsigned long)((5)*(8000000/4000.0)));
 11016  0821  300D               	movlw	13
 11017  0822  00F2               	movwf	??_lcd_init
 11018  0823  30FC               	movlw	252
 11019  0824                     u5807:
 11020  0824  0B89               	decfsz	9,f
 11021  0825  2824               	goto	u5807
 11022  0826  0BF2               	decfsz	??_lcd_init,f
 11023  0827  2824               	goto	u5807
 11024                           
 11025                           ;lcd_lib.c: 27: lcd_cmd(0x30);
 11026  0828  3030               	movlw	48
 11027  0829  3180  2004  3188   	fcall	_lcd_cmd
 11028                           
 11029                           ;lcd_lib.c: 28: lcd_cmd(0x34);
 11030  082C  3034               	movlw	52
 11031  082D  3180  2004  3188   	fcall	_lcd_cmd
 11032                           
 11033                           ;lcd_lib.c: 29: lcd_cmd(0x30);
 11034  0830  3030               	movlw	48
 11035  0831  3180  2004  3188   	fcall	_lcd_cmd
 11036  0834                     l3858:
 11037                           
 11038                           ;lcd_lib.c: 30: _delay((unsigned long)((5)*(8000000/4000.0)));
 11039  0834  300D               	movlw	13
 11040  0835  00F2               	movwf	??_lcd_init
 11041  0836  30FC               	movlw	252
 11042  0837                     u5817:
 11043  0837  0B89               	decfsz	9,f
 11044  0838  2837               	goto	u5817
 11045  0839  0BF2               	decfsz	??_lcd_init,f
 11046  083A  2837               	goto	u5817
 11047  083B                     l3860:
 11048                           
 11049                           ;lcd_lib.c: 32: lcd_cmd(0x30);
 11050  083B  3030               	movlw	48
 11051  083C  3180  2004  3188   	fcall	_lcd_cmd
 11052  083F                     l3862:
 11053                           
 11054                           ;lcd_lib.c: 33: lcd_cmd(0x34);
 11055  083F  3034               	movlw	52
 11056  0840  3180  2004  3188   	fcall	_lcd_cmd
 11057  0843                     l3864:
 11058                           
 11059                           ;lcd_lib.c: 34: lcd_cmd(0x30);
 11060  0843  3030               	movlw	48
 11061  0844  3180  2004  3188   	fcall	_lcd_cmd
 11062                           
 11063                           ;lcd_lib.c: 35: _delay((unsigned long)((300)*(8000000/4000000.0)));
 11064  0847  30C8               	movlw	200
 11065  0848                     u5827:
 11066  0848  0B89               	decfsz	9,f
 11067  0849  2848               	goto	u5827
 11068  084A                     l3866:
 11069                           
 11070                           ;lcd_lib.c: 37: lcd_cmd(0x20);
 11071  084A  3020               	movlw	32
 11072  084B  3180  2004  3188   	fcall	_lcd_cmd
 11073  084E                     l3868:
 11074                           
 11075                           ;lcd_lib.c: 38: lcd_cmd(0x24);
 11076  084E  3024               	movlw	36
 11077  084F  3180  2004  3188   	fcall	_lcd_cmd
 11078  0852                     l3870:
 11079                           
 11080                           ;lcd_lib.c: 39: lcd_cmd(0x20);
 11081  0852  3020               	movlw	32
 11082  0853  3180  2004  3188   	fcall	_lcd_cmd
 11083  0856                     l3872:
 11084                           
 11085                           ;lcd_lib.c: 40: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11086  0856  3006               	movlw	6
 11087  0857                     u5837:
 11088  0857  0B89               	decfsz	9,f
 11089  0858  2857               	goto	u5837
 11090  0859  3200               	nop2
 11091                           
 11092                           ;lcd_lib.c: 43: lcd_cmd(0x20);
 11093  085A  3020               	movlw	32
 11094  085B  3180  2004  3188   	fcall	_lcd_cmd
 11095                           
 11096                           ;lcd_lib.c: 44: lcd_cmd(0x24);
 11097  085E  3024               	movlw	36
 11098  085F  3180  2004  3188   	fcall	_lcd_cmd
 11099                           
 11100                           ;lcd_lib.c: 45: lcd_cmd(0x20);
 11101  0862  3020               	movlw	32
 11102  0863  3180  2004  3188   	fcall	_lcd_cmd
 11103  0866                     l3874:
 11104                           
 11105                           ;lcd_lib.c: 47: _delay((unsigned long)((100)*(8000000/4000000.0)));
 11106  0866  3042               	movlw	66
 11107  0867                     u5847:
 11108  0867  0B89               	decfsz	9,f
 11109  0868  2867               	goto	u5847
 11110  0869  3200               	nop2
 11111  086A                     l3876:
 11112                           
 11113                           ;lcd_lib.c: 49: lcd_cmd(0x80);
 11114  086A  3080               	movlw	128
 11115  086B  3180  2004  3188   	fcall	_lcd_cmd
 11116  086E                     l3878:
 11117                           
 11118                           ;lcd_lib.c: 50: lcd_cmd(0x84);
 11119  086E  3084               	movlw	132
 11120  086F  3180  2004  3188   	fcall	_lcd_cmd
 11121  0872                     l3880:
 11122                           
 11123                           ;lcd_lib.c: 51: lcd_cmd(0x80);
 11124  0872  3080               	movlw	128
 11125  0873  3180  2004  3188   	fcall	_lcd_cmd
 11126  0876                     l3882:
 11127                           
 11128                           ;lcd_lib.c: 55: lcd_cmd(0x00);
 11129  0876  3000               	movlw	0
 11130  0877  3180  2004  3188   	fcall	_lcd_cmd
 11131  087A                     l3884:
 11132                           
 11133                           ;lcd_lib.c: 56: lcd_cmd(0x04);
 11134  087A  3004               	movlw	4
 11135  087B  3180  2004  3188   	fcall	_lcd_cmd
 11136  087E                     l3886:
 11137                           
 11138                           ;lcd_lib.c: 57: lcd_cmd(0x00);
 11139  087E  3000               	movlw	0
 11140  087F  3180  2004  3188   	fcall	_lcd_cmd
 11141  0882                     l3888:
 11142                           
 11143                           ;lcd_lib.c: 59: _delay((unsigned long)((100)*(8000000/4000000.0)));
 11144  0882  3042               	movlw	66
 11145  0883                     u5857:
 11146  0883  0B89               	decfsz	9,f
 11147  0884  2883               	goto	u5857
 11148  0885  3200               	nop2
 11149                           
 11150                           ;lcd_lib.c: 61: lcd_cmd(0xC0);
 11151  0886  30C0               	movlw	192
 11152  0887  3180  2004  3188   	fcall	_lcd_cmd
 11153                           
 11154                           ;lcd_lib.c: 62: lcd_cmd(0xC4);
 11155  088A  30C4               	movlw	196
 11156  088B  3180  2004  3188   	fcall	_lcd_cmd
 11157                           
 11158                           ;lcd_lib.c: 63: lcd_cmd(0xC0);
 11159  088E  30C0               	movlw	192
 11160  088F  3180  2004  3188   	fcall	_lcd_cmd
 11161                           
 11162                           ;lcd_lib.c: 67: lcd_cmd(0x00);
 11163  0892  3000               	movlw	0
 11164  0893  3180  2004  3188   	fcall	_lcd_cmd
 11165                           
 11166                           ;lcd_lib.c: 68: lcd_cmd(0x04);
 11167  0896  3004               	movlw	4
 11168  0897  3180  2004  3188   	fcall	_lcd_cmd
 11169                           
 11170                           ;lcd_lib.c: 69: lcd_cmd(0x00);
 11171  089A  3000               	movlw	0
 11172  089B  3180  2004  3188   	fcall	_lcd_cmd
 11173  089E                     l3890:
 11174                           
 11175                           ;lcd_lib.c: 71: _delay((unsigned long)((100)*(8000000/4000000.0)));
 11176  089E  3042               	movlw	66
 11177  089F                     u5867:
 11178  089F  0B89               	decfsz	9,f
 11179  08A0  289F               	goto	u5867
 11180  08A1  3200               	nop2
 11181  08A2                     l3892:
 11182                           
 11183                           ;lcd_lib.c: 73: lcd_cmd(0x10);
 11184  08A2  3010               	movlw	16
 11185  08A3  3180  2004  3188   	fcall	_lcd_cmd
 11186  08A6                     l3894:
 11187                           
 11188                           ;lcd_lib.c: 74: lcd_cmd(0x14);
 11189  08A6  3014               	movlw	20
 11190  08A7  3180  2004  3188   	fcall	_lcd_cmd
 11191  08AA                     l3896:
 11192                           
 11193                           ;lcd_lib.c: 75: lcd_cmd(0x10);
 11194  08AA  3010               	movlw	16
 11195  08AB  3180  2004  3188   	fcall	_lcd_cmd
 11196                           
 11197                           ;lcd_lib.c: 77: _delay((unsigned long)((5)*(8000000/4000.0)));
 11198  08AE  300D               	movlw	13
 11199  08AF  00F2               	movwf	??_lcd_init
 11200  08B0  30FC               	movlw	252
 11201  08B1                     u5877:
 11202  08B1  0B89               	decfsz	9,f
 11203  08B2  28B1               	goto	u5877
 11204  08B3  0BF2               	decfsz	??_lcd_init,f
 11205  08B4  28B1               	goto	u5877
 11206  08B5                     l3898:
 11207                           
 11208                           ;lcd_lib.c: 80: lcd_cmd(0x00);
 11209  08B5  3000               	movlw	0
 11210  08B6  3180  2004  3188   	fcall	_lcd_cmd
 11211  08B9                     l3900:
 11212                           
 11213                           ;lcd_lib.c: 81: lcd_cmd(0x04);
 11214  08B9  3004               	movlw	4
 11215  08BA  3180  2004  3188   	fcall	_lcd_cmd
 11216  08BD                     l3902:
 11217                           
 11218                           ;lcd_lib.c: 82: lcd_cmd(0x00);
 11219  08BD  3000               	movlw	0
 11220  08BE  3180  2004  3188   	fcall	_lcd_cmd
 11221  08C1                     l3904:
 11222                           
 11223                           ;lcd_lib.c: 84: _delay((unsigned long)((100)*(8000000/4000000.0)));
 11224  08C1  3042               	movlw	66
 11225  08C2                     u5887:
 11226  08C2  0B89               	decfsz	9,f
 11227  08C3  28C2               	goto	u5887
 11228  08C4  3200               	nop2
 11229                           
 11230                           ;lcd_lib.c: 86: lcd_cmd(0x60);
 11231  08C5  3060               	movlw	96
 11232  08C6  3180  2004  3188   	fcall	_lcd_cmd
 11233                           
 11234                           ;lcd_lib.c: 87: lcd_cmd(0x64);
 11235  08C9  3064               	movlw	100
 11236  08CA  3180  2004  3188   	fcall	_lcd_cmd
 11237                           
 11238                           ;lcd_lib.c: 88: lcd_cmd(0x60);
 11239  08CD  3060               	movlw	96
 11240  08CE  3180  2004  3188   	fcall	_lcd_cmd
 11241                           
 11242                           ;lcd_lib.c: 92: lcd_cmd(0x00);
 11243  08D1  3000               	movlw	0
 11244  08D2  3180  2004  3188   	fcall	_lcd_cmd
 11245                           
 11246                           ;lcd_lib.c: 93: lcd_cmd(0x04);
 11247  08D5  3004               	movlw	4
 11248  08D6  3180  2004  3188   	fcall	_lcd_cmd
 11249                           
 11250                           ;lcd_lib.c: 94: lcd_cmd(0x00);
 11251  08D9  3000               	movlw	0
 11252  08DA  3180  2004  3188   	fcall	_lcd_cmd
 11253  08DD                     l3906:
 11254                           
 11255                           ;lcd_lib.c: 96: _delay((unsigned long)((100)*(8000000/4000000.0)));
 11256  08DD  3042               	movlw	66
 11257  08DE                     u5897:
 11258  08DE  0B89               	decfsz	9,f
 11259  08DF  28DE               	goto	u5897
 11260  08E0  3200               	nop2
 11261  08E1                     l3908:
 11262                           
 11263                           ;lcd_lib.c: 98: lcd_cmd(0x20);
 11264  08E1  3020               	movlw	32
 11265  08E2  3180  2004  3188   	fcall	_lcd_cmd
 11266  08E5                     l3910:
 11267                           
 11268                           ;lcd_lib.c: 99: lcd_cmd(0x24);
 11269  08E5  3024               	movlw	36
 11270  08E6  3180  2004  3188   	fcall	_lcd_cmd
 11271  08E9                     l3912:
 11272                           
 11273                           ;lcd_lib.c: 100: lcd_cmd(0x20);
 11274  08E9  3020               	movlw	32
 11275  08EA  3180  2004  3188   	fcall	_lcd_cmd
 11276                           
 11277                           ;lcd_lib.c: 102: _delay((unsigned long)((3)*(8000000/4000.0)));
 11278  08ED  3008               	movlw	8
 11279  08EE  00F2               	movwf	??_lcd_init
 11280  08EF  30CA               	movlw	202
 11281  08F0                     u5907:
 11282  08F0  0B89               	decfsz	9,f
 11283  08F1  28F0               	goto	u5907
 11284  08F2  0BF2               	decfsz	??_lcd_init,f
 11285  08F3  28F0               	goto	u5907
 11286  08F4                     l218:
 11287  08F4  0008               	return
 11288  08F5                     __end_of_lcd_init:
 11289                           
 11290                           	psect	text25
 11291  1D3C                     __ptext25:	
 11292 ;; *************** function _lcd_clear *****************
 11293 ;; Defined at:
 11294 ;;		line 111 in file "lcd_lib.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;		None
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;  col             1    7[BANK0 ] unsigned char 
 11299 ;;  row             1    6[BANK0 ] unsigned char 
 11300 ;; Return value:  Size  Location     Type
 11301 ;;                  1    wreg      void 
 11302 ;; Registers used:
 11303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11304 ;; Tracked objects:
 11305 ;;		On entry : 0/0
 11306 ;;		On exit  : 0/0
 11307 ;;		Unchanged: 0/0
 11308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11310 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11311 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11312 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11313 ;;Total ram usage:        3 bytes
 11314 ;; Hardware stack levels used: 1
 11315 ;; Hardware stack levels required when called: 5
 11316 ;; This function calls:
 11317 ;;		_lcd_print
 11318 ;;		_lcd_set_cursor
 11319 ;; This function is called by:
 11320 ;;		_main
 11321 ;; This function uses a non-reentrant model
 11322 ;;
 11323                           
 11324                           
 11325                           ;psect for function _lcd_clear
 11326  1D3C                     _lcd_clear:
 11327  1D3C                     l3986:	
 11328                           ;incstack = 0
 11329                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11330                           
 11331                           
 11332                           ;lcd_lib.c: 112: for(uint8_t row = 0; row < 2; row++){
 11333  1D3C  0020               	movlb	0	; select bank0
 11334  1D3D  01A6               	clrf	lcd_clear@row
 11335  1D3E                     l3992:
 11336                           
 11337                           ;lcd_lib.c: 113: for(uint8_t col = 0; col < 16; col++){
 11338  1D3E  01A7               	clrf	lcd_clear@col
 11339  1D3F                     l3998:
 11340                           
 11341                           ;lcd_lib.c: 114: lcd_set_cursor(col, row);
 11342  1D3F  0826               	movf	lcd_clear@row,w
 11343  1D40  00FC               	movwf	??_lcd_clear
 11344  1D41  087C               	movf	??_lcd_clear,w
 11345  1D42  00F8               	movwf	lcd_set_cursor@row
 11346  1D43  0827               	movf	lcd_clear@col,w
 11347  1D44  3190  2004  319D   	fcall	_lcd_set_cursor
 11348  1D47                     l4000:
 11349                           
 11350                           ;lcd_lib.c: 115: lcd_print(" ");
 11351  1D47  30CB               	movlw	low ((STR_3+7)| (0+32768))
 11352  1D48  00F8               	movwf	lcd_print@str
 11353  1D49  30A0               	movlw	high ((STR_3+7)| (0+32768))
 11354  1D4A  00F9               	movwf	lcd_print@str+1
 11355  1D4B  319C  24BD  319D   	fcall	_lcd_print
 11356  1D4E                     l4002:
 11357  1D4E  3001               	movlw	1
 11358  1D4F  00FC               	movwf	??_lcd_clear
 11359  1D50  087C               	movf	??_lcd_clear,w
 11360  1D51  0020               	movlb	0	; select bank0
 11361  1D52  07A7               	addwf	lcd_clear@col,f
 11362  1D53                     l4004:
 11363  1D53  3010               	movlw	16
 11364  1D54  0227               	subwf	lcd_clear@col,w
 11365  1D55  1C03               	skipc
 11366  1D56  2D58               	goto	u5211
 11367  1D57  2D59               	goto	u5210
 11368  1D58                     u5211:
 11369  1D58  2D3F               	goto	l3998
 11370  1D59                     u5210:
 11371  1D59                     l4006:
 11372  1D59  3001               	movlw	1
 11373  1D5A  00FC               	movwf	??_lcd_clear
 11374  1D5B  087C               	movf	??_lcd_clear,w
 11375  1D5C  07A6               	addwf	lcd_clear@row,f
 11376  1D5D                     l4008:
 11377  1D5D  3002               	movlw	2
 11378  1D5E  0226               	subwf	lcd_clear@row,w
 11379  1D5F  1C03               	skipc
 11380  1D60  2D62               	goto	u5221
 11381  1D61  2D63               	goto	u5220
 11382  1D62                     u5221:
 11383  1D62  2D3E               	goto	l3992
 11384  1D63                     u5220:
 11385  1D63                     l228:
 11386  1D63  0008               	return
 11387  1D64                     __end_of_lcd_clear:
 11388                           
 11389                           	psect	text26
 11390  1004                     __ptext26:	
 11391 ;; *************** function _lcd_set_cursor *****************
 11392 ;; Defined at:
 11393 ;;		line 125 in file "lcd_lib.c"
 11394 ;; Parameters:    Size  Location     Type
 11395 ;;  col             1    wreg     unsigned char 
 11396 ;;  row             1    8[COMMON] unsigned char 
 11397 ;; Auto vars:     Size  Location     Type
 11398 ;;  col             1    4[BANK0 ] unsigned char 
 11399 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
 11400 ;;  cmd             1    5[BANK0 ] unsigned char 
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  1    wreg      void 
 11403 ;; Registers used:
 11404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11410 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11411 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;Total ram usage:        8 bytes
 11415 ;; Hardware stack levels used: 1
 11416 ;; Hardware stack levels required when called: 4
 11417 ;; This function calls:
 11418 ;;		_command
 11419 ;; This function is called by:
 11420 ;;		_main
 11421 ;;		_lcd_clear
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           
 11426                           ;psect for function _lcd_set_cursor
 11427  1004                     _lcd_set_cursor:
 11428                           
 11429                           ;incstack = 0
 11430                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11431                           ;lcd_set_cursor@col stored from wreg
 11432  1004  0020               	movlb	0	; select bank0
 11433  1005  00A4               	movwf	lcd_set_cursor@col
 11434  1006                     l3288:
 11435                           
 11436                           ;lcd_lib.c: 126: uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 11437  1006  0021               	movlb	1	; select bank1
 11438  1007  0867               	movf	(lcd_set_cursor@F2624+3)^(0+128),w
 11439  1008  0020               	movlb	0	; select bank0
 11440  1009  00A3               	movwf	lcd_set_cursor@row_offsets+3
 11441  100A  0021               	movlb	1	; select bank1
 11442  100B  0866               	movf	(lcd_set_cursor@F2624+2)^(0+128),w
 11443  100C  0020               	movlb	0	; select bank0
 11444  100D  00A2               	movwf	lcd_set_cursor@row_offsets+2
 11445  100E  0021               	movlb	1	; select bank1
 11446  100F  0865               	movf	(lcd_set_cursor@F2624+1)^(0+128),w
 11447  1010  0020               	movlb	0	; select bank0
 11448  1011  00A1               	movwf	lcd_set_cursor@row_offsets+1
 11449  1012  0021               	movlb	1	; select bank1
 11450  1013  0864               	movf	lcd_set_cursor@F2624^(0+128),w
 11451  1014  0020               	movlb	0	; select bank0
 11452  1015  00A0               	movwf	lcd_set_cursor@row_offsets
 11453                           
 11454                           ;lcd_lib.c: 127: if(row > 2){
 11455  1016  3003               	movlw	3
 11456  1017  0278               	subwf	lcd_set_cursor@row,w
 11457  1018  1C03               	skipc
 11458  1019  281B               	goto	u3991
 11459  101A  281C               	goto	u3990
 11460  101B                     u3991:
 11461  101B  281E               	goto	l3292
 11462  101C                     u3990:
 11463  101C                     l3290:
 11464                           
 11465                           ;lcd_lib.c: 128: row = 2 - 1;
 11466  101C  01F8               	clrf	lcd_set_cursor@row
 11467  101D  0AF8               	incf	lcd_set_cursor@row,f
 11468  101E                     l3292:
 11469                           
 11470                           ;lcd_lib.c: 129: };lcd_lib.c: 130: uint8_t cmd = 0x80 | (col + row_offsets[row]);
 11471  101E  0878               	movf	lcd_set_cursor@row,w
 11472  101F  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
 11473  1020  0086               	movwf	6
 11474  1021  0187               	clrf	7
 11475  1022  0801               	movf	1,w
 11476  1023  0724               	addwf	lcd_set_cursor@col,w
 11477  1024  3880               	iorlw	128
 11478  1025  00F9               	movwf	??_lcd_set_cursor
 11479  1026  0879               	movf	??_lcd_set_cursor,w
 11480  1027  00A5               	movwf	lcd_set_cursor@cmd
 11481  1028                     l3294:
 11482                           
 11483                           ;lcd_lib.c: 131: command(cmd, 0);
 11484  1028  01F2               	clrf	command@mode
 11485  1029  0825               	movf	lcd_set_cursor@cmd,w
 11486  102A  319D  2598  3190   	fcall	_command
 11487  102D                     l234:
 11488  102D  0008               	return
 11489  102E                     __end_of_lcd_set_cursor:
 11490                           
 11491                           	psect	text27
 11492  1CBD                     __ptext27:	
 11493 ;; *************** function _lcd_print *****************
 11494 ;; Defined at:
 11495 ;;		line 134 in file "lcd_lib.c"
 11496 ;; Parameters:    Size  Location     Type
 11497 ;;  str             2    8[COMMON] PTR unsigned char 
 11498 ;;		 -> STR_7(2), gramstr(16), valstr(16), STR_2(15), 
 11499 ;;		 -> STR_1(11), 
 11500 ;; Auto vars:     Size  Location     Type
 11501 ;;  cmd             1   11[COMMON] unsigned char 
 11502 ;; Return value:  Size  Location     Type
 11503 ;;                  1    wreg      void 
 11504 ;; Registers used:
 11505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11506 ;; Tracked objects:
 11507 ;;		On entry : 0/0
 11508 ;;		On exit  : 0/0
 11509 ;;		Unchanged: 0/0
 11510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11513 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11514 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11515 ;;Total ram usage:        4 bytes
 11516 ;; Hardware stack levels used: 1
 11517 ;; Hardware stack levels required when called: 4
 11518 ;; This function calls:
 11519 ;;		_command
 11520 ;; This function is called by:
 11521 ;;		_main
 11522 ;;		_lcd_clear
 11523 ;; This function uses a non-reentrant model
 11524 ;;
 11525                           
 11526                           
 11527                           ;psect for function _lcd_print
 11528  1CBD                     _lcd_print:
 11529  1CBD                     l3296:	
 11530                           ;incstack = 0
 11531                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11532                           
 11533                           
 11534                           ;lcd_lib.c: 135: while (*str) {
 11535  1CBD  2CD0               	goto	l3304
 11536  1CBE                     l3298:
 11537                           
 11538                           ;lcd_lib.c: 136: uint8_t cmd = *str++;
 11539  1CBE  0878               	movf	lcd_print@str,w
 11540  1CBF  0084               	movwf	4
 11541  1CC0  0879               	movf	lcd_print@str+1,w
 11542  1CC1  0085               	movwf	5
 11543  1CC2  0800               	movf	0,w	;code access
 11544  1CC3  00FA               	movwf	??_lcd_print
 11545  1CC4  087A               	movf	??_lcd_print,w
 11546  1CC5  00FB               	movwf	lcd_print@cmd
 11547  1CC6                     l3300:
 11548  1CC6  3001               	movlw	1
 11549  1CC7  07F8               	addwf	lcd_print@str,f
 11550  1CC8  3000               	movlw	0
 11551  1CC9  3DF9               	addwfc	lcd_print@str+1,f
 11552  1CCA                     l3302:
 11553                           
 11554                           ;lcd_lib.c: 137: command(cmd, 0b00000001);
 11555  1CCA  01F2               	clrf	command@mode
 11556  1CCB  0AF2               	incf	command@mode,f
 11557  1CCC  087B               	movf	lcd_print@cmd,w
 11558  1CCD  319D  2598  319C   	fcall	_command
 11559  1CD0                     l3304:
 11560  1CD0  0878               	movf	lcd_print@str,w
 11561  1CD1  0084               	movwf	4
 11562  1CD2  0879               	movf	lcd_print@str+1,w
 11563  1CD3  0085               	movwf	5
 11564  1CD4  0012               	moviw fsr0++
 11565  1CD5  1D03               	btfss	3,2
 11566  1CD6  2CD8               	goto	u4001
 11567  1CD7  2CD9               	goto	u4000
 11568  1CD8                     u4001:
 11569  1CD8  2CBE               	goto	l3298
 11570  1CD9                     u4000:
 11571  1CD9                     l240:
 11572  1CD9  0008               	return
 11573  1CDA                     __end_of_lcd_print:
 11574                           
 11575                           	psect	text28
 11576  1D98                     __ptext28:	
 11577 ;; *************** function _command *****************
 11578 ;; Defined at:
 11579 ;;		line 141 in file "lcd_lib.c"
 11580 ;; Parameters:    Size  Location     Type
 11581 ;;  val             1    wreg     unsigned char 
 11582 ;;  mode            1    2[COMMON] unsigned char 
 11583 ;; Auto vars:     Size  Location     Type
 11584 ;;  val             1    5[COMMON] unsigned char 
 11585 ;;  lownib          1    7[COMMON] unsigned char 
 11586 ;;  highnib         1    6[COMMON] unsigned char 
 11587 ;; Return value:  Size  Location     Type
 11588 ;;                  1    wreg      void 
 11589 ;; Registers used:
 11590 ;;		wreg, status,2, status,0, pclath, cstack
 11591 ;; Tracked objects:
 11592 ;;		On entry : 0/0
 11593 ;;		On exit  : 0/0
 11594 ;;		Unchanged: 0/0
 11595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11596 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11599 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;Total ram usage:        6 bytes
 11601 ;; Hardware stack levels used: 1
 11602 ;; Hardware stack levels required when called: 3
 11603 ;; This function calls:
 11604 ;;		_lcd_cmd
 11605 ;; This function is called by:
 11606 ;;		_lcd_set_cursor
 11607 ;;		_lcd_print
 11608 ;; This function uses a non-reentrant model
 11609 ;;
 11610                           
 11611                           
 11612                           ;psect for function _command
 11613  1D98                     _command:
 11614                           
 11615                           ;incstack = 0
 11616                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
 11617                           ;command@val stored from wreg
 11618  1D98  00F5               	movwf	command@val
 11619  1D99                     l2788:
 11620                           
 11621                           ;lcd_lib.c: 142: uint8_t highnib = (val & 0xf0) | _backlightval | mode;
 11622  1D99  0875               	movf	command@val,w
 11623  1D9A  39F0               	andlw	240
 11624  1D9B  0020               	movlb	0	; select bank0
 11625  1D9C  046F               	iorwf	__backlightval,w
 11626  1D9D  0472               	iorwf	command@mode,w
 11627  1D9E  00F3               	movwf	??_command
 11628  1D9F  0873               	movf	??_command,w
 11629  1DA0  00F6               	movwf	command@highnib
 11630                           
 11631                           ;lcd_lib.c: 143: uint8_t lownib = ((val << 4) & 0xf0) | _backlightval | mode;
 11632  1DA1  0875               	movf	command@val,w
 11633  1DA2  00F3               	movwf	??_command
 11634  1DA3  3003               	movlw	3
 11635  1DA4                     u2975:
 11636  1DA4  35F3               	lslf	??_command,f
 11637  1DA5  3EFF               	addlw	-1
 11638  1DA6  1D03               	skipz
 11639  1DA7  2DA4               	goto	u2975
 11640  1DA8  3573               	lslf	??_command,w
 11641  1DA9  39F0               	andlw	240
 11642  1DAA  046F               	iorwf	__backlightval,w
 11643  1DAB  0472               	iorwf	command@mode,w
 11644  1DAC  00F4               	movwf	??_command+1
 11645  1DAD  0874               	movf	??_command+1,w
 11646  1DAE  00F7               	movwf	command@lownib
 11647  1DAF                     l2790:
 11648                           
 11649                           ;lcd_lib.c: 145: lcd_cmd(highnib);
 11650  1DAF  0876               	movf	command@highnib,w
 11651  1DB0  3180  2004  319D   	fcall	_lcd_cmd
 11652  1DB3                     l2792:
 11653                           
 11654                           ;lcd_lib.c: 146: lcd_cmd(highnib | 0b00000100);
 11655  1DB3  0876               	movf	command@highnib,w
 11656  1DB4  3804               	iorlw	4
 11657  1DB5  3180  2004  319D   	fcall	_lcd_cmd
 11658  1DB8                     l2794:
 11659                           
 11660                           ;lcd_lib.c: 147: lcd_cmd(highnib & ~0b00000100);
 11661  1DB8  0876               	movf	command@highnib,w
 11662  1DB9  39FB               	andlw	251
 11663  1DBA  3180  2004  319D   	fcall	_lcd_cmd
 11664  1DBD                     l2796:
 11665                           
 11666                           ;lcd_lib.c: 149: _delay((unsigned long)((100)*(8000000/4000000.0)));
 11667  1DBD  3042               	movlw	66
 11668  1DBE                     u5917:
 11669  1DBE  0B89               	decfsz	9,f
 11670  1DBF  2DBE               	goto	u5917
 11671  1DC0  3200               	nop2
 11672  1DC1                     l2798:
 11673                           
 11674                           ;lcd_lib.c: 151: lcd_cmd(lownib);
 11675  1DC1  0877               	movf	command@lownib,w
 11676  1DC2  3180  2004  319D   	fcall	_lcd_cmd
 11677  1DC5                     l2800:
 11678                           
 11679                           ;lcd_lib.c: 152: lcd_cmd(lownib | 0b00000100);
 11680  1DC5  0877               	movf	command@lownib,w
 11681  1DC6  3804               	iorlw	4
 11682  1DC7  3180  2004  319D   	fcall	_lcd_cmd
 11683  1DCA                     l2802:
 11684                           
 11685                           ;lcd_lib.c: 153: lcd_cmd(lownib & ~0b00000100);
 11686  1DCA  0877               	movf	command@lownib,w
 11687  1DCB  39FB               	andlw	251
 11688  1DCC  3180  2004  319D   	fcall	_lcd_cmd
 11689  1DCF                     l243:
 11690  1DCF  0008               	return
 11691  1DD0                     __end_of_command:
 11692                           
 11693                           	psect	text29
 11694  1C7B                     __ptext29:	
 11695 ;; *************** function _lcd_backlight *****************
 11696 ;; Defined at:
 11697 ;;		line 105 in file "lcd_lib.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;		None
 11700 ;; Auto vars:     Size  Location     Type
 11701 ;;		None
 11702 ;; Return value:  Size  Location     Type
 11703 ;;                  1    wreg      void 
 11704 ;; Registers used:
 11705 ;;		wreg, status,2, status,0, pclath, cstack
 11706 ;; Tracked objects:
 11707 ;;		On entry : 0/0
 11708 ;;		On exit  : 0/0
 11709 ;;		Unchanged: 0/0
 11710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11715 ;;Total ram usage:        1 bytes
 11716 ;; Hardware stack levels used: 1
 11717 ;; Hardware stack levels required when called: 3
 11718 ;; This function calls:
 11719 ;;		_lcd_cmd
 11720 ;; This function is called by:
 11721 ;;		_main
 11722 ;; This function uses a non-reentrant model
 11723 ;;
 11724                           
 11725                           
 11726                           ;psect for function _lcd_backlight
 11727  1C7B                     _lcd_backlight:
 11728  1C7B                     l3914:	
 11729                           ;incstack = 0
 11730                           ; Regs used in _lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
 11731                           
 11732                           
 11733                           ;lcd_lib.c: 106: lcd_cmd(0x08);
 11734  1C7B  3008               	movlw	8
 11735  1C7C  3180  2004  319C   	fcall	_lcd_cmd
 11736  1C7F                     l3916:
 11737                           
 11738                           ;lcd_lib.c: 107: _backlightval = 0x08;
 11739  1C7F  3008               	movlw	8
 11740  1C80  00F2               	movwf	??_lcd_backlight
 11741  1C81  0872               	movf	??_lcd_backlight,w
 11742  1C82  0020               	movlb	0	; select bank0
 11743  1C83  00EF               	movwf	__backlightval
 11744  1C84                     l3918:
 11745                           
 11746                           ;lcd_lib.c: 108: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11747  1C84  3006               	movlw	6
 11748  1C85                     u5927:
 11749  1C85  0B89               	decfsz	9,f
 11750  1C86  2C85               	goto	u5927
 11751  1C87  3200               	nop2
 11752  1C88                     l221:
 11753  1C88  0008               	return
 11754  1C89                     __end_of_lcd_backlight:
 11755                           
 11756                           	psect	text30
 11757  0004                     __ptext30:	
 11758 ;; *************** function _lcd_cmd *****************
 11759 ;; Defined at:
 11760 ;;		line 11 in file "lcd_lib.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;  cmd             1    wreg     unsigned char 
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;  cmd             1    1[COMMON] unsigned char 
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  1    wreg      void 
 11767 ;; Registers used:
 11768 ;;		wreg, status,2, status,0, pclath, cstack
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11777 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11778 ;;Total ram usage:        1 bytes
 11779 ;; Hardware stack levels used: 1
 11780 ;; Hardware stack levels required when called: 2
 11781 ;; This function calls:
 11782 ;;		_i2c_start
 11783 ;;		_i2c_stop
 11784 ;;		_i2c_write
 11785 ;; This function is called by:
 11786 ;;		_lcd_init
 11787 ;;		_lcd_backlight
 11788 ;;		_command
 11789 ;; This function uses a non-reentrant model
 11790 ;;
 11791                           
 11792                           
 11793                           ;psect for function _lcd_cmd
 11794  0004                     _lcd_cmd:
 11795                           
 11796                           ;incstack = 0
 11797                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
 11798                           ;lcd_cmd@cmd stored from wreg
 11799  0004  00F1               	movwf	lcd_cmd@cmd
 11800  0005                     l2770:
 11801                           
 11802                           ;lcd_lib.c: 12: i2c_start();
 11803  0005  319C  245A  3180   	fcall	_i2c_start
 11804                           
 11805                           ;lcd_lib.c: 13: i2c_write(0x27 << 1);
 11806  0008  304E               	movlw	78
 11807  0009  319C  2489  3180   	fcall	_i2c_write
 11808                           
 11809                           ;lcd_lib.c: 14: i2c_write(cmd);
 11810  000C  0871               	movf	lcd_cmd@cmd,w
 11811  000D  319C  2489  3180   	fcall	_i2c_write
 11812  0010                     l2772:
 11813                           
 11814                           ;lcd_lib.c: 15: i2c_stop();
 11815  0010  3188  2002  3180   	fcall	_i2c_stop
 11816                           
 11817                           ;lcd_lib.c: 16: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11818  0013  3006               	movlw	6
 11819  0014                     u5937:
 11820  0014  0B89               	decfsz	9,f
 11821  0015  2814               	goto	u5937
 11822  0016  3200               	nop2
 11823  0017                     l215:
 11824  0017  0008               	return
 11825  0018                     __end_of_lcd_cmd:
 11826                           
 11827                           	psect	text31
 11828  1C89                     __ptext31:	
 11829 ;; *************** function _i2c_write *****************
 11830 ;; Defined at:
 11831 ;;		line 25 in file "i2c.c"
 11832 ;; Parameters:    Size  Location     Type
 11833 ;;  data            1    wreg     unsigned char 
 11834 ;; Auto vars:     Size  Location     Type
 11835 ;;  data            1    0[COMMON] unsigned char 
 11836 ;; Return value:  Size  Location     Type
 11837 ;;                  1    wreg      void 
 11838 ;; Registers used:
 11839 ;;		wreg, status,2, status,0, pclath, cstack
 11840 ;; Tracked objects:
 11841 ;;		On entry : 0/0
 11842 ;;		On exit  : 0/0
 11843 ;;		Unchanged: 0/0
 11844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11846 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11849 ;;Total ram usage:        1 bytes
 11850 ;; Hardware stack levels used: 1
 11851 ;; Hardware stack levels required when called: 1
 11852 ;; This function calls:
 11853 ;;		_i2c_wait
 11854 ;; This function is called by:
 11855 ;;		_lcd_cmd
 11856 ;; This function uses a non-reentrant model
 11857 ;;
 11858                           
 11859                           
 11860                           ;psect for function _i2c_write
 11861  1C89                     _i2c_write:
 11862                           
 11863                           ;incstack = 0
 11864                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
 11865                           ;i2c_write@data stored from wreg
 11866  1C89  00F0               	movwf	i2c_write@data
 11867  1C8A                     l2766:
 11868                           
 11869                           ;i2c.c: 26: SSPBUF = data;
 11870  1C8A  0870               	movf	i2c_write@data,w
 11871  1C8B  0024               	movlb	4	; select bank4
 11872  1C8C  0091               	movwf	17	;volatile
 11873  1C8D                     l184:	
 11874                           ;i2c.c: 27: while(SSPSTATbits.BF);
 11875                           
 11876  1C8D  1814               	btfsc	20,0	;volatile
 11877  1C8E  2C90               	goto	u2921
 11878  1C8F  2C91               	goto	u2920
 11879  1C90                     u2921:
 11880  1C90  2C8D               	goto	l184
 11881  1C91                     u2920:
 11882  1C91                     l187:
 11883  1C91  1B16               	btfsc	22,6	;volatile
 11884  1C92  2C94               	goto	u2931
 11885  1C93  2C95               	goto	u2930
 11886  1C94                     u2931:
 11887  1C94  2C91               	goto	l187
 11888  1C95                     u2930:
 11889  1C95                     l2768:
 11890                           
 11891                           ;i2c.c: 29: i2c_wait();
 11892  1C95  319C  246F  319C   	fcall	_i2c_wait
 11893  1C98                     l190:
 11894  1C98  0008               	return
 11895  1C99                     __end_of_i2c_write:
 11896                           
 11897                           	psect	text32
 11898  0802                     __ptext32:	
 11899 ;; *************** function _i2c_stop *****************
 11900 ;; Defined at:
 11901 ;;		line 14 in file "i2c.c"
 11902 ;; Parameters:    Size  Location     Type
 11903 ;;		None
 11904 ;; Auto vars:     Size  Location     Type
 11905 ;;		None
 11906 ;; Return value:  Size  Location     Type
 11907 ;;                  1    wreg      void 
 11908 ;; Registers used:
 11909 ;;		None
 11910 ;; Tracked objects:
 11911 ;;		On entry : 0/0
 11912 ;;		On exit  : 0/0
 11913 ;;		Unchanged: 0/0
 11914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11919 ;;Total ram usage:        0 bytes
 11920 ;; Hardware stack levels used: 1
 11921 ;; This function calls:
 11922 ;;		Nothing
 11923 ;; This function is called by:
 11924 ;;		_lcd_cmd
 11925 ;; This function uses a non-reentrant model
 11926 ;;
 11927                           
 11928                           
 11929                           ;psect for function _i2c_stop
 11930  0802                     _i2c_stop:
 11931  0802                     l2764:	
 11932                           ;incstack = 0
 11933                           ; Regs used in _i2c_stop: []
 11934                           
 11935                           
 11936                           ;i2c.c: 15: SSPCON2bits.PEN = 1;
 11937  0802  0024               	movlb	4	; select bank4
 11938  0803  1516               	bsf	22,2	;volatile
 11939  0804                     l172:	
 11940                           ;i2c.c: 16: while(SSPCON2bits.PEN);
 11941                           
 11942  0804  1916               	btfsc	22,2	;volatile
 11943  0805  2807               	goto	u2911
 11944  0806  2808               	goto	u2910
 11945  0807                     u2911:
 11946  0807  2804               	goto	l172
 11947  0808                     u2910:
 11948  0808                     l175:
 11949  0808  0008               	return
 11950  0809                     __end_of_i2c_stop:
 11951                           
 11952                           	psect	text33
 11953  1C5A                     __ptext33:	
 11954 ;; *************** function _i2c_start *****************
 11955 ;; Defined at:
 11956 ;;		line 8 in file "i2c.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;		None
 11959 ;; Auto vars:     Size  Location     Type
 11960 ;;		None
 11961 ;; Return value:  Size  Location     Type
 11962 ;;                  1    wreg      void 
 11963 ;; Registers used:
 11964 ;;		wreg, status,2, status,0, pclath, cstack
 11965 ;; Tracked objects:
 11966 ;;		On entry : 0/0
 11967 ;;		On exit  : 0/0
 11968 ;;		Unchanged: 0/0
 11969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11974 ;;Total ram usage:        0 bytes
 11975 ;; Hardware stack levels used: 1
 11976 ;; Hardware stack levels required when called: 1
 11977 ;; This function calls:
 11978 ;;		_i2c_wait
 11979 ;; This function is called by:
 11980 ;;		_lcd_cmd
 11981 ;; This function uses a non-reentrant model
 11982 ;;
 11983                           
 11984                           
 11985                           ;psect for function _i2c_start
 11986  1C5A                     _i2c_start:
 11987  1C5A                     l2760:	
 11988                           ;incstack = 0
 11989                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
 11990                           
 11991                           
 11992                           ;i2c.c: 9: i2c_wait();
 11993  1C5A  319C  246F  319C   	fcall	_i2c_wait
 11994  1C5D                     l2762:
 11995                           
 11996                           ;i2c.c: 10: SSPCON2bits.SEN = 1;
 11997  1C5D  0024               	movlb	4	; select bank4
 11998  1C5E  1416               	bsf	22,0	;volatile
 11999  1C5F                     l166:	
 12000                           ;i2c.c: 11: while(SSPCON2bits.SEN);
 12001                           
 12002  1C5F  1816               	btfsc	22,0	;volatile
 12003  1C60  2C62               	goto	u2901
 12004  1C61  2C63               	goto	u2900
 12005  1C62                     u2901:
 12006  1C62  2C5F               	goto	l166
 12007  1C63                     u2900:
 12008  1C63                     l169:
 12009  1C63  0008               	return
 12010  1C64                     __end_of_i2c_start:
 12011                           
 12012                           	psect	text34
 12013  1C6F                     __ptext34:	
 12014 ;; *************** function _i2c_wait *****************
 12015 ;; Defined at:
 12016 ;;		line 4 in file "i2c.c"
 12017 ;; Parameters:    Size  Location     Type
 12018 ;;		None
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;		None
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  1    wreg      void 
 12023 ;; Registers used:
 12024 ;;		wreg, status,2
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;Total ram usage:        0 bytes
 12035 ;; Hardware stack levels used: 1
 12036 ;; This function calls:
 12037 ;;		Nothing
 12038 ;; This function is called by:
 12039 ;;		_i2c_start
 12040 ;;		_i2c_write
 12041 ;;		_i2c_repeated_start
 12042 ;;		_i2c_read
 12043 ;; This function uses a non-reentrant model
 12044 ;;
 12045                           
 12046                           
 12047                           ;psect for function _i2c_wait
 12048  1C6F                     _i2c_wait:
 12049  1C6F                     l2754:	
 12050                           ;incstack = 0
 12051                           ; Regs used in _i2c_wait: [wreg+status,2]
 12052                           
 12053  1C6F                     l2756:	
 12054                           ;i2c.c: 5: while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
 12055                           
 12056  1C6F  0024               	movlb	4	; select bank4
 12057  1C70  0816               	movf	22,w	;volatile
 12058  1C71  391F               	andlw	31
 12059  1C72  1D03               	btfss	3,2
 12060  1C73  2C75               	goto	u2881
 12061  1C74  2C76               	goto	u2880
 12062  1C75                     u2881:
 12063  1C75  2C6F               	goto	l2756
 12064  1C76                     u2880:
 12065  1C76                     l2758:
 12066  1C76  1914               	btfsc	20,2	;volatile
 12067  1C77  2C79               	goto	u2891
 12068  1C78  2C7A               	goto	u2890
 12069  1C79                     u2891:
 12070  1C79  2C6F               	goto	l2756
 12071  1C7A                     u2890:
 12072  1C7A                     l163:
 12073  1C7A  0008               	return
 12074  1C7B                     __end_of_i2c_wait:
 12075                           
 12076                           	psect	text35
 12077  12AE                     __ptext35:	
 12078 ;; *************** function _get_scale_val *****************
 12079 ;; Defined at:
 12080 ;;		line 28 in file "loadcell.c"
 12081 ;; Parameters:    Size  Location     Type
 12082 ;;  n               2    0[BANK0 ] int 
 12083 ;; Auto vars:     Size  Location     Type
 12084 ;;  i               1   17[BANK0 ] unsigned char 
 12085 ;;  j               1   12[BANK0 ] unsigned char 
 12086 ;;  weight_count    4   13[BANK0 ] unsigned long 
 12087 ;;  weight_add      4    8[BANK0 ] unsigned long 
 12088 ;; Return value:  Size  Location     Type
 12089 ;;                  4    0[BANK0 ] unsigned long 
 12090 ;; Registers used:
 12091 ;;		wreg, status,2, status,0, pclath, cstack
 12092 ;; Tracked objects:
 12093 ;;		On entry : 0/0
 12094 ;;		On exit  : 0/0
 12095 ;;		Unchanged: 0/0
 12096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12097 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12098 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12099 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12100 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12101 ;;Total ram usage:       18 bytes
 12102 ;; Hardware stack levels used: 1
 12103 ;; Hardware stack levels required when called: 1
 12104 ;; This function calls:
 12105 ;;		___lldiv
 12106 ;;		_get_CELL_DAT_VAL
 12107 ;;		_set_CELL_CLK_HIGH
 12108 ;;		_set_CELL_CLK_LOW
 12109 ;; This function is called by:
 12110 ;;		_main
 12111 ;; This function uses a non-reentrant model
 12112 ;;
 12113                           
 12114                           
 12115                           ;psect for function _get_scale_val
 12116  12AE                     _get_scale_val:
 12117  12AE                     l3920:	
 12118                           ;incstack = 0
 12119                           ; Regs used in _get_scale_val: [wreg+status,2+status,0+pclath+cstack]
 12120                           
 12121                           
 12122                           ;loadcell.c: 30: set_CELL_CLK_LOW();
 12123  12AE  319C  2433  3192   	fcall	_set_CELL_CLK_LOW
 12124  12B1                     l3922:
 12125                           
 12126                           ;loadcell.c: 32: unsigned long weight_count = 0;
 12127  12B1  3000               	movlw	0
 12128  12B2  0020               	movlb	0	; select bank0
 12129  12B3  00B0               	movwf	get_scale_val@weight_count+3
 12130  12B4  3000               	movlw	0
 12131  12B5  00AF               	movwf	get_scale_val@weight_count+2
 12132  12B6  3000               	movlw	0
 12133  12B7  00AE               	movwf	get_scale_val@weight_count+1
 12134  12B8  3000               	movlw	0
 12135  12B9  00AD               	movwf	get_scale_val@weight_count
 12136  12BA                     l3924:
 12137                           
 12138                           ;loadcell.c: 33: unsigned long weight_add = 0;
 12139  12BA  3000               	movlw	0
 12140  12BB  00AB               	movwf	get_scale_val@weight_add+3
 12141  12BC  3000               	movlw	0
 12142  12BD  00AA               	movwf	get_scale_val@weight_add+2
 12143  12BE  3000               	movlw	0
 12144  12BF  00A9               	movwf	get_scale_val@weight_add+1
 12145  12C0  3000               	movlw	0
 12146  12C1  00A8               	movwf	get_scale_val@weight_add
 12147  12C2                     l3926:
 12148                           
 12149                           ;loadcell.c: 34: for (uint8_t j = 0; j < n; j++)
 12150  12C2  01AC               	clrf	get_scale_val@j
 12151  12C3  2B3E               	goto	l3976
 12152  12C4                     l3928:
 12153  12C4  319C  2450  3192   	fcall	_get_CELL_DAT_VAL
 12154  12C7  0870               	movf	?_get_CELL_DAT_VAL,w
 12155  12C8  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 12156  12C9  1903               	btfsc	3,2
 12157  12CA  2ACC               	goto	u5151
 12158  12CB  2ACD               	goto	u5150
 12159  12CC                     u5151:
 12160  12CC  2AC4               	goto	l3928
 12161  12CD                     u5150:
 12162  12CD                     l3930:
 12163  12CD  319C  2450  3192   	fcall	_get_CELL_DAT_VAL
 12164  12D0  0370               	decf	?_get_CELL_DAT_VAL,w
 12165  12D1  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 12166  12D2  1903               	btfsc	3,2
 12167  12D3  2AD5               	goto	u5161
 12168  12D4  2AD6               	goto	u5160
 12169  12D5                     u5161:
 12170  12D5  2ACD               	goto	l3930
 12171  12D6                     u5160:
 12172  12D6                     l3932:
 12173                           
 12174                           ;loadcell.c: 38: _delay((unsigned long)((10)*(8000000/4000000.0)));
 12175  12D6  3006               	movlw	6
 12176  12D7                     u5947:
 12177  12D7  0B89               	decfsz	9,f
 12178  12D8  2AD7               	goto	u5947
 12179  12D9  3200               	nop2
 12180  12DA                     l3934:
 12181                           
 12182                           ;loadcell.c: 40: uint8_t i;;loadcell.c: 41: for (i = 0; i < 24; i++){
 12183  12DA  0020               	movlb	0	; select bank0
 12184  12DB  01B1               	clrf	get_scale_val@i
 12185  12DC                     l3940:
 12186                           
 12187                           ;loadcell.c: 42: weight_count <<= 1;
 12188  12DC  3001               	movlw	1
 12189  12DD                     u5175:
 12190  12DD  35AD               	lslf	get_scale_val@weight_count,f
 12191  12DE  0DAE               	rlf	get_scale_val@weight_count+1,f
 12192  12DF  0DAF               	rlf	get_scale_val@weight_count+2,f
 12193  12E0  0DB0               	rlf	get_scale_val@weight_count+3,f
 12194  12E1  0B89               	decfsz	9,f
 12195  12E2  2ADD               	goto	u5175
 12196  12E3                     l3942:
 12197                           
 12198                           ;loadcell.c: 43: set_CELL_CLK_HIGH();
 12199  12E3  319C  242C  3192   	fcall	_set_CELL_CLK_HIGH
 12200  12E6                     l3944:
 12201                           
 12202                           ;loadcell.c: 44: _delay((unsigned long)((10)*(8000000/4000000.0)));
 12203  12E6  3006               	movlw	6
 12204  12E7                     u5957:
 12205  12E7  0B89               	decfsz	9,f
 12206  12E8  2AE7               	goto	u5957
 12207  12E9  3200               	nop2
 12208  12EA                     l3946:
 12209                           
 12210                           ;loadcell.c: 45: set_CELL_CLK_LOW();
 12211  12EA  319C  2433  3192   	fcall	_set_CELL_CLK_LOW
 12212  12ED                     l3948:
 12213                           
 12214                           ;loadcell.c: 46: weight_count += get_CELL_DAT_VAL();
 12215  12ED  319C  2450  3192   	fcall	_get_CELL_DAT_VAL
 12216  12F0  0870               	movf	?_get_CELL_DAT_VAL,w
 12217  12F1  0020               	movlb	0	; select bank0
 12218  12F2  00A4               	movwf	??_get_scale_val
 12219  12F3  0871               	movf	?_get_CELL_DAT_VAL+1,w
 12220  12F4  00A5               	movwf	??_get_scale_val+1
 12221  12F5  3000               	movlw	0
 12222  12F6  1BA5               	btfsc	??_get_scale_val+1,7
 12223  12F7  30FF               	movlw	255
 12224  12F8  00A6               	movwf	??_get_scale_val+2
 12225  12F9  00A7               	movwf	??_get_scale_val+3
 12226  12FA  0824               	movf	??_get_scale_val,w
 12227  12FB  07AD               	addwf	get_scale_val@weight_count,f
 12228  12FC  0825               	movf	??_get_scale_val+1,w
 12229  12FD  3DAE               	addwfc	get_scale_val@weight_count+1,f
 12230  12FE  0826               	movf	??_get_scale_val+2,w
 12231  12FF  3DAF               	addwfc	get_scale_val@weight_count+2,f
 12232  1300  0827               	movf	??_get_scale_val+3,w
 12233  1301  3DB0               	addwfc	get_scale_val@weight_count+3,f
 12234  1302                     l3950:
 12235                           
 12236                           ;loadcell.c: 47: _delay((unsigned long)((10)*(8000000/4000000.0)));
 12237  1302  3006               	movlw	6
 12238  1303                     u5967:
 12239  1303  0B89               	decfsz	9,f
 12240  1304  2B03               	goto	u5967
 12241  1305  3200               	nop2
 12242  1306                     l3952:
 12243  1306  3001               	movlw	1
 12244  1307  0020               	movlb	0	; select bank0
 12245  1308  00A4               	movwf	??_get_scale_val
 12246  1309  0824               	movf	??_get_scale_val,w
 12247  130A  07B1               	addwf	get_scale_val@i,f
 12248  130B                     l3954:
 12249  130B  3018               	movlw	24
 12250  130C  0231               	subwf	get_scale_val@i,w
 12251  130D  1C03               	skipc
 12252  130E  2B10               	goto	u5181
 12253  130F  2B11               	goto	u5180
 12254  1310                     u5181:
 12255  1310  2ADC               	goto	l3940
 12256  1311                     u5180:
 12257  1311                     l3956:
 12258                           
 12259                           ;loadcell.c: 48: };loadcell.c: 50: for (i = 0; i < 1; i++){
 12260  1311  01B1               	clrf	get_scale_val@i
 12261  1312                     l3962:
 12262                           
 12263                           ;loadcell.c: 51: set_CELL_CLK_HIGH();
 12264  1312  319C  242C  3192   	fcall	_set_CELL_CLK_HIGH
 12265  1315                     l3964:
 12266                           
 12267                           ;loadcell.c: 52: _delay((unsigned long)((10)*(8000000/4000000.0)));
 12268  1315  3006               	movlw	6
 12269  1316                     u5977:
 12270  1316  0B89               	decfsz	9,f
 12271  1317  2B16               	goto	u5977
 12272  1318  3200               	nop2
 12273                           
 12274                           ;loadcell.c: 53: set_CELL_CLK_LOW();
 12275  1319  319C  2433  3192   	fcall	_set_CELL_CLK_LOW
 12276  131C                     l3966:
 12277                           
 12278                           ;loadcell.c: 54: _delay((unsigned long)((10)*(8000000/4000000.0)));
 12279  131C  3006               	movlw	6
 12280  131D                     u5987:
 12281  131D  0B89               	decfsz	9,f
 12282  131E  2B1D               	goto	u5987
 12283  131F  3200               	nop2
 12284  1320                     l3968:
 12285  1320  3001               	movlw	1
 12286  1321  0020               	movlb	0	; select bank0
 12287  1322  00A4               	movwf	??_get_scale_val
 12288  1323  0824               	movf	??_get_scale_val,w
 12289  1324  07B1               	addwf	get_scale_val@i,f
 12290  1325                     l3970:
 12291  1325  0831               	movf	get_scale_val@i,w
 12292  1326  1903               	btfsc	3,2
 12293  1327  2B29               	goto	u5191
 12294  1328  2B2A               	goto	u5190
 12295  1329                     u5191:
 12296  1329  2B12               	goto	l3962
 12297  132A                     u5190:
 12298  132A                     l3972:
 12299                           
 12300                           ;loadcell.c: 55: };;loadcell.c: 56: weight_add += weight_count;
 12301  132A  082D               	movf	get_scale_val@weight_count,w
 12302  132B  07A8               	addwf	get_scale_val@weight_add,f
 12303  132C  082E               	movf	get_scale_val@weight_count+1,w
 12304  132D  3DA9               	addwfc	get_scale_val@weight_add+1,f
 12305  132E  082F               	movf	get_scale_val@weight_count+2,w
 12306  132F  3DAA               	addwfc	get_scale_val@weight_add+2,f
 12307  1330  0830               	movf	get_scale_val@weight_count+3,w
 12308  1331  3DAB               	addwfc	get_scale_val@weight_add+3,f
 12309                           
 12310                           ;loadcell.c: 57: weight_count = 0;
 12311  1332  3000               	movlw	0
 12312  1333  00B0               	movwf	get_scale_val@weight_count+3
 12313  1334  3000               	movlw	0
 12314  1335  00AF               	movwf	get_scale_val@weight_count+2
 12315  1336  3000               	movlw	0
 12316  1337  00AE               	movwf	get_scale_val@weight_count+1
 12317  1338  3000               	movlw	0
 12318  1339  00AD               	movwf	get_scale_val@weight_count
 12319  133A                     l3974:
 12320  133A  3001               	movlw	1
 12321  133B  00A4               	movwf	??_get_scale_val
 12322  133C  0824               	movf	??_get_scale_val,w
 12323  133D  07AC               	addwf	get_scale_val@j,f
 12324  133E                     l3976:
 12325  133E  0821               	movf	get_scale_val@n+1,w
 12326  133F  3A80               	xorlw	128
 12327  1340  3C80               	sublw	128
 12328  1341  1D03               	skipz
 12329  1342  2B45               	goto	u5205
 12330  1343  0820               	movf	get_scale_val@n,w
 12331  1344  022C               	subwf	get_scale_val@j,w
 12332  1345                     u5205:
 12333  1345  1C03               	skipc
 12334  1346  2B48               	goto	u5201
 12335  1347  2B49               	goto	u5200
 12336  1348                     u5201:
 12337  1348  2AC4               	goto	l3928
 12338  1349                     u5200:
 12339  1349                     l3978:
 12340                           
 12341                           ;loadcell.c: 58: };loadcell.c: 59: weight_count = weight_add / n;
 12342  1349  0020               	movlb	0	; select bank0
 12343  134A  0820               	movf	get_scale_val@n,w
 12344  134B  00F0               	movwf	___lldiv@divisor
 12345  134C  0821               	movf	get_scale_val@n+1,w
 12346  134D  00F1               	movwf	___lldiv@divisor+1
 12347  134E  0D89               	rlf	9,f
 12348  134F  3B89               	subwfb	9,f
 12349  1350  0989               	comf	9,f
 12350  1351  00F2               	movwf	___lldiv@divisor+2
 12351  1352  00F3               	movwf	___lldiv@divisor+3
 12352  1353  082B               	movf	get_scale_val@weight_add+3,w
 12353  1354  00F7               	movwf	___lldiv@dividend+3
 12354  1355  082A               	movf	get_scale_val@weight_add+2,w
 12355  1356  00F6               	movwf	___lldiv@dividend+2
 12356  1357  0829               	movf	get_scale_val@weight_add+1,w
 12357  1358  00F5               	movwf	___lldiv@dividend+1
 12358  1359  0828               	movf	get_scale_val@weight_add,w
 12359  135A  00F4               	movwf	___lldiv@dividend
 12360  135B  319F  2746  3192   	fcall	___lldiv
 12361  135E  0873               	movf	?___lldiv+3,w
 12362  135F  0020               	movlb	0	; select bank0
 12363  1360  00B0               	movwf	get_scale_val@weight_count+3
 12364  1361  0872               	movf	?___lldiv+2,w
 12365  1362  00AF               	movwf	get_scale_val@weight_count+2
 12366  1363  0871               	movf	?___lldiv+1,w
 12367  1364  00AE               	movwf	get_scale_val@weight_count+1
 12368  1365  0870               	movf	?___lldiv,w
 12369  1366  00AD               	movwf	get_scale_val@weight_count
 12370  1367                     l3980:
 12371                           
 12372                           ;loadcell.c: 62: weight_count = weight_count ^ 0x800000;
 12373  1367  3000               	movlw	0
 12374  1368  062D               	xorwf	get_scale_val@weight_count,w
 12375  1369  00A4               	movwf	??_get_scale_val
 12376  136A  3000               	movlw	0
 12377  136B  062E               	xorwf	get_scale_val@weight_count+1,w
 12378  136C  00A5               	movwf	??_get_scale_val+1
 12379  136D  3080               	movlw	128
 12380  136E  062F               	xorwf	get_scale_val@weight_count+2,w
 12381  136F  00A6               	movwf	??_get_scale_val+2
 12382  1370  3000               	movlw	0
 12383  1371  0630               	xorwf	get_scale_val@weight_count+3,w
 12384  1372  00A7               	movwf	??_get_scale_val+3
 12385  1373  0827               	movf	??_get_scale_val+3,w
 12386  1374  00B0               	movwf	get_scale_val@weight_count+3
 12387  1375  0826               	movf	??_get_scale_val+2,w
 12388  1376  00AF               	movwf	get_scale_val@weight_count+2
 12389  1377  0825               	movf	??_get_scale_val+1,w
 12390  1378  00AE               	movwf	get_scale_val@weight_count+1
 12391  1379  0824               	movf	??_get_scale_val,w
 12392  137A  00AD               	movwf	get_scale_val@weight_count
 12393  137B                     l3982:
 12394                           
 12395                           ;loadcell.c: 63: return weight_count;
 12396  137B  0830               	movf	get_scale_val@weight_count+3,w
 12397  137C  00A3               	movwf	?_get_scale_val+3
 12398  137D  082F               	movf	get_scale_val@weight_count+2,w
 12399  137E  00A2               	movwf	?_get_scale_val+2
 12400  137F  082E               	movf	get_scale_val@weight_count+1,w
 12401  1380  00A1               	movwf	?_get_scale_val+1
 12402  1381  082D               	movf	get_scale_val@weight_count,w
 12403  1382  00A0               	movwf	?_get_scale_val
 12404  1383                     l142:
 12405  1383  0008               	return
 12406  1384                     __end_of_get_scale_val:
 12407                           
 12408                           	psect	text36
 12409  1C33                     __ptext36:	
 12410 ;; *************** function _set_CELL_CLK_LOW *****************
 12411 ;; Defined at:
 12412 ;;		line 7 in file "loadcell.c"
 12413 ;; Parameters:    Size  Location     Type
 12414 ;;		None
 12415 ;; Auto vars:     Size  Location     Type
 12416 ;;		None
 12417 ;; Return value:  Size  Location     Type
 12418 ;;                  1    wreg      void 
 12419 ;; Registers used:
 12420 ;;		wreg, status,2, status,0
 12421 ;; Tracked objects:
 12422 ;;		On entry : 0/0
 12423 ;;		On exit  : 0/0
 12424 ;;		Unchanged: 0/0
 12425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12428 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;Total ram usage:        1 bytes
 12431 ;; Hardware stack levels used: 1
 12432 ;; This function calls:
 12433 ;;		Nothing
 12434 ;; This function is called by:
 12435 ;;		_get_scale_val
 12436 ;; This function uses a non-reentrant model
 12437 ;;
 12438                           
 12439                           
 12440                           ;psect for function _set_CELL_CLK_LOW
 12441  1C33                     _set_CELL_CLK_LOW:
 12442  1C33                     l3306:	
 12443                           ;incstack = 0
 12444                           ; Regs used in _set_CELL_CLK_LOW: [wreg+status,2+status,0]
 12445                           
 12446  1C33  30FE               	movlw	254
 12447  1C34  00F0               	movwf	??_set_CELL_CLK_LOW
 12448  1C35  0870               	movf	??_set_CELL_CLK_LOW,w
 12449  1C36  0022               	movlb	2	; select bank2
 12450  1C37  058C               	andwf	12,f	;volatile
 12451  1C38                     l112:
 12452  1C38  0008               	return
 12453  1C39                     __end_of_set_CELL_CLK_LOW:
 12454                           
 12455                           	psect	text37
 12456  1C2C                     __ptext37:	
 12457 ;; *************** function _set_CELL_CLK_HIGH *****************
 12458 ;; Defined at:
 12459 ;;		line 12 in file "loadcell.c"
 12460 ;; Parameters:    Size  Location     Type
 12461 ;;		None
 12462 ;; Auto vars:     Size  Location     Type
 12463 ;;		None
 12464 ;; Return value:  Size  Location     Type
 12465 ;;                  1    wreg      void 
 12466 ;; Registers used:
 12467 ;;		None
 12468 ;; Tracked objects:
 12469 ;;		On entry : 0/0
 12470 ;;		On exit  : 0/0
 12471 ;;		Unchanged: 0/0
 12472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12477 ;;Total ram usage:        0 bytes
 12478 ;; Hardware stack levels used: 1
 12479 ;; This function calls:
 12480 ;;		Nothing
 12481 ;; This function is called by:
 12482 ;;		_get_scale_val
 12483 ;; This function uses a non-reentrant model
 12484 ;;
 12485                           
 12486                           
 12487                           ;psect for function _set_CELL_CLK_HIGH
 12488  1C2C                     _set_CELL_CLK_HIGH:
 12489  1C2C                     l3308:	
 12490                           ;incstack = 0
 12491                           ; Regs used in _set_CELL_CLK_HIGH: []
 12492                           
 12493  1C2C  0022               	movlb	2	; select bank2
 12494  1C2D  140C               	bsf	12,0	;volatile
 12495  1C2E                     l115:
 12496  1C2E  0008               	return
 12497  1C2F                     __end_of_set_CELL_CLK_HIGH:
 12498                           
 12499                           	psect	text38
 12500  1C50                     __ptext38:	
 12501 ;; *************** function _get_CELL_DAT_VAL *****************
 12502 ;; Defined at:
 12503 ;;		line 15 in file "loadcell.c"
 12504 ;; Parameters:    Size  Location     Type
 12505 ;;		None
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;		None
 12508 ;; Return value:  Size  Location     Type
 12509 ;;                  2    0[COMMON] int 
 12510 ;; Registers used:
 12511 ;;		wreg, status,2, status,0
 12512 ;; Tracked objects:
 12513 ;;		On entry : 0/0
 12514 ;;		On exit  : 0/0
 12515 ;;		Unchanged: 0/0
 12516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12519 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12520 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12521 ;;Total ram usage:        4 bytes
 12522 ;; Hardware stack levels used: 1
 12523 ;; This function calls:
 12524 ;;		Nothing
 12525 ;; This function is called by:
 12526 ;;		_get_scale_val
 12527 ;; This function uses a non-reentrant model
 12528 ;;
 12529                           
 12530                           
 12531                           ;psect for function _get_CELL_DAT_VAL
 12532  1C50                     _get_CELL_DAT_VAL:
 12533  1C50                     l3310:	
 12534                           ;incstack = 0
 12535                           ; Regs used in _get_CELL_DAT_VAL: [wreg+status,2+status,0]
 12536                           
 12537  1C50                     l3316:	
 12538                           ;loadcell.c: 16: if(0x02 == 0x01){ return PORTAbits.RA0; }
 12539                           
 12540  1C50  0020               	movlb	0	; select bank0
 12541  1C51  0C0C               	rrf	12,w	;volatile
 12542  1C52  3901               	andlw	1
 12543  1C53  00F2               	movwf	??_get_CELL_DAT_VAL
 12544  1C54  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12545  1C55  0872               	movf	??_get_CELL_DAT_VAL,w
 12546  1C56  00F0               	movwf	?_get_CELL_DAT_VAL
 12547  1C57  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12548  1C58  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12549  1C59                     l119:
 12550  1C59  0008               	return
 12551  1C5A                     __end_of_get_CELL_DAT_VAL:
 12552                           
 12553                           	psect	text39
 12554  1F46                     __ptext39:	
 12555 ;; *************** function ___lldiv *****************
 12556 ;; Defined at:
 12557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
 12558 ;; Parameters:    Size  Location     Type
 12559 ;;  divisor         4    0[COMMON] unsigned long 
 12560 ;;  dividend        4    4[COMMON] unsigned long 
 12561 ;; Auto vars:     Size  Location     Type
 12562 ;;  quotient        4    9[COMMON] unsigned long 
 12563 ;;  counter         1   13[COMMON] unsigned char 
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  4    0[COMMON] unsigned long 
 12566 ;; Registers used:
 12567 ;;		wreg, status,2, status,0
 12568 ;; Tracked objects:
 12569 ;;		On entry : 0/0
 12570 ;;		On exit  : 0/0
 12571 ;;		Unchanged: 0/0
 12572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12573 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12574 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12576 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12577 ;;Total ram usage:       14 bytes
 12578 ;; Hardware stack levels used: 1
 12579 ;; This function calls:
 12580 ;;		Nothing
 12581 ;; This function is called by:
 12582 ;;		_get_scale_val
 12583 ;;		_sprintf
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           
 12588                           ;psect for function ___lldiv
 12589  1F46                     ___lldiv:
 12590  1F46                     l3536:	
 12591                           ;incstack = 0
 12592                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12593                           
 12594  1F46  3000               	movlw	0
 12595  1F47  00FC               	movwf	___lldiv@quotient+3
 12596  1F48  3000               	movlw	0
 12597  1F49  00FB               	movwf	___lldiv@quotient+2
 12598  1F4A  3000               	movlw	0
 12599  1F4B  00FA               	movwf	___lldiv@quotient+1
 12600  1F4C  3000               	movlw	0
 12601  1F4D  00F9               	movwf	___lldiv@quotient
 12602  1F4E  0873               	movf	___lldiv@divisor+3,w
 12603  1F4F  0472               	iorwf	___lldiv@divisor+2,w
 12604  1F50  0471               	iorwf	___lldiv@divisor+1,w
 12605  1F51  0470               	iorwf	___lldiv@divisor,w
 12606  1F52  1903               	skipnz
 12607  1F53  2F55               	goto	u4401
 12608  1F54  2F56               	goto	u4400
 12609  1F55                     u4401:
 12610  1F55  2F97               	goto	l3556
 12611  1F56                     u4400:
 12612  1F56                     l3538:
 12613  1F56  01FD               	clrf	___lldiv@counter
 12614  1F57  0AFD               	incf	___lldiv@counter,f
 12615  1F58  2F64               	goto	l3542
 12616  1F59                     l3540:
 12617  1F59  3001               	movlw	1
 12618  1F5A                     u4415:
 12619  1F5A  35F0               	lslf	___lldiv@divisor,f
 12620  1F5B  0DF1               	rlf	___lldiv@divisor+1,f
 12621  1F5C  0DF2               	rlf	___lldiv@divisor+2,f
 12622  1F5D  0DF3               	rlf	___lldiv@divisor+3,f
 12623  1F5E  0B89               	decfsz	9,f
 12624  1F5F  2F5A               	goto	u4415
 12625  1F60  3001               	movlw	1
 12626  1F61  00F8               	movwf	??___lldiv
 12627  1F62  0878               	movf	??___lldiv,w
 12628  1F63  07FD               	addwf	___lldiv@counter,f
 12629  1F64                     l3542:
 12630  1F64  1FF3               	btfss	___lldiv@divisor+3,7
 12631  1F65  2F67               	goto	u4421
 12632  1F66  2F68               	goto	u4420
 12633  1F67                     u4421:
 12634  1F67  2F59               	goto	l3540
 12635  1F68                     u4420:
 12636  1F68                     l3544:
 12637  1F68  3001               	movlw	1
 12638  1F69                     u4435:
 12639  1F69  35F9               	lslf	___lldiv@quotient,f
 12640  1F6A  0DFA               	rlf	___lldiv@quotient+1,f
 12641  1F6B  0DFB               	rlf	___lldiv@quotient+2,f
 12642  1F6C  0DFC               	rlf	___lldiv@quotient+3,f
 12643  1F6D  0B89               	decfsz	9,f
 12644  1F6E  2F69               	goto	u4435
 12645  1F6F                     l3546:
 12646  1F6F  0873               	movf	___lldiv@divisor+3,w
 12647  1F70  0277               	subwf	___lldiv@dividend+3,w
 12648  1F71  1D03               	skipz
 12649  1F72  2F7D               	goto	u4445
 12650  1F73  0872               	movf	___lldiv@divisor+2,w
 12651  1F74  0276               	subwf	___lldiv@dividend+2,w
 12652  1F75  1D03               	skipz
 12653  1F76  2F7D               	goto	u4445
 12654  1F77  0871               	movf	___lldiv@divisor+1,w
 12655  1F78  0275               	subwf	___lldiv@dividend+1,w
 12656  1F79  1D03               	skipz
 12657  1F7A  2F7D               	goto	u4445
 12658  1F7B  0870               	movf	___lldiv@divisor,w
 12659  1F7C  0274               	subwf	___lldiv@dividend,w
 12660  1F7D                     u4445:
 12661  1F7D  1C03               	skipc
 12662  1F7E  2F80               	goto	u4441
 12663  1F7F  2F81               	goto	u4440
 12664  1F80                     u4441:
 12665  1F80  2F8A               	goto	l3552
 12666  1F81                     u4440:
 12667  1F81                     l3548:
 12668  1F81  0870               	movf	___lldiv@divisor,w
 12669  1F82  02F4               	subwf	___lldiv@dividend,f
 12670  1F83  0871               	movf	___lldiv@divisor+1,w
 12671  1F84  3BF5               	subwfb	___lldiv@dividend+1,f
 12672  1F85  0872               	movf	___lldiv@divisor+2,w
 12673  1F86  3BF6               	subwfb	___lldiv@dividend+2,f
 12674  1F87  0873               	movf	___lldiv@divisor+3,w
 12675  1F88  3BF7               	subwfb	___lldiv@dividend+3,f
 12676  1F89                     l3550:
 12677  1F89  1479               	bsf	___lldiv@quotient,0
 12678  1F8A                     l3552:
 12679  1F8A  3001               	movlw	1
 12680  1F8B                     u4455:
 12681  1F8B  36F3               	lsrf	___lldiv@divisor+3,f
 12682  1F8C  0CF2               	rrf	___lldiv@divisor+2,f
 12683  1F8D  0CF1               	rrf	___lldiv@divisor+1,f
 12684  1F8E  0CF0               	rrf	___lldiv@divisor,f
 12685  1F8F  0B89               	decfsz	9,f
 12686  1F90  2F8B               	goto	u4455
 12687  1F91                     l3554:
 12688  1F91  3001               	movlw	1
 12689  1F92  02FD               	subwf	___lldiv@counter,f
 12690  1F93  1D03               	btfss	3,2
 12691  1F94  2F96               	goto	u4461
 12692  1F95  2F97               	goto	u4460
 12693  1F96                     u4461:
 12694  1F96  2F68               	goto	l3544
 12695  1F97                     u4460:
 12696  1F97                     l3556:
 12697  1F97  087C               	movf	___lldiv@quotient+3,w
 12698  1F98  00F3               	movwf	?___lldiv+3
 12699  1F99  087B               	movf	___lldiv@quotient+2,w
 12700  1F9A  00F2               	movwf	?___lldiv+2
 12701  1F9B  087A               	movf	___lldiv@quotient+1,w
 12702  1F9C  00F1               	movwf	?___lldiv+1
 12703  1F9D  0879               	movf	___lldiv@quotient,w
 12704  1F9E  00F0               	movwf	?___lldiv
 12705  1F9F                     l557:
 12706  1F9F  0008               	return
 12707  1FA0                     __end_of___lldiv:
 12708                           
 12709                           	psect	text40
 12710  1C46                     __ptext40:	
 12711 ;; *************** function _SYSTEM_Initialize *****************
 12712 ;; Defined at:
 12713 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12714 ;; Parameters:    Size  Location     Type
 12715 ;;		None
 12716 ;; Auto vars:     Size  Location     Type
 12717 ;;		None
 12718 ;; Return value:  Size  Location     Type
 12719 ;;                  1    wreg      void 
 12720 ;; Registers used:
 12721 ;;		wreg, status,2, status,0, pclath, cstack
 12722 ;; Tracked objects:
 12723 ;;		On entry : 0/0
 12724 ;;		On exit  : 0/0
 12725 ;;		Unchanged: 0/0
 12726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12731 ;;Total ram usage:        0 bytes
 12732 ;; Hardware stack levels used: 1
 12733 ;; Hardware stack levels required when called: 1
 12734 ;; This function calls:
 12735 ;;		_OSCILLATOR_Initialize
 12736 ;;		_PIN_MANAGER_Initialize
 12737 ;;		_WDT_Initialize
 12738 ;; This function is called by:
 12739 ;;		_main
 12740 ;; This function uses a non-reentrant model
 12741 ;;
 12742                           
 12743                           
 12744                           ;psect for function _SYSTEM_Initialize
 12745  1C46                     _SYSTEM_Initialize:
 12746  1C46                     l3846:	
 12747                           ;incstack = 0
 12748                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12749                           
 12750                           
 12751                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 12752  1C46  319C  2499  319C   	fcall	_PIN_MANAGER_Initialize
 12753                           
 12754                           ;mcc.c: 54: OSCILLATOR_Initialize();
 12755  1C49  319C  243F  319C   	fcall	_OSCILLATOR_Initialize
 12756                           
 12757                           ;mcc.c: 55: WDT_Initialize();
 12758  1C4C  319C  242F  319C   	fcall	_WDT_Initialize
 12759  1C4F                     l17:
 12760  1C4F  0008               	return
 12761  1C50                     __end_of_SYSTEM_Initialize:
 12762                           
 12763                           	psect	text41
 12764  1C2F                     __ptext41:	
 12765 ;; *************** function _WDT_Initialize *****************
 12766 ;; Defined at:
 12767 ;;		line 68 in file "mcc_generated_files/mcc.c"
 12768 ;; Parameters:    Size  Location     Type
 12769 ;;		None
 12770 ;; Auto vars:     Size  Location     Type
 12771 ;;		None
 12772 ;; Return value:  Size  Location     Type
 12773 ;;                  1    wreg      void 
 12774 ;; Registers used:
 12775 ;;		wreg
 12776 ;; Tracked objects:
 12777 ;;		On entry : 0/0
 12778 ;;		On exit  : 0/0
 12779 ;;		Unchanged: 0/0
 12780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12785 ;;Total ram usage:        0 bytes
 12786 ;; Hardware stack levels used: 1
 12787 ;; This function calls:
 12788 ;;		Nothing
 12789 ;; This function is called by:
 12790 ;;		_SYSTEM_Initialize
 12791 ;; This function uses a non-reentrant model
 12792 ;;
 12793                           
 12794                           
 12795                           ;psect for function _WDT_Initialize
 12796  1C2F                     _WDT_Initialize:
 12797  1C2F                     l3286:	
 12798                           ;incstack = 0
 12799                           ; Regs used in _WDT_Initialize: [wreg]
 12800                           
 12801                           
 12802                           ;mcc.c: 71: WDTCON = 0x16;
 12803  1C2F  3016               	movlw	22
 12804  1C30  0021               	movlb	1	; select bank1
 12805  1C31  0097               	movwf	23	;volatile
 12806  1C32                     l23:
 12807  1C32  0008               	return
 12808  1C33                     __end_of_WDT_Initialize:
 12809                           
 12810                           	psect	text42
 12811  1C99                     __ptext42:	
 12812 ;; *************** function _PIN_MANAGER_Initialize *****************
 12813 ;; Defined at:
 12814 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;		None
 12817 ;; Auto vars:     Size  Location     Type
 12818 ;;		None
 12819 ;; Return value:  Size  Location     Type
 12820 ;;                  1    wreg      void 
 12821 ;; Registers used:
 12822 ;;		wreg, status,2
 12823 ;; Tracked objects:
 12824 ;;		On entry : 0/0
 12825 ;;		On exit  : 0/0
 12826 ;;		Unchanged: 0/0
 12827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12832 ;;Total ram usage:        0 bytes
 12833 ;; Hardware stack levels used: 1
 12834 ;; This function calls:
 12835 ;;		Nothing
 12836 ;; This function is called by:
 12837 ;;		_SYSTEM_Initialize
 12838 ;; This function uses a non-reentrant model
 12839 ;;
 12840                           
 12841                           
 12842                           ;psect for function _PIN_MANAGER_Initialize
 12843  1C99                     _PIN_MANAGER_Initialize:
 12844  1C99                     l3268:	
 12845                           ;incstack = 0
 12846                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12847                           
 12848                           
 12849                           ;pin_manager.c: 60: LATA = 0x00;
 12850  1C99  0022               	movlb	2	; select bank2
 12851  1C9A  018C               	clrf	12	;volatile
 12852                           
 12853                           ;pin_manager.c: 61: LATB = 0x00;
 12854  1C9B  018D               	clrf	13	;volatile
 12855  1C9C                     l3270:
 12856                           
 12857                           ;pin_manager.c: 66: TRISA = 0xFF;
 12858  1C9C  30FF               	movlw	255
 12859  1C9D  0021               	movlb	1	; select bank1
 12860  1C9E  008C               	movwf	12	;volatile
 12861  1C9F                     l3272:
 12862                           
 12863                           ;pin_manager.c: 67: TRISB = 0xFF;
 12864  1C9F  30FF               	movlw	255
 12865  1CA0  008D               	movwf	13	;volatile
 12866  1CA1                     l3274:
 12867                           
 12868                           ;pin_manager.c: 72: ANSELB = 0xFE;
 12869  1CA1  30FE               	movlw	254
 12870  1CA2  0023               	movlb	3	; select bank3
 12871  1CA3  008D               	movwf	13	;volatile
 12872  1CA4                     l3276:
 12873                           
 12874                           ;pin_manager.c: 73: ANSELA = 0x1F;
 12875  1CA4  301F               	movlw	31
 12876  1CA5  008C               	movwf	12	;volatile
 12877                           
 12878                           ;pin_manager.c: 78: WPUB = 0x00;
 12879  1CA6  0024               	movlb	4	; select bank4
 12880  1CA7  018D               	clrf	13	;volatile
 12881  1CA8                     l3278:
 12882                           
 12883                           ;pin_manager.c: 79: OPTION_REGbits.nWPUEN = 1;
 12884  1CA8  0021               	movlb	1	; select bank1
 12885  1CA9  1795               	bsf	21,7	;volatile
 12886  1CAA                     l42:
 12887  1CAA  0008               	return
 12888  1CAB                     __end_of_PIN_MANAGER_Initialize:
 12889                           
 12890                           	psect	text43
 12891  1C3F                     __ptext43:	
 12892 ;; *************** function _OSCILLATOR_Initialize *****************
 12893 ;; Defined at:
 12894 ;;		line 58 in file "mcc_generated_files/mcc.c"
 12895 ;; Parameters:    Size  Location     Type
 12896 ;;		None
 12897 ;; Auto vars:     Size  Location     Type
 12898 ;;		None
 12899 ;; Return value:  Size  Location     Type
 12900 ;;                  1    wreg      void 
 12901 ;; Registers used:
 12902 ;;		wreg, status,2
 12903 ;; Tracked objects:
 12904 ;;		On entry : 0/0
 12905 ;;		On exit  : 0/0
 12906 ;;		Unchanged: 0/0
 12907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12912 ;;Total ram usage:        0 bytes
 12913 ;; Hardware stack levels used: 1
 12914 ;; This function calls:
 12915 ;;		Nothing
 12916 ;; This function is called by:
 12917 ;;		_SYSTEM_Initialize
 12918 ;; This function uses a non-reentrant model
 12919 ;;
 12920                           
 12921                           
 12922                           ;psect for function _OSCILLATOR_Initialize
 12923  1C3F                     _OSCILLATOR_Initialize:
 12924  1C3F                     l3280:	
 12925                           ;incstack = 0
 12926                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12927                           
 12928                           
 12929                           ;mcc.c: 61: OSCCON = 0x70;
 12930  1C3F  3070               	movlw	112
 12931  1C40  0021               	movlb	1	; select bank1
 12932  1C41  0099               	movwf	25	;volatile
 12933  1C42                     l3282:
 12934                           
 12935                           ;mcc.c: 63: OSCTUNE = 0x00;
 12936  1C42  0198               	clrf	24	;volatile
 12937  1C43                     l3284:
 12938                           
 12939                           ;mcc.c: 65: BORCON = 0x00;
 12940  1C43  0022               	movlb	2	; select bank2
 12941  1C44  0196               	clrf	22	;volatile
 12942  1C45                     l20:
 12943  1C45  0008               	return
 12944  1C46                     __end_of_OSCILLATOR_Initialize:
 12945  007E                     btemp	set	126	;btemp
 12946  007E                     wtemp0	set	126
 12947                           
 12948                           	psect	config
 12949                           
 12950                           ;Config register CONFIG1 @ 0x8007
 12951                           ;	Oscillator Selection
 12952                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 12953                           ;	Watchdog Timer Enable
 12954                           ;	WDTE = OFF, WDT disabled
 12955                           ;	Power-up Timer Enable
 12956                           ;	PWRTE = OFF, PWRT disabled
 12957                           ;	MCLR Pin Function Select
 12958                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 12959                           ;	Flash Program Memory Code Protection
 12960                           ;	CP = OFF, Program memory code protection is disabled
 12961                           ;	Data Memory Code Protection
 12962                           ;	CPD = OFF, Data memory code protection is disabled
 12963                           ;	Brown-out Reset Enable
 12964                           ;	BOREN = ON, Brown-out Reset enabled
 12965                           ;	Clock Out Enable
 12966                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 12967                           ;	Internal/External Switchover
 12968                           ;	IESO = ON, Internal/External Switchover mode is enabled
 12969                           ;	Fail-Safe Clock Monitor Enable
 12970                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 12971  8007                     	org	32775
 12972  8007  3FE4               	dw	16356
 12973                           
 12974                           ;Config register CONFIG2 @ 0x8008
 12975                           ;	Flash Memory Self-Write Protection
 12976                           ;	WRT = OFF, Write protection off
 12977                           ;	Voltage Regulator Capacitor Enable
 12978                           ;	VCAPEN = 0x3, unprogrammed default
 12979                           ;	PLL Enable
 12980                           ;	PLLEN = OFF, 4x PLL disabled
 12981                           ;	Stack Overflow/Underflow Reset Enable
 12982                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 12983                           ;	Brown-out Reset Voltage Selection
 12984                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 12985                           ;	Low-Voltage Programming Enable
 12986                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 12987  8008                     	org	32776
 12988  8008  1EFF               	dw	7935

Data Sizes:
    Strings     69
    Constant    144
    Data        4
    BSS         41
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     44      72
    BANK2            80      0      16
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[11]), STR_5(CODE[8]), STR_4(CODE[15]), STR_3(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> gramstr(BANK2[16]), valstr(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[2]), gramstr(BANK2[16]), valstr(BANK1[16]), STR_2(CODE[15]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _scale_convert_gram->___xxtofl
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_print
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _get_scale_val->___lldiv

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _scale_convert_gram->___fldiv
    _lcd_clear->_lcd_set_cursor

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   39851
                                             77 BANK0      2     2      0
                                             40 BANK1      4     4      0
                  _SYSTEM_Initialize
                      _get_scale_val
                      _lcd_backlight
                          _lcd_clear
                           _lcd_init
                          _lcd_print
                     _lcd_set_cursor
                 _scale_convert_gram
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   32371
                                              0 BANK1     40    32      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               21    17      4    7408
                                             30 BANK0     21    17      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    15      4    5871
                                             30 BANK0     19    15      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             51 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             69 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             49 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _scale_convert_gram                                  12     8      4    1891
                                             13 BANK0     12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      44
                                              2 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            3     3      0    2218
                                             12 COMMON     1     1      0
                                              6 BANK0      2     2      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       8     7      1    1064
                                              8 COMMON     2     1      1
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            4     2      2    1018
                                              8 COMMON     4     2      2
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              6     5      1     418
                                              2 COMMON     6     5      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_backlight                                        1     1      0      44
                                              2 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_scale_val                                       18    14      4    1178
                                              0 BANK0     18    14      4
                            ___lldiv
                   _get_CELL_DAT_VAL
                  _set_CELL_CLK_HIGH
                   _set_CELL_CLK_LOW
 ---------------------------------------------------------------------------------
 (2) _set_CELL_CLK_LOW                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_CELL_CLK_HIGH                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_CELL_DAT_VAL                                     4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _get_scale_val
     ___lldiv
     _get_CELL_DAT_VAL
     _set_CELL_CLK_HIGH
     _set_CELL_CLK_LOW
   _lcd_backlight
     _lcd_cmd
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _lcd_clear
     _lcd_print
       _command
         _lcd_cmd
     _lcd_set_cursor
       _command
   _lcd_init
     _lcd_cmd
   _lcd_print
   _lcd_set_cursor
   _scale_convert_gram
     ___fldiv
     ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     2C      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      10       9       20.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B6      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B6      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 09 00:10:13 2021

                   ___fldiv@aexp 002C                     ___fldiv@bexp 002B                     ___fldiv@sign 0024  
                    _SSPSTATbits 0214                               l20 1C45                               l23 1C32  
                             l17 1C4F                               l42 1CAA                               l96 1437  
                   ___awdiv@sign 0021              ___wmul@multiplicand 0072                     lcd_clear@col 0027  
            __Umul8_16@word_mpld 0076                     lcd_clear@row 0026                              l112 1C38  
                            l115 1C2E                              l221 1C88                              l142 1383  
                            l119 1C59                              l215 0017                              l240 1CD9  
                            l145 1EA4                              l234 102D                              l218 08F4  
                            l163 1C7A                              l243 1DCF                              l172 0804  
                            l228 1D63                              l166 1C5F                              l190 1C98  
                            l175 0808                              l184 1C8D                              l416 0FFF  
                            l440 0146                              l169 1C63                              l521 1CE4  
                            l409 164B                              l187 1C91                              l523 1CF8  
                            l517 07D9                              l445 0148                              l702 11F0  
                            l446 0625                              l439 0144                              l712 0034  
                            l720 1C6E                              l481 0504                              l449 028F  
                            l707 1EC1                              l715 0088                              l731 108D  
                            l708 1EDD                              l716 00A1                              l724 10A2  
                            l557 1F9F                              l709 1EF2                              l734 10A2  
                            l742 1274                              l920 1781                              l904 16A3  
                            l489 0665                              l906 17FF                              l738 12AD  
                            l674 1FFF                              l691 11FD                              l739 122B  
                            l827 1E0B                              l852 09F4                              l692 1170  
                            l925 17CD                              l861 0B2C                              l749 12A0  
                            l837 1D97                              l926 17E7                              l854 09D0  
                            l950 0CFF                              l695 11C4                              l687 1F45  
                            l928 17F6                              l848 0953                              l944 0D83  
                            l873 0AA8                              l777 1E56                              l890 0B23  
                            l882 0B01                              l891 0B2C                              l963 1D2B  
                            l956 0D77                              l869 0A86                              l965 1D3B  
                            l990 114E                              l894 1D18                              l879 0ACA  
                            l994 1100                              l988 10C5                     ___awmod@sign 0076  
                            wreg 0009                     ___flmul@aexp 0036                     ___flmul@bexp 0037  
                    command@mode 0072                     ___flmul@sign 0031                     ___flmul@temp 003C  
                   ___flmul@prod 0038        get_scale_val@weight_count 002D                  ?_lcd_set_cursor 0078  
                   ___fltol@exp1 005D                             l1001 111A                             l1002 1126  
                           l1008 1CBC                             l3000 0985                             l3010 0999  
                           l3002 0989                             l3100 0ACF                             l3020 09DA  
                           l3004 098D                             l3012 099D                             l3110 0B06  
                           l3102 0AD4                             l3022 09DC                             l3030 09ED  
                           l3014 099E                             l3006 0991                             l4000 1D47  
                           l3120 0B1D                             l3112 0B0B                             l3104 0ADC  
                           l3040 0A0E                             l3032 09F8                             l3024 09E0  
                           l3016 09B5                             l3008 0995                             l3200 0C54  
                           l4002 1D4E                             l3122 0B1F                             l3114 0B13  
                           l3106 0AE0                             l3050 0A22                             l3042 0A12  
                           l3034 09FD                             l3026 09E1                             l3018 09D4  
                           l3210 0CB5                             l3202 0C68                             l3130 0B33  
                           l4010 00A2                             l3300 1CC6                             l4004 1D53  
                           l3124 0B27                             l3116 0B18                             l3108 0AFD  
                           l3060 0A6A                             l3052 0A23                             l3044 0A16  
                           l3028 09E9                             l3220 0CD4                             l3212 0CBC  
                           l3204 0C75                             l3140 0B46                             l3132 0B37  
                           l4100 029D                             l4020 00BD                             l4012 00A8  
                           l3310 1C50                             l3302 1CCA                             l4006 1D59  
                           l3126 0B2B                             l3118 0B19                             l3070 0A93  
                           l3062 0A70                             l3054 0A2B                             l3046 0A1C  
                           l3038 0A06                             l3230 0CE8                             l3222 0CDB  
                           l3214 0CC8                             l3206 0C89                             l3150 0B61  
                           l3142 0B4E                             l3134 0B3B                             l4110 031E  
                           l4102 02CE                             l4030 00F0                             l4022 00C9  
                           l4014 00AE                             l3304 1CD0                             l4008 1D5D  
                           l3080 0AAC                             l3064 0A75                             l3048 0A1E  
                           l3056 0A30                             l3240 0D11                             l3232 0CFC  
                           l3216 0CCF                             l3224 0CDF                             l3208 0C9E  
                           l3160 0B78                             l3152 0B65                             l3144 0B50  
                           l3136 0B3C                             l3128 0B2D                             l4200 05C2  
                           l4112 0336                             l4104 02DC                             l4040 010F  
                           l4024 00CC                             l4032 00FC                             l4016 00B4  
                           l3306 1C33                             l3082 0AAF                             l3074 0A9C  
                           l3058 0A46                             l3066 0A7E                             l3090 0ABC  
                           l3250 0D48                             l3242 0D15                             l3226 0CE3  
                           l3218 0CD3                             l3162 0B7A                             l3154 0B66  
                           l3146 0B58                             l3138 0B41                             l3410 1CB3  
                           l3402 0FE2                             l4210 0616                             l4202 05CB  
                           l4122 0371                             l4114 033C                             l4106 02F4  
                           l4050 0142                             l4042 0120                             l4034 0107  
                           l4026 00DD                             l4018 00B9                             l3316 1C50  
                           l3308 1C2C                             l3092 0ABD                             l3084 0AB1  
                           l3076 0AA3                             l3068 0A8E                             l3500 11BE  
                           l3420 1210                             l3260 0D72                             l3252 0D56  
                           l3244 0D2D                             l3236 0D04                             l3228 0CE4  
                           l3180 0BD6                             l3172 0B95                             l3164 0B82  
                           l3156 0B6B                             l3148 0B5D                             l3412 1CB9  
                           l4300 0771                             l4220 0638                             l4212 061A  
                           l4204 05CF                             l4140 040B                             l4116 0341  
                           l4108 0310                             l4124 037A                             l4060 017B  
                           l4044 012F                             l4036 0108                             l4028 00EC  
                           l3270 1C9C                             l3094 0AC1                             l3086 0AB6  
                           l3078 0AA7                             l3502 11C8                             l3510 11E0  
                           l3430 122C                             l3262 0D73                             l3254 0D5F  
                           l3238 0D09                             l3246 0D31                             l3190 0C1E  
                           l3182 0BF0                             l3174 0BA2                             l3166 0B87  
                           l3158 0B70                             l3350 14CC                             l3414 1CBB  
                           l3406 1CAC                             l4302 07AD                             l4230 0659  
                           l4222 063D                             l4214 061E                             l4206 0608  
                           l4150 043E                             l4142 0422                             l4134 03D9  
                           l4126 03D5                             l4118 0355                             l4070 01BA  
                           l4062 017F                             l4310 07D4                             l4054 014A  
                           l4046 0133                             l4038 010C                             l3280 1C3F  
                           l3272 1C9F                             l2800 1DC5                             l3096 0AC7  
                           l3088 0AB8                             l3600 102E                             l3440 1253  
                           l3432 1232                             l3424 1219                             l3264 0D7B  
                           l3256 0D61                             l3248 0D3E                             l3192 0C25  
                           l3184 0BFD                             l3176 0BAF                             l3168 0B8C  
                           l3408 1CAD                             l4232 0669                             l4240 068A  
                           l4224 064D                             l4216 0629                             l4208 0610  
                           l4160 0463                             l4144 0426                             l4128 03D7  
                           l4080 01E6                             l4072 01BE                             l4064 018A  
                           l4056 016B                             l4048 0140                             l4320 1384  
                           l3282 1C42                             l3274 1CA1                             l2802 1DCA  
                           l3290 101C                             l4314 1E57                             l3610 1057  
                           l3602 103A                             l3530 1CEE                             l3522 1CDA  
                           l3450 1278                             l3442 1261                             l3434 1241  
                           l3418 11FE                             l3258 0D6E                             l3194 0C32  
                           l3186 0C0A                             l3178 0BC9                             l3362 161A  
                           l2810 1FAB                             l3370 0D8C                             l4306 07B4  
                           l4242 0690                             l4234 0674                             l4226 0651  
                           l4218 062D                             l4162 0468                             l4170 04C7  
                           l4146 0432                             l4154 0443                             l4138 0401  
                           l4090 0223                             l4082 01F6                             l4074 01C1  
                           l4066 018E                             l4058 0177                             l4330 138F  
                           l4322 1387                             l3284 1C43                             l3276 1CA4  
                           l3268 1C99                             l3540 1F59                             l3292 101E  
                           l3700 169B                             l4316 1E9C                             l3612 105F  
                           l3532 1CF4                             l3524 1CDC                             l3516 11E7  
                           l3508 11D0                             l3444 1267                             l3436 1243  
                           l3196 0C39                             l3188 0C11                             l2900 1DF7  
                           l3356 1595                             l3348 14C6                             l2820 1FBC  
                           l2812 1FAD                             l2804 1FA0                             l3380 0E46  
                           l3372 0D93                             l4260 06DB                             l4252 069E  
                           l4244 0698                             l4236 0679                             l4228 0655  
                           l4180 04EB                             l4172 04CF                             l4164 0491  
                           l4156 0450                             l4148 0437                             l4092 0255  
                           l4084 0206                             l4076 01D8                             l4068 01A5  
                           l4308 07C0                             l4340 1397                             l4332 1390  
                           l4324 1389                             l3278 1CA8                             l3286 1C2F  
                           l3550 1F89                             l3542 1F64                             l3294 1028  
                           l3702 16AB                             l3710 16C4                             l3630 1084  
                           l3622 106D                             l3614 1061                             l3606 1043  
                           l3526 1CE0                             l3518 11F5                             l3470 114F  
                           l3446 1268                             l3438 124C                             l3198 0C4D  
                           l2902 1DFB                             l3358 159B                             l2830 1FD2  
                           l2822 1FC2                             l2814 1FB1                             l2806 1FA2  
                           l3390 0ECD                             l3366 0D86                             l4270 070A  
                           l4262 06E1                             l4246 069C                             l4238 0686  
                           l4190 0516                             l4182 04F9                             l4174 04D6  
                           l4166 04BD                             l4158 045D                             l4094 026C  
                           l4086 020A                             l4078 01E2                             l4350 13AF  
                           l4342 139A                             l4334 1393                             l4326 138A  
                           l3552 1F8A                             l3544 1F68                             l3536 1F46  
                           l2760 1C5A                             l3296 1CBD                             l3288 1006  
                           l3720 16EA                             l3712 16C9                             l3704 16B7  
                           l3560 1EA5                             l3632 1092                             l3616 1065  
                           l3624 107D                             l3608 1056                             l3640 1E18  
                           l3528 1CE9                             l3472 115B                             l3464 1297  
                           l3456 1280                             l3448 126E                             l2904 1DFC  
                           l2920 1D76                             l2912 1D64                             l2832 1FE1  
                           l2824 1FC5                             l2840 1FF1                             l2816 1FB6  
                           l2808 1FA6                             l3384 0EA8                             l3368 0D8A  
                           l4280 0729                             l4272 070E                             l4264 06EF  
                           l4256 06C6                             l4192 051A                             l4184 04FF  
                           l4176 04DA                             l4096 0272                             l4088 020E  
                           l4360 13F7                             l4352 13B6                             l4344 139D  
                           l4336 1395                             l4328 138D                             l3554 1F91  
                           l3546 1F6F                             l3538 1F56                             l2754 1C6F  
                           l2762 1C5D                             l2770 0005                             l3298 1CBE  
                           l3730 170F                             l3722 16F2                             l3706 16BB  
                           l3810 10CD                             l3802 10A4                             l3562 1EB9  
                           l3634 1097                             l3650 1E48                             l3642 1E23  
                           l3490 1195                             l3482 1171                             l3466 12A5  
                           l3458 1290                             l2906 1E01                             l2922 1D7A  
                           l2914 1D6A                             l2930 1D93                             l2842 1FF6  
                           l2834 1FE5                             l2826 1FCA                             l2818 1FBA  
                           l2850 1EF4                             l3378 0E3F                             l4290 074C  
                           l4282 0734                             l4274 0712                             l4266 06F7  
                           l4258 06D0                             l4194 052E                             l4186 050B  
                           l4178 04DE                             l4098 028A                             l4370 1423  
                           l4362 13FE                             l4354 13DB                             l4346 13A2  
                           l4338 1396                             l3548 1F81                             l3556 1F97  
                           l2756 1C6F                             l2764 0802                             l2772 0010  
                           l3900 08B9                             l3740 172E                             l3732 1713  
                           l3724 16FA                             l3716 16D2                             l3820 10ED  
                           l3804 10A9                             l3564 1ED5                             l3580 0054  
                           l3572 0018                             l2940 0903                             l3644 1E27  
                           l3652 1E4E                             l3636 1E0C                             l3492 119C  
                           l3484 1179                             l3476 1164                             l2780 1D27  
                           l2908 1E07                             l2924 1D84                             l2916 1D6D  
                           l2844 1FFB                             l2836 1FE6                             l2828 1FCE  
                           l2860 1F08                             l2852 1EF8                             l3396 0F79  
                           l3388 0EC6                             l4292 0750                             l4284 073D  
                           l4276 0720                             l4268 06FE                             l4196 056D  
                           l4188 0510                             l4380 149B                             l4372 142A  
                           l4364 140B                             l4356 13DE                             l4348 13A9  
                           l2758 1C76                             l2766 1C8A                             l2790 1DAF  
                           l3910 08E5                             l3902 08BD                             l3750 174A  
                           l3742 1736                             l3734 1714                             l3726 16FC  
                           l3718 16E2                             l3670 165B                             l3662 164C  
                           l3830 1114                             l3822 10F1                             l3814 10D6  
                           l3806 10AD                             l3566 1EEF                             l3582 006C  
                           l3574 002C                             l2950 0917                             l2942 0904  
                           l2934 08F5                             l3646 1E39                             l3638 1E15  
                           l3494 11AE                             l3486 118A                             l2782 1D32  
                           l2774 1D1A                             l2926 1D88                             l2918 1D72  
                           l2838 1FEB                             l2870 1F1E                             l2862 1F0E  
                           l2854 1EFD                             l3398 0F80                             l4294 075A  
                           l4286 0740                             l4278 0726                             l4198 0596  
                           l4382 14A7                             l4374 1471                             l4366 140E  
                           l4358 13E3                             l3920 12AE                             l2768 1C95  
                           l2792 1DB3                             l3912 08E9                             l3904 08C1  
                           l3752 1751                             l3760 1761                             l3728 1701  
                           l3736 171B                             l3744 173A                             l3672 1660  
                           l3680 1670                             l3664 1652                             l3840 1145  
                           l3832 111E                             l3824 10F9                             l3816 10DB  
                           l3808 10BD                             l3568 1EF1                             l3584 0070  
                           l3576 0048                             l3592 1C64                             l2960 092D  
                           l2944 0909                             l2952 0919                             l2936 08FB  
                           l3656 1CF9                             l3648 1E41                             l3496 11B6  
                           l3488 118C                             l2784 1D37                             l2776 1D1C  
                           l2928 1D8D                             l2880 1F3C                             l2872 1F28  
                           l2864 1F11                             l2856 1EFF                             l2848 1EF3  
                           l4296 0766                             l4288 0746                             l4384 14AD  
                           l4376 1484                             l4368 1413                             l3930 12CD  
                           l3922 12B1                             l3914 1C7B                             l2794 1DB8  
                           l3906 08DD                             l3850 0815                             l3762 1765  
                           l3754 1755                             l3746 1740                             l3738 172D  
                           l3690 1686                             l3682 1678                             l3674 1665  
                           l3666 1656                             l3842 1146                             l3834 1128  
                           l3826 1107                             l3818 10E6                             l3586 009E  
                           l3578 0050                             l3594 1C6C                             l2970 0940  
                           l2962 0931                             l2954 0921                             l2946 090E  
                           l2938 08FF                             l3658 1CFC                             l3498 11B7  
                           l2778 1D23                             l2890 1DD8                             l2882 1F41  
                           l2874 1F2C                             l2866 1F16                             l2858 1F03  
                           l4298 076C                             l4386 14B4                             l4378 1498  
                           l3940 12DC                             l3932 12D6                             l3924 12BA  
                           l3916 1C7F                             l2796 1DBD                             l2788 1D99  
                           l3908 08E1                             l3860 083B                             l3852 0819  
                           l3780 17AF                             l3772 1786                             l3764 1766  
                           l3756 1756                             l3748 1748                             l3692 168B  
                           l3684 167D                             l3676 166D                             l3668 165A  
                           l3836 113C                             l3828 1110                             l3588 00A0  
                           l3596 1C6E                             l2980 095D                             l2972 0948  
                           l2964 0935                             l2956 0926                             l2948 0916  
                           l2892 1DDB                             l2876 1F31                             l2868 1F1A  
                           l3846 1C46                             l3950 1302                             l3942 12E3  
                           l3934 12DA                             l3926 12C2                             l3918 1C84  
                           l2798 1DC1                             l3870 0852                             l3862 083F  
                           l3854 081D                             l3790 17E6                             l3774 178B  
                           l3782 17B3                             l3766 176A                             l3758 175D  
                           l3694 1690                             l3686 1681                             l3678 166E  
                           l3838 1141                             l2990 0971                             l2982 0961  
                           l2974 0949                             l2966 0936                             l2958 092C  
                           l2894 1DE0                             l2886 1DD0                             l2878 1F37  
                           l3952 1306                             l3944 12E6                             l3928 12C4  
                           l3880 0872                             l3872 0856                             l3864 0843  
                           l3856 0821                             l3848 0809                             l3792 17EC  
                           l3784 17C0                             l3776 1793                             l3768 177E  
                           l3696 1698                             l3688 1685                             l2992 0975  
                           l2984 0965                             l2968 093B                             l2976 094B  
                           l2896 1DE4                             l2888 1DD2                             l3970 1325  
                           l3962 1312                             l3954 130B                             l3946 12EA  
                           l3890 089E                             l3882 0876                             l3874 0866  
                           l3866 084A                             l3858 0834                             l3794 17F0  
                           l3786 17DB                             l3778 1797                             l3698 1699  
                           l2994 0979                             l2986 0969                             l2978 0959  
                           l2898 1DE8                             l3980 1367                             l3972 132A  
                           l3964 1315                             l3956 1311                             l3948 12ED  
                           l3892 08A2                             l3884 087A                             l3876 086A  
                           l3868 084E                             l3796 17F2                             l3788 17DE  
                           l2996 097D                             l2988 096D                             l3982 137B  
                           l3974 133A                             l3966 131C                             l3894 08A6  
                           l3886 087E                             l3878 086E                             l2998 0981  
                           l3968 1320                             l3976 133E                             l3992 1D3E  
                           l3896 08AA                             l3888 0882                             l3978 1349  
                           l3986 1D3C                             l3898 08B5                             l3998 1D3F  
                           STR_1 20AE                             STR_2 209F                             STR_3 20C4  
                           STR_4 2028                             STR_5 20CD                             STR_6 20B9  
                           STR_7 20CB                             u3000 1FC2                             u3001 1FC1  
                           u3020 1FD2                             u3100 1F0E                             u3021 1FD1  
                           u3101 1F0D                             _LATA 010C                             _LATB 010D  
                           u3015 1FC6                             u4000 1CD9                             u3040 1FE1  
                           u3120 1F1E                             u4001 1CD8                             u3041 1FE0  
                           u3121 1F1D                             u3210 1DF7                             u4010 14CC  
                           u3130 1F28                             u3211 1DF6                             u4011 14CB  
                           u3035 1FD3                             u3131 1F27                             u3115 1F12  
                           u3300 0903                             u4100 1210                             u4020 159B  
                           u3060 1FF1                             u3301 0902                             u4101 120F  
                           u3205 1DE9                             u4021 159A                             u3061 1FF0  
                           u3045 1FDD                             u3310 0909                             u4110 122A  
                           u3230 1E07                             u3070 1FF6                             u3150 1F37  
                           u4030 0D8A                             u3311 0908                             u4111 1229  
                           u3231 1E06                             u3215 1DF3                             u3071 1FF5  
                           u3055 1FE7                             u3151 1F36                             u3135 1F24  
                           u4031 0D89                             u5000 17F0                             u3400 09BF  
                           u3320 090E                             u4200 1296                             u3240 1D6A  
                           u3160 1F3C                             u3080 1EF8                             u4040 0D93  
                           u5001 17EF                             u3401 09BD                             u3321 090D  
                           u4201 1295                             u3225 1DFD                             u3241 1D69  
                           u3161 1F3B                             u3145 1F2D                             u3081 1EF7  
                           u4041 0D92                             u5010 10A9                             u3410 09C0  
                           u3330 092C                             u4130 1261                             u3170 1DD8  
                           u3090 1F03                             u4050 0E46                             u5011 10A8  
                           u3331 092B                             u4131 1260                             u3171 1DD7  
                           u3091 1F02                             u4051 0E45                             u5100 111A  
                           u5020 10AD                             u3500 0A22                             u3420 09D4  
                           u3340 0935                             u4300 11CF                             u4220 12A5  
                           u3260 1D7A                             u4060 0ECD                             u5101 1119  
                           u5021 10AC                             u3501 0A21                             u3421 09D3  
                           u3341 0934                             u4301 11CE                             u4221 12A4  
                           u4125 124D                             u3261 1D79                             u4061 0ECC  
                           u5110 111E                             u5030 10CD                             u3430 09E0  
                           u3350 093B                             u4230 115B                             u4150 1274  
                           u3190 1DE8                             u3270 1D84                             u4070 0F80  
                           u5111 111D                             u5031 10CC                             u3431 09DF  
                           u3351 093A                             u4231 115A                             u4215 1298  
                           u4151 1273                             u4135 125D                             u3191 1DE7  
                           u3271 1D83                             u3255 1D6E                             u4071 0F7F  
                           u4400 1F56                             u5200 1349                             u5120 1132  
                           u3600 0ABC                             u3520 0A46                             u3360 0940  
                           u4320 11DF                             u4240 116F                             u4160 1278  
                           u4080 1CB3                             u4401 1F55                             u5201 1348  
                           u3601 0ABB                             u3521 0A45                             u3361 093F  
                           u4321 11DE                             u4241 116E                             u4161 1277  
                           u4145 1269                             u3185 1DDC                             u4081 1CB2  
                           u5210 1D59                             u5130 1141                             u5050 10EC  
                           u3610 0AC1                             u3530 0A75                             u3450 09F4  
                           u3370 0959                             u4330 11E6                             u4170 127F  
                           u3290 1D93                             u4090 1CB9                             u5211 1D58  
                           u5131 1140                             u5051 10EB                             u3611 0AC0  
                           u3531 0A74                             u3523 0A42                             u3515 0A25  
                           u3451 09F3                             u3371 0958                             u4331 11E5  
                           u4315 11D1                             u4171 127E                             u3291 1D92  
                           u3275 1D80                             u4091 1CB8                             u4420 1F68  
                           u2900 1C63                             u5220 1D63                             u5140 1145  
                           u4500 002C                             u3700 0B18                             u3620 0AC7  
                           u3540 0A8E                             u3460 09F8                             u3380 095D  
                           u4260 11AE                             u5300 01A5                             u4421 1F67  
                           u5205 1345                             u2901 1C62                             u5221 1D62  
                           u5141 1144                             u5125 112E                             u5045 10E0  
                           u4501 002B                             u3701 0B17                             u3621 0AC6  
                           u3541 0A8D                             u3461 09F7                             u3445 09E3  
                           u3381 095C                             u4261 11AD                             u3285 1D89  
                           u5301 01A4                             u5150 12CD                             u2910 0808  
                           u5070 1106                             u4510 0048                             u3710 0B1D  
                           u3630 0ACE                             u3550 0A93                             u3470 09FD  
                           u3390 09B5                             u4350 11F5                             u4190 128F  
                           u5310 01D8                             u5230 00AE                             u4415 1F5A  
                           u5151 12CC                             u2911 0807                             u5071 1105  
                           u4511 0047                             u3711 0B1C                             u3631 0ACD  
                           u3551 0A92                             u3471 09FC                             u3391 09B4  
                           u4351 11F4                             u4255 1196                             u4191 128E  
                           u5311 01D7                             u5231 00AD                             u4440 1F81  
                           u5160 12D6                             u2920 1C91                             u4520 0054  
                           u3720 0B2B                             u3640 0AD4                             u3480 0A12  
                           u4360 1CE0                             u4280 11C4                             u3800 0B8C  
                           u5400 0336                             u5320 020A                             u5240 00C9  
                           u4441 1F80                             u5161 12D5                             u2921 1C90  
                           u5065 10FA                             u4521 0053                             u3721 0B2A  
                           u3641 0AD3                             u3481 0A11                             u4361 1CDF  
                           u4345 11E8                             u4281 11C3                             u4265 11AA  
                           u4185 1281                             u3801 0B8B                             u5401 0335  
                           u5321 0209                             u5241 00C8                             u2930 1C95  
                           u5090 1114                             u4530 0070                             u3650 0AE0  
                           u3570 0AA7                             u3490 0A16                             u4610 107C  
                           u4290 11C8                             u3730 0B3B                             u5410 0400  
                           u5330 026C                             u5250 00FC                             u4435 1F69  
                           u2931 1C94                             u5091 1113                             u4531 006F  
                           u3651 0ADF                             u3571 0AA6                             u3491 0A15  
                           u3395 09B1                             u4611 107B                             u4291 11C7  
                           u4275 11B8                             u3731 0B3A                             u5411 03FF  
                           u5331 026B                             u5251 00FB                             u4460 1F97  
                           u5180 1311                             u4540 009E                             u3660 0AEE  
                           u3580 0AAC                             u4620 1083                             u2940 1D27  
                           u3900 0CE8                             u3740 0B41                             u5500 0510  
                           u5420 040B                             u5340 028A                             u5260 0107  
                           u4461 1F96                             u4445 1F7D                             u5181 1310  
                           u5085 110A                             u4541 009D                             u3581 0AAB  
                           u3565 0A9D                             u4621 1082                             u4605 106E  
                           u2941 1D26                             u3901 0CE7                             u3741 0B40  
                           u5501 050F                             u5421 040A                             u5341 0289  
                           u5261 0106                             u5190 132A                             u4470 1EB9  
                           u4550 1C6C                             u3670 0AFD                             u3590 0AB6  
                           u4710 1E4E                             u4390 1CF4                             u3910 0CFC  
                           u3830 0C94                             u3750 0B46                             u5510 060F  
                           u5430 0422                             u5350 029D                             u5270 013F  
                           u4455 1F8B                             u5191 1329                             u5175 12DD  
                           u4471 1EB8                             u4551 1C6B                             u3671 0AFC  
                           u3591 0AB5                             u4711 1E4D                             u4391 1CF3  
                           u4375 1CE5                             u3911 0CFB                             u3815 0C0B  
                           u3751 0B45                             u5511 060E                             u5431 0421  
                           u5415 03FC                             u5351 029C                             u5271 013E  
                           u2880 1C76                             u4800 1701                             u4720 165A  
                           u4480 1ED5                             u3680 0B06                             u4640 1092  
                           u4560 103A                             u2960 1D37                             u3920 0D03  
                           u3840 0CAB                             u3760 0B65                             u5600 06D0  
                           u5520 0624                             u5440 0432                             u5360 02DC  
                           u5280 0177                             u2881 1C75                             u4801 1700  
                           u4721 1659                             u4481 1ED4                             u4545 009A  
                           u3681 0B05                             u3665 0AEA                             u4641 1091  
                           u4561 1039                             u4705 1E42                             u4385 1CEA  
                           u2961 1D36                             u3921 0D02                             u3825 0C3A  
                           u3761 0B64                             u5601 06CF                             u5521 0623  
                           u5441 0431                             u5361 02DB                             u5281 0176  
                           u2890 1C7A                             u4730 1660                             u4490 1EEF  
                           u3690 0B0B                             u4650 1097                             u4570 1050  
                           u3930 0D09                             u3770 0B6B                             u5610 06DB  
                           u5530 0629                             u5450 0450                             u5370 02F4  
                           u5290 017B                             u2891 1C79                             u4731 165F  
                           u4491 1EEE                             u3691 0B0A                             u4651 1096  
                           u4635 1085                             u2955 1D2C                             u3931 0D08  
                           u3835 0C90                             u3771 0B6A                             u5611 06DA  
                           u5531 0628                             u5451 044F                             u5371 02F3  
                           u5355 0299                             u5291 017A                             u4740 1665  
                           u4580 1065                             u4660 1E15                             u3940 0D15  
                           u3780 0B70                             u2980 1FA6                             u5700 0766  
                           u5620 06EF                             u5540 062D                             u5460 045D  
                           u5380 0310                             u4741 1664                             u4581 1064  
                           u4661 1E14                             u3941 0D14                             u3845 0CA7  
                           u3781 0B6F                             u2981 1FA5                             u5701 0765  
                           u5621 06EE                             u5541 062C                             u5461 045C  
                           u5381 030F                             u5365 02D8                             u4910 1765  
                           u4830 1713                             u4750 1685                             u4590 106C  
                           u3950 0D23                             u3870 0CD3                             u3790 0B87  
                           u2990 1FB1                             u5710 07C0                             u5630 06FE  
                           u5550 0655                             u5470 04CE                             u5390 031E  
                           u2975 1DA4                             u4911 1764                             u4831 1712  
                           u4815 1702                             u4751 1684                             u4495 1EEB  
                           u4591 106B                             u4575 104C                             u3871 0CD2  
                           u3855 0CB6                             u3791 0B86                             u2991 1FB0  
                           u5711 07BF                             u5631 06FD                             u5615 06D7  
                           u5551 0654                             u5471 04CD                             u5455 044C  
                           u5391 031D                             u4920 176A                             u4760 168B  
                           u4680 1E27                             u3960 0D3E                             u5720 07D4  
                           u5640 070A                             u5560 0669                             u5480 04EB  
                           u4921 1769                             u4905 1757                             u4825 1709  
                           u4761 168A                             u4681 1E26                             u3961 0D3D  
                           u3865 0CC9                             u5721 07D3                             u5641 0709  
                           u5625 06EB                             u5561 0668                             u5481 04EA  
                           u4930 177E                             u4850 172D                             u4770 1690  
                           u4690 1E39                             u3970 0D56                             u3890 0CE3  
                           u5650 0712                             u5570 0690                             u5490 04F9  
                           u4931 177D                             u4851 172C                             u4771 168F  
                           u4691 1E38                             u4675 1E19                             u3971 0D55  
                           u3955 0D1F                             u3891 0CE2                             u5651 0711  
                           u5571 068F                             u5491 04F8                             u5395 031A  
                           u4940 1785                             u4860 1740                             u4780 16AB  
                           u3980 0D72                             u5660 0720                             u5580 0698  
                           u4941 1784                             u4861 173F                             u4845 1715  
                           u4781 16AA                             u3981 0D71                             u3965 0D3A  
                           u3885 0CD5                             u5661 071F                             u5581 0697  
                           u5485 04E7                             u3990 101C                             u4950 178B  
                           u4870 1748                             u4790 16C9                             u5670 0734  
                           u5590 06C5                             u3991 101B                             u5807 0824  
                           u4951 178A                             u4871 1747                             u4855 1729  
                           u4791 16C8                             u4695 1E35                             u3975 0D52  
                           u5671 0733                             u5591 06C4                             u5495 04F5  
                           u4960 1797                             u5680 0746                             u5817 0837  
                           u4961 1796                             u5681 0745                             u5665 071C  
                           u4970 17A5                             u4890 1755                             u5690 075A  
                           u5907 08F0                             u5827 0848                             u4891 1754  
                           u5691 0759                             u5675 0730                             u5595 06C1  
                           u4980 17C0                             u5917 1DBE                             u5837 0857  
                           u4981 17BF                             u4885 174B                             u5757 13BC  
                           u4990 17DB                             u5927 1C85                             u5847 0867  
                           u4991 17DA                             u4975 17A1                             u5767 1404  
                           u5937 0014                             u5857 0883                             u4985 17BC  
                           u5777 1430                             u5947 12D7                             u5867 089F  
                           u4995 17D7                             u5787 14BA                             u5957 12E7  
                           u5877 08B1                             u5797 080E                             u5967 1303  
                           u5887 08C2                             u5977 1316                             u5897 08DE  
                           u5987 131D                             _WPUB 020D                  ??_lcd_backlight 0072  
                           _main 1384                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             start 0002  
                ___fldiv@new_exp 0025                     _sprintf$1082 00AE   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 1C46                    ___fltol@sign1 005C                  __end_of___fladd 0B2D  
                          ?_main 0070                  __end_of___fldiv 1800                  __end_of___awdiv 2000  
                __end_of___flneg 1C6F                  __end_of___awmod 1F46                  __end_of___flmul 0D84  
                __end_of___flsub 1D19                  __end_of___fltol 10A3                  __end_of___lldiv 1FA0  
                ___awdiv@divisor 0077                  __end_of___llmod 1E57                  __end_of___lwdiv 1E0C  
                __end_of___lwmod 1D98                  ___awdiv@counter 0020                            _TRISA 008C  
                          _TRISB 008D           scale_convert_gram@temp 0035                     lcd_print@cmd 007B  
                   lcd_print@str 0078                  __end_of_lcd_cmd 0018                  __end_of_command 1DD0  
                __end_of_dpowers 2028                   _WDT_Initialize 1C2F                            _scale 0D84  
                __end_of_isdigit 1CBD                            status 0003               _scale_convert_gram 1E57  
                          wtemp0 007E                  __end_of_sprintf 07DA       __size_of_set_CELL_CLK_HIGH 0003  
                ??_get_scale_val 0024                  __initialization 07DA              ?_scale_convert_gram 002D  
                   __end_of_main 14C4                    command@lownib 0077                 __end_of_i2c_wait 1C7B  
               __end_of_i2c_stop 0809                           ??_main 006D             __size_of__tdiv_to_l_ 00B0  
         __end_of_WDT_Initialize 1C33             ??_scale_convert_gram 0031                 ___llmod@dividend 0024  
                         ?_scale 003E                 ___awdiv@dividend 0079                           _ANSELA 018C  
                         _ANSELB 018D                           _BORCON 0116                           _OSCCON 0099  
                         _WDTCON 0097                           _SSPADD 0212                           _SSPBUF 0211  
             __size_of_i2c_start 000A                 __end_of___xxtofl 114F               __size_of_i2c_write 0010  
        scale_convert_gram@count 002D         __end_of_get_CELL_DAT_VAL 1C5A                 __end_of__powers_ 206B  
               __end_of_lcd_init 08F5                           ___flge 0018                           ___fleq 1EA5  
                      ??___fladd 0059                           ___wmul 1CDA                        ??___fldiv 0078  
                      ??___awdiv 007B                        ??___flneg 0074                        ??___awmod 0074  
                      ??___flmul 002C                        ??___flsub 007E                        ??___fltol 0057  
                      ??___lldiv 0078                        ??___llmod 0028                        ??___lwdiv 007A  
                      ??___lwmod 0074                           _fround 14C4                 ___awdiv@quotient 0022  
                ___awmod@divisor 0070                           _valstr 00D4                  ___awmod@counter 0075  
                      ??_lcd_cmd 0071                        ??_command 0073                        ??_isdigit 0070  
             __size_of__Umul8_16 0023                  ?_WDT_Initialize 0070                        ??_sprintf 00A8  
                     ___flge@ff1 0070                       ___flge@ff2 0074                     ___xxtofl@arg 007A  
                   ___xxtofl@exp 0079                _SYSTEM_Initialize 1C46                     ___xxtofl@val 0070  
                     ___fleq@ff1 0070                       ___fleq@ff2 0074          __end_of__initialization 07FD  
                     ___flneg@f1 0070               ?_SYSTEM_Initialize 0070                       ___fltol@f1 0053  
      __size_of_set_CELL_CLK_LOW 0006                   command@highnib 0076                   __pcstackCOMMON 0070  
                   __pidataBANK1 1000              ??_SYSTEM_Initialize 0070                    __end_of_scale 1000  
                 get_scale_val@i 0031                   get_scale_val@j 002C                   get_scale_val@n 0020  
              __end_of_i2c_start 1C64                 ??_lcd_set_cursor 0079                __end_of_i2c_write 1C99  
                     __div_to_l_ 114F                   _OPTION_REGbits 0095               __size_of_lcd_clear 0028  
             __size_of_lcd_print 001D                  __div_to_l_@exp1 0025                  __div_to_l_@cntr 0024  
                        ??_scale 0042        __end_of_SYSTEM_Initialize 1C50                  __div_to_l_@quot 0020  
                   sprintf@width 00B3                       __pbssBANK0 006F                       __pbssBANK1 00CC  
                     __pbssBANK2 0120                        ?_i2c_wait 0070                        ?_i2c_stop 0070  
                  __div_to_l_@f1 0070                    __div_to_l_@f2 0074                __end_of__Umul8_16 1D3C  
                     __pmaintext 1384                          ?___flge 0070                          ?___fleq 0070  
                        ?___wmul 0070                          ?_fround 003E                        ?___xxtofl 0070  
                        _OSCTUNE 0098                          _SSPCON1 0215                          _SSPCON2 0216  
                      ?_lcd_init 0070                          _SSPSTAT 0214                       ??_i2c_wait 0070  
                     ??_i2c_stop 0070            __end_of_lcd_backlight 1C89                __end_of__npowers_ 209F  
                     _scale$1081 004E                __end_of_lcd_clear 1D64                  __size_of___flge 008A  
                __size_of___fleq 004E                __end_of_lcd_print 1CDA                          ___fladd 08F5  
                        ___fldiv 164C                          ___awdiv 1FA0                          ___flneg 1C64  
                        ___awmod 1EF3                          ___flmul 0B2D                          ___flsub 1CF9  
                        ___fltol 102E                          ___lldiv 1F46                  __size_of___wmul 001F  
                        ___llmod 1E0C                          ___lwdiv 1DD0                          ___lwmod 1D64  
                __size_of_fround 0188                          __ptext1 00A2                          __ptext2 0D84  
                        __ptext3 1EF3                          __ptext4 1FA0                          __ptext5 1CAB  
                        __ptext6 14C4                          __ptext7 1D64                          __ptext8 1DD0  
                        __ptext9 0B2D                          _lcd_cmd 0004                          _command 1D98  
                    ?__div_to_l_ 0070                          _dpowers 2000                          _gramstr 0120  
          _OSCILLATOR_Initialize 1C3F                          _isdigit 1CAB                       ??___xxtofl 0074  
               ___awmod@dividend 0072         ??_PIN_MANAGER_Initialize 0070       __size_of_SYSTEM_Initialize 000A  
                        _sprintf 00A2                          clrloop0 1C3A                       ??_lcd_init 0072  
           end_of_initialization 07FD                  ___lldiv@divisor 0070                  ___lldiv@counter 007D  
          __end_of_get_scale_val 1384                 _set_CELL_CLK_LOW 1C33                ?_get_CELL_DAT_VAL 0070  
             ??_get_CELL_DAT_VAL 0072                   __tdiv_to_l_@f1 0070                   __tdiv_to_l_@f2 0074  
                  ??__tdiv_to_l_ 0078                 ??_WDT_Initialize 0070                        _PORTAbits 000C  
                     _weight_dat 00D0                      ___fladd@grs 0064                    i2c_write@data 0070  
      lcd_set_cursor@row_offsets 0020                    ___xxtofl@sign 0078                       lcd_cmd@cmd 0071  
    __size_of_scale_convert_gram 004E                      ___fldiv@grs 0027                      ___fldiv@rem 0020  
                    ___flmul@grs 0032                       command@val 0075              __size_of__div_to_l_ 00AF  
                 __end_of___flge 00A2                   __end_of___fleq 1EF3                   __end_of___wmul 1CF9  
         ?_OSCILLATOR_Initialize 0070                   __end_of_fround 164C              start_initialization 07DA  
__size_of_PIN_MANAGER_Initialize 0012              __end_of__tdiv_to_l_ 12AE                        _i2c_start 1C5A  
                      _i2c_write 1C89                  ___llmod@divisor 0020                  ___llmod@counter 0029  
              __size_of_i2c_wait 000C                __size_of_i2c_stop 0007                         ??___flge 0078  
                       ??___fleq 0078                         ??___wmul 0074                        __Umul8_16 1D19  
        get_scale_val@weight_add 0028                      __pdataBANK1 00E4                         ??_fround 0042  
                  sprintf@tmpval 00B5                        ___fladd@a 0055                        ___fladd@b 0051  
                     fround@prec 0050                        ___fldiv@a 0070                        ___fldiv@b 0074  
            lcd_set_cursor@F2624 00E4                        ___flmul@a 0028                        ___flmul@b 0024  
                      ___flsub@a 0065                        ___flsub@b 0069                        ___latbits 0003  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0                       ?_i2c_start 0070  
                     ?_i2c_write 0070                __size_of___xxtofl 00AC                __size_of_lcd_init 00EC  
                    sprintf@flag 00B9                      sprintf@eexp 00BB                      sprintf@fval 00C1  
                    sprintf@prec 00C5                 ___lwdiv@dividend 0078           _PIN_MANAGER_Initialize 1C99  
                       ?___fladd 0051                         ?___fldiv 0070                         ?___awdiv 0077  
                       ?___flneg 0070                         ?___awmod 0070                         ?___flmul 0024  
                       ?___flsub 0065                         ?___fltol 0053                         ?___lldiv 0070  
                       ?___llmod 0020                        __npowers_ 206B                       ?__Umul8_16 0070  
                       ?___lwdiv 0076                         ?___lwmod 0070                        _lcd_clear 1D3C  
                    __tdiv_to_l_ 11FE                        _lcd_print 1CBD                         ?_lcd_cmd 0070  
                       ?_command 0072                     ??__div_to_l_ 0078                         ?_isdigit 0070  
       __end_of_set_CELL_CLK_LOW 1C39                 ___lwdiv@quotient 007B                         ?_sprintf 00A0  
                 __size_of_scale 027C          __size_of_lcd_set_cursor 002A                   ___wmul@product 0074  
                      clear_ram0 1C39               __end_of__div_to_l_ 11FE                       ?_lcd_clear 0070  
                     ?_lcd_print 0078                ___wmul@multiplier 0070        __size_of_get_CELL_DAT_VAL 000A  
         __size_of_lcd_backlight 000E                      ??_i2c_start 0070                      ??_i2c_write 0070  
                       _i2c_wait 1C6F                         _i2c_stop 0802          ??_OSCILLATOR_Initialize 0070  
                    ??__Umul8_16 0072                 __size_of___fladd 0238                 __size_of___fldiv 01B4  
               __size_of___awdiv 0060                 __size_of___flneg 000B                 __size_of___awmod 0053  
               __size_of___flmul 0257                 __size_of___flsub 0020                 __size_of___fltol 0075  
               __size_of___lldiv 005A                 __size_of___llmod 004B                 __size_of___lwdiv 003C  
               __size_of___lwmod 0034                      _fround$1080 0048                      _fround$1079 004C  
                    _isdigit$886 0070                 __size_of_lcd_cmd 0014                 __size_of_command 0038  
     __end_of_scale_convert_gram 1EA5                       sprintf@val 00BD                         ___xxtofl 10A3  
               __size_of_isdigit 0012                  ___lwdiv@divisor 0076                  ___lwdiv@counter 007D  
         __size_of_get_scale_val 00D6                         __ptext10 1D19                         __ptext11 11FE  
                       __ptext20 1EA5                         __ptext12 114F                         __ptext21 1E57  
                       __ptext13 1CDA                         __ptext30 0004                         __ptext22 10A3  
                       __ptext14 1E0C                         __ptext31 1C89                         __ptext23 164C  
                       __ptext15 102E                         __ptext40 1C46                         __ptext32 0802  
                       __ptext24 0809                         __ptext16 1CF9                         __ptext41 1C2F  
                       __ptext33 1C5A                         __ptext25 1D3C                         __ptext17 08F5  
                       __ptext42 1C99                         __ptext34 1C6F                         __ptext26 1004  
                       __ptext18 1C64                         __ptext43 1C3F                         __ptext35 12AE  
                       __ptext27 1CBD                         __ptext19 0018                         __ptext36 1C33  
                       __ptext28 1D98                         __ptext37 1C2C                         __ptext29 1C7B  
                       __ptext38 1C50                         __ptext39 1F46                         __powers_ 2037  
                       _lcd_init 0809                 __size_of_sprintf 0738                    __size_of_main 0140  
                  _lcd_backlight 1C7B                      ??_lcd_clear 007C                      ??_lcd_print 007A  
                       isdigit@c 0071                  main@weight_gram 00C8                         scale@scl 0052  
        __size_of_WDT_Initialize 0004                   _lcd_set_cursor 1004                lcd_set_cursor@cmd 0025  
              lcd_set_cursor@col 0024                        sprintf@ap 00B2                 __tdiv_to_l_@exp1 0025  
               __tdiv_to_l_@cntr 0024                        sprintf@sp 00A0                lcd_set_cursor@row 0078  
               __tdiv_to_l_@quot 0020                 ___lwmod@dividend 0072                 ___lldiv@dividend 0074  
        ?_PIN_MANAGER_Initialize 0070                   ?_lcd_backlight 0070                _set_CELL_CLK_HIGH 1C2C  
                  _get_scale_val 12AE               ?_set_CELL_CLK_HIGH 0070                     ?__tdiv_to_l_ 0070  
                  __pstringtext1 2037                    __pstringtext2 206B                    __pstringtext3 2000  
                  __pstringtext4 209F                    __pstringtext5 20AE                    __pstringtext6 20B9  
                  __pstringtext7 20C4                    __pstringtext8 20CD                    __pstringtext9 0000  
            ??_set_CELL_CLK_HIGH 0070           __Umul8_16@multiplicand 0070                         sprintf@c 00C7  
                       sprintf@f 00A2                 ___lldiv@quotient 0079                  ___lwmod@divisor 0070  
                ___lwmod@counter 0075                 _get_CELL_DAT_VAL 1C50                      _SSPCON1bits 0215  
                    _SSPCON2bits 0216                ?_set_CELL_CLK_LOW 0070           __end_of_lcd_set_cursor 102E  
                    _weight_zero 00CC                    ___fladd@signs 0061               ??_set_CELL_CLK_LOW 0070  
 __end_of_PIN_MANAGER_Initialize 1CAB                     ___fladd@aexp 0062                     ___fladd@bexp 0063  
      __end_of_set_CELL_CLK_HIGH 1C2F             __Umul8_16@multiplier 0078                   ?_get_scale_val 0020  
              __Umul8_16@product 0074                    __backlightval 006F  

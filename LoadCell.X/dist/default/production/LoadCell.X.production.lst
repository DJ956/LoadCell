

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Nov 13 13:52:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 2.20
    71                           ; Generated 12/02/2020 GMT
    72                           ; 
    73                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F1938 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  0110                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0118                     	;# 
   164  0119                     	;# 
   165  011A                     	;# 
   166  011B                     	;# 
   167  011D                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0191                     	;# 
   171  0191                     	;# 
   172  0192                     	;# 
   173  0193                     	;# 
   174  0193                     	;# 
   175  0193                     	;# 
   176  0194                     	;# 
   177  0195                     	;# 
   178  0196                     	;# 
   179  0199                     	;# 
   180  019A                     	;# 
   181  019B                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019C                     	;# 
   186  019C                     	;# 
   187  019D                     	;# 
   188  019E                     	;# 
   189  019F                     	;# 
   190  020D                     	;# 
   191  0210                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0213                     	;# 
   195  0214                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0216                     	;# 
   199  0217                     	;# 
   200  0291                     	;# 
   201  0291                     	;# 
   202  0292                     	;# 
   203  0293                     	;# 
   204  0294                     	;# 
   205  0295                     	;# 
   206  0295                     	;# 
   207  0296                     	;# 
   208  0298                     	;# 
   209  0298                     	;# 
   210  0299                     	;# 
   211  029A                     	;# 
   212  029B                     	;# 
   213  029C                     	;# 
   214  029C                     	;# 
   215  029D                     	;# 
   216  029E                     	;# 
   217  029F                     	;# 
   218  0311                     	;# 
   219  0311                     	;# 
   220  0312                     	;# 
   221  0313                     	;# 
   222  0314                     	;# 
   223  0315                     	;# 
   224  0315                     	;# 
   225  0316                     	;# 
   226  0318                     	;# 
   227  0318                     	;# 
   228  0319                     	;# 
   229  031A                     	;# 
   230  031C                     	;# 
   231  031C                     	;# 
   232  031D                     	;# 
   233  031E                     	;# 
   234  0394                     	;# 
   235  0395                     	;# 
   236  0396                     	;# 
   237  0415                     	;# 
   238  0416                     	;# 
   239  0417                     	;# 
   240  041C                     	;# 
   241  041D                     	;# 
   242  041E                     	;# 
   243  0791                     	;# 
   244  0792                     	;# 
   245  0793                     	;# 
   246  0794                     	;# 
   247  0795                     	;# 
   248  0798                     	;# 
   249  0799                     	;# 
   250  07A0                     	;# 
   251  07A1                     	;# 
   252  07A3                     	;# 
   253  07A4                     	;# 
   254  07A6                     	;# 
   255  07A7                     	;# 
   256  07A9                     	;# 
   257  07AA                     	;# 
   258  0FE4                     	;# 
   259  0FE5                     	;# 
   260  0FE6                     	;# 
   261  0FE7                     	;# 
   262  0FE8                     	;# 
   263  0FE9                     	;# 
   264  0FEA                     	;# 
   265  0FEB                     	;# 
   266  0FED                     	;# 
   267  0FEE                     	;# 
   268  0FEF                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0008                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000D                     	;# 
   283  000E                     	;# 
   284  0010                     	;# 
   285  0011                     	;# 
   286  0012                     	;# 
   287  0013                     	;# 
   288  0015                     	;# 
   289  0016                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001C                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  008C                     	;# 
   300  008D                     	;# 
   301  008E                     	;# 
   302  0090                     	;# 
   303  0091                     	;# 
   304  0092                     	;# 
   305  0093                     	;# 
   306  0095                     	;# 
   307  0096                     	;# 
   308  0097                     	;# 
   309  0098                     	;# 
   310  0099                     	;# 
   311  009A                     	;# 
   312  009B                     	;# 
   313  009B                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  0110                     	;# 
   321  0111                     	;# 
   322  0112                     	;# 
   323  0113                     	;# 
   324  0114                     	;# 
   325  0115                     	;# 
   326  0116                     	;# 
   327  0117                     	;# 
   328  0118                     	;# 
   329  0119                     	;# 
   330  011A                     	;# 
   331  011B                     	;# 
   332  011D                     	;# 
   333  018C                     	;# 
   334  018D                     	;# 
   335  0191                     	;# 
   336  0191                     	;# 
   337  0192                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0194                     	;# 
   342  0195                     	;# 
   343  0196                     	;# 
   344  0199                     	;# 
   345  019A                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019C                     	;# 
   351  019C                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019F                     	;# 
   355  020D                     	;# 
   356  0210                     	;# 
   357  0211                     	;# 
   358  0212                     	;# 
   359  0213                     	;# 
   360  0214                     	;# 
   361  0215                     	;# 
   362  0215                     	;# 
   363  0216                     	;# 
   364  0217                     	;# 
   365  0291                     	;# 
   366  0291                     	;# 
   367  0292                     	;# 
   368  0293                     	;# 
   369  0294                     	;# 
   370  0295                     	;# 
   371  0295                     	;# 
   372  0296                     	;# 
   373  0298                     	;# 
   374  0298                     	;# 
   375  0299                     	;# 
   376  029A                     	;# 
   377  029B                     	;# 
   378  029C                     	;# 
   379  029C                     	;# 
   380  029D                     	;# 
   381  029E                     	;# 
   382  029F                     	;# 
   383  0311                     	;# 
   384  0311                     	;# 
   385  0312                     	;# 
   386  0313                     	;# 
   387  0314                     	;# 
   388  0315                     	;# 
   389  0315                     	;# 
   390  0316                     	;# 
   391  0318                     	;# 
   392  0318                     	;# 
   393  0319                     	;# 
   394  031A                     	;# 
   395  031C                     	;# 
   396  031C                     	;# 
   397  031D                     	;# 
   398  031E                     	;# 
   399  0394                     	;# 
   400  0395                     	;# 
   401  0396                     	;# 
   402  0415                     	;# 
   403  0416                     	;# 
   404  0417                     	;# 
   405  041C                     	;# 
   406  041D                     	;# 
   407  041E                     	;# 
   408  0791                     	;# 
   409  0792                     	;# 
   410  0793                     	;# 
   411  0794                     	;# 
   412  0795                     	;# 
   413  0798                     	;# 
   414  0799                     	;# 
   415  07A0                     	;# 
   416  07A1                     	;# 
   417  07A3                     	;# 
   418  07A4                     	;# 
   419  07A6                     	;# 
   420  07A7                     	;# 
   421  07A9                     	;# 
   422  07AA                     	;# 
   423  0FE4                     	;# 
   424  0FE5                     	;# 
   425  0FE6                     	;# 
   426  0FE7                     	;# 
   427  0FE8                     	;# 
   428  0FE9                     	;# 
   429  0FEA                     	;# 
   430  0FEB                     	;# 
   431  0FED                     	;# 
   432  0FEE                     	;# 
   433  0FEF                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  000E                     	;# 
   449  0010                     	;# 
   450  0011                     	;# 
   451  0012                     	;# 
   452  0013                     	;# 
   453  0015                     	;# 
   454  0016                     	;# 
   455  0016                     	;# 
   456  0017                     	;# 
   457  0018                     	;# 
   458  0019                     	;# 
   459  001A                     	;# 
   460  001B                     	;# 
   461  001C                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  008C                     	;# 
   465  008D                     	;# 
   466  008E                     	;# 
   467  0090                     	;# 
   468  0091                     	;# 
   469  0092                     	;# 
   470  0093                     	;# 
   471  0095                     	;# 
   472  0096                     	;# 
   473  0097                     	;# 
   474  0098                     	;# 
   475  0099                     	;# 
   476  009A                     	;# 
   477  009B                     	;# 
   478  009B                     	;# 
   479  009C                     	;# 
   480  009D                     	;# 
   481  009E                     	;# 
   482  010C                     	;# 
   483  010D                     	;# 
   484  010E                     	;# 
   485  0110                     	;# 
   486  0111                     	;# 
   487  0112                     	;# 
   488  0113                     	;# 
   489  0114                     	;# 
   490  0115                     	;# 
   491  0116                     	;# 
   492  0117                     	;# 
   493  0118                     	;# 
   494  0119                     	;# 
   495  011A                     	;# 
   496  011B                     	;# 
   497  011D                     	;# 
   498  018C                     	;# 
   499  018D                     	;# 
   500  0191                     	;# 
   501  0191                     	;# 
   502  0192                     	;# 
   503  0193                     	;# 
   504  0193                     	;# 
   505  0193                     	;# 
   506  0194                     	;# 
   507  0195                     	;# 
   508  0196                     	;# 
   509  0199                     	;# 
   510  019A                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019B                     	;# 
   514  019B                     	;# 
   515  019C                     	;# 
   516  019C                     	;# 
   517  019D                     	;# 
   518  019E                     	;# 
   519  019F                     	;# 
   520  020D                     	;# 
   521  0210                     	;# 
   522  0211                     	;# 
   523  0212                     	;# 
   524  0213                     	;# 
   525  0214                     	;# 
   526  0215                     	;# 
   527  0215                     	;# 
   528  0216                     	;# 
   529  0217                     	;# 
   530  0291                     	;# 
   531  0291                     	;# 
   532  0292                     	;# 
   533  0293                     	;# 
   534  0294                     	;# 
   535  0295                     	;# 
   536  0295                     	;# 
   537  0296                     	;# 
   538  0298                     	;# 
   539  0298                     	;# 
   540  0299                     	;# 
   541  029A                     	;# 
   542  029B                     	;# 
   543  029C                     	;# 
   544  029C                     	;# 
   545  029D                     	;# 
   546  029E                     	;# 
   547  029F                     	;# 
   548  0311                     	;# 
   549  0311                     	;# 
   550  0312                     	;# 
   551  0313                     	;# 
   552  0314                     	;# 
   553  0315                     	;# 
   554  0315                     	;# 
   555  0316                     	;# 
   556  0318                     	;# 
   557  0318                     	;# 
   558  0319                     	;# 
   559  031A                     	;# 
   560  031C                     	;# 
   561  031C                     	;# 
   562  031D                     	;# 
   563  031E                     	;# 
   564  0394                     	;# 
   565  0395                     	;# 
   566  0396                     	;# 
   567  0415                     	;# 
   568  0416                     	;# 
   569  0417                     	;# 
   570  041C                     	;# 
   571  041D                     	;# 
   572  041E                     	;# 
   573  0791                     	;# 
   574  0792                     	;# 
   575  0793                     	;# 
   576  0794                     	;# 
   577  0795                     	;# 
   578  0798                     	;# 
   579  0799                     	;# 
   580  07A0                     	;# 
   581  07A1                     	;# 
   582  07A3                     	;# 
   583  07A4                     	;# 
   584  07A6                     	;# 
   585  07A7                     	;# 
   586  07A9                     	;# 
   587  07AA                     	;# 
   588  0FE4                     	;# 
   589  0FE5                     	;# 
   590  0FE6                     	;# 
   591  0FE7                     	;# 
   592  0FE8                     	;# 
   593  0FE9                     	;# 
   594  0FEA                     	;# 
   595  0FEB                     	;# 
   596  0FED                     	;# 
   597  0FEE                     	;# 
   598  0FEF                     	;# 
   599  0000                     	;# 
   600  0001                     	;# 
   601  0002                     	;# 
   602  0003                     	;# 
   603  0004                     	;# 
   604  0005                     	;# 
   605  0006                     	;# 
   606  0007                     	;# 
   607  0008                     	;# 
   608  0009                     	;# 
   609  000A                     	;# 
   610  000B                     	;# 
   611  000C                     	;# 
   612  000D                     	;# 
   613  000E                     	;# 
   614  0010                     	;# 
   615  0011                     	;# 
   616  0012                     	;# 
   617  0013                     	;# 
   618  0015                     	;# 
   619  0016                     	;# 
   620  0016                     	;# 
   621  0017                     	;# 
   622  0018                     	;# 
   623  0019                     	;# 
   624  001A                     	;# 
   625  001B                     	;# 
   626  001C                     	;# 
   627  001E                     	;# 
   628  001F                     	;# 
   629  008C                     	;# 
   630  008D                     	;# 
   631  008E                     	;# 
   632  0090                     	;# 
   633  0091                     	;# 
   634  0092                     	;# 
   635  0093                     	;# 
   636  0095                     	;# 
   637  0096                     	;# 
   638  0097                     	;# 
   639  0098                     	;# 
   640  0099                     	;# 
   641  009A                     	;# 
   642  009B                     	;# 
   643  009B                     	;# 
   644  009C                     	;# 
   645  009D                     	;# 
   646  009E                     	;# 
   647  010C                     	;# 
   648  010D                     	;# 
   649  010E                     	;# 
   650  0110                     	;# 
   651  0111                     	;# 
   652  0112                     	;# 
   653  0113                     	;# 
   654  0114                     	;# 
   655  0115                     	;# 
   656  0116                     	;# 
   657  0117                     	;# 
   658  0118                     	;# 
   659  0119                     	;# 
   660  011A                     	;# 
   661  011B                     	;# 
   662  011D                     	;# 
   663  018C                     	;# 
   664  018D                     	;# 
   665  0191                     	;# 
   666  0191                     	;# 
   667  0192                     	;# 
   668  0193                     	;# 
   669  0193                     	;# 
   670  0193                     	;# 
   671  0194                     	;# 
   672  0195                     	;# 
   673  0196                     	;# 
   674  0199                     	;# 
   675  019A                     	;# 
   676  019B                     	;# 
   677  019B                     	;# 
   678  019B                     	;# 
   679  019B                     	;# 
   680  019C                     	;# 
   681  019C                     	;# 
   682  019D                     	;# 
   683  019E                     	;# 
   684  019F                     	;# 
   685  020D                     	;# 
   686  0210                     	;# 
   687  0211                     	;# 
   688  0212                     	;# 
   689  0213                     	;# 
   690  0214                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0216                     	;# 
   694  0217                     	;# 
   695  0291                     	;# 
   696  0291                     	;# 
   697  0292                     	;# 
   698  0293                     	;# 
   699  0294                     	;# 
   700  0295                     	;# 
   701  0295                     	;# 
   702  0296                     	;# 
   703  0298                     	;# 
   704  0298                     	;# 
   705  0299                     	;# 
   706  029A                     	;# 
   707  029B                     	;# 
   708  029C                     	;# 
   709  029C                     	;# 
   710  029D                     	;# 
   711  029E                     	;# 
   712  029F                     	;# 
   713  0311                     	;# 
   714  0311                     	;# 
   715  0312                     	;# 
   716  0313                     	;# 
   717  0314                     	;# 
   718  0315                     	;# 
   719  0315                     	;# 
   720  0316                     	;# 
   721  0318                     	;# 
   722  0318                     	;# 
   723  0319                     	;# 
   724  031A                     	;# 
   725  031C                     	;# 
   726  031C                     	;# 
   727  031D                     	;# 
   728  031E                     	;# 
   729  0394                     	;# 
   730  0395                     	;# 
   731  0396                     	;# 
   732  0415                     	;# 
   733  0416                     	;# 
   734  0417                     	;# 
   735  041C                     	;# 
   736  041D                     	;# 
   737  041E                     	;# 
   738  0791                     	;# 
   739  0792                     	;# 
   740  0793                     	;# 
   741  0794                     	;# 
   742  0795                     	;# 
   743  0798                     	;# 
   744  0799                     	;# 
   745  07A0                     	;# 
   746  07A1                     	;# 
   747  07A3                     	;# 
   748  07A4                     	;# 
   749  07A6                     	;# 
   750  07A7                     	;# 
   751  07A9                     	;# 
   752  07AA                     	;# 
   753  0FE4                     	;# 
   754  0FE5                     	;# 
   755  0FE6                     	;# 
   756  0FE7                     	;# 
   757  0FE8                     	;# 
   758  0FE9                     	;# 
   759  0FEA                     	;# 
   760  0FEB                     	;# 
   761  0FED                     	;# 
   762  0FEE                     	;# 
   763  0FEF                     	;# 
   764  0000                     	;# 
   765  0001                     	;# 
   766  0002                     	;# 
   767  0003                     	;# 
   768  0004                     	;# 
   769  0005                     	;# 
   770  0006                     	;# 
   771  0007                     	;# 
   772  0008                     	;# 
   773  0009                     	;# 
   774  000A                     	;# 
   775  000B                     	;# 
   776  000C                     	;# 
   777  000D                     	;# 
   778  000E                     	;# 
   779  0010                     	;# 
   780  0011                     	;# 
   781  0012                     	;# 
   782  0013                     	;# 
   783  0015                     	;# 
   784  0016                     	;# 
   785  0016                     	;# 
   786  0017                     	;# 
   787  0018                     	;# 
   788  0019                     	;# 
   789  001A                     	;# 
   790  001B                     	;# 
   791  001C                     	;# 
   792  001E                     	;# 
   793  001F                     	;# 
   794  008C                     	;# 
   795  008D                     	;# 
   796  008E                     	;# 
   797  0090                     	;# 
   798  0091                     	;# 
   799  0092                     	;# 
   800  0093                     	;# 
   801  0095                     	;# 
   802  0096                     	;# 
   803  0097                     	;# 
   804  0098                     	;# 
   805  0099                     	;# 
   806  009A                     	;# 
   807  009B                     	;# 
   808  009B                     	;# 
   809  009C                     	;# 
   810  009D                     	;# 
   811  009E                     	;# 
   812  010C                     	;# 
   813  010D                     	;# 
   814  010E                     	;# 
   815  0110                     	;# 
   816  0111                     	;# 
   817  0112                     	;# 
   818  0113                     	;# 
   819  0114                     	;# 
   820  0115                     	;# 
   821  0116                     	;# 
   822  0117                     	;# 
   823  0118                     	;# 
   824  0119                     	;# 
   825  011A                     	;# 
   826  011B                     	;# 
   827  011D                     	;# 
   828  018C                     	;# 
   829  018D                     	;# 
   830  0191                     	;# 
   831  0191                     	;# 
   832  0192                     	;# 
   833  0193                     	;# 
   834  0193                     	;# 
   835  0193                     	;# 
   836  0194                     	;# 
   837  0195                     	;# 
   838  0196                     	;# 
   839  0199                     	;# 
   840  019A                     	;# 
   841  019B                     	;# 
   842  019B                     	;# 
   843  019B                     	;# 
   844  019B                     	;# 
   845  019C                     	;# 
   846  019C                     	;# 
   847  019D                     	;# 
   848  019E                     	;# 
   849  019F                     	;# 
   850  020D                     	;# 
   851  0210                     	;# 
   852  0211                     	;# 
   853  0212                     	;# 
   854  0213                     	;# 
   855  0214                     	;# 
   856  0215                     	;# 
   857  0215                     	;# 
   858  0216                     	;# 
   859  0217                     	;# 
   860  0291                     	;# 
   861  0291                     	;# 
   862  0292                     	;# 
   863  0293                     	;# 
   864  0294                     	;# 
   865  0295                     	;# 
   866  0295                     	;# 
   867  0296                     	;# 
   868  0298                     	;# 
   869  0298                     	;# 
   870  0299                     	;# 
   871  029A                     	;# 
   872  029B                     	;# 
   873  029C                     	;# 
   874  029C                     	;# 
   875  029D                     	;# 
   876  029E                     	;# 
   877  029F                     	;# 
   878  0311                     	;# 
   879  0311                     	;# 
   880  0312                     	;# 
   881  0313                     	;# 
   882  0314                     	;# 
   883  0315                     	;# 
   884  0315                     	;# 
   885  0316                     	;# 
   886  0318                     	;# 
   887  0318                     	;# 
   888  0319                     	;# 
   889  031A                     	;# 
   890  031C                     	;# 
   891  031C                     	;# 
   892  031D                     	;# 
   893  031E                     	;# 
   894  0394                     	;# 
   895  0395                     	;# 
   896  0396                     	;# 
   897  0415                     	;# 
   898  0416                     	;# 
   899  0417                     	;# 
   900  041C                     	;# 
   901  041D                     	;# 
   902  041E                     	;# 
   903  0791                     	;# 
   904  0792                     	;# 
   905  0793                     	;# 
   906  0794                     	;# 
   907  0795                     	;# 
   908  0798                     	;# 
   909  0799                     	;# 
   910  07A0                     	;# 
   911  07A1                     	;# 
   912  07A3                     	;# 
   913  07A4                     	;# 
   914  07A6                     	;# 
   915  07A7                     	;# 
   916  07A9                     	;# 
   917  07AA                     	;# 
   918  0FE4                     	;# 
   919  0FE5                     	;# 
   920  0FE6                     	;# 
   921  0FE7                     	;# 
   922  0FE8                     	;# 
   923  0FE9                     	;# 
   924  0FEA                     	;# 
   925  0FEB                     	;# 
   926  0FED                     	;# 
   927  0FEE                     	;# 
   928  0FEF                     	;# 
   929  0000                     	;# 
   930  0001                     	;# 
   931  0002                     	;# 
   932  0003                     	;# 
   933  0004                     	;# 
   934  0005                     	;# 
   935  0006                     	;# 
   936  0007                     	;# 
   937  0008                     	;# 
   938  0009                     	;# 
   939  000A                     	;# 
   940  000B                     	;# 
   941  000C                     	;# 
   942  000D                     	;# 
   943  000E                     	;# 
   944  0010                     	;# 
   945  0011                     	;# 
   946  0012                     	;# 
   947  0013                     	;# 
   948  0015                     	;# 
   949  0016                     	;# 
   950  0016                     	;# 
   951  0017                     	;# 
   952  0018                     	;# 
   953  0019                     	;# 
   954  001A                     	;# 
   955  001B                     	;# 
   956  001C                     	;# 
   957  001E                     	;# 
   958  001F                     	;# 
   959  008C                     	;# 
   960  008D                     	;# 
   961  008E                     	;# 
   962  0090                     	;# 
   963  0091                     	;# 
   964  0092                     	;# 
   965  0093                     	;# 
   966  0095                     	;# 
   967  0096                     	;# 
   968  0097                     	;# 
   969  0098                     	;# 
   970  0099                     	;# 
   971  009A                     	;# 
   972  009B                     	;# 
   973  009B                     	;# 
   974  009C                     	;# 
   975  009D                     	;# 
   976  009E                     	;# 
   977  010C                     	;# 
   978  010D                     	;# 
   979  010E                     	;# 
   980  0110                     	;# 
   981  0111                     	;# 
   982  0112                     	;# 
   983  0113                     	;# 
   984  0114                     	;# 
   985  0115                     	;# 
   986  0116                     	;# 
   987  0117                     	;# 
   988  0118                     	;# 
   989  0119                     	;# 
   990  011A                     	;# 
   991  011B                     	;# 
   992  011D                     	;# 
   993  018C                     	;# 
   994  018D                     	;# 
   995  0191                     	;# 
   996  0191                     	;# 
   997  0192                     	;# 
   998  0193                     	;# 
   999  0193                     	;# 
  1000  0193                     	;# 
  1001  0194                     	;# 
  1002  0195                     	;# 
  1003  0196                     	;# 
  1004  0199                     	;# 
  1005  019A                     	;# 
  1006  019B                     	;# 
  1007  019B                     	;# 
  1008  019B                     	;# 
  1009  019B                     	;# 
  1010  019C                     	;# 
  1011  019C                     	;# 
  1012  019D                     	;# 
  1013  019E                     	;# 
  1014  019F                     	;# 
  1015  020D                     	;# 
  1016  0210                     	;# 
  1017  0211                     	;# 
  1018  0212                     	;# 
  1019  0213                     	;# 
  1020  0214                     	;# 
  1021  0215                     	;# 
  1022  0215                     	;# 
  1023  0216                     	;# 
  1024  0217                     	;# 
  1025  0291                     	;# 
  1026  0291                     	;# 
  1027  0292                     	;# 
  1028  0293                     	;# 
  1029  0294                     	;# 
  1030  0295                     	;# 
  1031  0295                     	;# 
  1032  0296                     	;# 
  1033  0298                     	;# 
  1034  0298                     	;# 
  1035  0299                     	;# 
  1036  029A                     	;# 
  1037  029B                     	;# 
  1038  029C                     	;# 
  1039  029C                     	;# 
  1040  029D                     	;# 
  1041  029E                     	;# 
  1042  029F                     	;# 
  1043  0311                     	;# 
  1044  0311                     	;# 
  1045  0312                     	;# 
  1046  0313                     	;# 
  1047  0314                     	;# 
  1048  0315                     	;# 
  1049  0315                     	;# 
  1050  0316                     	;# 
  1051  0318                     	;# 
  1052  0318                     	;# 
  1053  0319                     	;# 
  1054  031A                     	;# 
  1055  031C                     	;# 
  1056  031C                     	;# 
  1057  031D                     	;# 
  1058  031E                     	;# 
  1059  0394                     	;# 
  1060  0395                     	;# 
  1061  0396                     	;# 
  1062  0415                     	;# 
  1063  0416                     	;# 
  1064  0417                     	;# 
  1065  041C                     	;# 
  1066  041D                     	;# 
  1067  041E                     	;# 
  1068  0791                     	;# 
  1069  0792                     	;# 
  1070  0793                     	;# 
  1071  0794                     	;# 
  1072  0795                     	;# 
  1073  0798                     	;# 
  1074  0799                     	;# 
  1075  07A0                     	;# 
  1076  07A1                     	;# 
  1077  07A3                     	;# 
  1078  07A4                     	;# 
  1079  07A6                     	;# 
  1080  07A7                     	;# 
  1081  07A9                     	;# 
  1082  07AA                     	;# 
  1083  0FE4                     	;# 
  1084  0FE5                     	;# 
  1085  0FE6                     	;# 
  1086  0FE7                     	;# 
  1087  0FE8                     	;# 
  1088  0FE9                     	;# 
  1089  0FEA                     	;# 
  1090  0FEB                     	;# 
  1091  0FED                     	;# 
  1092  0FEE                     	;# 
  1093  0FEF                     	;# 
  1094  0000                     	;# 
  1095  0001                     	;# 
  1096  0002                     	;# 
  1097  0003                     	;# 
  1098  0004                     	;# 
  1099  0005                     	;# 
  1100  0006                     	;# 
  1101  0007                     	;# 
  1102  0008                     	;# 
  1103  0009                     	;# 
  1104  000A                     	;# 
  1105  000B                     	;# 
  1106  000C                     	;# 
  1107  000D                     	;# 
  1108  000E                     	;# 
  1109  0010                     	;# 
  1110  0011                     	;# 
  1111  0012                     	;# 
  1112  0013                     	;# 
  1113  0015                     	;# 
  1114  0016                     	;# 
  1115  0016                     	;# 
  1116  0017                     	;# 
  1117  0018                     	;# 
  1118  0019                     	;# 
  1119  001A                     	;# 
  1120  001B                     	;# 
  1121  001C                     	;# 
  1122  001E                     	;# 
  1123  001F                     	;# 
  1124  008C                     	;# 
  1125  008D                     	;# 
  1126  008E                     	;# 
  1127  0090                     	;# 
  1128  0091                     	;# 
  1129  0092                     	;# 
  1130  0093                     	;# 
  1131  0095                     	;# 
  1132  0096                     	;# 
  1133  0097                     	;# 
  1134  0098                     	;# 
  1135  0099                     	;# 
  1136  009A                     	;# 
  1137  009B                     	;# 
  1138  009B                     	;# 
  1139  009C                     	;# 
  1140  009D                     	;# 
  1141  009E                     	;# 
  1142  010C                     	;# 
  1143  010D                     	;# 
  1144  010E                     	;# 
  1145  0110                     	;# 
  1146  0111                     	;# 
  1147  0112                     	;# 
  1148  0113                     	;# 
  1149  0114                     	;# 
  1150  0115                     	;# 
  1151  0116                     	;# 
  1152  0117                     	;# 
  1153  0118                     	;# 
  1154  0119                     	;# 
  1155  011A                     	;# 
  1156  011B                     	;# 
  1157  011D                     	;# 
  1158  018C                     	;# 
  1159  018D                     	;# 
  1160  0191                     	;# 
  1161  0191                     	;# 
  1162  0192                     	;# 
  1163  0193                     	;# 
  1164  0193                     	;# 
  1165  0193                     	;# 
  1166  0194                     	;# 
  1167  0195                     	;# 
  1168  0196                     	;# 
  1169  0199                     	;# 
  1170  019A                     	;# 
  1171  019B                     	;# 
  1172  019B                     	;# 
  1173  019B                     	;# 
  1174  019B                     	;# 
  1175  019C                     	;# 
  1176  019C                     	;# 
  1177  019D                     	;# 
  1178  019E                     	;# 
  1179  019F                     	;# 
  1180  020D                     	;# 
  1181  0210                     	;# 
  1182  0211                     	;# 
  1183  0212                     	;# 
  1184  0213                     	;# 
  1185  0214                     	;# 
  1186  0215                     	;# 
  1187  0215                     	;# 
  1188  0216                     	;# 
  1189  0217                     	;# 
  1190  0291                     	;# 
  1191  0291                     	;# 
  1192  0292                     	;# 
  1193  0293                     	;# 
  1194  0294                     	;# 
  1195  0295                     	;# 
  1196  0295                     	;# 
  1197  0296                     	;# 
  1198  0298                     	;# 
  1199  0298                     	;# 
  1200  0299                     	;# 
  1201  029A                     	;# 
  1202  029B                     	;# 
  1203  029C                     	;# 
  1204  029C                     	;# 
  1205  029D                     	;# 
  1206  029E                     	;# 
  1207  029F                     	;# 
  1208  0311                     	;# 
  1209  0311                     	;# 
  1210  0312                     	;# 
  1211  0313                     	;# 
  1212  0314                     	;# 
  1213  0315                     	;# 
  1214  0315                     	;# 
  1215  0316                     	;# 
  1216  0318                     	;# 
  1217  0318                     	;# 
  1218  0319                     	;# 
  1219  031A                     	;# 
  1220  031C                     	;# 
  1221  031C                     	;# 
  1222  031D                     	;# 
  1223  031E                     	;# 
  1224  0394                     	;# 
  1225  0395                     	;# 
  1226  0396                     	;# 
  1227  0415                     	;# 
  1228  0416                     	;# 
  1229  0417                     	;# 
  1230  041C                     	;# 
  1231  041D                     	;# 
  1232  041E                     	;# 
  1233  0791                     	;# 
  1234  0792                     	;# 
  1235  0793                     	;# 
  1236  0794                     	;# 
  1237  0795                     	;# 
  1238  0798                     	;# 
  1239  0799                     	;# 
  1240  07A0                     	;# 
  1241  07A1                     	;# 
  1242  07A3                     	;# 
  1243  07A4                     	;# 
  1244  07A6                     	;# 
  1245  07A7                     	;# 
  1246  07A9                     	;# 
  1247  07AA                     	;# 
  1248  0FE4                     	;# 
  1249  0FE5                     	;# 
  1250  0FE6                     	;# 
  1251  0FE7                     	;# 
  1252  0FE8                     	;# 
  1253  0FE9                     	;# 
  1254  0FEA                     	;# 
  1255  0FEB                     	;# 
  1256  0FED                     	;# 
  1257  0FEE                     	;# 
  1258  0FEF                     	;# 
  1259                           
  1260                           	psect	idataBANK1
  1261  1C3C                     __pidataBANK1:
  1262                           
  1263                           ;initializer for lcd_set_cursor@F2624
  1264  1C3C  3400               	retlw	0
  1265  1C3D  3440               	retlw	64
  1266  1C3E  3414               	retlw	20
  1267  1C3F  3454               	retlw	84
  1268                           
  1269                           	psect	stringtext1
  1270  2037                     __pstringtext1:
  1271  2037                     __powers_:
  1272  2037  3400               	retlw	0
  1273  2038  3400               	retlw	0
  1274  2039  3480               	retlw	128
  1275  203A  343F               	retlw	63
  1276  203B  3400               	retlw	0
  1277  203C  3400               	retlw	0
  1278  203D  3420               	retlw	32
  1279  203E  3441               	retlw	65
  1280  203F  3400               	retlw	0
  1281  2040  3400               	retlw	0
  1282  2041  34C8               	retlw	200
  1283  2042  3442               	retlw	66
  1284  2043  3400               	retlw	0
  1285  2044  3400               	retlw	0
  1286  2045  347A               	retlw	122
  1287  2046  3444               	retlw	68
  1288  2047  3400               	retlw	0
  1289  2048  3440               	retlw	64
  1290  2049  341C               	retlw	28
  1291  204A  3446               	retlw	70
  1292  204B  3400               	retlw	0
  1293  204C  3450               	retlw	80
  1294  204D  34C3               	retlw	195
  1295  204E  3447               	retlw	71
  1296  204F  3400               	retlw	0
  1297  2050  3424               	retlw	36
  1298  2051  3474               	retlw	116
  1299  2052  3449               	retlw	73
  1300  2053  3480               	retlw	128
  1301  2054  3496               	retlw	150
  1302  2055  3418               	retlw	24
  1303  2056  344B               	retlw	75
  1304  2057  3420               	retlw	32
  1305  2058  34BC               	retlw	188
  1306  2059  34BE               	retlw	190
  1307  205A  344C               	retlw	76
  1308  205B  3428               	retlw	40
  1309  205C  346B               	retlw	107
  1310  205D  346E               	retlw	110
  1311  205E  344E               	retlw	78
  1312  205F  34F9               	retlw	249
  1313  2060  3402               	retlw	2
  1314  2061  3415               	retlw	21
  1315  2062  3450               	retlw	80
  1316  2063  34EC               	retlw	236
  1317  2064  3478               	retlw	120
  1318  2065  34AD               	retlw	173
  1319  2066  3460               	retlw	96
  1320  2067  34CA               	retlw	202
  1321  2068  34F2               	retlw	242
  1322  2069  3449               	retlw	73
  1323  206A  3471               	retlw	113
  1324  206B                     __end_of__powers_:
  1325                           
  1326                           	psect	stringtext2
  1327  206B                     __pstringtext2:
  1328  206B                     __npowers_:
  1329  206B  3400               	retlw	0
  1330  206C  3400               	retlw	0
  1331  206D  3480               	retlw	128
  1332  206E  343F               	retlw	63
  1333  206F  34CD               	retlw	205
  1334  2070  34CC               	retlw	204
  1335  2071  34CC               	retlw	204
  1336  2072  343D               	retlw	61
  1337  2073  340A               	retlw	10
  1338  2074  34D7               	retlw	215
  1339  2075  3423               	retlw	35
  1340  2076  343C               	retlw	60
  1341  2077  346F               	retlw	111
  1342  2078  3412               	retlw	18
  1343  2079  3483               	retlw	131
  1344  207A  343A               	retlw	58
  1345  207B  3417               	retlw	23
  1346  207C  34B7               	retlw	183
  1347  207D  34D1               	retlw	209
  1348  207E  3438               	retlw	56
  1349  207F  34AC               	retlw	172
  1350  2080  34C5               	retlw	197
  1351  2081  3427               	retlw	39
  1352  2082  3437               	retlw	55
  1353  2083  34BD               	retlw	189
  1354  2084  3437               	retlw	55
  1355  2085  3486               	retlw	134
  1356  2086  3435               	retlw	53
  1357  2087  3495               	retlw	149
  1358  2088  34BF               	retlw	191
  1359  2089  34D6               	retlw	214
  1360  208A  3433               	retlw	51
  1361  208B  3477               	retlw	119
  1362  208C  34CC               	retlw	204
  1363  208D  342B               	retlw	43
  1364  208E  3432               	retlw	50
  1365  208F  345F               	retlw	95
  1366  2090  3470               	retlw	112
  1367  2091  3489               	retlw	137
  1368  2092  3430               	retlw	48
  1369  2093  34FF               	retlw	255
  1370  2094  34E6               	retlw	230
  1371  2095  34DB               	retlw	219
  1372  2096  342E               	retlw	46
  1373  2097  3408               	retlw	8
  1374  2098  34E5               	retlw	229
  1375  2099  343C               	retlw	60
  1376  209A  341E               	retlw	30
  1377  209B  3460               	retlw	96
  1378  209C  3442               	retlw	66
  1379  209D  34A2               	retlw	162
  1380  209E  340D               	retlw	13
  1381  209F                     __end_of__npowers_:
  1382                           
  1383                           	psect	stringtext3
  1384  2000                     __pstringtext3:
  1385  2000                     _dpowers:
  1386  2000  3401               	retlw	1
  1387  2001  3400               	retlw	0
  1388  2002  3400               	retlw	0
  1389  2003  3400               	retlw	0
  1390  2004  340A               	retlw	10
  1391  2005  3400               	retlw	0
  1392  2006  3400               	retlw	0
  1393  2007  3400               	retlw	0
  1394  2008  3464               	retlw	100
  1395  2009  3400               	retlw	0
  1396  200A  3400               	retlw	0
  1397  200B  3400               	retlw	0
  1398  200C  34E8               	retlw	232
  1399  200D  3403               	retlw	3
  1400  200E  3400               	retlw	0
  1401  200F  3400               	retlw	0
  1402  2010  3410               	retlw	16
  1403  2011  3427               	retlw	39
  1404  2012  3400               	retlw	0
  1405  2013  3400               	retlw	0
  1406  2014  34A0               	retlw	160
  1407  2015  3486               	retlw	134
  1408  2016  3401               	retlw	1
  1409  2017  3400               	retlw	0
  1410  2018  3440               	retlw	64
  1411  2019  3442               	retlw	66
  1412  201A  340F               	retlw	15
  1413  201B  3400               	retlw	0
  1414  201C  3480               	retlw	128
  1415  201D  3496               	retlw	150
  1416  201E  3498               	retlw	152
  1417  201F  3400               	retlw	0
  1418  2020  3400               	retlw	0
  1419  2021  34E1               	retlw	225
  1420  2022  34F5               	retlw	245
  1421  2023  3405               	retlw	5
  1422  2024  3400               	retlw	0
  1423  2025  34CA               	retlw	202
  1424  2026  349A               	retlw	154
  1425  2027  343B               	retlw	59
  1426  2028                     __end_of_dpowers:
  1427  000C                     _PORTAbits	set	12
  1428  0095                     _OPTION_REGbits	set	149
  1429  008D                     _TRISB	set	141
  1430  008C                     _TRISA	set	140
  1431  0097                     _WDTCON	set	151
  1432  0098                     _OSCTUNE	set	152
  1433  0099                     _OSCCON	set	153
  1434  010D                     _LATB	set	269
  1435  010C                     _LATA	set	268
  1436  0116                     _BORCON	set	278
  1437  018C                     _ANSELA	set	396
  1438  018D                     _ANSELB	set	397
  1439  0215                     _SSPCON1bits	set	533
  1440  0214                     _SSPSTATbits	set	532
  1441  0211                     _SSPBUF	set	529
  1442  0216                     _SSPCON2bits	set	534
  1443  0214                     _SSPSTAT	set	532
  1444  0216                     _SSPCON2	set	534
  1445  0215                     _SSPCON1	set	533
  1446  0212                     _SSPADD	set	530
  1447  020D                     _WPUB	set	525
  1448  2028                     STR_4:
  1449  2028  3444               	retlw	68	;'D'
  1450  2029  3469               	retlw	105	;'i'
  1451  202A  3476               	retlw	118	;'v'
  1452  202B  3469               	retlw	105	;'i'
  1453  202C  3464               	retlw	100	;'d'
  1454  202D  3465               	retlw	101	;'e'
  1455  202E  3420               	retlw	32	;' '
  1456  202F  3476               	retlw	118	;'v'
  1457  2030  3461               	retlw	97	;'a'
  1458  2031  346C               	retlw	108	;'l'
  1459  2032  343A               	retlw	58	;':'
  1460  2033  3420               	retlw	32	;' '
  1461  2034  3425               	retlw	37	;'%'
  1462  2035  3464               	retlw	100	;'d'
  1463  2036  3400               	retlw	0
  1464                           
  1465                           	psect	stringtext4
  1466  209F                     __pstringtext4:
  1467  209F                     STR_2:
  1468  209F  344C               	retlw	76	;'L'
  1469  20A0  346F               	retlw	111	;'o'
  1470  20A1  3461               	retlw	97	;'a'
  1471  20A2  3464               	retlw	100	;'d'
  1472  20A3  3420               	retlw	32	;' '
  1473  20A4  3463               	retlw	99	;'c'
  1474  20A5  3465               	retlw	101	;'e'
  1475  20A6  346C               	retlw	108	;'l'
  1476  20A7  346C               	retlw	108	;'l'
  1477  20A8  3420               	retlw	32	;' '
  1478  20A9  3455               	retlw	85	;'U'
  1479  20AA  346E               	retlw	110	;'n'
  1480  20AB  3469               	retlw	105	;'i'
  1481  20AC  3474               	retlw	116	;'t'
  1482  20AD  3400               	retlw	0
  1483                           
  1484                           	psect	stringtext5
  1485  20AE                     __pstringtext5:
  1486  20AE                     STR_1:
  1487  20AE  3449               	retlw	73	;'I'
  1488  20AF  346E               	retlw	110	;'n'
  1489  20B0  3469               	retlw	105	;'i'
  1490  20B1  3474               	retlw	116	;'t'
  1491  20B2  3469               	retlw	105	;'i'
  1492  20B3  3461               	retlw	97	;'a'
  1493  20B4  346C               	retlw	108	;'l'
  1494  20B5  3469               	retlw	105	;'i'
  1495  20B6  347A               	retlw	122	;'z'
  1496  20B7  3465               	retlw	101	;'e'
  1497  20B8  3400               	retlw	0
  1498                           
  1499                           	psect	stringtext6
  1500  20B9                     __pstringtext6:
  1501  20B9                     STR_6:
  1502  20B9  3425               	retlw	37	;'%'
  1503  20BA  3433               	retlw	51	;'3'
  1504  20BB  342E               	retlw	46	;'.'
  1505  20BC  3432               	retlw	50	;'2'
  1506  20BD  3466               	retlw	102	;'f'
  1507  20BE  3420               	retlw	32	;' '
  1508  20BF  3467               	retlw	103	;'g'
  1509  20C0  3472               	retlw	114	;'r'
  1510  20C1  3461               	retlw	97	;'a'
  1511  20C2  346D               	retlw	109	;'m'
  1512  20C3  3400               	retlw	0
  1513                           
  1514                           	psect	stringtext7
  1515  20C4                     __pstringtext7:
  1516  20C4                     STR_3:
  1517  20C4  3425               	retlw	37	;'%'
  1518  20C5  346C               	retlw	108	;'l'
  1519  20C6  3475               	retlw	117	;'u'
  1520  20C7  3420               	retlw	32	;' '
  1521  20C8  3476               	retlw	118	;'v'
  1522  20C9  3461               	retlw	97	;'a'
  1523  20CA  346C               	retlw	108	;'l'
  1524  20CB  3420               	retlw	32	;' '
  1525  20CC  3400               	retlw	0
  1526                           
  1527                           	psect	stringtext8
  1528  20CD                     __pstringtext8:
  1529  20CD                     STR_5:
  1530  20CD  3425               	retlw	37	;'%'
  1531  20CE  346C               	retlw	108	;'l'
  1532  20CF  3475               	retlw	117	;'u'
  1533  20D0  3420               	retlw	32	;' '
  1534  20D1  3476               	retlw	118	;'v'
  1535  20D2  3461               	retlw	97	;'a'
  1536  20D3  346C               	retlw	108	;'l'
  1537  20D4  3400               	retlw	0
  1538                           
  1539                           	psect	stringtext9
  1540  0000                     __pstringtext9:
  1541  20CB                     
  1542                           	psect	cinit
  1543  07DA                     start_initialization:	
  1544                           ; #config settings
  1545                           
  1546  07DA                     __initialization:
  1547                           
  1548                           ; Initialize objects allocated to BANK1
  1549  07DA  0021               	movlb	1	; select bank1
  1550  07DB  319C  243C  3187   	fcall	__pidataBANK1	;fetch initializer
  1551  07DE  00E4               	movwf	__pdataBANK1& (0+127)
  1552  07DF  319C  243D  3187   	fcall	__pidataBANK1+1	;fetch initializer
  1553  07E2  00E5               	movwf	(__pdataBANK1+1)& (0+127)
  1554  07E3  319C  243E  3187   	fcall	__pidataBANK1+2	;fetch initializer
  1555  07E6  00E6               	movwf	(__pdataBANK1+2)& (0+127)
  1556  07E7  319C  243F  3187   	fcall	__pidataBANK1+3	;fetch initializer
  1557  07EA  00E7               	movwf	(__pdataBANK1+3)& (0+127)
  1558                           
  1559                           ; Clear objects allocated to BANK0
  1560  07EB  0020               	movlb	0	; select bank0
  1561  07EC  01EF               	clrf	__pbssBANK0& (0+127)
  1562                           
  1563                           ; Clear objects allocated to BANK1
  1564  07ED  30CC               	movlw	low __pbssBANK1
  1565  07EE  0084               	movwf	4
  1566  07EF  3000               	movlw	high __pbssBANK1
  1567  07F0  0085               	movwf	5
  1568  07F1  3018               	movlw	24
  1569  07F2  319C  2446  3187   	fcall	clear_ram0
  1570                           
  1571                           ; Clear objects allocated to BANK2
  1572  07F5  3020               	movlw	low __pbssBANK2
  1573  07F6  0084               	movwf	4
  1574  07F7  3001               	movlw	high __pbssBANK2
  1575  07F8  0085               	movwf	5
  1576  07F9  3010               	movlw	16
  1577  07FA  319C  2446  3187   	fcall	clear_ram0
  1578  07FD                     end_of_initialization:	
  1579                           ;End of C runtime variable initialization code
  1580                           
  1581  07FD                     __end_of__initialization:
  1582  07FD  0020               	movlb	0
  1583  07FE  3193  2B93         	ljmp	_main	;jump to C main() function
  1584                           
  1585                           	psect	bssBANK0
  1586  006F                     __pbssBANK0:
  1587  006F                     __backlightval:
  1588  006F                     	ds	1
  1589                           
  1590                           	psect	bssBANK1
  1591  00CC                     __pbssBANK1:
  1592  00CC                     _weight_zero:
  1593  00CC                     	ds	4
  1594  00D0                     _weight_dat:
  1595  00D0                     	ds	4
  1596  00D4                     _valstr:
  1597  00D4                     	ds	16
  1598                           
  1599                           	psect	dataBANK1
  1600  00E4                     __pdataBANK1:
  1601  00E4                     lcd_set_cursor@F2624:
  1602  00E4                     	ds	4
  1603                           
  1604                           	psect	bssBANK2
  1605  0120                     __pbssBANK2:
  1606  0120                     _gramstr:
  1607  0120                     	ds	16
  1608                           
  1609                           	psect	clrtext
  1610  1C46                     clear_ram0:	
  1611                           ;	Called with FSR0 containing the base address, and
  1612                           ;	WREG with the size to clear
  1613                           
  1614  1C46  0064               	clrwdt	;clear the watchdog before getting into this loop
  1615  1C47                     clrloop0:
  1616  1C47  0180               	clrf	0	;clear RAM location pointed to by FSR
  1617  1C48  3101               	addfsr 0,1
  1618  1C49  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1619  1C4A  2C47               	goto	clrloop0	;have we reached the end yet?
  1620  1C4B  3400               	retlw	0	;all done for this memory range, return
  1621                           
  1622                           	psect	cstackBANK1
  1623  00A0                     __pcstackBANK1:
  1624  00A0                     ?_sprintf:
  1625  00A0                     sprintf@sp:	
  1626                           ; 2 bytes @ 0x0
  1627                           
  1628                           
  1629                           ; 2 bytes @ 0x0
  1630  00A0                     	ds	2
  1631  00A2                     sprintf@f:
  1632                           
  1633                           ; 2 bytes @ 0x2
  1634  00A2                     	ds	6
  1635  00A8                     ??_sprintf:
  1636                           
  1637                           ; 1 bytes @ 0x8
  1638  00A8                     	ds	6
  1639  00AE                     _sprintf$1082:
  1640                           
  1641                           ; 4 bytes @ 0xE
  1642  00AE                     	ds	4
  1643  00B2                     sprintf@ap:
  1644                           
  1645                           ; 1 bytes @ 0x12
  1646  00B2                     	ds	1
  1647  00B3                     sprintf@width:
  1648                           
  1649                           ; 2 bytes @ 0x13
  1650  00B3                     	ds	2
  1651  00B5                     sprintf@tmpval:
  1652                           
  1653                           ; 4 bytes @ 0x15
  1654  00B5                     	ds	4
  1655  00B9                     sprintf@flag:
  1656                           
  1657                           ; 2 bytes @ 0x19
  1658  00B9                     	ds	2
  1659  00BB                     sprintf@eexp:
  1660                           
  1661                           ; 2 bytes @ 0x1B
  1662  00BB                     	ds	2
  1663  00BD                     sprintf@val:
  1664                           
  1665                           ; 4 bytes @ 0x1D
  1666  00BD                     	ds	4
  1667  00C1                     sprintf@fval:
  1668                           
  1669                           ; 4 bytes @ 0x21
  1670  00C1                     	ds	4
  1671  00C5                     sprintf@prec:
  1672                           
  1673                           ; 2 bytes @ 0x25
  1674  00C5                     	ds	2
  1675  00C7                     sprintf@c:
  1676                           
  1677                           ; 1 bytes @ 0x27
  1678  00C7                     	ds	1
  1679  00C8                     main@weight_gram:
  1680                           
  1681                           ; 4 bytes @ 0x28
  1682  00C8                     	ds	4
  1683                           
  1684                           	psect	cstackCOMMON
  1685  0070                     __pcstackCOMMON:
  1686  0070                     ?_isdigit:
  1687  0070                     ?___fleq:	
  1688                           ; 1 bit 
  1689                           
  1690  0070                     ?___flge:	
  1691                           ; 1 bit 
  1692                           
  1693  0070                     ?_PIN_MANAGER_Initialize:	
  1694                           ; 1 bit 
  1695                           
  1696  0070                     ??_PIN_MANAGER_Initialize:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  0070                     ?_OSCILLATOR_Initialize:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0070                     ??_OSCILLATOR_Initialize:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0070                     ?_WDT_Initialize:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0070                     ??_WDT_Initialize:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0070                     ?_lcd_init:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0070                     ?_lcd_backlight:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0070                     ?_lcd_clear:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0070                     ??_isdigit:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0070                     ?_SYSTEM_Initialize:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0070                     ??_SYSTEM_Initialize:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0070                     ?_main:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0070                     ?_set_CELL_CLK_LOW:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0070                     ??_set_CELL_CLK_LOW:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738  0070                     ?_set_CELL_CLK_HIGH:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741  0070                     ??_set_CELL_CLK_HIGH:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  0070                     ?_i2c_wait:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  0070                     ??_i2c_wait:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  0070                     ?_i2c_start:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753  0070                     ??_i2c_start:	
  1754                           ; 1 bytes @ 0x0
  1755                           
  1756  0070                     ?_i2c_stop:	
  1757                           ; 1 bytes @ 0x0
  1758                           
  1759  0070                     ??_i2c_stop:	
  1760                           ; 1 bytes @ 0x0
  1761                           
  1762  0070                     ?_i2c_write:	
  1763                           ; 1 bytes @ 0x0
  1764                           
  1765  0070                     ??_i2c_write:	
  1766                           ; 1 bytes @ 0x0
  1767                           
  1768  0070                     ?_lcd_cmd:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771  0070                     ?__Umul8_16:	
  1772                           ; 1 bytes @ 0x0
  1773                           
  1774  0070                     ?_get_CELL_DAT_VAL:	
  1775                           ; 2 bytes @ 0x0
  1776                           
  1777  0070                     ?___wmul:	
  1778                           ; 2 bytes @ 0x0
  1779                           
  1780  0070                     ?___awmod:	
  1781                           ; 2 bytes @ 0x0
  1782                           
  1783  0070                     ?___lwmod:	
  1784                           ; 2 bytes @ 0x0
  1785                           
  1786  0070                     ?__tdiv_to_l_:	
  1787                           ; 2 bytes @ 0x0
  1788                           
  1789  0070                     ?__div_to_l_:	
  1790                           ; 4 bytes @ 0x0
  1791                           
  1792  0070                     ?___lldiv:	
  1793                           ; 4 bytes @ 0x0
  1794                           
  1795  0070                     ?___flneg:	
  1796                           ; 4 bytes @ 0x0
  1797                           
  1798  0070                     ?___fldiv:	
  1799                           ; 4 bytes @ 0x0
  1800                           
  1801  0070                     ?___xxtofl:	
  1802                           ; 4 bytes @ 0x0
  1803                           
  1804  0070                     i2c_write@data:	
  1805                           ; 4 bytes @ 0x0
  1806                           
  1807  0070                     __Umul8_16@multiplicand:	
  1808                           ; 1 bytes @ 0x0
  1809                           
  1810  0070                     _isdigit$886:	
  1811                           ; 1 bytes @ 0x0
  1812                           
  1813  0070                     ___wmul@multiplier:	
  1814                           ; 1 bytes @ 0x0
  1815                           
  1816  0070                     ___awmod@divisor:	
  1817                           ; 2 bytes @ 0x0
  1818                           
  1819  0070                     ___lwmod@divisor:	
  1820                           ; 2 bytes @ 0x0
  1821                           
  1822  0070                     ___lldiv@divisor:	
  1823                           ; 2 bytes @ 0x0
  1824                           
  1825  0070                     __div_to_l_@f1:	
  1826                           ; 4 bytes @ 0x0
  1827                           
  1828  0070                     ___fleq@ff1:	
  1829                           ; 4 bytes @ 0x0
  1830                           
  1831  0070                     ___flge@ff1:	
  1832                           ; 4 bytes @ 0x0
  1833                           
  1834  0070                     ___flneg@f1:	
  1835                           ; 4 bytes @ 0x0
  1836                           
  1837  0070                     __tdiv_to_l_@f1:	
  1838                           ; 4 bytes @ 0x0
  1839                           
  1840  0070                     ___fldiv@a:	
  1841                           ; 4 bytes @ 0x0
  1842                           
  1843  0070                     ___xxtofl@val:	
  1844                           ; 4 bytes @ 0x0
  1845                           
  1846                           
  1847                           ; 4 bytes @ 0x0
  1848  0070                     	ds	1
  1849  0071                     ??_lcd_cmd:
  1850  0071                     lcd_cmd@cmd:	
  1851                           ; 1 bytes @ 0x1
  1852                           
  1853  0071                     isdigit@c:	
  1854                           ; 1 bytes @ 0x1
  1855                           
  1856                           
  1857                           ; 1 bytes @ 0x1
  1858  0071                     	ds	1
  1859  0072                     ??_lcd_init:
  1860  0072                     ??_lcd_backlight:	
  1861                           ; 1 bytes @ 0x2
  1862                           
  1863  0072                     ?_command:	
  1864                           ; 1 bytes @ 0x2
  1865                           
  1866  0072                     ??__Umul8_16:	
  1867                           ; 1 bytes @ 0x2
  1868                           
  1869  0072                     ??_get_CELL_DAT_VAL:	
  1870                           ; 1 bytes @ 0x2
  1871                           
  1872  0072                     command@mode:	
  1873                           ; 1 bytes @ 0x2
  1874                           
  1875  0072                     ___wmul@multiplicand:	
  1876                           ; 1 bytes @ 0x2
  1877                           
  1878  0072                     ___awmod@dividend:	
  1879                           ; 2 bytes @ 0x2
  1880                           
  1881  0072                     ___lwmod@dividend:	
  1882                           ; 2 bytes @ 0x2
  1883                           
  1884                           
  1885                           ; 2 bytes @ 0x2
  1886  0072                     	ds	1
  1887  0073                     ??_command:
  1888                           
  1889                           ; 1 bytes @ 0x3
  1890  0073                     	ds	1
  1891  0074                     ??___wmul:
  1892  0074                     ??___awmod:	
  1893                           ; 1 bytes @ 0x4
  1894                           
  1895  0074                     ??___flneg:	
  1896                           ; 1 bytes @ 0x4
  1897                           
  1898  0074                     ??___lwmod:	
  1899                           ; 1 bytes @ 0x4
  1900                           
  1901  0074                     ??___xxtofl:	
  1902                           ; 1 bytes @ 0x4
  1903                           
  1904  0074                     ___wmul@product:	
  1905                           ; 1 bytes @ 0x4
  1906                           
  1907  0074                     __Umul8_16@product:	
  1908                           ; 2 bytes @ 0x4
  1909                           
  1910  0074                     ___lldiv@dividend:	
  1911                           ; 2 bytes @ 0x4
  1912                           
  1913  0074                     __div_to_l_@f2:	
  1914                           ; 4 bytes @ 0x4
  1915                           
  1916  0074                     ___fleq@ff2:	
  1917                           ; 4 bytes @ 0x4
  1918                           
  1919  0074                     ___flge@ff2:	
  1920                           ; 4 bytes @ 0x4
  1921                           
  1922  0074                     __tdiv_to_l_@f2:	
  1923                           ; 4 bytes @ 0x4
  1924                           
  1925  0074                     ___fldiv@b:	
  1926                           ; 4 bytes @ 0x4
  1927                           
  1928                           
  1929                           ; 4 bytes @ 0x4
  1930  0074                     	ds	1
  1931  0075                     command@val:
  1932  0075                     ___awmod@counter:	
  1933                           ; 1 bytes @ 0x5
  1934                           
  1935  0075                     ___lwmod@counter:	
  1936                           ; 1 bytes @ 0x5
  1937                           
  1938                           
  1939                           ; 1 bytes @ 0x5
  1940  0075                     	ds	1
  1941  0076                     ?___lwdiv:
  1942  0076                     command@highnib:	
  1943                           ; 2 bytes @ 0x6
  1944                           
  1945  0076                     ___awmod@sign:	
  1946                           ; 1 bytes @ 0x6
  1947                           
  1948  0076                     ___lwdiv@divisor:	
  1949                           ; 1 bytes @ 0x6
  1950                           
  1951  0076                     __Umul8_16@word_mpld:	
  1952                           ; 2 bytes @ 0x6
  1953                           
  1954                           
  1955                           ; 2 bytes @ 0x6
  1956  0076                     	ds	1
  1957  0077                     ?___awdiv:
  1958  0077                     command@lownib:	
  1959                           ; 2 bytes @ 0x7
  1960                           
  1961  0077                     ___awdiv@divisor:	
  1962                           ; 1 bytes @ 0x7
  1963                           
  1964                           
  1965                           ; 2 bytes @ 0x7
  1966  0077                     	ds	1
  1967  0078                     ?_lcd_set_cursor:
  1968  0078                     ?_lcd_print:	
  1969                           ; 1 bytes @ 0x8
  1970                           
  1971  0078                     ??__tdiv_to_l_:	
  1972                           ; 1 bytes @ 0x8
  1973                           
  1974  0078                     ??__div_to_l_:	
  1975                           ; 1 bytes @ 0x8
  1976                           
  1977  0078                     ??___lldiv:	
  1978                           ; 1 bytes @ 0x8
  1979                           
  1980  0078                     ??___fleq:	
  1981                           ; 1 bytes @ 0x8
  1982                           
  1983  0078                     ??___flge:	
  1984                           ; 1 bytes @ 0x8
  1985                           
  1986  0078                     ??___fldiv:	
  1987                           ; 1 bytes @ 0x8
  1988                           
  1989  0078                     lcd_set_cursor@row:	
  1990                           ; 1 bytes @ 0x8
  1991                           
  1992  0078                     __Umul8_16@multiplier:	
  1993                           ; 1 bytes @ 0x8
  1994                           
  1995  0078                     ___xxtofl@sign:	
  1996                           ; 1 bytes @ 0x8
  1997                           
  1998  0078                     lcd_print@str:	
  1999                           ; 1 bytes @ 0x8
  2000                           
  2001  0078                     ___lwdiv@dividend:	
  2002                           ; 2 bytes @ 0x8
  2003                           
  2004                           
  2005                           ; 2 bytes @ 0x8
  2006  0078                     	ds	1
  2007  0079                     ??_lcd_set_cursor:
  2008  0079                     ___xxtofl@exp:	
  2009                           ; 1 bytes @ 0x9
  2010                           
  2011  0079                     ___awdiv@dividend:	
  2012                           ; 1 bytes @ 0x9
  2013                           
  2014  0079                     ___lldiv@quotient:	
  2015                           ; 2 bytes @ 0x9
  2016                           
  2017                           
  2018                           ; 4 bytes @ 0x9
  2019  0079                     	ds	1
  2020  007A                     ??_lcd_print:
  2021  007A                     ??___lwdiv:	
  2022                           ; 1 bytes @ 0xA
  2023                           
  2024  007A                     ___xxtofl@arg:	
  2025                           ; 1 bytes @ 0xA
  2026                           
  2027                           
  2028                           ; 4 bytes @ 0xA
  2029  007A                     	ds	1
  2030  007B                     ??___awdiv:
  2031  007B                     lcd_print@cmd:	
  2032                           ; 1 bytes @ 0xB
  2033                           
  2034  007B                     ___lwdiv@quotient:	
  2035                           ; 1 bytes @ 0xB
  2036                           
  2037                           
  2038                           ; 2 bytes @ 0xB
  2039  007B                     	ds	1
  2040  007C                     ??_lcd_clear:
  2041                           
  2042                           ; 1 bytes @ 0xC
  2043  007C                     	ds	1
  2044  007D                     ___lldiv@counter:
  2045  007D                     ___lwdiv@counter:	
  2046                           ; 1 bytes @ 0xD
  2047                           
  2048                           
  2049                           ; 1 bytes @ 0xD
  2050  007D                     	ds	1
  2051  007E                     ??___flsub:
  2052                           
  2053                           	psect	cstackBANK0
  2054  0020                     __pcstackBANK0:	
  2055                           ; 1 bytes @ 0xE
  2056                           
  2057  0020                     ?_get_scale_val:
  2058  0020                     ?___llmod:	
  2059                           ; 4 bytes @ 0x0
  2060                           
  2061  0020                     ___awdiv@counter:	
  2062                           ; 4 bytes @ 0x0
  2063                           
  2064  0020                     get_scale_val@n:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0020                     lcd_set_cursor@row_offsets:	
  2068                           ; 2 bytes @ 0x0
  2069                           
  2070  0020                     __div_to_l_@quot:	
  2071                           ; 4 bytes @ 0x0
  2072                           
  2073  0020                     __tdiv_to_l_@quot:	
  2074                           ; 4 bytes @ 0x0
  2075                           
  2076  0020                     ___llmod@divisor:	
  2077                           ; 4 bytes @ 0x0
  2078                           
  2079  0020                     ___fldiv@rem:	
  2080                           ; 4 bytes @ 0x0
  2081                           
  2082                           
  2083                           ; 4 bytes @ 0x0
  2084  0020                     	ds	1
  2085  0021                     ___awdiv@sign:
  2086                           
  2087                           ; 1 bytes @ 0x1
  2088  0021                     	ds	1
  2089  0022                     ___awdiv@quotient:
  2090                           
  2091                           ; 2 bytes @ 0x2
  2092  0022                     	ds	2
  2093  0024                     ??_get_scale_val:
  2094  0024                     ?___flmul:	
  2095                           ; 1 bytes @ 0x4
  2096                           
  2097  0024                     lcd_set_cursor@col:	
  2098                           ; 4 bytes @ 0x4
  2099                           
  2100  0024                     __div_to_l_@cntr:	
  2101                           ; 1 bytes @ 0x4
  2102                           
  2103  0024                     __tdiv_to_l_@cntr:	
  2104                           ; 1 bytes @ 0x4
  2105                           
  2106  0024                     ___fldiv@sign:	
  2107                           ; 1 bytes @ 0x4
  2108                           
  2109  0024                     ___llmod@dividend:	
  2110                           ; 1 bytes @ 0x4
  2111                           
  2112  0024                     ___flmul@b:	
  2113                           ; 4 bytes @ 0x4
  2114                           
  2115                           
  2116                           ; 4 bytes @ 0x4
  2117  0024                     	ds	1
  2118  0025                     lcd_set_cursor@cmd:
  2119  0025                     __div_to_l_@exp1:	
  2120                           ; 1 bytes @ 0x5
  2121                           
  2122  0025                     __tdiv_to_l_@exp1:	
  2123                           ; 1 bytes @ 0x5
  2124                           
  2125  0025                     ___fldiv@new_exp:	
  2126                           ; 1 bytes @ 0x5
  2127                           
  2128                           
  2129                           ; 2 bytes @ 0x5
  2130  0025                     	ds	1
  2131  0026                     lcd_clear@row:
  2132                           
  2133                           ; 1 bytes @ 0x6
  2134  0026                     	ds	1
  2135  0027                     lcd_clear@col:
  2136  0027                     ___fldiv@grs:	
  2137                           ; 1 bytes @ 0x7
  2138                           
  2139                           
  2140                           ; 4 bytes @ 0x7
  2141  0027                     	ds	1
  2142  0028                     ??___llmod:
  2143  0028                     get_scale_val@weight_add:	
  2144                           ; 1 bytes @ 0x8
  2145                           
  2146  0028                     ___flmul@a:	
  2147                           ; 4 bytes @ 0x8
  2148                           
  2149                           
  2150                           ; 4 bytes @ 0x8
  2151  0028                     	ds	1
  2152  0029                     ___llmod@counter:
  2153                           
  2154                           ; 1 bytes @ 0x9
  2155  0029                     	ds	2
  2156  002B                     ___fldiv@bexp:
  2157                           
  2158                           ; 1 bytes @ 0xB
  2159  002B                     	ds	1
  2160  002C                     ??___flmul:
  2161  002C                     get_scale_val@j:	
  2162                           ; 1 bytes @ 0xC
  2163                           
  2164  002C                     ___fldiv@aexp:	
  2165                           ; 1 bytes @ 0xC
  2166                           
  2167                           
  2168                           ; 1 bytes @ 0xC
  2169  002C                     	ds	1
  2170  002D                     ?_scale_convert_gram:
  2171  002D                     get_scale_val@weight_count:	
  2172                           ; 4 bytes @ 0xD
  2173                           
  2174  002D                     scale_convert_gram@count:	
  2175                           ; 4 bytes @ 0xD
  2176                           
  2177                           
  2178                           ; 4 bytes @ 0xD
  2179  002D                     	ds	4
  2180  0031                     ??_scale_convert_gram:
  2181  0031                     get_scale_val@i:	
  2182                           ; 1 bytes @ 0x11
  2183                           
  2184  0031                     ___flmul@sign:	
  2185                           ; 1 bytes @ 0x11
  2186                           
  2187                           
  2188                           ; 1 bytes @ 0x11
  2189  0031                     	ds	1
  2190  0032                     ___flmul@grs:
  2191                           
  2192                           ; 4 bytes @ 0x12
  2193  0032                     	ds	3
  2194  0035                     scale_convert_gram@temp:
  2195                           
  2196                           ; 4 bytes @ 0x15
  2197  0035                     	ds	1
  2198  0036                     ___flmul@aexp:
  2199                           
  2200                           ; 1 bytes @ 0x16
  2201  0036                     	ds	1
  2202  0037                     ___flmul@bexp:
  2203                           
  2204                           ; 1 bytes @ 0x17
  2205  0037                     	ds	1
  2206  0038                     ___flmul@prod:
  2207                           
  2208                           ; 4 bytes @ 0x18
  2209  0038                     	ds	4
  2210  003C                     ___flmul@temp:
  2211                           
  2212                           ; 2 bytes @ 0x1C
  2213  003C                     	ds	2
  2214  003E                     ?_fround:
  2215  003E                     ?_scale:	
  2216                           ; 4 bytes @ 0x1E
  2217                           
  2218                           
  2219                           ; 4 bytes @ 0x1E
  2220  003E                     	ds	4
  2221  0042                     ??_fround:
  2222  0042                     ??_scale:	
  2223                           ; 1 bytes @ 0x22
  2224                           
  2225                           
  2226                           ; 1 bytes @ 0x22
  2227  0042                     	ds	6
  2228  0048                     _fround$1080:
  2229                           
  2230                           ; 4 bytes @ 0x28
  2231  0048                     	ds	4
  2232  004C                     _fround$1079:
  2233                           
  2234                           ; 4 bytes @ 0x2C
  2235  004C                     	ds	2
  2236  004E                     _scale$1081:
  2237                           
  2238                           ; 4 bytes @ 0x2E
  2239  004E                     	ds	2
  2240  0050                     fround@prec:
  2241                           
  2242                           ; 1 bytes @ 0x30
  2243  0050                     	ds	1
  2244  0051                     ?___fladd:
  2245  0051                     ___fladd@b:	
  2246                           ; 4 bytes @ 0x31
  2247                           
  2248                           
  2249                           ; 4 bytes @ 0x31
  2250  0051                     	ds	1
  2251  0052                     scale@scl:
  2252                           
  2253                           ; 1 bytes @ 0x32
  2254  0052                     	ds	1
  2255  0053                     ?___fltol:
  2256  0053                     ___fltol@f1:	
  2257                           ; 4 bytes @ 0x33
  2258                           
  2259                           
  2260                           ; 4 bytes @ 0x33
  2261  0053                     	ds	2
  2262  0055                     ___fladd@a:
  2263                           
  2264                           ; 4 bytes @ 0x35
  2265  0055                     	ds	2
  2266  0057                     ??___fltol:
  2267                           
  2268                           ; 1 bytes @ 0x37
  2269  0057                     	ds	2
  2270  0059                     ??___fladd:
  2271                           
  2272                           ; 1 bytes @ 0x39
  2273  0059                     	ds	3
  2274  005C                     ___fltol@sign1:
  2275                           
  2276                           ; 1 bytes @ 0x3C
  2277  005C                     	ds	1
  2278  005D                     ___fltol@exp1:
  2279                           
  2280                           ; 1 bytes @ 0x3D
  2281  005D                     	ds	4
  2282  0061                     ___fladd@signs:
  2283                           
  2284                           ; 1 bytes @ 0x41
  2285  0061                     	ds	1
  2286  0062                     ___fladd@aexp:
  2287                           
  2288                           ; 1 bytes @ 0x42
  2289  0062                     	ds	1
  2290  0063                     ___fladd@bexp:
  2291                           
  2292                           ; 1 bytes @ 0x43
  2293  0063                     	ds	1
  2294  0064                     ___fladd@grs:
  2295                           
  2296                           ; 1 bytes @ 0x44
  2297  0064                     	ds	1
  2298  0065                     ?___flsub:
  2299  0065                     ___flsub@a:	
  2300                           ; 4 bytes @ 0x45
  2301                           
  2302                           
  2303                           ; 4 bytes @ 0x45
  2304  0065                     	ds	4
  2305  0069                     ___flsub@b:
  2306                           
  2307                           ; 4 bytes @ 0x49
  2308  0069                     	ds	4
  2309  006D                     ??_main:
  2310                           
  2311                           ; 1 bytes @ 0x4D
  2312  006D                     	ds	2
  2313                           
  2314                           	psect	maintext
  2315  1393                     __pmaintext:	
  2316 ;;
  2317 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2318 ;;
  2319 ;; *************** function _main *****************
  2320 ;; Defined at:
  2321 ;;		line 9 in file "main.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  weight_gram     4   40[BANK1 ] float 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : B1F/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2337 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2339 ;;Total ram usage:        6 bytes
  2340 ;; Hardware stack levels required when called: 6
  2341 ;; This function calls:
  2342 ;;		_SYSTEM_Initialize
  2343 ;;		_get_scale_val
  2344 ;;		_lcd_backlight
  2345 ;;		_lcd_clear
  2346 ;;		_lcd_init
  2347 ;;		_lcd_print
  2348 ;;		_lcd_set_cursor
  2349 ;;		_scale_convert_gram
  2350 ;;		_sprintf
  2351 ;; This function is called by:
  2352 ;;		Startup code after reset
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function _main
  2358  1393                     _main:
  2359  1393                     l4318:	
  2360                           ;incstack = 0
  2361                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2362                           
  2363                           
  2364                           ;main.c: 11: SYSTEM_Initialize();
  2365  1393  319C  2453  3193   	fcall	_SYSTEM_Initialize
  2366  1396                     l4320:
  2367                           
  2368                           ;main.c: 14: ANSELA = 0x00;
  2369  1396  0023               	movlb	3	; select bank3
  2370  1397  018C               	clrf	12	;volatile
  2371  1398                     l4322:
  2372                           
  2373                           ;main.c: 15: ANSELB = 0x00;
  2374  1398  018D               	clrf	13	;volatile
  2375  1399                     l4324:
  2376                           
  2377                           ;main.c: 19: TRISA = 0x02;
  2378  1399  3002               	movlw	2
  2379  139A  0021               	movlb	1	; select bank1
  2380  139B  008C               	movwf	12	;volatile
  2381  139C                     l4326:
  2382                           
  2383                           ;main.c: 21: LATA = 0x00;
  2384  139C  0022               	movlb	2	; select bank2
  2385  139D  018C               	clrf	12	;volatile
  2386  139E                     l4328:
  2387                           
  2388                           ;main.c: 22: LATB = 0x00;
  2389  139E  018D               	clrf	13	;volatile
  2390  139F                     l4330:
  2391                           
  2392                           ;main.c: 26: SSPADD = 0x13;
  2393  139F  3013               	movlw	19
  2394  13A0  0024               	movlb	4	; select bank4
  2395  13A1  0092               	movwf	18	;volatile
  2396  13A2                     l4332:
  2397                           
  2398                           ;main.c: 27: SSPCON1 = 0x28;
  2399  13A2  3028               	movlw	40
  2400  13A3  0095               	movwf	21	;volatile
  2401  13A4                     l4334:
  2402                           
  2403                           ;main.c: 28: SSPCON2 = 0x0;
  2404  13A4  0196               	clrf	22	;volatile
  2405  13A5                     l4336:
  2406                           
  2407                           ;main.c: 29: SSPSTAT = 0;
  2408  13A5  0194               	clrf	20	;volatile
  2409  13A6                     l4338:
  2410                           
  2411                           ;main.c: 31: lcd_init();
  2412  13A6  3188  2009  3193   	fcall	_lcd_init
  2413  13A9                     l4340:
  2414                           
  2415                           ;main.c: 32: lcd_backlight();
  2416  13A9  319C  2488  3193   	fcall	_lcd_backlight
  2417  13AC                     l4342:
  2418                           
  2419                           ;main.c: 33: lcd_set_cursor(0, 0);
  2420  13AC  01F8               	clrf	lcd_set_cursor@row
  2421  13AD  3000               	movlw	0
  2422  13AE  319D  2549  3193   	fcall	_lcd_set_cursor
  2423  13B1                     l4344:
  2424                           
  2425                           ;main.c: 36: lcd_print("Initialize");
  2426  13B1  30AE               	movlw	low (STR_1| (0+32768))
  2427  13B2  00F8               	movwf	lcd_print@str
  2428  13B3  30A0               	movlw	high (STR_1| (0+32768))
  2429  13B4  00F9               	movwf	lcd_print@str+1
  2430  13B5  319C  24CA  3193   	fcall	_lcd_print
  2431  13B8                     l4346:
  2432                           
  2433                           ;main.c: 37: lcd_set_cursor(0, 1);
  2434  13B8  01F8               	clrf	lcd_set_cursor@row
  2435  13B9  0AF8               	incf	lcd_set_cursor@row,f
  2436  13BA  3000               	movlw	0
  2437  13BB  319D  2549  3193   	fcall	_lcd_set_cursor
  2438  13BE                     l4348:
  2439                           
  2440                           ;main.c: 38: lcd_print("Load cell Unit");
  2441  13BE  309F               	movlw	low (STR_2| (0+32768))
  2442  13BF  00F8               	movwf	lcd_print@str
  2443  13C0  30A0               	movlw	high (STR_2| (0+32768))
  2444  13C1  00F9               	movwf	lcd_print@str+1
  2445  13C2  319C  24CA  3193   	fcall	_lcd_print
  2446  13C5                     l4350:
  2447                           
  2448                           ;main.c: 40: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2449  13C5  300B               	movlw	11
  2450  13C6  0020               	movlb	0	; select bank0
  2451  13C7  00EE               	movwf	??_main+1
  2452  13C8  3026               	movlw	38
  2453  13C9  00ED               	movwf	??_main
  2454  13CA  305D               	movlw	93
  2455  13CB                     u5757:
  2456  13CB  0B89               	decfsz	9,f
  2457  13CC  2BCB               	goto	u5757
  2458  13CD  0BED               	decfsz	??_main,f
  2459  13CE  2BCB               	goto	u5757
  2460  13CF  0BEE               	decfsz	??_main+1,f
  2461  13D0  2BCB               	goto	u5757
  2462  13D1  3200               	nop2
  2463                           
  2464                           ;main.c: 42: weight_zero = get_scale_val(3);
  2465  13D2  3003               	movlw	3
  2466  13D3  0020               	movlb	0	; select bank0
  2467  13D4  00A0               	movwf	get_scale_val@n
  2468  13D5  3000               	movlw	0
  2469  13D6  00A1               	movwf	get_scale_val@n+1
  2470  13D7  3192  22BD  3193   	fcall	_get_scale_val
  2471  13DA  0020               	movlb	0	; select bank0
  2472  13DB  0823               	movf	?_get_scale_val+3,w
  2473  13DC  0021               	movlb	1	; select bank1
  2474  13DD  00CF               	movwf	(_weight_zero+3)^(0+128)
  2475  13DE  0020               	movlb	0	; select bank0
  2476  13DF  0822               	movf	?_get_scale_val+2,w
  2477  13E0  0021               	movlb	1	; select bank1
  2478  13E1  00CE               	movwf	(_weight_zero+2)^(0+128)
  2479  13E2  0020               	movlb	0	; select bank0
  2480  13E3  0821               	movf	?_get_scale_val+1,w
  2481  13E4  0021               	movlb	1	; select bank1
  2482  13E5  00CD               	movwf	(_weight_zero+1)^(0+128)
  2483  13E6  0020               	movlb	0	; select bank0
  2484  13E7  0820               	movf	?_get_scale_val,w
  2485  13E8  0021               	movlb	1	; select bank1
  2486  13E9  00CC               	movwf	_weight_zero^(0+128)
  2487  13EA                     l4352:
  2488                           
  2489                           ;main.c: 44: lcd_clear();
  2490  13EA  319D  2573  3193   	fcall	_lcd_clear
  2491  13ED                     l4354:
  2492                           
  2493                           ;main.c: 45: sprintf(valstr, "%lu val ", weight_zero);
  2494  13ED  30D4               	movlw	low _valstr
  2495  13EE  0021               	movlb	1	; select bank1
  2496  13EF  00A0               	movwf	sprintf@sp^(0+128)
  2497  13F0  3000               	movlw	high _valstr
  2498  13F1  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2499  13F2  30C4               	movlw	low (STR_3| (0+32768))
  2500  13F3  00A2               	movwf	sprintf@f^(0+128)
  2501  13F4  30A0               	movlw	high (STR_3| (0+32768))
  2502  13F5  00A3               	movwf	(sprintf@f^(0+128)+1)
  2503  13F6  084F               	movf	(_weight_zero+3)^(0+128),w
  2504  13F7  00A7               	movwf	((?_sprintf+3)^(0+128)+4)
  2505  13F8  084E               	movf	(_weight_zero+2)^(0+128),w
  2506  13F9  00A6               	movwf	((?_sprintf+2)^(0+128)+4)
  2507  13FA  084D               	movf	(_weight_zero+1)^(0+128),w
  2508  13FB  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  2509  13FC  084C               	movf	_weight_zero^(0+128),w
  2510  13FD  00A4               	movwf	(?_sprintf^(0+128)+4)
  2511  13FE  3180  20A2  3193   	fcall	_sprintf
  2512  1401                     l4356:
  2513                           
  2514                           ;main.c: 46: lcd_print(valstr);
  2515  1401  30D4               	movlw	low _valstr
  2516  1402  00F8               	movwf	lcd_print@str
  2517  1403  3000               	movlw	high _valstr
  2518  1404  00F9               	movwf	lcd_print@str+1
  2519  1405  319C  24CA  3193   	fcall	_lcd_print
  2520  1408                     l4358:
  2521                           
  2522                           ;main.c: 47: _delay((unsigned long)((500)*(8000000/4000.0)));
  2523  1408  3006               	movlw	6
  2524  1409  0020               	movlb	0	; select bank0
  2525  140A  00EE               	movwf	??_main+1
  2526  140B  3013               	movlw	19
  2527  140C  00ED               	movwf	??_main
  2528  140D  30AD               	movlw	173
  2529  140E                     u5767:
  2530  140E  0B89               	decfsz	9,f
  2531  140F  2C0E               	goto	u5767
  2532  1410  0BED               	decfsz	??_main,f
  2533  1411  2C0E               	goto	u5767
  2534  1412  0BEE               	decfsz	??_main+1,f
  2535  1413  2C0E               	goto	u5767
  2536  1414  3200               	nop2
  2537  1415                     l4360:
  2538                           
  2539                           ;main.c: 49: lcd_clear();
  2540  1415  319D  2573  3193   	fcall	_lcd_clear
  2541  1418                     l4362:
  2542                           
  2543                           ;main.c: 50: sprintf(valstr, "Divide val: %d", 493);
  2544  1418  30D4               	movlw	low _valstr
  2545  1419  0021               	movlb	1	; select bank1
  2546  141A  00A0               	movwf	sprintf@sp^(0+128)
  2547  141B  3000               	movlw	high _valstr
  2548  141C  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2549  141D  3028               	movlw	low (STR_4| (0+32768))
  2550  141E  00A2               	movwf	sprintf@f^(0+128)
  2551  141F  30A0               	movlw	high (STR_4| (0+32768))
  2552  1420  00A3               	movwf	(sprintf@f^(0+128)+1)
  2553  1421  30ED               	movlw	237
  2554  1422  00A4               	movwf	(?_sprintf^(0+128)+4)
  2555  1423  3001               	movlw	1
  2556  1424  00A5               	movwf	(?_sprintf^(0+128)+5)
  2557  1425  3180  20A2  3193   	fcall	_sprintf
  2558  1428                     l4364:
  2559                           
  2560                           ;main.c: 51: lcd_print(valstr);
  2561  1428  30D4               	movlw	low _valstr
  2562  1429  00F8               	movwf	lcd_print@str
  2563  142A  3000               	movlw	high _valstr
  2564  142B  00F9               	movwf	lcd_print@str+1
  2565  142C  319C  24CA  3193   	fcall	_lcd_print
  2566  142F                     l4366:
  2567                           
  2568                           ;main.c: 52: _delay((unsigned long)((1500)*(8000000/4000.0)));
  2569  142F  3010               	movlw	16
  2570  1430  0020               	movlb	0	; select bank0
  2571  1431  00EE               	movwf	??_main+1
  2572  1432  3039               	movlw	57
  2573  1433  00ED               	movwf	??_main
  2574  1434  300D               	movlw	13
  2575  1435                     u5777:
  2576  1435  0B89               	decfsz	9,f
  2577  1436  2C35               	goto	u5777
  2578  1437  0BED               	decfsz	??_main,f
  2579  1438  2C35               	goto	u5777
  2580  1439  0BEE               	decfsz	??_main+1,f
  2581  143A  2C35               	goto	u5777
  2582  143B  3200               	nop2
  2583  143C                     l96:	
  2584                           ;main.c: 54: while (1)
  2585                           
  2586                           
  2587                           ;main.c: 55: {;main.c: 56: weight_dat = get_scale_val(8);
  2588  143C  3008               	movlw	8
  2589  143D  0020               	movlb	0	; select bank0
  2590  143E  00A0               	movwf	get_scale_val@n
  2591  143F  3000               	movlw	0
  2592  1440  00A1               	movwf	get_scale_val@n+1
  2593  1441  3192  22BD  3193   	fcall	_get_scale_val
  2594  1444  0020               	movlb	0	; select bank0
  2595  1445  0823               	movf	?_get_scale_val+3,w
  2596  1446  0021               	movlb	1	; select bank1
  2597  1447  00D3               	movwf	(_weight_dat+3)^(0+128)
  2598  1448  0020               	movlb	0	; select bank0
  2599  1449  0822               	movf	?_get_scale_val+2,w
  2600  144A  0021               	movlb	1	; select bank1
  2601  144B  00D2               	movwf	(_weight_dat+2)^(0+128)
  2602  144C  0020               	movlb	0	; select bank0
  2603  144D  0821               	movf	?_get_scale_val+1,w
  2604  144E  0021               	movlb	1	; select bank1
  2605  144F  00D1               	movwf	(_weight_dat+1)^(0+128)
  2606  1450  0020               	movlb	0	; select bank0
  2607  1451  0820               	movf	?_get_scale_val,w
  2608  1452  0021               	movlb	1	; select bank1
  2609  1453  00D0               	movwf	_weight_dat^(0+128)
  2610                           
  2611                           ;main.c: 57: float weight_gram = scale_convert_gram(weight_dat);
  2612  1454  0853               	movf	(_weight_dat+3)^(0+128),w
  2613  1455  0020               	movlb	0	; select bank0
  2614  1456  00B0               	movwf	scale_convert_gram@count+3
  2615  1457  0021               	movlb	1	; select bank1
  2616  1458  0852               	movf	(_weight_dat+2)^(0+128),w
  2617  1459  0020               	movlb	0	; select bank0
  2618  145A  00AF               	movwf	scale_convert_gram@count+2
  2619  145B  0021               	movlb	1	; select bank1
  2620  145C  0851               	movf	(_weight_dat+1)^(0+128),w
  2621  145D  0020               	movlb	0	; select bank0
  2622  145E  00AE               	movwf	scale_convert_gram@count+1
  2623  145F  0021               	movlb	1	; select bank1
  2624  1460  0850               	movf	_weight_dat^(0+128),w
  2625  1461  0020               	movlb	0	; select bank0
  2626  1462  00AD               	movwf	scale_convert_gram@count
  2627  1463  319E  2657  3193   	fcall	_scale_convert_gram
  2628  1466  0020               	movlb	0	; select bank0
  2629  1467  0830               	movf	?_scale_convert_gram+3,w
  2630  1468  0021               	movlb	1	; select bank1
  2631  1469  00CB               	movwf	(main@weight_gram+3)^(0+128)
  2632  146A  0020               	movlb	0	; select bank0
  2633  146B  082F               	movf	?_scale_convert_gram+2,w
  2634  146C  0021               	movlb	1	; select bank1
  2635  146D  00CA               	movwf	(main@weight_gram+2)^(0+128)
  2636  146E  0020               	movlb	0	; select bank0
  2637  146F  082E               	movf	?_scale_convert_gram+1,w
  2638  1470  0021               	movlb	1	; select bank1
  2639  1471  00C9               	movwf	(main@weight_gram+1)^(0+128)
  2640  1472  0020               	movlb	0	; select bank0
  2641  1473  082D               	movf	?_scale_convert_gram,w
  2642  1474  0021               	movlb	1	; select bank1
  2643  1475  00C8               	movwf	main@weight_gram^(0+128)
  2644  1476                     l4368:
  2645                           
  2646                           ;main.c: 59: sprintf(valstr, "%lu val", weight_dat);
  2647  1476  30D4               	movlw	low _valstr
  2648  1477  00A0               	movwf	sprintf@sp^(0+128)
  2649  1478  3000               	movlw	high _valstr
  2650  1479  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2651  147A  30CD               	movlw	low (STR_5| (0+32768))
  2652  147B  00A2               	movwf	sprintf@f^(0+128)
  2653  147C  30A0               	movlw	high (STR_5| (0+32768))
  2654  147D  00A3               	movwf	(sprintf@f^(0+128)+1)
  2655  147E  0853               	movf	(_weight_dat+3)^(0+128),w
  2656  147F  00A7               	movwf	((?_sprintf+3)^(0+128)+4)
  2657  1480  0852               	movf	(_weight_dat+2)^(0+128),w
  2658  1481  00A6               	movwf	((?_sprintf+2)^(0+128)+4)
  2659  1482  0851               	movf	(_weight_dat+1)^(0+128),w
  2660  1483  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  2661  1484  0850               	movf	_weight_dat^(0+128),w
  2662  1485  00A4               	movwf	(?_sprintf^(0+128)+4)
  2663  1486  3180  20A2  3193   	fcall	_sprintf
  2664  1489                     l4370:
  2665                           
  2666                           ;main.c: 61: sprintf(gramstr, "%3.2f gram", weight_gram);
  2667  1489  3020               	movlw	low _gramstr
  2668  148A  0021               	movlb	1	; select bank1
  2669  148B  00A0               	movwf	sprintf@sp^(0+128)
  2670  148C  3001               	movlw	high _gramstr
  2671  148D  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2672  148E  30B9               	movlw	low (STR_6| (0+32768))
  2673  148F  00A2               	movwf	sprintf@f^(0+128)
  2674  1490  30A0               	movlw	high (STR_6| (0+32768))
  2675  1491  00A3               	movwf	(sprintf@f^(0+128)+1)
  2676  1492  084B               	movf	(main@weight_gram+3)^(0+128),w
  2677  1493  00A7               	movwf	((?_sprintf+3)^(0+128)+4)
  2678  1494  084A               	movf	(main@weight_gram+2)^(0+128),w
  2679  1495  00A6               	movwf	((?_sprintf+2)^(0+128)+4)
  2680  1496  0849               	movf	(main@weight_gram+1)^(0+128),w
  2681  1497  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
  2682  1498  0848               	movf	main@weight_gram^(0+128),w
  2683  1499  00A4               	movwf	(?_sprintf^(0+128)+4)
  2684  149A  3180  20A2  3193   	fcall	_sprintf
  2685  149D                     l4372:
  2686                           
  2687                           ;main.c: 63: lcd_clear();
  2688  149D  319D  2573  3193   	fcall	_lcd_clear
  2689  14A0                     l4374:
  2690                           
  2691                           ;main.c: 64: lcd_print(valstr);
  2692  14A0  30D4               	movlw	low _valstr
  2693  14A1  00F8               	movwf	lcd_print@str
  2694  14A2  3000               	movlw	high _valstr
  2695  14A3  00F9               	movwf	lcd_print@str+1
  2696  14A4  319C  24CA  3193   	fcall	_lcd_print
  2697                           
  2698                           ;main.c: 65: lcd_set_cursor(0, 1);
  2699  14A7  01F8               	clrf	lcd_set_cursor@row
  2700  14A8  0AF8               	incf	lcd_set_cursor@row,f
  2701  14A9  3000               	movlw	0
  2702  14AA  319D  2549  3193   	fcall	_lcd_set_cursor
  2703  14AD                     l4376:
  2704                           
  2705                           ;main.c: 66: lcd_print(gramstr);
  2706  14AD  3020               	movlw	low _gramstr
  2707  14AE  00F8               	movwf	lcd_print@str
  2708  14AF  3001               	movlw	high _gramstr
  2709  14B0  00F9               	movwf	lcd_print@str+1
  2710  14B1  319C  24CA  3193   	fcall	_lcd_print
  2711  14B4                     l4378:
  2712                           
  2713                           ;main.c: 68: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2714  14B4  300B               	movlw	11
  2715  14B5  0020               	movlb	0	; select bank0
  2716  14B6  00EE               	movwf	??_main+1
  2717  14B7  3026               	movlw	38
  2718  14B8  00ED               	movwf	??_main
  2719  14B9  305D               	movlw	93
  2720  14BA                     u5787:
  2721  14BA  0B89               	decfsz	9,f
  2722  14BB  2CBA               	goto	u5787
  2723  14BC  0BED               	decfsz	??_main,f
  2724  14BD  2CBA               	goto	u5787
  2725  14BE  0BEE               	decfsz	??_main+1,f
  2726  14BF  2CBA               	goto	u5787
  2727  14C0  3200               	nop2
  2728  14C1  2C3C               	goto	l96
  2729  14C2  3180  2802         	ljmp	start
  2730  14C4                     __end_of_main:
  2731                           
  2732                           	psect	text1
  2733  00A2                     __ptext1:	
  2734 ;; *************** function _sprintf *****************
  2735 ;; Defined at:
  2736 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  sp              2    0[BANK1 ] PTR unsigned char 
  2739 ;;		 -> gramstr(16), valstr(16), 
  2740 ;;  f               2    2[BANK1 ] PTR const unsigned char 
  2741 ;;		 -> STR_6(11), STR_5(8), STR_4(15), STR_3(9), 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  fval            4   33[BANK1 ] PTR const unsigned char 
  2744 ;;  val             4   29[BANK1 ] unsigned long 
  2745 ;;  tmpval          4   21[BANK1 ] struct .
  2746 ;;  prec            2   37[BANK1 ] int 
  2747 ;;  eexp            2   27[BANK1 ] int 
  2748 ;;  flag            2   25[BANK1 ] unsigned short 
  2749 ;;  width           2   19[BANK1 ] int 
  2750 ;;  cp              2    0        PTR const unsigned char 
  2751 ;;  len             2    0        unsigned int 
  2752 ;;  c               1   39[BANK1 ] unsigned char 
  2753 ;;  ap              1   18[BANK1 ] PTR void [1]
  2754 ;;		 -> ?_sprintf(2), 
  2755 ;;  d               1    0        unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  2    0[BANK1 ] int 
  2758 ;; Registers used:
  2759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2765 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  2766 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  2767 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2768 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0
  2769 ;;Total ram usage:       40 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 3
  2772 ;; This function calls:
  2773 ;;		___awdiv
  2774 ;;		___fladd
  2775 ;;		___fleq
  2776 ;;		___flge
  2777 ;;		___flmul
  2778 ;;		___flneg
  2779 ;;		___flsub
  2780 ;;		___fltol
  2781 ;;		___lldiv
  2782 ;;		___llmod
  2783 ;;		___wmul
  2784 ;;		___xxtofl
  2785 ;;		__div_to_l_
  2786 ;;		__tdiv_to_l_
  2787 ;;		_fround
  2788 ;;		_isdigit
  2789 ;;		_scale
  2790 ;; This function is called by:
  2791 ;;		_main
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           
  2796                           ;psect for function _sprintf
  2797  00A2                     _sprintf:
  2798  00A2                     l4008:	
  2799                           ;incstack = 0
  2800                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2801                           
  2802                           
  2803                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  2804  00A2  30A4               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  2805  00A3  0021               	movlb	1	; select bank1
  2806  00A4  00A8               	movwf	??_sprintf^(0+128)
  2807  00A5  0828               	movf	??_sprintf^(0+128),w
  2808  00A6  00B2               	movwf	sprintf@ap^(0+128)
  2809                           
  2810                           ;doprnt.c: 553: while((c = *f++)) {
  2811  00A7  2FC0               	goto	l4306
  2812  00A8                     l4010:
  2813                           
  2814                           ;doprnt.c: 555: if(c != '%')
  2815  00A8  3025               	movlw	37
  2816  00A9  0647               	xorwf	sprintf@c^(0+128),w
  2817  00AA  1903               	btfsc	3,2
  2818  00AB  28AD               	goto	u5231
  2819  00AC  28AE               	goto	u5230
  2820  00AD                     u5231:
  2821  00AD  28B9               	goto	l4016
  2822  00AE                     u5230:
  2823  00AE                     l4012:
  2824                           
  2825                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2826  00AE  0820               	movf	sprintf@sp^(0+128),w
  2827  00AF  0086               	movwf	6
  2828  00B0  0821               	movf	(sprintf@sp+1)^(0+128),w
  2829  00B1  0087               	movwf	7
  2830  00B2  0847               	movf	sprintf@c^(0+128),w
  2831  00B3  0081               	movwf	1
  2832  00B4                     l4014:
  2833  00B4  3001               	movlw	1
  2834  00B5  07A0               	addwf	sprintf@sp^(0+128),f
  2835  00B6  3000               	movlw	0
  2836  00B7  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  2837                           
  2838                           ;doprnt.c: 559: continue;
  2839  00B8  2FC0               	goto	l4306
  2840  00B9                     l4016:
  2841                           
  2842                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  2843  00B9  01B3               	clrf	sprintf@width^(0+128)
  2844  00BA  01B4               	clrf	(sprintf@width+1)^(0+128)
  2845                           
  2846                           ;doprnt.c: 565: flag = 0;
  2847  00BB  01B9               	clrf	sprintf@flag^(0+128)
  2848  00BC  01BA               	clrf	(sprintf@flag+1)^(0+128)
  2849  00BD                     l4018:
  2850                           
  2851                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  2852  00BD  0822               	movf	sprintf@f^(0+128),w
  2853  00BE  0084               	movwf	4
  2854  00BF  0823               	movf	(sprintf@f+1)^(0+128),w
  2855  00C0  0085               	movwf	5
  2856  00C1  0800               	movf	0,w	;code access
  2857  00C2  319C  24B8  3180   	fcall	_isdigit
  2858  00C5  1C03               	btfss	3,0
  2859  00C6  28C8               	goto	u5241
  2860  00C7  28C9               	goto	u5240
  2861  00C8                     u5241:
  2862  00C8  28FC               	goto	l4030
  2863  00C9                     u5240:
  2864  00C9                     l4020:
  2865                           
  2866                           ;doprnt.c: 615: width = 0;
  2867  00C9  0021               	movlb	1	; select bank1
  2868  00CA  01B3               	clrf	sprintf@width^(0+128)
  2869  00CB  01B4               	clrf	(sprintf@width+1)^(0+128)
  2870  00CC                     l4022:
  2871                           
  2872                           ;doprnt.c: 617: width *= 10;
  2873  00CC  300A               	movlw	10
  2874  00CD  00F0               	movwf	___wmul@multiplier
  2875  00CE  3000               	movlw	0
  2876  00CF  00F1               	movwf	___wmul@multiplier+1
  2877  00D0  0021               	movlb	1	; select bank1
  2878  00D1  0834               	movf	(sprintf@width+1)^(0+128),w
  2879  00D2  00F3               	movwf	___wmul@multiplicand+1
  2880  00D3  0833               	movf	sprintf@width^(0+128),w
  2881  00D4  00F2               	movwf	___wmul@multiplicand
  2882  00D5  319C  24E7  3180   	fcall	___wmul
  2883  00D8  0871               	movf	?___wmul+1,w
  2884  00D9  0021               	movlb	1	; select bank1
  2885  00DA  00B4               	movwf	(sprintf@width+1)^(0+128)
  2886  00DB  0870               	movf	?___wmul,w
  2887  00DC  00B3               	movwf	sprintf@width^(0+128)
  2888  00DD                     l4024:
  2889                           
  2890                           ;doprnt.c: 618: width += *f++ - '0';
  2891  00DD  0822               	movf	sprintf@f^(0+128),w
  2892  00DE  0084               	movwf	4
  2893  00DF  0823               	movf	(sprintf@f+1)^(0+128),w
  2894  00E0  0085               	movwf	5
  2895  00E1  0800               	movf	0,w	;code access
  2896  00E2  3ED0               	addlw	208
  2897  00E3  00A8               	movwf	??_sprintf^(0+128)
  2898  00E4  30FF               	movlw	255
  2899  00E5  1803               	skipnc
  2900  00E6  3000               	movlw	0
  2901  00E7  00A9               	movwf	(??_sprintf^(0+128)+1)
  2902  00E8  0828               	movf	??_sprintf^(0+128),w
  2903  00E9  07B3               	addwf	sprintf@width^(0+128),f
  2904  00EA  0829               	movf	(??_sprintf+1)^(0+128),w
  2905  00EB  3DB4               	addwfc	(sprintf@width+1)^(0+128),f
  2906  00EC                     l4026:
  2907  00EC  3001               	movlw	1
  2908  00ED  07A2               	addwf	sprintf@f^(0+128),f
  2909  00EE  3000               	movlw	0
  2910  00EF  3DA3               	addwfc	(sprintf@f+1)^(0+128),f
  2911  00F0                     l4028:
  2912                           
  2913                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  2914  00F0  0822               	movf	sprintf@f^(0+128),w
  2915  00F1  0084               	movwf	4
  2916  00F2  0823               	movf	(sprintf@f+1)^(0+128),w
  2917  00F3  0085               	movwf	5
  2918  00F4  0800               	movf	0,w	;code access
  2919  00F5  319C  24B8  3180   	fcall	_isdigit
  2920  00F8  1803               	btfsc	3,0
  2921  00F9  28FB               	goto	u5251
  2922  00FA  28FC               	goto	u5250
  2923  00FB                     u5251:
  2924  00FB  28CC               	goto	l4022
  2925  00FC                     u5250:
  2926  00FC                     l4030:
  2927                           
  2928                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  2929  00FC  0021               	movlb	1	; select bank1
  2930  00FD  0822               	movf	sprintf@f^(0+128),w
  2931  00FE  0084               	movwf	4
  2932  00FF  0823               	movf	(sprintf@f+1)^(0+128),w
  2933  0100  0085               	movwf	5
  2934  0101  0012               	moviw fsr0++
  2935  0102  3A2E               	xorlw	46
  2936  0103  1D03               	btfss	3,2
  2937  0104  2906               	goto	u5261
  2938  0105  2907               	goto	u5260
  2939  0106                     u5261:
  2940  0106  2940               	goto	l4046
  2941  0107                     u5260:
  2942  0107                     l4032:
  2943                           
  2944                           ;doprnt.c: 629: flag |= 0x4000;
  2945  0107  173A               	bsf	(sprintf@flag^(0+128)+1),6
  2946  0108                     l4034:
  2947                           
  2948                           ;doprnt.c: 630: f++;
  2949  0108  3001               	movlw	1
  2950  0109  07A2               	addwf	sprintf@f^(0+128),f
  2951  010A  3000               	movlw	0
  2952  010B  3DA3               	addwfc	(sprintf@f+1)^(0+128),f
  2953  010C                     l4036:
  2954                           
  2955                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  2956  010C  01C5               	clrf	sprintf@prec^(0+128)
  2957  010D  01C6               	clrf	(sprintf@prec+1)^(0+128)
  2958                           
  2959                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  2960  010E  2933               	goto	l4044
  2961  010F                     l4038:
  2962                           
  2963                           ;doprnt.c: 647: prec *= 10;
  2964  010F  300A               	movlw	10
  2965  0110  00F0               	movwf	___wmul@multiplier
  2966  0111  3000               	movlw	0
  2967  0112  00F1               	movwf	___wmul@multiplier+1
  2968  0113  0021               	movlb	1	; select bank1
  2969  0114  0846               	movf	(sprintf@prec+1)^(0+128),w
  2970  0115  00F3               	movwf	___wmul@multiplicand+1
  2971  0116  0845               	movf	sprintf@prec^(0+128),w
  2972  0117  00F2               	movwf	___wmul@multiplicand
  2973  0118  319C  24E7  3180   	fcall	___wmul
  2974  011B  0871               	movf	?___wmul+1,w
  2975  011C  0021               	movlb	1	; select bank1
  2976  011D  00C6               	movwf	(sprintf@prec+1)^(0+128)
  2977  011E  0870               	movf	?___wmul,w
  2978  011F  00C5               	movwf	sprintf@prec^(0+128)
  2979  0120                     l4040:
  2980                           
  2981                           ;doprnt.c: 648: prec += *f++ - '0';
  2982  0120  0822               	movf	sprintf@f^(0+128),w
  2983  0121  0084               	movwf	4
  2984  0122  0823               	movf	(sprintf@f+1)^(0+128),w
  2985  0123  0085               	movwf	5
  2986  0124  0800               	movf	0,w	;code access
  2987  0125  3ED0               	addlw	208
  2988  0126  00A8               	movwf	??_sprintf^(0+128)
  2989  0127  30FF               	movlw	255
  2990  0128  1803               	skipnc
  2991  0129  3000               	movlw	0
  2992  012A  00A9               	movwf	(??_sprintf^(0+128)+1)
  2993  012B  0828               	movf	??_sprintf^(0+128),w
  2994  012C  07C5               	addwf	sprintf@prec^(0+128),f
  2995  012D  0829               	movf	(??_sprintf+1)^(0+128),w
  2996  012E  3DC6               	addwfc	(sprintf@prec+1)^(0+128),f
  2997  012F                     l4042:
  2998  012F  3001               	movlw	1
  2999  0130  07A2               	addwf	sprintf@f^(0+128),f
  3000  0131  3000               	movlw	0
  3001  0132  3DA3               	addwfc	(sprintf@f+1)^(0+128),f
  3002  0133                     l4044:
  3003  0133  0822               	movf	sprintf@f^(0+128),w
  3004  0134  0084               	movwf	4
  3005  0135  0823               	movf	(sprintf@f+1)^(0+128),w
  3006  0136  0085               	movwf	5
  3007  0137  0800               	movf	0,w	;code access
  3008  0138  319C  24B8  3180   	fcall	_isdigit
  3009  013B  1803               	btfsc	3,0
  3010  013C  293E               	goto	u5271
  3011  013D  293F               	goto	u5270
  3012  013E                     u5271:
  3013  013E  290F               	goto	l4038
  3014  013F                     u5270:
  3015  013F  294A               	goto	l4052
  3016  0140                     l4046:
  3017                           
  3018                           ;doprnt.c: 652: prec = 0;
  3019  0140  01C5               	clrf	sprintf@prec^(0+128)
  3020  0141  01C6               	clrf	(sprintf@prec+1)^(0+128)
  3021  0142                     l4048:
  3022                           
  3023                           ;doprnt.c: 654: flag |= 0x1000;
  3024  0142  163A               	bsf	(sprintf@flag^(0+128)+1),4
  3025  0143  294A               	goto	l4052
  3026  0144                     l439:	
  3027                           ;doprnt.c: 667: case 'l':
  3028                           
  3029                           
  3030                           ;doprnt.c: 669: flag |= 0x10;
  3031  0144  1639               	bsf	sprintf@flag^(0+128),4
  3032                           
  3033                           ;doprnt.c: 670: goto loop;
  3034  0145  294A               	goto	l4052
  3035  0146                     l440:	
  3036                           ;doprnt.c: 688: case 'f':
  3037                           
  3038                           
  3039                           ;doprnt.c: 689: flag |= 0x400;
  3040  0146  153A               	bsf	(sprintf@flag^(0+128)+1),2
  3041                           
  3042                           ;doprnt.c: 690: break;
  3043  0147  296B               	goto	l4054
  3044  0148                     l445:	
  3045                           ;doprnt.c: 843: case 'u':
  3046                           
  3047                           
  3048                           ;doprnt.c: 844: flag |= 0x40;
  3049  0148  1739               	bsf	sprintf@flag^(0+128),6
  3050                           
  3051                           ;doprnt.c: 845: break;
  3052  0149  296B               	goto	l4054
  3053  014A                     l4052:
  3054  014A  0021               	movlb	1	; select bank1
  3055  014B  0823               	movf	(sprintf@f+1)^(0+128),w
  3056  014C  00A9               	movwf	(??_sprintf^(0+128)+1)
  3057  014D  0822               	movf	sprintf@f^(0+128),w
  3058  014E  00A8               	movwf	??_sprintf^(0+128)
  3059  014F  0AA2               	incf	sprintf@f^(0+128),f
  3060  0150  1903               	skipnz
  3061  0151  0AA3               	incf	(sprintf@f+1)^(0+128),f
  3062  0152  0828               	movf	??_sprintf^(0+128),w
  3063  0153  0084               	movwf	4
  3064  0154  0829               	movf	(??_sprintf+1)^(0+128),w
  3065  0155  0085               	movwf	5
  3066  0156  0800               	movf	0,w	;code access
  3067  0157  00C7               	movwf	sprintf@c^(0+128)
  3068                           
  3069                           ; Switch size 1, requested type "simple"
  3070                           ; Number of cases is 6, Range of values is 0 to 117
  3071                           ; switch strategies available:
  3072                           ; Name         Instructions Cycles
  3073                           ; simple_byte           19    10 (average)
  3074                           ; direct_byte          242     6 (fixed)
  3075                           ; jumptable            260     6 (fixed)
  3076                           ;	Chosen strategy is simple_byte
  3077  0158  3A00               	xorlw	0	; case 0
  3078  0159  1903               	skipnz
  3079  015A  2FD4               	goto	l4308
  3080  015B  3A64               	xorlw	100	; case 100
  3081  015C  1903               	skipnz
  3082  015D  296B               	goto	l4054
  3083  015E  3A02               	xorlw	2	; case 102
  3084  015F  1903               	skipnz
  3085  0160  2946               	goto	l440
  3086  0161  3A0F               	xorlw	15	; case 105
  3087  0162  1903               	skipnz
  3088  0163  296B               	goto	l4054
  3089  0164  3A05               	xorlw	5	; case 108
  3090  0165  1903               	skipnz
  3091  0166  2944               	goto	l439
  3092  0167  3A19               	xorlw	25	; case 117
  3093  0168  1903               	skipnz
  3094  0169  2948               	goto	l445
  3095  016A  2FC0               	goto	l4306
  3096  016B                     l4054:
  3097                           
  3098                           ;doprnt.c: 851: if(flag & (0x700)) {
  3099  016B  3000               	movlw	0
  3100  016C  0539               	andwf	sprintf@flag^(0+128),w
  3101  016D  00A8               	movwf	??_sprintf^(0+128)
  3102  016E  3007               	movlw	7
  3103  016F  053A               	andwf	(sprintf@flag+1)^(0+128),w
  3104  0170  00A9               	movwf	(??_sprintf+1)^(0+128)
  3105  0171  0828               	movf	??_sprintf^(0+128),w
  3106  0172  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3107  0173  1903               	btfsc	3,2
  3108  0174  2976               	goto	u5281
  3109  0175  2977               	goto	u5280
  3110  0176                     u5281:
  3111  0176  2E25               	goto	l446
  3112  0177                     u5280:
  3113  0177                     l4056:
  3114                           
  3115                           ;doprnt.c: 853: if(flag & 0x1000)
  3116  0177  1E3A               	btfss	(sprintf@flag+1)^(0+128),4
  3117  0178  297A               	goto	u5291
  3118  0179  297B               	goto	u5290
  3119  017A                     u5291:
  3120  017A  297F               	goto	l4060
  3121  017B                     u5290:
  3122  017B                     l4058:
  3123                           
  3124                           ;doprnt.c: 855: prec = 6;
  3125  017B  3006               	movlw	6
  3126  017C  00C5               	movwf	sprintf@prec^(0+128)
  3127  017D  3000               	movlw	0
  3128  017E  00C6               	movwf	(sprintf@prec^(0+128)+1)
  3129  017F                     l4060:
  3130                           
  3131                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3132  017F  0832               	movf	sprintf@ap^(0+128),w
  3133  0180  0086               	movwf	6
  3134  0181  0187               	clrf	7
  3135  0182  3F40               	moviw [0]fsr1
  3136  0183  00C1               	movwf	sprintf@fval^(0+128)
  3137  0184  3F41               	moviw [1]fsr1
  3138  0185  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3139  0186  3F42               	moviw [2]fsr1
  3140  0187  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3141  0188  3F43               	moviw [3]fsr1
  3142  0189  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3143  018A                     l4062:
  3144  018A  3004               	movlw	4
  3145  018B  00A8               	movwf	??_sprintf^(0+128)
  3146  018C  0828               	movf	??_sprintf^(0+128),w
  3147  018D  07B2               	addwf	sprintf@ap^(0+128),f
  3148  018E                     l4064:
  3149                           
  3150                           ;doprnt.c: 857: if(fval < 0.0) {
  3151  018E  0844               	movf	(sprintf@fval+3)^(0+128),w
  3152  018F  00F3               	movwf	___flge@ff1+3
  3153  0190  0843               	movf	(sprintf@fval+2)^(0+128),w
  3154  0191  00F2               	movwf	___flge@ff1+2
  3155  0192  0842               	movf	(sprintf@fval+1)^(0+128),w
  3156  0193  00F1               	movwf	___flge@ff1+1
  3157  0194  0841               	movf	sprintf@fval^(0+128),w
  3158  0195  00F0               	movwf	___flge@ff1
  3159  0196  3000               	movlw	0
  3160  0197  00F7               	movwf	___flge@ff2+3
  3161  0198  3000               	movlw	0
  3162  0199  00F6               	movwf	___flge@ff2+2
  3163  019A  3000               	movlw	0
  3164  019B  00F5               	movwf	___flge@ff2+1
  3165  019C  3000               	movlw	0
  3166  019D  00F4               	movwf	___flge@ff2
  3167  019E  3180  2018  3180   	fcall	___flge
  3168  01A1  1803               	btfsc	3,0
  3169  01A2  29A4               	goto	u5301
  3170  01A3  29A5               	goto	u5300
  3171  01A4                     u5301:
  3172  01A4  29BE               	goto	l4070
  3173  01A5                     u5300:
  3174  01A5                     l4066:
  3175                           
  3176                           ;doprnt.c: 858: fval = -fval;
  3177  01A5  0021               	movlb	1	; select bank1
  3178  01A6  0844               	movf	(sprintf@fval+3)^(0+128),w
  3179  01A7  00F3               	movwf	___flneg@f1+3
  3180  01A8  0843               	movf	(sprintf@fval+2)^(0+128),w
  3181  01A9  00F2               	movwf	___flneg@f1+2
  3182  01AA  0842               	movf	(sprintf@fval+1)^(0+128),w
  3183  01AB  00F1               	movwf	___flneg@f1+1
  3184  01AC  0841               	movf	sprintf@fval^(0+128),w
  3185  01AD  00F0               	movwf	___flneg@f1
  3186  01AE  319C  2471  3180   	fcall	___flneg
  3187  01B1  0873               	movf	?___flneg+3,w
  3188  01B2  0021               	movlb	1	; select bank1
  3189  01B3  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3190  01B4  0872               	movf	?___flneg+2,w
  3191  01B5  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3192  01B6  0871               	movf	?___flneg+1,w
  3193  01B7  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3194  01B8  0870               	movf	?___flneg,w
  3195  01B9  00C1               	movwf	sprintf@fval^(0+128)
  3196  01BA                     l4068:
  3197                           
  3198                           ;doprnt.c: 859: flag |= 0x03;
  3199  01BA  3003               	movlw	3
  3200  01BB  04B9               	iorwf	sprintf@flag^(0+128),f
  3201  01BC  3000               	movlw	0
  3202  01BD  04BA               	iorwf	(sprintf@flag+1)^(0+128),f
  3203  01BE                     l4070:
  3204                           
  3205                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  3206  01BE  0021               	movlb	1	; select bank1
  3207  01BF  01BB               	clrf	sprintf@eexp^(0+128)
  3208  01C0  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  3209  01C1                     l4072:
  3210                           
  3211                           ;doprnt.c: 862: if( fval!=0) {
  3212  01C1  0844               	movf	(sprintf@fval+3)^(0+128),w
  3213  01C2  00F3               	movwf	___fleq@ff1+3
  3214  01C3  0843               	movf	(sprintf@fval+2)^(0+128),w
  3215  01C4  00F2               	movwf	___fleq@ff1+2
  3216  01C5  0842               	movf	(sprintf@fval+1)^(0+128),w
  3217  01C6  00F1               	movwf	___fleq@ff1+1
  3218  01C7  0841               	movf	sprintf@fval^(0+128),w
  3219  01C8  00F0               	movwf	___fleq@ff1
  3220  01C9  3000               	movlw	0
  3221  01CA  00F7               	movwf	___fleq@ff2+3
  3222  01CB  3000               	movlw	0
  3223  01CC  00F6               	movwf	___fleq@ff2+2
  3224  01CD  3000               	movlw	0
  3225  01CE  00F5               	movwf	___fleq@ff2+1
  3226  01CF  3000               	movlw	0
  3227  01D0  00F4               	movwf	___fleq@ff2
  3228  01D1  319E  26A5  3180   	fcall	___fleq
  3229  01D4  1803               	btfsc	3,0
  3230  01D5  29D7               	goto	u5311
  3231  01D6  29D8               	goto	u5310
  3232  01D7                     u5311:
  3233  01D7  2A8F               	goto	l449
  3234  01D8                     u5310:
  3235  01D8                     l4074:
  3236                           
  3237                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  3238  01D8  1003               	clrc
  3239  01D9  0021               	movlb	1	; select bank1
  3240  01DA  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  3241  01DB  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  3242  01DC  3E82               	addlw	130
  3243  01DD  00BB               	movwf	sprintf@eexp^(0+128)
  3244  01DE  30FF               	movlw	255
  3245  01DF  1803               	skipnc
  3246  01E0  3000               	movlw	0
  3247  01E1  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  3248  01E2                     l4076:
  3249                           
  3250                           ;doprnt.c: 864: eexp--;
  3251  01E2  30FF               	movlw	255
  3252  01E3  07BB               	addwf	sprintf@eexp^(0+128),f
  3253  01E4  30FF               	movlw	255
  3254  01E5  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  3255  01E6                     l4078:
  3256                           
  3257                           ;doprnt.c: 865: eexp *= 3;
  3258  01E6  3003               	movlw	3
  3259  01E7  00F0               	movwf	___wmul@multiplier
  3260  01E8  3000               	movlw	0
  3261  01E9  00F1               	movwf	___wmul@multiplier+1
  3262  01EA  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3263  01EB  00F3               	movwf	___wmul@multiplicand+1
  3264  01EC  083B               	movf	sprintf@eexp^(0+128),w
  3265  01ED  00F2               	movwf	___wmul@multiplicand
  3266  01EE  319C  24E7  3180   	fcall	___wmul
  3267  01F1  0871               	movf	?___wmul+1,w
  3268  01F2  0021               	movlb	1	; select bank1
  3269  01F3  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  3270  01F4  0870               	movf	?___wmul,w
  3271  01F5  00BB               	movwf	sprintf@eexp^(0+128)
  3272  01F6                     l4080:
  3273                           
  3274                           ;doprnt.c: 866: eexp /= 10;
  3275  01F6  300A               	movlw	10
  3276  01F7  00F7               	movwf	___awdiv@divisor
  3277  01F8  3000               	movlw	0
  3278  01F9  00F8               	movwf	___awdiv@divisor+1
  3279  01FA  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3280  01FB  00FA               	movwf	___awdiv@dividend+1
  3281  01FC  083B               	movf	sprintf@eexp^(0+128),w
  3282  01FD  00F9               	movwf	___awdiv@dividend
  3283  01FE  319F  27A0  3180   	fcall	___awdiv
  3284  0201  0878               	movf	?___awdiv+1,w
  3285  0202  0021               	movlb	1	; select bank1
  3286  0203  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  3287  0204  0877               	movf	?___awdiv,w
  3288  0205  00BB               	movwf	sprintf@eexp^(0+128)
  3289  0206                     l4082:
  3290                           
  3291                           ;doprnt.c: 867: if(eexp < 0)
  3292  0206  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  3293  0207  2A09               	goto	u5321
  3294  0208  2A0A               	goto	u5320
  3295  0209                     u5321:
  3296  0209  2A0E               	goto	l4086
  3297  020A                     u5320:
  3298  020A                     l4084:
  3299                           
  3300                           ;doprnt.c: 868: eexp--;
  3301  020A  30FF               	movlw	255
  3302  020B  07BB               	addwf	sprintf@eexp^(0+128),f
  3303  020C  30FF               	movlw	255
  3304  020D  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  3305  020E                     l4086:
  3306                           
  3307                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  3308  020E  033B               	decf	sprintf@eexp^(0+128),w
  3309  020F  3AFF               	xorlw	255
  3310  0210  318D  2584  3180   	fcall	_scale
  3311  0213  0020               	movlb	0	; select bank0
  3312  0214  0841               	movf	?_scale+3,w
  3313  0215  0021               	movlb	1	; select bank1
  3314  0216  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  3315  0217  0020               	movlb	0	; select bank0
  3316  0218  0840               	movf	?_scale+2,w
  3317  0219  0021               	movlb	1	; select bank1
  3318  021A  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  3319  021B  0020               	movlb	0	; select bank0
  3320  021C  083F               	movf	?_scale+1,w
  3321  021D  0021               	movlb	1	; select bank1
  3322  021E  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  3323  021F  0020               	movlb	0	; select bank0
  3324  0220  083E               	movf	?_scale,w
  3325  0221  0021               	movlb	1	; select bank1
  3326  0222  00B5               	movwf	sprintf@tmpval^(0+128)
  3327  0223                     l4088:
  3328                           
  3329                           ;doprnt.c: 873: tmpval.integ *= fval;
  3330  0223  0844               	movf	(sprintf@fval+3)^(0+128),w
  3331  0224  0020               	movlb	0	; select bank0
  3332  0225  00A7               	movwf	___flmul@b+3
  3333  0226  0021               	movlb	1	; select bank1
  3334  0227  0843               	movf	(sprintf@fval+2)^(0+128),w
  3335  0228  0020               	movlb	0	; select bank0
  3336  0229  00A6               	movwf	___flmul@b+2
  3337  022A  0021               	movlb	1	; select bank1
  3338  022B  0842               	movf	(sprintf@fval+1)^(0+128),w
  3339  022C  0020               	movlb	0	; select bank0
  3340  022D  00A5               	movwf	___flmul@b+1
  3341  022E  0021               	movlb	1	; select bank1
  3342  022F  0841               	movf	sprintf@fval^(0+128),w
  3343  0230  0020               	movlb	0	; select bank0
  3344  0231  00A4               	movwf	___flmul@b
  3345  0232  0021               	movlb	1	; select bank1
  3346  0233  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  3347  0234  0020               	movlb	0	; select bank0
  3348  0235  00AB               	movwf	___flmul@a+3
  3349  0236  0021               	movlb	1	; select bank1
  3350  0237  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  3351  0238  0020               	movlb	0	; select bank0
  3352  0239  00AA               	movwf	___flmul@a+2
  3353  023A  0021               	movlb	1	; select bank1
  3354  023B  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  3355  023C  0020               	movlb	0	; select bank0
  3356  023D  00A9               	movwf	___flmul@a+1
  3357  023E  0021               	movlb	1	; select bank1
  3358  023F  0835               	movf	sprintf@tmpval^(0+128),w
  3359  0240  0020               	movlb	0	; select bank0
  3360  0241  00A8               	movwf	___flmul@a
  3361  0242  318B  232D  3180   	fcall	___flmul
  3362  0245  0020               	movlb	0	; select bank0
  3363  0246  0827               	movf	?___flmul+3,w
  3364  0247  0021               	movlb	1	; select bank1
  3365  0248  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  3366  0249  0020               	movlb	0	; select bank0
  3367  024A  0826               	movf	?___flmul+2,w
  3368  024B  0021               	movlb	1	; select bank1
  3369  024C  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  3370  024D  0020               	movlb	0	; select bank0
  3371  024E  0825               	movf	?___flmul+1,w
  3372  024F  0021               	movlb	1	; select bank1
  3373  0250  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  3374  0251  0020               	movlb	0	; select bank0
  3375  0252  0824               	movf	?___flmul,w
  3376  0253  0021               	movlb	1	; select bank1
  3377  0254  00B5               	movwf	sprintf@tmpval^(0+128)
  3378  0255                     l4090:
  3379                           
  3380                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  3381  0255  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  3382  0256  00F3               	movwf	___flge@ff1+3
  3383  0257  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  3384  0258  00F2               	movwf	___flge@ff1+2
  3385  0259  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  3386  025A  00F1               	movwf	___flge@ff1+1
  3387  025B  0835               	movf	sprintf@tmpval^(0+128),w
  3388  025C  00F0               	movwf	___flge@ff1
  3389  025D  303F               	movlw	63
  3390  025E  00F7               	movwf	___flge@ff2+3
  3391  025F  3080               	movlw	128
  3392  0260  00F6               	movwf	___flge@ff2+2
  3393  0261  3000               	movlw	0
  3394  0262  00F5               	movwf	___flge@ff2+1
  3395  0263  3000               	movlw	0
  3396  0264  00F4               	movwf	___flge@ff2
  3397  0265  3180  2018  3180   	fcall	___flge
  3398  0268  1803               	btfsc	3,0
  3399  0269  2A6B               	goto	u5331
  3400  026A  2A6C               	goto	u5330
  3401  026B                     u5331:
  3402  026B  2A72               	goto	l4094
  3403  026C                     u5330:
  3404  026C                     l4092:
  3405                           
  3406                           ;doprnt.c: 875: eexp--;
  3407  026C  30FF               	movlw	255
  3408  026D  0021               	movlb	1	; select bank1
  3409  026E  07BB               	addwf	sprintf@eexp^(0+128),f
  3410  026F  30FF               	movlw	255
  3411  0270  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  3412  0271  2A8F               	goto	l449
  3413  0272                     l4094:
  3414                           
  3415                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  3416  0272  0021               	movlb	1	; select bank1
  3417  0273  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  3418  0274  00F3               	movwf	___flge@ff1+3
  3419  0275  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  3420  0276  00F2               	movwf	___flge@ff1+2
  3421  0277  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  3422  0278  00F1               	movwf	___flge@ff1+1
  3423  0279  0835               	movf	sprintf@tmpval^(0+128),w
  3424  027A  00F0               	movwf	___flge@ff1
  3425  027B  3041               	movlw	65
  3426  027C  00F7               	movwf	___flge@ff2+3
  3427  027D  3020               	movlw	32
  3428  027E  00F6               	movwf	___flge@ff2+2
  3429  027F  3000               	movlw	0
  3430  0280  00F5               	movwf	___flge@ff2+1
  3431  0281  3000               	movlw	0
  3432  0282  00F4               	movwf	___flge@ff2
  3433  0283  3180  2018  3180   	fcall	___flge
  3434  0286  1C03               	btfss	3,0
  3435  0287  2A89               	goto	u5341
  3436  0288  2A8A               	goto	u5340
  3437  0289                     u5341:
  3438  0289  2A8F               	goto	l449
  3439  028A                     u5340:
  3440  028A                     l4096:
  3441                           
  3442                           ;doprnt.c: 877: eexp++;
  3443  028A  3001               	movlw	1
  3444  028B  0021               	movlb	1	; select bank1
  3445  028C  07BB               	addwf	sprintf@eexp^(0+128),f
  3446  028D  3000               	movlw	0
  3447  028E  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  3448  028F                     l449:
  3449                           
  3450                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  3451  028F  0021               	movlb	1	; select bank1
  3452  0290  0846               	movf	(sprintf@prec+1)^(0+128),w
  3453  0291  3A80               	xorlw	128
  3454  0292  00A8               	movwf	??_sprintf^(0+128)
  3455  0293  3080               	movlw	128
  3456  0294  0228               	subwf	??_sprintf^(0+128),w
  3457  0295  1D03               	skipz
  3458  0296  2A99               	goto	u5355
  3459  0297  300D               	movlw	13
  3460  0298  0245               	subwf	sprintf@prec^(0+128),w
  3461  0299                     u5355:
  3462  0299  1803               	skipnc
  3463  029A  2A9C               	goto	u5351
  3464  029B  2A9D               	goto	u5350
  3465  029C                     u5351:
  3466  029C  2ACE               	goto	l4100
  3467  029D                     u5350:
  3468  029D                     l4098:
  3469                           
  3470                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  3471  029D  0021               	movlb	1	; select bank1
  3472  029E  0845               	movf	sprintf@prec^(0+128),w
  3473  029F  3194  24C4  3180   	fcall	_fround
  3474  02A2  0020               	movlb	0	; select bank0
  3475  02A3  0841               	movf	?_fround+3,w
  3476  02A4  00D4               	movwf	___fladd@b+3
  3477  02A5  0840               	movf	?_fround+2,w
  3478  02A6  00D3               	movwf	___fladd@b+2
  3479  02A7  083F               	movf	?_fround+1,w
  3480  02A8  00D2               	movwf	___fladd@b+1
  3481  02A9  083E               	movf	?_fround,w
  3482  02AA  00D1               	movwf	___fladd@b
  3483  02AB  0021               	movlb	1	; select bank1
  3484  02AC  0844               	movf	(sprintf@fval+3)^(0+128),w
  3485  02AD  0020               	movlb	0	; select bank0
  3486  02AE  00D8               	movwf	___fladd@a+3
  3487  02AF  0021               	movlb	1	; select bank1
  3488  02B0  0843               	movf	(sprintf@fval+2)^(0+128),w
  3489  02B1  0020               	movlb	0	; select bank0
  3490  02B2  00D7               	movwf	___fladd@a+2
  3491  02B3  0021               	movlb	1	; select bank1
  3492  02B4  0842               	movf	(sprintf@fval+1)^(0+128),w
  3493  02B5  0020               	movlb	0	; select bank0
  3494  02B6  00D6               	movwf	___fladd@a+1
  3495  02B7  0021               	movlb	1	; select bank1
  3496  02B8  0841               	movf	sprintf@fval^(0+128),w
  3497  02B9  0020               	movlb	0	; select bank0
  3498  02BA  00D5               	movwf	___fladd@a
  3499  02BB  3188  20F5  3180   	fcall	___fladd
  3500  02BE  0020               	movlb	0	; select bank0
  3501  02BF  0854               	movf	?___fladd+3,w
  3502  02C0  0021               	movlb	1	; select bank1
  3503  02C1  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3504  02C2  0020               	movlb	0	; select bank0
  3505  02C3  0853               	movf	?___fladd+2,w
  3506  02C4  0021               	movlb	1	; select bank1
  3507  02C5  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3508  02C6  0020               	movlb	0	; select bank0
  3509  02C7  0852               	movf	?___fladd+1,w
  3510  02C8  0021               	movlb	1	; select bank1
  3511  02C9  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3512  02CA  0020               	movlb	0	; select bank0
  3513  02CB  0851               	movf	?___fladd,w
  3514  02CC  0021               	movlb	1	; select bank1
  3515  02CD  00C1               	movwf	sprintf@fval^(0+128)
  3516  02CE                     l4100:
  3517                           
  3518                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3519  02CE  0021               	movlb	1	; select bank1
  3520  02CF  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3521  02D0  3A80               	xorlw	128
  3522  02D1  00A8               	movwf	??_sprintf^(0+128)
  3523  02D2  3080               	movlw	128
  3524  02D3  0228               	subwf	??_sprintf^(0+128),w
  3525  02D4  1D03               	skipz
  3526  02D5  2AD8               	goto	u5365
  3527  02D6  300A               	movlw	10
  3528  02D7  023B               	subwf	sprintf@eexp^(0+128),w
  3529  02D8                     u5365:
  3530  02D8  1803               	skipnc
  3531  02D9  2ADB               	goto	u5361
  3532  02DA  2ADC               	goto	u5360
  3533  02DB                     u5361:
  3534  02DB  2B1E               	goto	l4108
  3535  02DC                     u5360:
  3536  02DC                     l4102:
  3537  02DC  0021               	movlb	1	; select bank1
  3538  02DD  0844               	movf	(sprintf@fval+3)^(0+128),w
  3539  02DE  00F3               	movwf	___fleq@ff1+3
  3540  02DF  0843               	movf	(sprintf@fval+2)^(0+128),w
  3541  02E0  00F2               	movwf	___fleq@ff1+2
  3542  02E1  0842               	movf	(sprintf@fval+1)^(0+128),w
  3543  02E2  00F1               	movwf	___fleq@ff1+1
  3544  02E3  0841               	movf	sprintf@fval^(0+128),w
  3545  02E4  00F0               	movwf	___fleq@ff1
  3546  02E5  3000               	movlw	0
  3547  02E6  00F7               	movwf	___fleq@ff2+3
  3548  02E7  3000               	movlw	0
  3549  02E8  00F6               	movwf	___fleq@ff2+2
  3550  02E9  3000               	movlw	0
  3551  02EA  00F5               	movwf	___fleq@ff2+1
  3552  02EB  3000               	movlw	0
  3553  02EC  00F4               	movwf	___fleq@ff2
  3554  02ED  319E  26A5  3180   	fcall	___fleq
  3555  02F0  1803               	btfsc	3,0
  3556  02F1  2AF3               	goto	u5371
  3557  02F2  2AF4               	goto	u5370
  3558  02F3                     u5371:
  3559  02F3  2B7A               	goto	l4122
  3560  02F4                     u5370:
  3561  02F4                     l4104:
  3562  02F4  0021               	movlb	1	; select bank1
  3563  02F5  0844               	movf	(sprintf@fval+3)^(0+128),w
  3564  02F6  0020               	movlb	0	; select bank0
  3565  02F7  00D6               	movwf	___fltol@f1+3
  3566  02F8  0021               	movlb	1	; select bank1
  3567  02F9  0843               	movf	(sprintf@fval+2)^(0+128),w
  3568  02FA  0020               	movlb	0	; select bank0
  3569  02FB  00D5               	movwf	___fltol@f1+2
  3570  02FC  0021               	movlb	1	; select bank1
  3571  02FD  0842               	movf	(sprintf@fval+1)^(0+128),w
  3572  02FE  0020               	movlb	0	; select bank0
  3573  02FF  00D4               	movwf	___fltol@f1+1
  3574  0300  0021               	movlb	1	; select bank1
  3575  0301  0841               	movf	sprintf@fval^(0+128),w
  3576  0302  0020               	movlb	0	; select bank0
  3577  0303  00D3               	movwf	___fltol@f1
  3578  0304  3190  203D  3180   	fcall	___fltol
  3579  0307  0020               	movlb	0	; select bank0
  3580  0308  0856               	movf	?___fltol+3,w
  3581  0309  0455               	iorwf	?___fltol+2,w
  3582  030A  0454               	iorwf	?___fltol+1,w
  3583  030B  0453               	iorwf	?___fltol,w
  3584  030C  1D03               	skipz
  3585  030D  2B0F               	goto	u5381
  3586  030E  2B10               	goto	u5380
  3587  030F                     u5381:
  3588  030F  2B7A               	goto	l4122
  3589  0310                     u5380:
  3590  0310                     l4106:
  3591  0310  0021               	movlb	1	; select bank1
  3592  0311  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3593  0312  3A80               	xorlw	128
  3594  0313  00A8               	movwf	??_sprintf^(0+128)
  3595  0314  3080               	movlw	128
  3596  0315  0228               	subwf	??_sprintf^(0+128),w
  3597  0316  1D03               	skipz
  3598  0317  2B1A               	goto	u5395
  3599  0318  3002               	movlw	2
  3600  0319  023B               	subwf	sprintf@eexp^(0+128),w
  3601  031A                     u5395:
  3602  031A  1C03               	skipc
  3603  031B  2B1D               	goto	u5391
  3604  031C  2B1E               	goto	u5390
  3605  031D                     u5391:
  3606  031D  2B7A               	goto	l4122
  3607  031E                     u5390:
  3608  031E                     l4108:
  3609                           
  3610                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  3611  031E  0021               	movlb	1	; select bank1
  3612  031F  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  3613  0320  00F3               	movwf	___flge@ff1+3
  3614  0321  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  3615  0322  00F2               	movwf	___flge@ff1+2
  3616  0323  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  3617  0324  00F1               	movwf	___flge@ff1+1
  3618  0325  0835               	movf	sprintf@tmpval^(0+128),w
  3619  0326  00F0               	movwf	___flge@ff1
  3620  0327  3040               	movlw	64
  3621  0328  00F7               	movwf	___flge@ff2+3
  3622  0329  3089               	movlw	137
  3623  032A  00F6               	movwf	___flge@ff2+2
  3624  032B  3070               	movlw	112
  3625  032C  00F5               	movwf	___flge@ff2+1
  3626  032D  305F               	movlw	95
  3627  032E  00F4               	movwf	___flge@ff2
  3628  032F  3180  2018  3180   	fcall	___flge
  3629  0332  1803               	btfsc	3,0
  3630  0333  2B35               	goto	u5401
  3631  0334  2B36               	goto	u5400
  3632  0335                     u5401:
  3633  0335  2B3C               	goto	l4112
  3634  0336                     u5400:
  3635  0336                     l4110:
  3636                           
  3637                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3638  0336  30F7               	movlw	247
  3639  0337  0021               	movlb	1	; select bank1
  3640  0338  07BB               	addwf	sprintf@eexp^(0+128),f
  3641  0339  30FF               	movlw	255
  3642  033A  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  3643                           
  3644                           ;doprnt.c: 1148: }else{
  3645  033B  2B41               	goto	l4114
  3646  033C                     l4112:
  3647                           
  3648                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3649  033C  30F8               	movlw	248
  3650  033D  0021               	movlb	1	; select bank1
  3651  033E  07BB               	addwf	sprintf@eexp^(0+128),f
  3652  033F  30FF               	movlw	255
  3653  0340  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  3654  0341                     l4114:
  3655                           
  3656                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3657  0341  083B               	movf	sprintf@eexp^(0+128),w
  3658  0342  318D  2584  3180   	fcall	_scale
  3659  0345  0020               	movlb	0	; select bank0
  3660  0346  0841               	movf	?_scale+3,w
  3661  0347  0021               	movlb	1	; select bank1
  3662  0348  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  3663  0349  0020               	movlb	0	; select bank0
  3664  034A  0840               	movf	?_scale+2,w
  3665  034B  0021               	movlb	1	; select bank1
  3666  034C  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  3667  034D  0020               	movlb	0	; select bank0
  3668  034E  083F               	movf	?_scale+1,w
  3669  034F  0021               	movlb	1	; select bank1
  3670  0350  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  3671  0351  0020               	movlb	0	; select bank0
  3672  0352  083E               	movf	?_scale,w
  3673  0353  0021               	movlb	1	; select bank1
  3674  0354  00B5               	movwf	sprintf@tmpval^(0+128)
  3675  0355                     l4116:
  3676  0355  0844               	movf	(sprintf@fval+3)^(0+128),w
  3677  0356  00F3               	movwf	__div_to_l_@f1+3
  3678  0357  0843               	movf	(sprintf@fval+2)^(0+128),w
  3679  0358  00F2               	movwf	__div_to_l_@f1+2
  3680  0359  0842               	movf	(sprintf@fval+1)^(0+128),w
  3681  035A  00F1               	movwf	__div_to_l_@f1+1
  3682  035B  0841               	movf	sprintf@fval^(0+128),w
  3683  035C  00F0               	movwf	__div_to_l_@f1
  3684  035D  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  3685  035E  00F7               	movwf	__div_to_l_@f2+3
  3686  035F  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  3687  0360  00F6               	movwf	__div_to_l_@f2+2
  3688  0361  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  3689  0362  00F5               	movwf	__div_to_l_@f2+1
  3690  0363  0835               	movf	sprintf@tmpval^(0+128),w
  3691  0364  00F4               	movwf	__div_to_l_@f2
  3692  0365  3191  215E  3180   	fcall	__div_to_l_
  3693  0368  0873               	movf	?__div_to_l_+3,w
  3694  0369  0021               	movlb	1	; select bank1
  3695  036A  00C0               	movwf	(sprintf@val+3)^(0+128)
  3696  036B  0872               	movf	?__div_to_l_+2,w
  3697  036C  00BF               	movwf	(sprintf@val+2)^(0+128)
  3698  036D  0871               	movf	?__div_to_l_+1,w
  3699  036E  00BE               	movwf	(sprintf@val+1)^(0+128)
  3700  036F  0870               	movf	?__div_to_l_,w
  3701  0370  00BD               	movwf	sprintf@val^(0+128)
  3702  0371                     l4120:
  3703                           
  3704                           ;doprnt.c: 1155: fval = 0.0;
  3705  0371  3000               	movlw	0
  3706  0372  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3707  0373  3000               	movlw	0
  3708  0374  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3709  0375  3000               	movlw	0
  3710  0376  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3711  0377  3000               	movlw	0
  3712  0378  00C1               	movwf	sprintf@fval^(0+128)
  3713                           
  3714                           ;doprnt.c: 1156: } else {
  3715  0379  2BD7               	goto	l4126
  3716  037A                     l4122:
  3717                           
  3718                           ;doprnt.c: 1157: val = (unsigned long)fval;
  3719  037A  0021               	movlb	1	; select bank1
  3720  037B  0844               	movf	(sprintf@fval+3)^(0+128),w
  3721  037C  0020               	movlb	0	; select bank0
  3722  037D  00D6               	movwf	___fltol@f1+3
  3723  037E  0021               	movlb	1	; select bank1
  3724  037F  0843               	movf	(sprintf@fval+2)^(0+128),w
  3725  0380  0020               	movlb	0	; select bank0
  3726  0381  00D5               	movwf	___fltol@f1+2
  3727  0382  0021               	movlb	1	; select bank1
  3728  0383  0842               	movf	(sprintf@fval+1)^(0+128),w
  3729  0384  0020               	movlb	0	; select bank0
  3730  0385  00D4               	movwf	___fltol@f1+1
  3731  0386  0021               	movlb	1	; select bank1
  3732  0387  0841               	movf	sprintf@fval^(0+128),w
  3733  0388  0020               	movlb	0	; select bank0
  3734  0389  00D3               	movwf	___fltol@f1
  3735  038A  3190  203D  3180   	fcall	___fltol
  3736  038D  0020               	movlb	0	; select bank0
  3737  038E  0856               	movf	?___fltol+3,w
  3738  038F  0021               	movlb	1	; select bank1
  3739  0390  00C0               	movwf	(sprintf@val+3)^(0+128)
  3740  0391  0020               	movlb	0	; select bank0
  3741  0392  0855               	movf	?___fltol+2,w
  3742  0393  0021               	movlb	1	; select bank1
  3743  0394  00BF               	movwf	(sprintf@val+2)^(0+128)
  3744  0395  0020               	movlb	0	; select bank0
  3745  0396  0854               	movf	?___fltol+1,w
  3746  0397  0021               	movlb	1	; select bank1
  3747  0398  00BE               	movwf	(sprintf@val+1)^(0+128)
  3748  0399  0020               	movlb	0	; select bank0
  3749  039A  0853               	movf	?___fltol,w
  3750  039B  0021               	movlb	1	; select bank1
  3751  039C  00BD               	movwf	sprintf@val^(0+128)
  3752                           
  3753                           ;doprnt.c: 1158: fval -= (double)val;
  3754  039D  0840               	movf	(sprintf@val+3)^(0+128),w
  3755  039E  00F3               	movwf	___xxtofl@val+3
  3756  039F  083F               	movf	(sprintf@val+2)^(0+128),w
  3757  03A0  00F2               	movwf	___xxtofl@val+2
  3758  03A1  083E               	movf	(sprintf@val+1)^(0+128),w
  3759  03A2  00F1               	movwf	___xxtofl@val+1
  3760  03A3  083D               	movf	sprintf@val^(0+128),w
  3761  03A4  00F0               	movwf	___xxtofl@val
  3762  03A5  3000               	movlw	0
  3763  03A6  3190  20B2  3180   	fcall	___xxtofl
  3764  03A9  0873               	movf	?___xxtofl+3,w
  3765  03AA  0020               	movlb	0	; select bank0
  3766  03AB  00E8               	movwf	___flsub@a+3
  3767  03AC  0872               	movf	?___xxtofl+2,w
  3768  03AD  00E7               	movwf	___flsub@a+2
  3769  03AE  0871               	movf	?___xxtofl+1,w
  3770  03AF  00E6               	movwf	___flsub@a+1
  3771  03B0  0870               	movf	?___xxtofl,w
  3772  03B1  00E5               	movwf	___flsub@a
  3773  03B2  0021               	movlb	1	; select bank1
  3774  03B3  0844               	movf	(sprintf@fval+3)^(0+128),w
  3775  03B4  0020               	movlb	0	; select bank0
  3776  03B5  00EC               	movwf	___flsub@b+3
  3777  03B6  0021               	movlb	1	; select bank1
  3778  03B7  0843               	movf	(sprintf@fval+2)^(0+128),w
  3779  03B8  0020               	movlb	0	; select bank0
  3780  03B9  00EB               	movwf	___flsub@b+2
  3781  03BA  0021               	movlb	1	; select bank1
  3782  03BB  0842               	movf	(sprintf@fval+1)^(0+128),w
  3783  03BC  0020               	movlb	0	; select bank0
  3784  03BD  00EA               	movwf	___flsub@b+1
  3785  03BE  0021               	movlb	1	; select bank1
  3786  03BF  0841               	movf	sprintf@fval^(0+128),w
  3787  03C0  0020               	movlb	0	; select bank0
  3788  03C1  00E9               	movwf	___flsub@b
  3789  03C2  319D  2506  3180   	fcall	___flsub
  3790  03C5  0020               	movlb	0	; select bank0
  3791  03C6  0868               	movf	?___flsub+3,w
  3792  03C7  0021               	movlb	1	; select bank1
  3793  03C8  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3794  03C9  0020               	movlb	0	; select bank0
  3795  03CA  0867               	movf	?___flsub+2,w
  3796  03CB  0021               	movlb	1	; select bank1
  3797  03CC  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3798  03CD  0020               	movlb	0	; select bank0
  3799  03CE  0866               	movf	?___flsub+1,w
  3800  03CF  0021               	movlb	1	; select bank1
  3801  03D0  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3802  03D1  0020               	movlb	0	; select bank0
  3803  03D2  0865               	movf	?___flsub,w
  3804  03D3  0021               	movlb	1	; select bank1
  3805  03D4  00C1               	movwf	sprintf@fval^(0+128)
  3806  03D5                     l4124:
  3807                           
  3808                           ;doprnt.c: 1159: eexp = 0;
  3809  03D5  01BB               	clrf	sprintf@eexp^(0+128)
  3810  03D6  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  3811  03D7                     l4126:
  3812                           
  3813                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  3814  03D7  01C7               	clrf	sprintf@c^(0+128)
  3815  03D8  0AC7               	incf	sprintf@c^(0+128),f
  3816  03D9                     l4132:
  3817                           
  3818                           ;doprnt.c: 1163: if(val < dpowers[c])
  3819  03D9  0847               	movf	sprintf@c^(0+128),w
  3820  03DA  00A8               	movwf	??_sprintf^(0+128)
  3821  03DB  01A9               	clrf	(??_sprintf^(0+128)+1)
  3822  03DC  35A8               	lslf	??_sprintf^(0+128),f
  3823  03DD  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  3824  03DE  35A8               	lslf	??_sprintf^(0+128),f
  3825  03DF  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  3826  03E0  3000               	movlw	low (_dpowers| (0+32768))
  3827  03E1  0728               	addwf	??_sprintf^(0+128),w
  3828  03E2  0084               	movwf	4
  3829  03E3  30A0               	movlw	high (_dpowers| (0+32768))
  3830  03E4  3D29               	addwfc	(??_sprintf+1)^(0+128),w
  3831  03E5  0085               	movwf	5
  3832  03E6  3F00               	moviw [0]fsr0
  3833  03E7  00AA               	movwf	(??_sprintf+2)^(0+128)
  3834  03E8  3F01               	moviw [1]fsr0
  3835  03E9  00AB               	movwf	((??_sprintf+2)^(0+128)+1)
  3836  03EA  3F02               	moviw [2]fsr0
  3837  03EB  00AC               	movwf	((??_sprintf+2)^(0+128)+2)
  3838  03EC  3F03               	moviw [3]fsr0
  3839  03ED  00AD               	movwf	((??_sprintf+2)^(0+128)+3)
  3840  03EE  082D               	movf	(??_sprintf+5)^(0+128),w
  3841  03EF  0240               	subwf	(sprintf@val+3)^(0+128),w
  3842  03F0  1D03               	skipz
  3843  03F1  2BFC               	goto	u5415
  3844  03F2  082C               	movf	(??_sprintf+4)^(0+128),w
  3845  03F3  023F               	subwf	(sprintf@val+2)^(0+128),w
  3846  03F4  1D03               	skipz
  3847  03F5  2BFC               	goto	u5415
  3848  03F6  082B               	movf	(??_sprintf+3)^(0+128),w
  3849  03F7  023E               	subwf	(sprintf@val+1)^(0+128),w
  3850  03F8  1D03               	skipz
  3851  03F9  2BFC               	goto	u5415
  3852  03FA  082A               	movf	(??_sprintf+2)^(0+128),w
  3853  03FB  023D               	subwf	sprintf@val^(0+128),w
  3854  03FC                     u5415:
  3855  03FC  1803               	skipnc
  3856  03FD  2BFF               	goto	u5411
  3857  03FE  2C00               	goto	u5410
  3858  03FF                     u5411:
  3859  03FF  2C01               	goto	l4136
  3860  0400                     u5410:
  3861  0400  2C0B               	goto	l4138
  3862  0401                     l4136:
  3863  0401  3001               	movlw	1
  3864  0402  00A8               	movwf	??_sprintf^(0+128)
  3865  0403  0828               	movf	??_sprintf^(0+128),w
  3866  0404  07C7               	addwf	sprintf@c^(0+128),f
  3867  0405  300A               	movlw	10
  3868  0406  0647               	xorwf	sprintf@c^(0+128),w
  3869  0407  1D03               	btfss	3,2
  3870  0408  2C0A               	goto	u5421
  3871  0409  2C0B               	goto	u5420
  3872  040A                     u5421:
  3873  040A  2BD9               	goto	l4132
  3874  040B                     u5420:
  3875  040B                     l4138:
  3876                           
  3877                           ;doprnt.c: 1168: width -= prec + c + eexp;
  3878  040B  0847               	movf	sprintf@c^(0+128),w
  3879  040C  0745               	addwf	sprintf@prec^(0+128),w
  3880  040D  00A8               	movwf	??_sprintf^(0+128)
  3881  040E  0846               	movf	(sprintf@prec+1)^(0+128),w
  3882  040F  1803               	skipnc
  3883  0410  0A46               	incf	(sprintf@prec+1)^(0+128),w
  3884  0411  00A9               	movwf	(??_sprintf^(0+128)+1)
  3885  0412  083B               	movf	sprintf@eexp^(0+128),w
  3886  0413  0728               	addwf	??_sprintf^(0+128),w
  3887  0414  00AA               	movwf	(??_sprintf+2)^(0+128)
  3888  0415  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3889  0416  3D29               	addwfc	(??_sprintf+1)^(0+128),w
  3890  0417  00AB               	movwf	(??_sprintf+3)^(0+128)
  3891  0418  082A               	movf	(??_sprintf+2)^(0+128),w
  3892  0419  02B3               	subwf	sprintf@width^(0+128),f
  3893  041A  082B               	movf	(??_sprintf+3)^(0+128),w
  3894  041B  3BB4               	subwfb	(sprintf@width+1)^(0+128),f
  3895                           
  3896                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  3897  041C  0845               	movf	sprintf@prec^(0+128),w
  3898  041D  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  3899  041E  1903               	btfsc	3,2
  3900  041F  2C21               	goto	u5431
  3901  0420  2C22               	goto	u5430
  3902  0421                     u5431:
  3903  0421  2C26               	goto	l4142
  3904  0422                     u5430:
  3905  0422                     l4140:
  3906                           
  3907                           ;doprnt.c: 1174: width--;
  3908  0422  30FF               	movlw	255
  3909  0423  07B3               	addwf	sprintf@width^(0+128),f
  3910  0424  30FF               	movlw	255
  3911  0425  3DB4               	addwfc	(sprintf@width+1)^(0+128),f
  3912  0426                     l4142:
  3913                           
  3914                           ;doprnt.c: 1175: if(flag & 0x03)
  3915  0426  3003               	movlw	3
  3916  0427  0539               	andwf	sprintf@flag^(0+128),w
  3917  0428  00A8               	movwf	??_sprintf^(0+128)
  3918  0429  3000               	movlw	0
  3919  042A  053A               	andwf	(sprintf@flag+1)^(0+128),w
  3920  042B  00A9               	movwf	(??_sprintf+1)^(0+128)
  3921  042C  0828               	movf	??_sprintf^(0+128),w
  3922  042D  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3923  042E  1903               	btfsc	3,2
  3924  042F  2C31               	goto	u5441
  3925  0430  2C32               	goto	u5440
  3926  0431                     u5441:
  3927  0431  2C43               	goto	l4152
  3928  0432                     u5440:
  3929  0432                     l4144:
  3930                           
  3931                           ;doprnt.c: 1176: width--;
  3932  0432  30FF               	movlw	255
  3933  0433  07B3               	addwf	sprintf@width^(0+128),f
  3934  0434  30FF               	movlw	255
  3935  0435  3DB4               	addwfc	(sprintf@width+1)^(0+128),f
  3936  0436  2C43               	goto	l4152
  3937  0437                     l4146:
  3938                           
  3939                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  3940  0437  0021               	movlb	1	; select bank1
  3941  0438  0820               	movf	sprintf@sp^(0+128),w
  3942  0439  0086               	movwf	6
  3943  043A  0821               	movf	(sprintf@sp+1)^(0+128),w
  3944  043B  0087               	movwf	7
  3945  043C  3020               	movlw	32
  3946  043D  0081               	movwf	1
  3947  043E                     l4148:
  3948  043E  3001               	movlw	1
  3949  043F  07A0               	addwf	sprintf@sp^(0+128),f
  3950  0440  3000               	movlw	0
  3951  0441  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  3952  0442  2C32               	goto	l4144
  3953  0443                     l4152:
  3954  0443  0834               	movf	(sprintf@width+1)^(0+128),w
  3955  0444  3A80               	xorlw	128
  3956  0445  00A8               	movwf	??_sprintf^(0+128)
  3957  0446  3080               	movlw	128
  3958  0447  0228               	subwf	??_sprintf^(0+128),w
  3959  0448  1D03               	skipz
  3960  0449  2C4C               	goto	u5455
  3961  044A  3001               	movlw	1
  3962  044B  0233               	subwf	sprintf@width^(0+128),w
  3963  044C                     u5455:
  3964  044C  1803               	skipnc
  3965  044D  2C4F               	goto	u5451
  3966  044E  2C50               	goto	u5450
  3967  044F                     u5451:
  3968  044F  2C37               	goto	l4146
  3969  0450                     u5450:
  3970  0450                     l4154:
  3971                           
  3972                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  3973  0450  3003               	movlw	3
  3974  0451  0021               	movlb	1	; select bank1
  3975  0452  0539               	andwf	sprintf@flag^(0+128),w
  3976  0453  00A8               	movwf	??_sprintf^(0+128)
  3977  0454  3000               	movlw	0
  3978  0455  053A               	andwf	(sprintf@flag+1)^(0+128),w
  3979  0456  00A9               	movwf	(??_sprintf+1)^(0+128)
  3980  0457  0828               	movf	??_sprintf^(0+128),w
  3981  0458  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3982  0459  1903               	btfsc	3,2
  3983  045A  2C5C               	goto	u5461
  3984  045B  2C5D               	goto	u5460
  3985  045C                     u5461:
  3986  045C  2CC7               	goto	l4168
  3987  045D                     u5460:
  3988  045D                     l4156:
  3989                           
  3990                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  3991  045D  0820               	movf	sprintf@sp^(0+128),w
  3992  045E  0086               	movwf	6
  3993  045F  0821               	movf	(sprintf@sp+1)^(0+128),w
  3994  0460  0087               	movwf	7
  3995  0461  302D               	movlw	45
  3996  0462  0081               	movwf	1
  3997  0463                     l4158:
  3998  0463  3001               	movlw	1
  3999  0464  07A0               	addwf	sprintf@sp^(0+128),f
  4000  0465  3000               	movlw	0
  4001  0466  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  4002  0467  2CC7               	goto	l4168
  4003  0468                     l4160:
  4004                           
  4005                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  4006  0468  0847               	movf	sprintf@c^(0+128),w
  4007  0469  00A8               	movwf	??_sprintf^(0+128)
  4008  046A  01A9               	clrf	(??_sprintf^(0+128)+1)
  4009  046B  35A8               	lslf	??_sprintf^(0+128),f
  4010  046C  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4011  046D  35A8               	lslf	??_sprintf^(0+128),f
  4012  046E  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4013  046F  3000               	movlw	low (_dpowers| (0+32768))
  4014  0470  0728               	addwf	??_sprintf^(0+128),w
  4015  0471  0084               	movwf	4
  4016  0472  30A0               	movlw	high (_dpowers| (0+32768))
  4017  0473  3D29               	addwfc	(??_sprintf+1)^(0+128),w
  4018  0474  0085               	movwf	5
  4019  0475  3F00               	moviw [0]fsr0
  4020  0476  00F0               	movwf	___lldiv@divisor
  4021  0477  3F01               	moviw [1]fsr0
  4022  0478  00F1               	movwf	___lldiv@divisor+1
  4023  0479  3F02               	moviw [2]fsr0
  4024  047A  00F2               	movwf	___lldiv@divisor+2
  4025  047B  3F03               	moviw [3]fsr0
  4026  047C  00F3               	movwf	___lldiv@divisor+3
  4027  047D  0840               	movf	(sprintf@val+3)^(0+128),w
  4028  047E  00F7               	movwf	___lldiv@dividend+3
  4029  047F  083F               	movf	(sprintf@val+2)^(0+128),w
  4030  0480  00F6               	movwf	___lldiv@dividend+2
  4031  0481  083E               	movf	(sprintf@val+1)^(0+128),w
  4032  0482  00F5               	movwf	___lldiv@dividend+1
  4033  0483  083D               	movf	sprintf@val^(0+128),w
  4034  0484  00F4               	movwf	___lldiv@dividend
  4035  0485  319F  2746  3180   	fcall	___lldiv
  4036  0488  0873               	movf	?___lldiv+3,w
  4037  0489  0021               	movlb	1	; select bank1
  4038  048A  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  4039  048B  0872               	movf	?___lldiv+2,w
  4040  048C  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  4041  048D  0871               	movf	?___lldiv+1,w
  4042  048E  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  4043  048F  0870               	movf	?___lldiv,w
  4044  0490  00B5               	movwf	sprintf@tmpval^(0+128)
  4045  0491                     l4162:
  4046                           
  4047                           ;doprnt.c: 1228: tmpval.vd %= 10;
  4048  0491  3000               	movlw	0
  4049  0492  0020               	movlb	0	; select bank0
  4050  0493  00A3               	movwf	___llmod@divisor+3
  4051  0494  3000               	movlw	0
  4052  0495  00A2               	movwf	___llmod@divisor+2
  4053  0496  3000               	movlw	0
  4054  0497  00A1               	movwf	___llmod@divisor+1
  4055  0498  300A               	movlw	10
  4056  0499  00A0               	movwf	___llmod@divisor
  4057  049A  0021               	movlb	1	; select bank1
  4058  049B  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  4059  049C  0020               	movlb	0	; select bank0
  4060  049D  00A7               	movwf	___llmod@dividend+3
  4061  049E  0021               	movlb	1	; select bank1
  4062  049F  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  4063  04A0  0020               	movlb	0	; select bank0
  4064  04A1  00A6               	movwf	___llmod@dividend+2
  4065  04A2  0021               	movlb	1	; select bank1
  4066  04A3  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  4067  04A4  0020               	movlb	0	; select bank0
  4068  04A5  00A5               	movwf	___llmod@dividend+1
  4069  04A6  0021               	movlb	1	; select bank1
  4070  04A7  0835               	movf	sprintf@tmpval^(0+128),w
  4071  04A8  0020               	movlb	0	; select bank0
  4072  04A9  00A4               	movwf	___llmod@dividend
  4073  04AA  319E  260C  3180   	fcall	___llmod
  4074  04AD  0020               	movlb	0	; select bank0
  4075  04AE  0823               	movf	?___llmod+3,w
  4076  04AF  0021               	movlb	1	; select bank1
  4077  04B0  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  4078  04B1  0020               	movlb	0	; select bank0
  4079  04B2  0822               	movf	?___llmod+2,w
  4080  04B3  0021               	movlb	1	; select bank1
  4081  04B4  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  4082  04B5  0020               	movlb	0	; select bank0
  4083  04B6  0821               	movf	?___llmod+1,w
  4084  04B7  0021               	movlb	1	; select bank1
  4085  04B8  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  4086  04B9  0020               	movlb	0	; select bank0
  4087  04BA  0820               	movf	?___llmod,w
  4088  04BB  0021               	movlb	1	; select bank1
  4089  04BC  00B5               	movwf	sprintf@tmpval^(0+128)
  4090  04BD                     l4164:
  4091                           
  4092                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  4093  04BD  0835               	movf	sprintf@tmpval^(0+128),w
  4094  04BE  3E30               	addlw	48
  4095  04BF  00A8               	movwf	??_sprintf^(0+128)
  4096  04C0  0820               	movf	sprintf@sp^(0+128),w
  4097  04C1  0086               	movwf	6
  4098  04C2  0821               	movf	(sprintf@sp+1)^(0+128),w
  4099  04C3  0087               	movwf	7
  4100  04C4  0828               	movf	??_sprintf^(0+128),w
  4101  04C5  0081               	movwf	1
  4102  04C6  2C63               	goto	l4158
  4103  04C7                     l4168:
  4104  04C7  3001               	movlw	1
  4105  04C8  02C7               	subwf	sprintf@c^(0+128),f
  4106  04C9  0A47               	incf	sprintf@c^(0+128),w
  4107  04CA  1D03               	btfss	3,2
  4108  04CB  2CCD               	goto	u5471
  4109  04CC  2CCE               	goto	u5470
  4110  04CD                     u5471:
  4111  04CD  2C68               	goto	l4160
  4112  04CE                     u5470:
  4113  04CE  2CDE               	goto	l4176
  4114  04CF                     l4170:
  4115                           
  4116                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  4117  04CF  0021               	movlb	1	; select bank1
  4118  04D0  0820               	movf	sprintf@sp^(0+128),w
  4119  04D1  0086               	movwf	6
  4120  04D2  0821               	movf	(sprintf@sp+1)^(0+128),w
  4121  04D3  0087               	movwf	7
  4122  04D4  3030               	movlw	48
  4123  04D5  0081               	movwf	1
  4124  04D6                     l4172:
  4125  04D6  3001               	movlw	1
  4126  04D7  07A0               	addwf	sprintf@sp^(0+128),f
  4127  04D8  3000               	movlw	0
  4128  04D9  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  4129  04DA                     l4174:
  4130                           
  4131                           ;doprnt.c: 1235: eexp--;
  4132  04DA  30FF               	movlw	255
  4133  04DB  07BB               	addwf	sprintf@eexp^(0+128),f
  4134  04DC  30FF               	movlw	255
  4135  04DD  3DBC               	addwfc	(sprintf@eexp+1)^(0+128),f
  4136  04DE                     l4176:
  4137  04DE  083C               	movf	(sprintf@eexp+1)^(0+128),w
  4138  04DF  3A80               	xorlw	128
  4139  04E0  00A8               	movwf	??_sprintf^(0+128)
  4140  04E1  3080               	movlw	128
  4141  04E2  0228               	subwf	??_sprintf^(0+128),w
  4142  04E3  1D03               	skipz
  4143  04E4  2CE7               	goto	u5485
  4144  04E5  3001               	movlw	1
  4145  04E6  023B               	subwf	sprintf@eexp^(0+128),w
  4146  04E7                     u5485:
  4147  04E7  1803               	skipnc
  4148  04E8  2CEA               	goto	u5481
  4149  04E9  2CEB               	goto	u5480
  4150  04EA                     u5481:
  4151  04EA  2CCF               	goto	l4170
  4152  04EB                     u5480:
  4153  04EB                     l4178:
  4154                           
  4155                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  4156  04EB  0021               	movlb	1	; select bank1
  4157  04EC  0846               	movf	(sprintf@prec+1)^(0+128),w
  4158  04ED  3A80               	xorlw	128
  4159  04EE  00A8               	movwf	??_sprintf^(0+128)
  4160  04EF  3080               	movlw	128
  4161  04F0  0228               	subwf	??_sprintf^(0+128),w
  4162  04F1  1D03               	skipz
  4163  04F2  2CF5               	goto	u5495
  4164  04F3  3009               	movlw	9
  4165  04F4  0245               	subwf	sprintf@prec^(0+128),w
  4166  04F5                     u5495:
  4167  04F5  1C03               	skipc
  4168  04F6  2CF8               	goto	u5491
  4169  04F7  2CF9               	goto	u5490
  4170  04F8                     u5491:
  4171  04F8  2CFF               	goto	l4182
  4172  04F9                     u5490:
  4173  04F9                     l4180:
  4174                           
  4175                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4176  04F9  3008               	movlw	8
  4177  04FA  0021               	movlb	1	; select bank1
  4178  04FB  00A8               	movwf	??_sprintf^(0+128)
  4179  04FC  0828               	movf	??_sprintf^(0+128),w
  4180  04FD  00C7               	movwf	sprintf@c^(0+128)
  4181  04FE  2D04               	goto	l481
  4182  04FF                     l4182:
  4183                           
  4184                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  4185  04FF  0021               	movlb	1	; select bank1
  4186  0500  0845               	movf	sprintf@prec^(0+128),w
  4187  0501  00A8               	movwf	??_sprintf^(0+128)
  4188  0502  0828               	movf	??_sprintf^(0+128),w
  4189  0503  00C7               	movwf	sprintf@c^(0+128)
  4190  0504                     l481:
  4191                           
  4192                           ;doprnt.c: 1241: prec -= (int)c;
  4193  0504  0847               	movf	sprintf@c^(0+128),w
  4194  0505  00A8               	movwf	??_sprintf^(0+128)
  4195  0506  01A9               	clrf	(??_sprintf^(0+128)+1)
  4196  0507  0828               	movf	??_sprintf^(0+128),w
  4197  0508  02C5               	subwf	sprintf@prec^(0+128),f
  4198  0509  0829               	movf	(??_sprintf+1)^(0+128),w
  4199  050A  3BC6               	subwfb	(sprintf@prec+1)^(0+128),f
  4200  050B                     l4184:
  4201                           
  4202                           ;doprnt.c: 1245: if(c)
  4203  050B  0847               	movf	sprintf@c^(0+128),w
  4204  050C  1903               	btfsc	3,2
  4205  050D  2D0F               	goto	u5501
  4206  050E  2D10               	goto	u5500
  4207  050F                     u5501:
  4208  050F  2D1A               	goto	l4190
  4209  0510                     u5500:
  4210  0510                     l4186:
  4211                           
  4212                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  4213  0510  0820               	movf	sprintf@sp^(0+128),w
  4214  0511  0086               	movwf	6
  4215  0512  0821               	movf	(sprintf@sp+1)^(0+128),w
  4216  0513  0087               	movwf	7
  4217  0514  302E               	movlw	46
  4218  0515  0081               	movwf	1
  4219  0516                     l4188:
  4220  0516  3001               	movlw	1
  4221  0517  07A0               	addwf	sprintf@sp^(0+128),f
  4222  0518  3000               	movlw	0
  4223  0519  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  4224  051A                     l4190:
  4225                           
  4226                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4227  051A  0847               	movf	sprintf@c^(0+128),w
  4228  051B  318D  2584  3180   	fcall	_scale
  4229  051E  0020               	movlb	0	; select bank0
  4230  051F  0841               	movf	?_scale+3,w
  4231  0520  0021               	movlb	1	; select bank1
  4232  0521  00B1               	movwf	(_sprintf$1082+3)^(0+128)
  4233  0522  0020               	movlb	0	; select bank0
  4234  0523  0840               	movf	?_scale+2,w
  4235  0524  0021               	movlb	1	; select bank1
  4236  0525  00B0               	movwf	(_sprintf$1082+2)^(0+128)
  4237  0526  0020               	movlb	0	; select bank0
  4238  0527  083F               	movf	?_scale+1,w
  4239  0528  0021               	movlb	1	; select bank1
  4240  0529  00AF               	movwf	(_sprintf$1082+1)^(0+128)
  4241  052A  0020               	movlb	0	; select bank0
  4242  052B  083E               	movf	?_scale,w
  4243  052C  0021               	movlb	1	; select bank1
  4244  052D  00AE               	movwf	_sprintf$1082^(0+128)
  4245  052E                     l4192:
  4246                           
  4247                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4248  052E  0831               	movf	(_sprintf$1082+3)^(0+128),w
  4249  052F  0020               	movlb	0	; select bank0
  4250  0530  00AB               	movwf	___flmul@a+3
  4251  0531  0021               	movlb	1	; select bank1
  4252  0532  0830               	movf	(_sprintf$1082+2)^(0+128),w
  4253  0533  0020               	movlb	0	; select bank0
  4254  0534  00AA               	movwf	___flmul@a+2
  4255  0535  0021               	movlb	1	; select bank1
  4256  0536  082F               	movf	(_sprintf$1082+1)^(0+128),w
  4257  0537  0020               	movlb	0	; select bank0
  4258  0538  00A9               	movwf	___flmul@a+1
  4259  0539  0021               	movlb	1	; select bank1
  4260  053A  082E               	movf	_sprintf$1082^(0+128),w
  4261  053B  0020               	movlb	0	; select bank0
  4262  053C  00A8               	movwf	___flmul@a
  4263  053D  0021               	movlb	1	; select bank1
  4264  053E  0844               	movf	(sprintf@fval+3)^(0+128),w
  4265  053F  0020               	movlb	0	; select bank0
  4266  0540  00A7               	movwf	___flmul@b+3
  4267  0541  0021               	movlb	1	; select bank1
  4268  0542  0843               	movf	(sprintf@fval+2)^(0+128),w
  4269  0543  0020               	movlb	0	; select bank0
  4270  0544  00A6               	movwf	___flmul@b+2
  4271  0545  0021               	movlb	1	; select bank1
  4272  0546  0842               	movf	(sprintf@fval+1)^(0+128),w
  4273  0547  0020               	movlb	0	; select bank0
  4274  0548  00A5               	movwf	___flmul@b+1
  4275  0549  0021               	movlb	1	; select bank1
  4276  054A  0841               	movf	sprintf@fval^(0+128),w
  4277  054B  0020               	movlb	0	; select bank0
  4278  054C  00A4               	movwf	___flmul@b
  4279  054D  318B  232D  3180   	fcall	___flmul
  4280  0550  0020               	movlb	0	; select bank0
  4281  0551  0827               	movf	?___flmul+3,w
  4282  0552  00D6               	movwf	___fltol@f1+3
  4283  0553  0826               	movf	?___flmul+2,w
  4284  0554  00D5               	movwf	___fltol@f1+2
  4285  0555  0825               	movf	?___flmul+1,w
  4286  0556  00D4               	movwf	___fltol@f1+1
  4287  0557  0824               	movf	?___flmul,w
  4288  0558  00D3               	movwf	___fltol@f1
  4289  0559  3190  203D  3180   	fcall	___fltol
  4290  055C  0020               	movlb	0	; select bank0
  4291  055D  0856               	movf	?___fltol+3,w
  4292  055E  0021               	movlb	1	; select bank1
  4293  055F  00C0               	movwf	(sprintf@val+3)^(0+128)
  4294  0560  0020               	movlb	0	; select bank0
  4295  0561  0855               	movf	?___fltol+2,w
  4296  0562  0021               	movlb	1	; select bank1
  4297  0563  00BF               	movwf	(sprintf@val+2)^(0+128)
  4298  0564  0020               	movlb	0	; select bank0
  4299  0565  0854               	movf	?___fltol+1,w
  4300  0566  0021               	movlb	1	; select bank1
  4301  0567  00BE               	movwf	(sprintf@val+1)^(0+128)
  4302  0568  0020               	movlb	0	; select bank0
  4303  0569  0853               	movf	?___fltol,w
  4304  056A  0021               	movlb	1	; select bank1
  4305  056B  00BD               	movwf	sprintf@val^(0+128)
  4306                           
  4307                           ;doprnt.c: 1254: while(c--) {
  4308  056C  2E08               	goto	l4204
  4309  056D                     l4194:
  4310                           
  4311                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  4312  056D  0847               	movf	sprintf@c^(0+128),w
  4313  056E  00A8               	movwf	??_sprintf^(0+128)
  4314  056F  01A9               	clrf	(??_sprintf^(0+128)+1)
  4315  0570  35A8               	lslf	??_sprintf^(0+128),f
  4316  0571  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4317  0572  35A8               	lslf	??_sprintf^(0+128),f
  4318  0573  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4319  0574  3000               	movlw	low (_dpowers| (0+32768))
  4320  0575  0728               	addwf	??_sprintf^(0+128),w
  4321  0576  0084               	movwf	4
  4322  0577  30A0               	movlw	high (_dpowers| (0+32768))
  4323  0578  3D29               	addwfc	(??_sprintf+1)^(0+128),w
  4324  0579  0085               	movwf	5
  4325  057A  3F00               	moviw [0]fsr0
  4326  057B  00F0               	movwf	___lldiv@divisor
  4327  057C  3F01               	moviw [1]fsr0
  4328  057D  00F1               	movwf	___lldiv@divisor+1
  4329  057E  3F02               	moviw [2]fsr0
  4330  057F  00F2               	movwf	___lldiv@divisor+2
  4331  0580  3F03               	moviw [3]fsr0
  4332  0581  00F3               	movwf	___lldiv@divisor+3
  4333  0582  0840               	movf	(sprintf@val+3)^(0+128),w
  4334  0583  00F7               	movwf	___lldiv@dividend+3
  4335  0584  083F               	movf	(sprintf@val+2)^(0+128),w
  4336  0585  00F6               	movwf	___lldiv@dividend+2
  4337  0586  083E               	movf	(sprintf@val+1)^(0+128),w
  4338  0587  00F5               	movwf	___lldiv@dividend+1
  4339  0588  083D               	movf	sprintf@val^(0+128),w
  4340  0589  00F4               	movwf	___lldiv@dividend
  4341  058A  319F  2746  3180   	fcall	___lldiv
  4342  058D  0873               	movf	?___lldiv+3,w
  4343  058E  0021               	movlb	1	; select bank1
  4344  058F  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  4345  0590  0872               	movf	?___lldiv+2,w
  4346  0591  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  4347  0592  0871               	movf	?___lldiv+1,w
  4348  0593  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  4349  0594  0870               	movf	?___lldiv,w
  4350  0595  00B5               	movwf	sprintf@tmpval^(0+128)
  4351  0596                     l4196:
  4352                           
  4353                           ;doprnt.c: 1256: tmpval.vd %= 10;
  4354  0596  3000               	movlw	0
  4355  0597  0020               	movlb	0	; select bank0
  4356  0598  00A3               	movwf	___llmod@divisor+3
  4357  0599  3000               	movlw	0
  4358  059A  00A2               	movwf	___llmod@divisor+2
  4359  059B  3000               	movlw	0
  4360  059C  00A1               	movwf	___llmod@divisor+1
  4361  059D  300A               	movlw	10
  4362  059E  00A0               	movwf	___llmod@divisor
  4363  059F  0021               	movlb	1	; select bank1
  4364  05A0  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  4365  05A1  0020               	movlb	0	; select bank0
  4366  05A2  00A7               	movwf	___llmod@dividend+3
  4367  05A3  0021               	movlb	1	; select bank1
  4368  05A4  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  4369  05A5  0020               	movlb	0	; select bank0
  4370  05A6  00A6               	movwf	___llmod@dividend+2
  4371  05A7  0021               	movlb	1	; select bank1
  4372  05A8  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  4373  05A9  0020               	movlb	0	; select bank0
  4374  05AA  00A5               	movwf	___llmod@dividend+1
  4375  05AB  0021               	movlb	1	; select bank1
  4376  05AC  0835               	movf	sprintf@tmpval^(0+128),w
  4377  05AD  0020               	movlb	0	; select bank0
  4378  05AE  00A4               	movwf	___llmod@dividend
  4379  05AF  319E  260C  3180   	fcall	___llmod
  4380  05B2  0020               	movlb	0	; select bank0
  4381  05B3  0823               	movf	?___llmod+3,w
  4382  05B4  0021               	movlb	1	; select bank1
  4383  05B5  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  4384  05B6  0020               	movlb	0	; select bank0
  4385  05B7  0822               	movf	?___llmod+2,w
  4386  05B8  0021               	movlb	1	; select bank1
  4387  05B9  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  4388  05BA  0020               	movlb	0	; select bank0
  4389  05BB  0821               	movf	?___llmod+1,w
  4390  05BC  0021               	movlb	1	; select bank1
  4391  05BD  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  4392  05BE  0020               	movlb	0	; select bank0
  4393  05BF  0820               	movf	?___llmod,w
  4394  05C0  0021               	movlb	1	; select bank1
  4395  05C1  00B5               	movwf	sprintf@tmpval^(0+128)
  4396  05C2                     l4198:
  4397                           
  4398                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  4399  05C2  0835               	movf	sprintf@tmpval^(0+128),w
  4400  05C3  3E30               	addlw	48
  4401  05C4  00A8               	movwf	??_sprintf^(0+128)
  4402  05C5  0820               	movf	sprintf@sp^(0+128),w
  4403  05C6  0086               	movwf	6
  4404  05C7  0821               	movf	(sprintf@sp+1)^(0+128),w
  4405  05C8  0087               	movwf	7
  4406  05C9  0828               	movf	??_sprintf^(0+128),w
  4407  05CA  0081               	movwf	1
  4408  05CB                     l4200:
  4409  05CB  3001               	movlw	1
  4410  05CC  07A0               	addwf	sprintf@sp^(0+128),f
  4411  05CD  3000               	movlw	0
  4412  05CE  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  4413  05CF                     l4202:
  4414                           
  4415                           ;doprnt.c: 1258: val %= dpowers[c];
  4416  05CF  0847               	movf	sprintf@c^(0+128),w
  4417  05D0  00A8               	movwf	??_sprintf^(0+128)
  4418  05D1  01A9               	clrf	(??_sprintf^(0+128)+1)
  4419  05D2  35A8               	lslf	??_sprintf^(0+128),f
  4420  05D3  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4421  05D4  35A8               	lslf	??_sprintf^(0+128),f
  4422  05D5  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4423  05D6  3000               	movlw	low (_dpowers| (0+32768))
  4424  05D7  0728               	addwf	??_sprintf^(0+128),w
  4425  05D8  0084               	movwf	4
  4426  05D9  30A0               	movlw	high (_dpowers| (0+32768))
  4427  05DA  3D29               	addwfc	(??_sprintf+1)^(0+128),w
  4428  05DB  0085               	movwf	5
  4429  05DC  3F00               	moviw [0]fsr0
  4430  05DD  0020               	movlb	0	; select bank0
  4431  05DE  00A0               	movwf	___llmod@divisor
  4432  05DF  3F01               	moviw [1]fsr0
  4433  05E0  00A1               	movwf	___llmod@divisor+1
  4434  05E1  3F02               	moviw [2]fsr0
  4435  05E2  00A2               	movwf	___llmod@divisor+2
  4436  05E3  3F03               	moviw [3]fsr0
  4437  05E4  00A3               	movwf	___llmod@divisor+3
  4438  05E5  0021               	movlb	1	; select bank1
  4439  05E6  0840               	movf	(sprintf@val+3)^(0+128),w
  4440  05E7  0020               	movlb	0	; select bank0
  4441  05E8  00A7               	movwf	___llmod@dividend+3
  4442  05E9  0021               	movlb	1	; select bank1
  4443  05EA  083F               	movf	(sprintf@val+2)^(0+128),w
  4444  05EB  0020               	movlb	0	; select bank0
  4445  05EC  00A6               	movwf	___llmod@dividend+2
  4446  05ED  0021               	movlb	1	; select bank1
  4447  05EE  083E               	movf	(sprintf@val+1)^(0+128),w
  4448  05EF  0020               	movlb	0	; select bank0
  4449  05F0  00A5               	movwf	___llmod@dividend+1
  4450  05F1  0021               	movlb	1	; select bank1
  4451  05F2  083D               	movf	sprintf@val^(0+128),w
  4452  05F3  0020               	movlb	0	; select bank0
  4453  05F4  00A4               	movwf	___llmod@dividend
  4454  05F5  319E  260C  3180   	fcall	___llmod
  4455  05F8  0020               	movlb	0	; select bank0
  4456  05F9  0823               	movf	?___llmod+3,w
  4457  05FA  0021               	movlb	1	; select bank1
  4458  05FB  00C0               	movwf	(sprintf@val+3)^(0+128)
  4459  05FC  0020               	movlb	0	; select bank0
  4460  05FD  0822               	movf	?___llmod+2,w
  4461  05FE  0021               	movlb	1	; select bank1
  4462  05FF  00BF               	movwf	(sprintf@val+2)^(0+128)
  4463  0600  0020               	movlb	0	; select bank0
  4464  0601  0821               	movf	?___llmod+1,w
  4465  0602  0021               	movlb	1	; select bank1
  4466  0603  00BE               	movwf	(sprintf@val+1)^(0+128)
  4467  0604  0020               	movlb	0	; select bank0
  4468  0605  0820               	movf	?___llmod,w
  4469  0606  0021               	movlb	1	; select bank1
  4470  0607  00BD               	movwf	sprintf@val^(0+128)
  4471  0608                     l4204:
  4472  0608  3001               	movlw	1
  4473  0609  02C7               	subwf	sprintf@c^(0+128),f
  4474  060A  0A47               	incf	sprintf@c^(0+128),w
  4475  060B  1D03               	btfss	3,2
  4476  060C  2E0E               	goto	u5511
  4477  060D  2E0F               	goto	u5510
  4478  060E                     u5511:
  4479  060E  2D6D               	goto	l4194
  4480  060F                     u5510:
  4481  060F  2E1E               	goto	l4212
  4482  0610                     l4206:
  4483                           
  4484                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  4485  0610  0820               	movf	sprintf@sp^(0+128),w
  4486  0611  0086               	movwf	6
  4487  0612  0821               	movf	(sprintf@sp+1)^(0+128),w
  4488  0613  0087               	movwf	7
  4489  0614  3030               	movlw	48
  4490  0615  0081               	movwf	1
  4491  0616                     l4208:
  4492  0616  3001               	movlw	1
  4493  0617  07A0               	addwf	sprintf@sp^(0+128),f
  4494  0618  3000               	movlw	0
  4495  0619  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  4496  061A                     l4210:
  4497                           
  4498                           ;doprnt.c: 1263: prec--;
  4499  061A  30FF               	movlw	255
  4500  061B  07C5               	addwf	sprintf@prec^(0+128),f
  4501  061C  30FF               	movlw	255
  4502  061D  3DC6               	addwfc	(sprintf@prec+1)^(0+128),f
  4503  061E                     l4212:
  4504  061E  0845               	movf	sprintf@prec^(0+128),w
  4505  061F  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  4506  0620  1D03               	btfss	3,2
  4507  0621  2E23               	goto	u5521
  4508  0622  2E24               	goto	u5520
  4509  0623                     u5521:
  4510  0623  2E10               	goto	l4206
  4511  0624                     u5520:
  4512  0624  2FC0               	goto	l4306
  4513  0625                     l446:
  4514                           
  4515                           ;doprnt.c: 1272: };doprnt.c: 1277: if((flag & 0x40) == 0x00)
  4516  0625  1B39               	btfsc	sprintf@flag^(0+128),6
  4517  0626  2E28               	goto	u5531
  4518  0627  2E29               	goto	u5530
  4519  0628                     u5531:
  4520  0628  2E65               	goto	l489
  4521  0629                     u5530:
  4522  0629                     l4214:
  4523                           
  4524                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  4525  0629  1E39               	btfss	sprintf@flag^(0+128),4
  4526  062A  2E2C               	goto	u5541
  4527  062B  2E2D               	goto	u5540
  4528  062C                     u5541:
  4529  062C  2E3D               	goto	l4220
  4530  062D                     u5540:
  4531  062D                     l4216:
  4532                           
  4533                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  4534  062D  0832               	movf	sprintf@ap^(0+128),w
  4535  062E  0086               	movwf	6
  4536  062F  0187               	clrf	7
  4537  0630  3F40               	moviw [0]fsr1
  4538  0631  00BD               	movwf	sprintf@val^(0+128)
  4539  0632  3F41               	moviw [1]fsr1
  4540  0633  00BE               	movwf	(sprintf@val+1)^(0+128)
  4541  0634  3F42               	moviw [2]fsr1
  4542  0635  00BF               	movwf	(sprintf@val+2)^(0+128)
  4543  0636  3F43               	moviw [3]fsr1
  4544  0637  00C0               	movwf	(sprintf@val+3)^(0+128)
  4545  0638                     l4218:
  4546  0638  3004               	movlw	4
  4547  0639  00A8               	movwf	??_sprintf^(0+128)
  4548  063A  0828               	movf	??_sprintf^(0+128),w
  4549  063B  07B2               	addwf	sprintf@ap^(0+128),f
  4550  063C  2E51               	goto	l4224
  4551  063D                     l4220:
  4552                           
  4553                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  4554  063D  0832               	movf	sprintf@ap^(0+128),w
  4555  063E  0086               	movwf	6
  4556  063F  0187               	clrf	7
  4557  0640  3F40               	moviw [0]fsr1
  4558  0641  00A8               	movwf	??_sprintf^(0+128)
  4559  0642  3F41               	moviw [1]fsr1
  4560  0643  00A9               	movwf	(??_sprintf^(0+128)+1)
  4561  0644  0828               	movf	??_sprintf^(0+128),w
  4562  0645  00BD               	movwf	sprintf@val^(0+128)
  4563  0646  0829               	movf	(??_sprintf+1)^(0+128),w
  4564  0647  00BE               	movwf	(sprintf@val+1)^(0+128)
  4565  0648  0D89               	rlf	9,f
  4566  0649  3B89               	subwfb	9,f
  4567  064A  0989               	comf	9,f
  4568  064B  00BF               	movwf	(sprintf@val+2)^(0+128)
  4569  064C  00C0               	movwf	(sprintf@val+3)^(0+128)
  4570  064D                     l4222:
  4571  064D  3002               	movlw	2
  4572  064E  00A8               	movwf	??_sprintf^(0+128)
  4573  064F  0828               	movf	??_sprintf^(0+128),w
  4574  0650  07B2               	addwf	sprintf@ap^(0+128),f
  4575  0651                     l4224:
  4576                           
  4577                           ;doprnt.c: 1287: if((long)val < 0) {
  4578  0651  1FC0               	btfss	(sprintf@val+3)^(0+128),7
  4579  0652  2E54               	goto	u5551
  4580  0653  2E55               	goto	u5550
  4581  0654                     u5551:
  4582  0654  2E8A               	goto	l4238
  4583  0655                     u5550:
  4584  0655                     l4226:
  4585                           
  4586                           ;doprnt.c: 1288: flag |= 0x03;
  4587  0655  3003               	movlw	3
  4588  0656  04B9               	iorwf	sprintf@flag^(0+128),f
  4589  0657  3000               	movlw	0
  4590  0658  04BA               	iorwf	(sprintf@flag+1)^(0+128),f
  4591  0659                     l4228:
  4592                           
  4593                           ;doprnt.c: 1289: val = -val;
  4594  0659  09BD               	comf	sprintf@val^(0+128),f
  4595  065A  09BE               	comf	(sprintf@val+1)^(0+128),f
  4596  065B  09BF               	comf	(sprintf@val+2)^(0+128),f
  4597  065C  09C0               	comf	(sprintf@val+3)^(0+128),f
  4598  065D  0ABD               	incf	sprintf@val^(0+128),f
  4599  065E  1903               	skipnz
  4600  065F  0ABE               	incf	(sprintf@val+1)^(0+128),f
  4601  0660  1903               	skipnz
  4602  0661  0ABF               	incf	(sprintf@val+2)^(0+128),f
  4603  0662  1903               	skipnz
  4604  0663  0AC0               	incf	(sprintf@val+3)^(0+128),f
  4605  0664  2E8A               	goto	l4238
  4606  0665                     l489:
  4607                           
  4608                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  4609  0665  1E39               	btfss	sprintf@flag^(0+128),4
  4610  0666  2E68               	goto	u5561
  4611  0667  2E69               	goto	u5560
  4612  0668                     u5561:
  4613  0668  2E79               	goto	l4234
  4614  0669                     u5560:
  4615  0669                     l4230:
  4616                           
  4617                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  4618  0669  0832               	movf	sprintf@ap^(0+128),w
  4619  066A  0086               	movwf	6
  4620  066B  0187               	clrf	7
  4621  066C  3F40               	moviw [0]fsr1
  4622  066D  00BD               	movwf	sprintf@val^(0+128)
  4623  066E  3F41               	moviw [1]fsr1
  4624  066F  00BE               	movwf	(sprintf@val+1)^(0+128)
  4625  0670  3F42               	moviw [2]fsr1
  4626  0671  00BF               	movwf	(sprintf@val+2)^(0+128)
  4627  0672  3F43               	moviw [3]fsr1
  4628  0673  00C0               	movwf	(sprintf@val+3)^(0+128)
  4629  0674                     l4232:
  4630  0674  3004               	movlw	4
  4631  0675  00A8               	movwf	??_sprintf^(0+128)
  4632  0676  0828               	movf	??_sprintf^(0+128),w
  4633  0677  07B2               	addwf	sprintf@ap^(0+128),f
  4634  0678  2E8A               	goto	l4238
  4635  0679                     l4234:
  4636                           
  4637                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  4638  0679  0832               	movf	sprintf@ap^(0+128),w
  4639  067A  0086               	movwf	6
  4640  067B  0187               	clrf	7
  4641  067C  3F40               	moviw [0]fsr1
  4642  067D  00A8               	movwf	??_sprintf^(0+128)
  4643  067E  3F41               	moviw [1]fsr1
  4644  067F  00A9               	movwf	(??_sprintf^(0+128)+1)
  4645  0680  0828               	movf	??_sprintf^(0+128),w
  4646  0681  00BD               	movwf	sprintf@val^(0+128)
  4647  0682  0829               	movf	(??_sprintf+1)^(0+128),w
  4648  0683  00BE               	movwf	(sprintf@val^(0+128)+1)
  4649  0684  01BF               	clrf	(sprintf@val^(0+128)+2)
  4650  0685  01C0               	clrf	(sprintf@val^(0+128)+3)
  4651  0686                     l4236:
  4652  0686  3002               	movlw	2
  4653  0687  00A8               	movwf	??_sprintf^(0+128)
  4654  0688  0828               	movf	??_sprintf^(0+128),w
  4655  0689  07B2               	addwf	sprintf@ap^(0+128),f
  4656  068A                     l4238:
  4657                           
  4658                           ;doprnt.c: 1313: };doprnt.c: 1316: if(prec == 0 && val == 0)
  4659  068A  0845               	movf	sprintf@prec^(0+128),w
  4660  068B  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  4661  068C  1D03               	btfss	3,2
  4662  068D  2E8F               	goto	u5571
  4663  068E  2E90               	goto	u5570
  4664  068F                     u5571:
  4665  068F  2E9C               	goto	l4244
  4666  0690                     u5570:
  4667  0690                     l4240:
  4668  0690  0840               	movf	(sprintf@val+3)^(0+128),w
  4669  0691  043F               	iorwf	(sprintf@val+2)^(0+128),w
  4670  0692  043E               	iorwf	(sprintf@val+1)^(0+128),w
  4671  0693  043D               	iorwf	sprintf@val^(0+128),w
  4672  0694  1D03               	skipz
  4673  0695  2E97               	goto	u5581
  4674  0696  2E98               	goto	u5580
  4675  0697                     u5581:
  4676  0697  2E9C               	goto	l4244
  4677  0698                     u5580:
  4678  0698                     l4242:
  4679                           
  4680                           ;doprnt.c: 1317: prec++;
  4681  0698  3001               	movlw	1
  4682  0699  07C5               	addwf	sprintf@prec^(0+128),f
  4683  069A  3000               	movlw	0
  4684  069B  3DC6               	addwfc	(sprintf@prec+1)^(0+128),f
  4685  069C                     l4244:
  4686                           
  4687                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4688  069C  01C7               	clrf	sprintf@c^(0+128)
  4689  069D  0AC7               	incf	sprintf@c^(0+128),f
  4690  069E                     l4250:
  4691                           
  4692                           ;doprnt.c: 1332: if(val < dpowers[c])
  4693  069E  0847               	movf	sprintf@c^(0+128),w
  4694  069F  00A8               	movwf	??_sprintf^(0+128)
  4695  06A0  01A9               	clrf	(??_sprintf^(0+128)+1)
  4696  06A1  35A8               	lslf	??_sprintf^(0+128),f
  4697  06A2  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4698  06A3  35A8               	lslf	??_sprintf^(0+128),f
  4699  06A4  0DA9               	rlf	(??_sprintf^(0+128)+1),f
  4700  06A5  3000               	movlw	low (_dpowers| (0+32768))
  4701  06A6  0728               	addwf	??_sprintf^(0+128),w
  4702  06A7  0084               	movwf	4
  4703  06A8  30A0               	movlw	high (_dpowers| (0+32768))
  4704  06A9  3D29               	addwfc	(??_sprintf+1)^(0+128),w
  4705  06AA  0085               	movwf	5
  4706  06AB  3F00               	moviw [0]fsr0
  4707  06AC  00AA               	movwf	(??_sprintf+2)^(0+128)
  4708  06AD  3F01               	moviw [1]fsr0
  4709  06AE  00AB               	movwf	((??_sprintf+2)^(0+128)+1)
  4710  06AF  3F02               	moviw [2]fsr0
  4711  06B0  00AC               	movwf	((??_sprintf+2)^(0+128)+2)
  4712  06B1  3F03               	moviw [3]fsr0
  4713  06B2  00AD               	movwf	((??_sprintf+2)^(0+128)+3)
  4714  06B3  082D               	movf	(??_sprintf+5)^(0+128),w
  4715  06B4  0240               	subwf	(sprintf@val+3)^(0+128),w
  4716  06B5  1D03               	skipz
  4717  06B6  2EC1               	goto	u5595
  4718  06B7  082C               	movf	(??_sprintf+4)^(0+128),w
  4719  06B8  023F               	subwf	(sprintf@val+2)^(0+128),w
  4720  06B9  1D03               	skipz
  4721  06BA  2EC1               	goto	u5595
  4722  06BB  082B               	movf	(??_sprintf+3)^(0+128),w
  4723  06BC  023E               	subwf	(sprintf@val+1)^(0+128),w
  4724  06BD  1D03               	skipz
  4725  06BE  2EC1               	goto	u5595
  4726  06BF  082A               	movf	(??_sprintf+2)^(0+128),w
  4727  06C0  023D               	subwf	sprintf@val^(0+128),w
  4728  06C1                     u5595:
  4729  06C1  1803               	skipnc
  4730  06C2  2EC4               	goto	u5591
  4731  06C3  2EC5               	goto	u5590
  4732  06C4                     u5591:
  4733  06C4  2EC6               	goto	l4254
  4734  06C5                     u5590:
  4735  06C5  2ED0               	goto	l4256
  4736  06C6                     l4254:
  4737  06C6  3001               	movlw	1
  4738  06C7  00A8               	movwf	??_sprintf^(0+128)
  4739  06C8  0828               	movf	??_sprintf^(0+128),w
  4740  06C9  07C7               	addwf	sprintf@c^(0+128),f
  4741  06CA  300A               	movlw	10
  4742  06CB  0647               	xorwf	sprintf@c^(0+128),w
  4743  06CC  1D03               	btfss	3,2
  4744  06CD  2ECF               	goto	u5601
  4745  06CE  2ED0               	goto	u5600
  4746  06CF                     u5601:
  4747  06CF  2E9E               	goto	l4250
  4748  06D0                     u5600:
  4749  06D0                     l4256:
  4750                           
  4751                           ;doprnt.c: 1365: if(c < prec)
  4752  06D0  0846               	movf	(sprintf@prec+1)^(0+128),w
  4753  06D1  3A80               	xorlw	128
  4754  06D2  3C80               	sublw	128
  4755  06D3  1D03               	skipz
  4756  06D4  2ED7               	goto	u5615
  4757  06D5  0845               	movf	sprintf@prec^(0+128),w
  4758  06D6  0247               	subwf	sprintf@c^(0+128),w
  4759  06D7                     u5615:
  4760  06D7  1803               	skipnc
  4761  06D8  2EDA               	goto	u5611
  4762  06D9  2EDB               	goto	u5610
  4763  06DA                     u5611:
  4764  06DA  2EE1               	goto	l4260
  4765  06DB                     u5610:
  4766  06DB                     l4258:
  4767                           
  4768                           ;doprnt.c: 1366: c = (char)prec;
  4769  06DB  0021               	movlb	1	; select bank1
  4770  06DC  0845               	movf	sprintf@prec^(0+128),w
  4771  06DD  00A8               	movwf	??_sprintf^(0+128)
  4772  06DE  0828               	movf	??_sprintf^(0+128),w
  4773  06DF  00C7               	movwf	sprintf@c^(0+128)
  4774  06E0  2EF7               	goto	l4264
  4775  06E1                     l4260:
  4776                           
  4777                           ;doprnt.c: 1367: else if(prec < c)
  4778  06E1  0021               	movlb	1	; select bank1
  4779  06E2  0846               	movf	(sprintf@prec+1)^(0+128),w
  4780  06E3  3A80               	xorlw	128
  4781  06E4  00A8               	movwf	??_sprintf^(0+128)
  4782  06E5  3080               	movlw	128
  4783  06E6  0228               	subwf	??_sprintf^(0+128),w
  4784  06E7  1D03               	skipz
  4785  06E8  2EEB               	goto	u5625
  4786  06E9  0847               	movf	sprintf@c^(0+128),w
  4787  06EA  0245               	subwf	sprintf@prec^(0+128),w
  4788  06EB                     u5625:
  4789  06EB  1803               	skipnc
  4790  06EC  2EEE               	goto	u5621
  4791  06ED  2EEF               	goto	u5620
  4792  06EE                     u5621:
  4793  06EE  2EF7               	goto	l4264
  4794  06EF                     u5620:
  4795  06EF                     l4262:
  4796                           
  4797                           ;doprnt.c: 1368: prec = c;
  4798  06EF  0021               	movlb	1	; select bank1
  4799  06F0  0847               	movf	sprintf@c^(0+128),w
  4800  06F1  00A8               	movwf	??_sprintf^(0+128)
  4801  06F2  01A9               	clrf	(??_sprintf^(0+128)+1)
  4802  06F3  0828               	movf	??_sprintf^(0+128),w
  4803  06F4  00C5               	movwf	sprintf@prec^(0+128)
  4804  06F5  0829               	movf	(??_sprintf+1)^(0+128),w
  4805  06F6  00C6               	movwf	(sprintf@prec+1)^(0+128)
  4806  06F7                     l4264:
  4807                           
  4808                           ;doprnt.c: 1371: if(width && flag & 0x03)
  4809  06F7  0021               	movlb	1	; select bank1
  4810  06F8  0833               	movf	sprintf@width^(0+128),w
  4811  06F9  0434               	iorwf	(sprintf@width+1)^(0+128),w
  4812  06FA  1903               	btfsc	3,2
  4813  06FB  2EFD               	goto	u5631
  4814  06FC  2EFE               	goto	u5630
  4815  06FD                     u5631:
  4816  06FD  2F0E               	goto	l4270
  4817  06FE                     u5630:
  4818  06FE                     l4266:
  4819  06FE  3003               	movlw	3
  4820  06FF  0539               	andwf	sprintf@flag^(0+128),w
  4821  0700  00A8               	movwf	??_sprintf^(0+128)
  4822  0701  3000               	movlw	0
  4823  0702  053A               	andwf	(sprintf@flag+1)^(0+128),w
  4824  0703  00A9               	movwf	(??_sprintf+1)^(0+128)
  4825  0704  0828               	movf	??_sprintf^(0+128),w
  4826  0705  0429               	iorwf	(??_sprintf^(0+128)+1),w
  4827  0706  1903               	btfsc	3,2
  4828  0707  2F09               	goto	u5641
  4829  0708  2F0A               	goto	u5640
  4830  0709                     u5641:
  4831  0709  2F0E               	goto	l4270
  4832  070A                     u5640:
  4833  070A                     l4268:
  4834                           
  4835                           ;doprnt.c: 1372: width--;
  4836  070A  30FF               	movlw	255
  4837  070B  07B3               	addwf	sprintf@width^(0+128),f
  4838  070C  30FF               	movlw	255
  4839  070D  3DB4               	addwfc	(sprintf@width+1)^(0+128),f
  4840  070E                     l4270:
  4841                           
  4842                           ;doprnt.c: 1374: if(flag & 0x4000) {
  4843  070E  1F3A               	btfss	(sprintf@flag+1)^(0+128),6
  4844  070F  2F11               	goto	u5651
  4845  0710  2F12               	goto	u5650
  4846  0711                     u5651:
  4847  0711  2F29               	goto	l4278
  4848  0712                     u5650:
  4849  0712                     l4272:
  4850                           
  4851                           ;doprnt.c: 1375: if(width > prec)
  4852  0712  0846               	movf	(sprintf@prec+1)^(0+128),w
  4853  0713  3A80               	xorlw	128
  4854  0714  00A8               	movwf	??_sprintf^(0+128)
  4855  0715  0834               	movf	(sprintf@width+1)^(0+128),w
  4856  0716  3A80               	xorlw	128
  4857  0717  0228               	subwf	??_sprintf^(0+128),w
  4858  0718  1D03               	skipz
  4859  0719  2F1C               	goto	u5665
  4860  071A  0833               	movf	sprintf@width^(0+128),w
  4861  071B  0245               	subwf	sprintf@prec^(0+128),w
  4862  071C                     u5665:
  4863  071C  1803               	skipnc
  4864  071D  2F1F               	goto	u5661
  4865  071E  2F20               	goto	u5660
  4866  071F                     u5661:
  4867  071F  2F26               	goto	l4276
  4868  0720                     u5660:
  4869  0720                     l4274:
  4870                           
  4871                           ;doprnt.c: 1376: width -= prec;
  4872  0720  0021               	movlb	1	; select bank1
  4873  0721  0845               	movf	sprintf@prec^(0+128),w
  4874  0722  02B3               	subwf	sprintf@width^(0+128),f
  4875  0723  0846               	movf	(sprintf@prec+1)^(0+128),w
  4876  0724  3BB4               	subwfb	(sprintf@width+1)^(0+128),f
  4877  0725  2F29               	goto	l4278
  4878  0726                     l4276:
  4879                           
  4880                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  4881  0726  0021               	movlb	1	; select bank1
  4882  0727  01B3               	clrf	sprintf@width^(0+128)
  4883  0728  01B4               	clrf	(sprintf@width+1)^(0+128)
  4884  0729                     l4278:
  4885                           
  4886                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  4887  0729  0834               	movf	(sprintf@width+1)^(0+128),w
  4888  072A  3A80               	xorlw	128
  4889  072B  3C80               	sublw	128
  4890  072C  1D03               	skipz
  4891  072D  2F30               	goto	u5675
  4892  072E  0833               	movf	sprintf@width^(0+128),w
  4893  072F  0247               	subwf	sprintf@c^(0+128),w
  4894  0730                     u5675:
  4895  0730  1803               	skipnc
  4896  0731  2F33               	goto	u5671
  4897  0732  2F34               	goto	u5670
  4898  0733                     u5671:
  4899  0733  2F3D               	goto	l4282
  4900  0734                     u5670:
  4901  0734                     l4280:
  4902                           
  4903                           ;doprnt.c: 1408: width -= c;
  4904  0734  0021               	movlb	1	; select bank1
  4905  0735  0847               	movf	sprintf@c^(0+128),w
  4906  0736  00A8               	movwf	??_sprintf^(0+128)
  4907  0737  01A9               	clrf	(??_sprintf^(0+128)+1)
  4908  0738  0828               	movf	??_sprintf^(0+128),w
  4909  0739  02B3               	subwf	sprintf@width^(0+128),f
  4910  073A  0829               	movf	(??_sprintf+1)^(0+128),w
  4911  073B  3BB4               	subwfb	(sprintf@width+1)^(0+128),f
  4912  073C  2F40               	goto	l4284
  4913  073D                     l4282:
  4914                           
  4915                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  4916  073D  0021               	movlb	1	; select bank1
  4917  073E  01B3               	clrf	sprintf@width^(0+128)
  4918  073F  01B4               	clrf	(sprintf@width+1)^(0+128)
  4919  0740                     l4284:
  4920                           
  4921                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  4922  0740  0833               	movf	sprintf@width^(0+128),w
  4923  0741  0434               	iorwf	(sprintf@width+1)^(0+128),w
  4924  0742  1903               	btfsc	3,2
  4925  0743  2F45               	goto	u5681
  4926  0744  2F46               	goto	u5680
  4927  0745                     u5681:
  4928  0745  2F5A               	goto	l4292
  4929  0746                     u5680:
  4930  0746                     l4286:
  4931                           
  4932                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  4933  0746  0820               	movf	sprintf@sp^(0+128),w
  4934  0747  0086               	movwf	6
  4935  0748  0821               	movf	(sprintf@sp+1)^(0+128),w
  4936  0749  0087               	movwf	7
  4937  074A  3020               	movlw	32
  4938  074B  0081               	movwf	1
  4939  074C                     l4288:
  4940  074C  3001               	movlw	1
  4941  074D  07A0               	addwf	sprintf@sp^(0+128),f
  4942  074E  3000               	movlw	0
  4943  074F  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  4944  0750                     l4290:
  4945                           
  4946                           ;doprnt.c: 1457: while(--width);
  4947  0750  30FF               	movlw	255
  4948  0751  07B3               	addwf	sprintf@width^(0+128),f
  4949  0752  30FF               	movlw	255
  4950  0753  3DB4               	addwfc	(sprintf@width+1)^(0+128),f
  4951  0754  0833               	movf	sprintf@width^(0+128),w
  4952  0755  0434               	iorwf	(sprintf@width+1)^(0+128),w
  4953  0756  1D03               	btfss	3,2
  4954  0757  2F59               	goto	u5691
  4955  0758  2F5A               	goto	u5690
  4956  0759                     u5691:
  4957  0759  2F46               	goto	l4286
  4958  075A                     u5690:
  4959  075A                     l4292:
  4960                           
  4961                           ;doprnt.c: 1464: if(flag & 0x03)
  4962  075A  3003               	movlw	3
  4963  075B  0539               	andwf	sprintf@flag^(0+128),w
  4964  075C  00A8               	movwf	??_sprintf^(0+128)
  4965  075D  3000               	movlw	0
  4966  075E  053A               	andwf	(sprintf@flag+1)^(0+128),w
  4967  075F  00A9               	movwf	(??_sprintf+1)^(0+128)
  4968  0760  0828               	movf	??_sprintf^(0+128),w
  4969  0761  0429               	iorwf	(??_sprintf^(0+128)+1),w
  4970  0762  1903               	btfsc	3,2
  4971  0763  2F65               	goto	u5701
  4972  0764  2F66               	goto	u5700
  4973  0765                     u5701:
  4974  0765  2FB4               	goto	l4304
  4975  0766                     u5700:
  4976  0766                     l4294:
  4977                           
  4978                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  4979  0766  0820               	movf	sprintf@sp^(0+128),w
  4980  0767  0086               	movwf	6
  4981  0768  0821               	movf	(sprintf@sp+1)^(0+128),w
  4982  0769  0087               	movwf	7
  4983  076A  302D               	movlw	45
  4984  076B  0081               	movwf	1
  4985  076C                     l4296:
  4986  076C  3001               	movlw	1
  4987  076D  07A0               	addwf	sprintf@sp^(0+128),f
  4988  076E  3000               	movlw	0
  4989  076F  3DA1               	addwfc	(sprintf@sp+1)^(0+128),f
  4990  0770  2FB4               	goto	l4304
  4991  0771                     l4298:
  4992                           
  4993                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  4994  0771  3000               	movlw	0
  4995  0772  0020               	movlb	0	; select bank0
  4996  0773  00A3               	movwf	___llmod@divisor+3
  4997  0774  3000               	movlw	0
  4998  0775  00A2               	movwf	___llmod@divisor+2
  4999  0776  3000               	movlw	0
  5000  0777  00A1               	movwf	___llmod@divisor+1
  5001  0778  300A               	movlw	10
  5002  0779  00A0               	movwf	___llmod@divisor
  5003  077A  0021               	movlb	1	; select bank1
  5004  077B  0846               	movf	(sprintf@prec+1)^(0+128),w
  5005  077C  0085               	movwf	5
  5006  077D  0845               	movf	sprintf@prec^(0+128),w
  5007  077E  0084               	movwf	4
  5008  077F  3584               	lslf	4,f
  5009  0780  0D85               	rlf	5,f
  5010  0781  3584               	lslf	4,f
  5011  0782  0D85               	rlf	5,f
  5012  0783  3000               	movlw	low (_dpowers| (0+32768))
  5013  0784  0784               	addwf	4,f
  5014  0785  30A0               	movlw	high (_dpowers| (0+32768))
  5015  0786  3D85               	addwfc	5,f
  5016  0787  3F00               	moviw [0]fsr0
  5017  0788  00F0               	movwf	___lldiv@divisor
  5018  0789  3F01               	moviw [1]fsr0
  5019  078A  00F1               	movwf	___lldiv@divisor+1
  5020  078B  3F02               	moviw [2]fsr0
  5021  078C  00F2               	movwf	___lldiv@divisor+2
  5022  078D  3F03               	moviw [3]fsr0
  5023  078E  00F3               	movwf	___lldiv@divisor+3
  5024  078F  0840               	movf	(sprintf@val+3)^(0+128),w
  5025  0790  00F7               	movwf	___lldiv@dividend+3
  5026  0791  083F               	movf	(sprintf@val+2)^(0+128),w
  5027  0792  00F6               	movwf	___lldiv@dividend+2
  5028  0793  083E               	movf	(sprintf@val+1)^(0+128),w
  5029  0794  00F5               	movwf	___lldiv@dividend+1
  5030  0795  083D               	movf	sprintf@val^(0+128),w
  5031  0796  00F4               	movwf	___lldiv@dividend
  5032  0797  319F  2746  3180   	fcall	___lldiv
  5033  079A  0873               	movf	?___lldiv+3,w
  5034  079B  0020               	movlb	0	; select bank0
  5035  079C  00A7               	movwf	___llmod@dividend+3
  5036  079D  0872               	movf	?___lldiv+2,w
  5037  079E  00A6               	movwf	___llmod@dividend+2
  5038  079F  0871               	movf	?___lldiv+1,w
  5039  07A0  00A5               	movwf	___llmod@dividend+1
  5040  07A1  0870               	movf	?___lldiv,w
  5041  07A2  00A4               	movwf	___llmod@dividend
  5042  07A3  319E  260C  3180   	fcall	___llmod
  5043  07A6  0020               	movlb	0	; select bank0
  5044  07A7  0820               	movf	?___llmod,w
  5045  07A8  3E30               	addlw	48
  5046  07A9  0021               	movlb	1	; select bank1
  5047  07AA  00A8               	movwf	??_sprintf^(0+128)
  5048  07AB  0828               	movf	??_sprintf^(0+128),w
  5049  07AC  00C7               	movwf	sprintf@c^(0+128)
  5050  07AD                     l4300:
  5051                           
  5052                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  5053  07AD  0820               	movf	sprintf@sp^(0+128),w
  5054  07AE  0086               	movwf	6
  5055  07AF  0821               	movf	(sprintf@sp+1)^(0+128),w
  5056  07B0  0087               	movwf	7
  5057  07B1  0847               	movf	sprintf@c^(0+128),w
  5058  07B2  0081               	movwf	1
  5059  07B3  2F6C               	goto	l4296
  5060  07B4                     l4304:
  5061  07B4  30FF               	movlw	255
  5062  07B5  07C5               	addwf	sprintf@prec^(0+128),f
  5063  07B6  30FF               	movlw	255
  5064  07B7  3DC6               	addwfc	(sprintf@prec+1)^(0+128),f
  5065  07B8  0A45               	incf	sprintf@prec^(0+128),w
  5066  07B9  1D03               	skipz
  5067  07BA  2FBF               	goto	u5711
  5068  07BB  0A46               	incf	(sprintf@prec+1)^(0+128),w
  5069  07BC  1D03               	btfss	3,2
  5070  07BD  2FBF               	goto	u5711
  5071  07BE  2FC0               	goto	u5710
  5072  07BF                     u5711:
  5073  07BF  2F71               	goto	l4298
  5074  07C0                     u5710:
  5075  07C0                     l4306:
  5076  07C0  0823               	movf	(sprintf@f+1)^(0+128),w
  5077  07C1  00A9               	movwf	(??_sprintf^(0+128)+1)
  5078  07C2  0822               	movf	sprintf@f^(0+128),w
  5079  07C3  00A8               	movwf	??_sprintf^(0+128)
  5080  07C4  0AA2               	incf	sprintf@f^(0+128),f
  5081  07C5  1903               	skipnz
  5082  07C6  0AA3               	incf	(sprintf@f+1)^(0+128),f
  5083  07C7  0828               	movf	??_sprintf^(0+128),w
  5084  07C8  0084               	movwf	4
  5085  07C9  0829               	movf	(??_sprintf+1)^(0+128),w
  5086  07CA  0085               	movwf	5
  5087  07CB  0800               	movf	0,w	;code access
  5088  07CC  00AA               	movwf	(??_sprintf+2)^(0+128)
  5089  07CD  082A               	movf	(??_sprintf+2)^(0+128),w
  5090  07CE  00C7               	movwf	sprintf@c^(0+128)
  5091  07CF  0847               	movf	sprintf@c^(0+128),w
  5092  07D0  1D03               	btfss	3,2
  5093  07D1  2FD3               	goto	u5721
  5094  07D2  2FD4               	goto	u5720
  5095  07D3                     u5721:
  5096  07D3  28A8               	goto	l4010
  5097  07D4                     u5720:
  5098  07D4                     l4308:
  5099                           
  5100                           ;doprnt.c: 1564: *sp = 0;
  5101  07D4  0820               	movf	sprintf@sp^(0+128),w
  5102  07D5  0086               	movwf	6
  5103  07D6  0821               	movf	(sprintf@sp+1)^(0+128),w
  5104  07D7  0087               	movwf	7
  5105  07D8  0181               	clrf	1
  5106  07D9                     l517:
  5107  07D9  0008               	return
  5108  07DA                     __end_of_sprintf:
  5109                           
  5110                           	psect	text2
  5111  0D84                     __ptext2:	
  5112 ;; *************** function _scale *****************
  5113 ;; Defined at:
  5114 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;  scl             1    wreg     char 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  scl             1   50[BANK0 ] char 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  4   30[BANK0 ] char 
  5121 ;; Registers used:
  5122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5128 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5129 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;Total ram usage:       21 bytes
  5133 ;; Hardware stack levels used: 1
  5134 ;; Hardware stack levels required when called: 2
  5135 ;; This function calls:
  5136 ;;		___awdiv
  5137 ;;		___awmod
  5138 ;;		___flmul
  5139 ;; This function is called by:
  5140 ;;		_sprintf
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           
  5145                           ;psect for function _scale
  5146  0D84                     _scale:
  5147                           
  5148                           ;incstack = 0
  5149                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5150                           ;scale@scl stored from wreg
  5151  0D84  0020               	movlb	0	; select bank0
  5152  0D85  00D2               	movwf	scale@scl
  5153  0D86                     l3362:
  5154                           
  5155                           ;doprnt.c: 436: if(scl < 0) {
  5156  0D86  1FD2               	btfss	scale@scl,7
  5157  0D87  2D89               	goto	u4031
  5158  0D88  2D8A               	goto	u4030
  5159  0D89                     u4031:
  5160  0D89  2EC6               	goto	l3384
  5161  0D8A                     u4030:
  5162  0D8A                     l3364:
  5163                           
  5164                           ;doprnt.c: 437: scl = -scl;
  5165  0D8A  09D2               	comf	scale@scl,f
  5166  0D8B  0AD2               	incf	scale@scl,f
  5167  0D8C                     l3366:
  5168                           
  5169                           ;doprnt.c: 438: if(scl>=110)
  5170  0D8C  0852               	movf	scale@scl,w
  5171  0D8D  3A80               	xorlw	128
  5172  0D8E  3E12               	addlw	-238
  5173  0D8F  1C03               	skipc
  5174  0D90  2D92               	goto	u4041
  5175  0D91  2D93               	goto	u4040
  5176  0D92                     u4041:
  5177  0D92  2E3F               	goto	l3374
  5178  0D93                     u4040:
  5179  0D93                     l3368:
  5180                           
  5181                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5182  0D93  300A               	movlw	10
  5183  0D94  00F7               	movwf	___awdiv@divisor
  5184  0D95  3000               	movlw	0
  5185  0D96  00F8               	movwf	___awdiv@divisor+1
  5186  0D97  0852               	movf	scale@scl,w
  5187  0D98  00F2               	movwf	___awmod@dividend
  5188  0D99  01F3               	clrf	___awmod@dividend+1
  5189  0D9A  1BF2               	btfsc	___awmod@dividend,7
  5190  0D9B  03F3               	decf	___awmod@dividend+1,f
  5191  0D9C  3064               	movlw	100
  5192  0D9D  00F0               	movwf	___awmod@divisor
  5193  0D9E  3000               	movlw	0
  5194  0D9F  00F1               	movwf	___awmod@divisor+1
  5195  0DA0  319E  26F3  318D   	fcall	___awmod
  5196  0DA3  0871               	movf	?___awmod+1,w
  5197  0DA4  00FA               	movwf	___awdiv@dividend+1
  5198  0DA5  0870               	movf	?___awmod,w
  5199  0DA6  00F9               	movwf	___awdiv@dividend
  5200  0DA7  319F  27A0  318D   	fcall	___awdiv
  5201  0DAA  0877               	movf	?___awdiv,w
  5202  0DAB  3E09               	addlw	9
  5203  0DAC  0020               	movlb	0	; select bank0
  5204  0DAD  00C2               	movwf	??_scale
  5205  0DAE  01C3               	clrf	??_scale+1
  5206  0DAF  35C2               	lslf	??_scale,f
  5207  0DB0  0DC3               	rlf	??_scale+1,f
  5208  0DB1  35C2               	lslf	??_scale,f
  5209  0DB2  0DC3               	rlf	??_scale+1,f
  5210  0DB3  306B               	movlw	low (__npowers_| (0+32768))
  5211  0DB4  0742               	addwf	??_scale,w
  5212  0DB5  0084               	movwf	4
  5213  0DB6  30A0               	movlw	high (__npowers_| (0+32768))
  5214  0DB7  3D43               	addwfc	??_scale+1,w
  5215  0DB8  0085               	movwf	5
  5216  0DB9  3F00               	moviw [0]fsr0
  5217  0DBA  00C4               	movwf	??_scale+2
  5218  0DBB  3F01               	moviw [1]fsr0
  5219  0DBC  00C5               	movwf	??_scale+3
  5220  0DBD  3F02               	moviw [2]fsr0
  5221  0DBE  00C6               	movwf	??_scale+4
  5222  0DBF  3F03               	moviw [3]fsr0
  5223  0DC0  00C7               	movwf	??_scale+5
  5224  0DC1  0847               	movf	??_scale+5,w
  5225  0DC2  00A7               	movwf	___flmul@b+3
  5226  0DC3  0846               	movf	??_scale+4,w
  5227  0DC4  00A6               	movwf	___flmul@b+2
  5228  0DC5  0845               	movf	??_scale+3,w
  5229  0DC6  00A5               	movwf	___flmul@b+1
  5230  0DC7  0844               	movf	??_scale+2,w
  5231  0DC8  00A4               	movwf	___flmul@b
  5232  0DC9  3064               	movlw	100
  5233  0DCA  00F7               	movwf	___awdiv@divisor
  5234  0DCB  3000               	movlw	0
  5235  0DCC  00F8               	movwf	___awdiv@divisor+1
  5236  0DCD  0852               	movf	scale@scl,w
  5237  0DCE  00F9               	movwf	___awdiv@dividend
  5238  0DCF  01FA               	clrf	___awdiv@dividend+1
  5239  0DD0  1BF9               	btfsc	___awdiv@dividend,7
  5240  0DD1  03FA               	decf	___awdiv@dividend+1,f
  5241  0DD2  319F  27A0  318D   	fcall	___awdiv
  5242  0DD5  0877               	movf	?___awdiv,w
  5243  0DD6  3E12               	addlw	18
  5244  0DD7  0020               	movlb	0	; select bank0
  5245  0DD8  00C8               	movwf	??_scale+6
  5246  0DD9  01C9               	clrf	??_scale+7
  5247  0DDA  35C8               	lslf	??_scale+6,f
  5248  0DDB  0DC9               	rlf	??_scale+7,f
  5249  0DDC  35C8               	lslf	??_scale+6,f
  5250  0DDD  0DC9               	rlf	??_scale+7,f
  5251  0DDE  306B               	movlw	low (__npowers_| (0+32768))
  5252  0DDF  0748               	addwf	??_scale+6,w
  5253  0DE0  0084               	movwf	4
  5254  0DE1  30A0               	movlw	high (__npowers_| (0+32768))
  5255  0DE2  3D49               	addwfc	??_scale+7,w
  5256  0DE3  0085               	movwf	5
  5257  0DE4  3F00               	moviw [0]fsr0
  5258  0DE5  00CA               	movwf	??_scale+8
  5259  0DE6  3F01               	moviw [1]fsr0
  5260  0DE7  00CB               	movwf	??_scale+9
  5261  0DE8  3F02               	moviw [2]fsr0
  5262  0DE9  00CC               	movwf	??_scale+10
  5263  0DEA  3F03               	moviw [3]fsr0
  5264  0DEB  00CD               	movwf	??_scale+11
  5265  0DEC  084D               	movf	??_scale+11,w
  5266  0DED  00AB               	movwf	___flmul@a+3
  5267  0DEE  084C               	movf	??_scale+10,w
  5268  0DEF  00AA               	movwf	___flmul@a+2
  5269  0DF0  084B               	movf	??_scale+9,w
  5270  0DF1  00A9               	movwf	___flmul@a+1
  5271  0DF2  084A               	movf	??_scale+8,w
  5272  0DF3  00A8               	movwf	___flmul@a
  5273  0DF4  318B  232D  318D   	fcall	___flmul
  5274  0DF7  0020               	movlb	0	; select bank0
  5275  0DF8  0827               	movf	?___flmul+3,w
  5276  0DF9  00D1               	movwf	_scale$1081+3
  5277  0DFA  0826               	movf	?___flmul+2,w
  5278  0DFB  00D0               	movwf	_scale$1081+2
  5279  0DFC  0825               	movf	?___flmul+1,w
  5280  0DFD  00CF               	movwf	_scale$1081+1
  5281  0DFE  0824               	movf	?___flmul,w
  5282  0DFF  00CE               	movwf	_scale$1081
  5283                           
  5284                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5285  0E00  300A               	movlw	10
  5286  0E01  00F0               	movwf	___awmod@divisor
  5287  0E02  3000               	movlw	0
  5288  0E03  00F1               	movwf	___awmod@divisor+1
  5289  0E04  0852               	movf	scale@scl,w
  5290  0E05  00F2               	movwf	___awmod@dividend
  5291  0E06  01F3               	clrf	___awmod@dividend+1
  5292  0E07  1BF2               	btfsc	___awmod@dividend,7
  5293  0E08  03F3               	decf	___awmod@dividend+1,f
  5294  0E09  319E  26F3  318D   	fcall	___awmod
  5295  0E0C  0870               	movf	?___awmod,w
  5296  0E0D  0020               	movlb	0	; select bank0
  5297  0E0E  00C2               	movwf	??_scale
  5298  0E0F  01C3               	clrf	??_scale+1
  5299  0E10  35C2               	lslf	??_scale,f
  5300  0E11  0DC3               	rlf	??_scale+1,f
  5301  0E12  35C2               	lslf	??_scale,f
  5302  0E13  0DC3               	rlf	??_scale+1,f
  5303  0E14  306B               	movlw	low (__npowers_| (0+32768))
  5304  0E15  0742               	addwf	??_scale,w
  5305  0E16  0084               	movwf	4
  5306  0E17  30A0               	movlw	high (__npowers_| (0+32768))
  5307  0E18  3D43               	addwfc	??_scale+1,w
  5308  0E19  0085               	movwf	5
  5309  0E1A  3F00               	moviw [0]fsr0
  5310  0E1B  00C4               	movwf	??_scale+2
  5311  0E1C  3F01               	moviw [1]fsr0
  5312  0E1D  00C5               	movwf	??_scale+3
  5313  0E1E  3F02               	moviw [2]fsr0
  5314  0E1F  00C6               	movwf	??_scale+4
  5315  0E20  3F03               	moviw [3]fsr0
  5316  0E21  00C7               	movwf	??_scale+5
  5317  0E22  0847               	movf	??_scale+5,w
  5318  0E23  00A7               	movwf	___flmul@b+3
  5319  0E24  0846               	movf	??_scale+4,w
  5320  0E25  00A6               	movwf	___flmul@b+2
  5321  0E26  0845               	movf	??_scale+3,w
  5322  0E27  00A5               	movwf	___flmul@b+1
  5323  0E28  0844               	movf	??_scale+2,w
  5324  0E29  00A4               	movwf	___flmul@b
  5325  0E2A  0851               	movf	_scale$1081+3,w
  5326  0E2B  00AB               	movwf	___flmul@a+3
  5327  0E2C  0850               	movf	_scale$1081+2,w
  5328  0E2D  00AA               	movwf	___flmul@a+2
  5329  0E2E  084F               	movf	_scale$1081+1,w
  5330  0E2F  00A9               	movwf	___flmul@a+1
  5331  0E30  084E               	movf	_scale$1081,w
  5332  0E31  00A8               	movwf	___flmul@a
  5333  0E32  318B  232D  318D   	fcall	___flmul
  5334  0E35  0020               	movlb	0	; select bank0
  5335  0E36  0827               	movf	?___flmul+3,w
  5336  0E37  00C1               	movwf	?_scale+3
  5337  0E38  0826               	movf	?___flmul+2,w
  5338  0E39  00C0               	movwf	?_scale+2
  5339  0E3A  0825               	movf	?___flmul+1,w
  5340  0E3B  00BF               	movwf	?_scale+1
  5341  0E3C  0824               	movf	?___flmul,w
  5342  0E3D  00BE               	movwf	?_scale
  5343  0E3E  2FFF               	goto	l416
  5344  0E3F                     l3374:
  5345                           
  5346                           ;doprnt.c: 440: else if(scl > 10)
  5347  0E3F  0852               	movf	scale@scl,w
  5348  0E40  3A80               	xorlw	128
  5349  0E41  3E75               	addlw	-139
  5350  0E42  1C03               	skipc
  5351  0E43  2E45               	goto	u4051
  5352  0E44  2E46               	goto	u4050
  5353  0E45                     u4051:
  5354  0E45  2EA8               	goto	l3380
  5355  0E46                     u4050:
  5356  0E46                     l3376:
  5357                           
  5358                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  5359  0E46  300A               	movlw	10
  5360  0E47  00F0               	movwf	___awmod@divisor
  5361  0E48  3000               	movlw	0
  5362  0E49  00F1               	movwf	___awmod@divisor+1
  5363  0E4A  0852               	movf	scale@scl,w
  5364  0E4B  00F2               	movwf	___awmod@dividend
  5365  0E4C  01F3               	clrf	___awmod@dividend+1
  5366  0E4D  1BF2               	btfsc	___awmod@dividend,7
  5367  0E4E  03F3               	decf	___awmod@dividend+1,f
  5368  0E4F  319E  26F3  318D   	fcall	___awmod
  5369  0E52  0870               	movf	?___awmod,w
  5370  0E53  0020               	movlb	0	; select bank0
  5371  0E54  00C2               	movwf	??_scale
  5372  0E55  01C3               	clrf	??_scale+1
  5373  0E56  35C2               	lslf	??_scale,f
  5374  0E57  0DC3               	rlf	??_scale+1,f
  5375  0E58  35C2               	lslf	??_scale,f
  5376  0E59  0DC3               	rlf	??_scale+1,f
  5377  0E5A  306B               	movlw	low (__npowers_| (0+32768))
  5378  0E5B  0742               	addwf	??_scale,w
  5379  0E5C  0084               	movwf	4
  5380  0E5D  30A0               	movlw	high (__npowers_| (0+32768))
  5381  0E5E  3D43               	addwfc	??_scale+1,w
  5382  0E5F  0085               	movwf	5
  5383  0E60  3F00               	moviw [0]fsr0
  5384  0E61  00C4               	movwf	??_scale+2
  5385  0E62  3F01               	moviw [1]fsr0
  5386  0E63  00C5               	movwf	??_scale+3
  5387  0E64  3F02               	moviw [2]fsr0
  5388  0E65  00C6               	movwf	??_scale+4
  5389  0E66  3F03               	moviw [3]fsr0
  5390  0E67  00C7               	movwf	??_scale+5
  5391  0E68  0847               	movf	??_scale+5,w
  5392  0E69  00A7               	movwf	___flmul@b+3
  5393  0E6A  0846               	movf	??_scale+4,w
  5394  0E6B  00A6               	movwf	___flmul@b+2
  5395  0E6C  0845               	movf	??_scale+3,w
  5396  0E6D  00A5               	movwf	___flmul@b+1
  5397  0E6E  0844               	movf	??_scale+2,w
  5398  0E6F  00A4               	movwf	___flmul@b
  5399  0E70  300A               	movlw	10
  5400  0E71  00F7               	movwf	___awdiv@divisor
  5401  0E72  3000               	movlw	0
  5402  0E73  00F8               	movwf	___awdiv@divisor+1
  5403  0E74  0852               	movf	scale@scl,w
  5404  0E75  00F9               	movwf	___awdiv@dividend
  5405  0E76  01FA               	clrf	___awdiv@dividend+1
  5406  0E77  1BF9               	btfsc	___awdiv@dividend,7
  5407  0E78  03FA               	decf	___awdiv@dividend+1,f
  5408  0E79  319F  27A0  318D   	fcall	___awdiv
  5409  0E7C  0877               	movf	?___awdiv,w
  5410  0E7D  3E09               	addlw	9
  5411  0E7E  0020               	movlb	0	; select bank0
  5412  0E7F  00C8               	movwf	??_scale+6
  5413  0E80  01C9               	clrf	??_scale+7
  5414  0E81  35C8               	lslf	??_scale+6,f
  5415  0E82  0DC9               	rlf	??_scale+7,f
  5416  0E83  35C8               	lslf	??_scale+6,f
  5417  0E84  0DC9               	rlf	??_scale+7,f
  5418  0E85  306B               	movlw	low (__npowers_| (0+32768))
  5419  0E86  0748               	addwf	??_scale+6,w
  5420  0E87  0084               	movwf	4
  5421  0E88  30A0               	movlw	high (__npowers_| (0+32768))
  5422  0E89  3D49               	addwfc	??_scale+7,w
  5423  0E8A  0085               	movwf	5
  5424  0E8B  3F00               	moviw [0]fsr0
  5425  0E8C  00CA               	movwf	??_scale+8
  5426  0E8D  3F01               	moviw [1]fsr0
  5427  0E8E  00CB               	movwf	??_scale+9
  5428  0E8F  3F02               	moviw [2]fsr0
  5429  0E90  00CC               	movwf	??_scale+10
  5430  0E91  3F03               	moviw [3]fsr0
  5431  0E92  00CD               	movwf	??_scale+11
  5432  0E93  084D               	movf	??_scale+11,w
  5433  0E94  00AB               	movwf	___flmul@a+3
  5434  0E95  084C               	movf	??_scale+10,w
  5435  0E96  00AA               	movwf	___flmul@a+2
  5436  0E97  084B               	movf	??_scale+9,w
  5437  0E98  00A9               	movwf	___flmul@a+1
  5438  0E99  084A               	movf	??_scale+8,w
  5439  0E9A  00A8               	movwf	___flmul@a
  5440  0E9B  318B  232D  318D   	fcall	___flmul
  5441  0E9E  0020               	movlb	0	; select bank0
  5442  0E9F  0827               	movf	?___flmul+3,w
  5443  0EA0  00C1               	movwf	?_scale+3
  5444  0EA1  0826               	movf	?___flmul+2,w
  5445  0EA2  00C0               	movwf	?_scale+2
  5446  0EA3  0825               	movf	?___flmul+1,w
  5447  0EA4  00BF               	movwf	?_scale+1
  5448  0EA5  0824               	movf	?___flmul,w
  5449  0EA6  00BE               	movwf	?_scale
  5450  0EA7  2FFF               	goto	l416
  5451  0EA8                     l3380:
  5452                           
  5453                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  5454  0EA8  0852               	movf	scale@scl,w
  5455  0EA9  00C2               	movwf	??_scale
  5456  0EAA  01C3               	clrf	??_scale+1
  5457  0EAB  35C2               	lslf	??_scale,f
  5458  0EAC  0DC3               	rlf	??_scale+1,f
  5459  0EAD  35C2               	lslf	??_scale,f
  5460  0EAE  0DC3               	rlf	??_scale+1,f
  5461  0EAF  306B               	movlw	low (__npowers_| (0+32768))
  5462  0EB0  0742               	addwf	??_scale,w
  5463  0EB1  0084               	movwf	4
  5464  0EB2  30A0               	movlw	high (__npowers_| (0+32768))
  5465  0EB3  3D43               	addwfc	??_scale+1,w
  5466  0EB4  0085               	movwf	5
  5467  0EB5  3F00               	moviw [0]fsr0
  5468  0EB6  00C4               	movwf	??_scale+2
  5469  0EB7  3F01               	moviw [1]fsr0
  5470  0EB8  00C5               	movwf	??_scale+3
  5471  0EB9  3F02               	moviw [2]fsr0
  5472  0EBA  00C6               	movwf	??_scale+4
  5473  0EBB  3F03               	moviw [3]fsr0
  5474  0EBC  00C7               	movwf	??_scale+5
  5475  0EBD  0847               	movf	??_scale+5,w
  5476  0EBE  00C1               	movwf	?_scale+3
  5477  0EBF  0846               	movf	??_scale+4,w
  5478  0EC0  00C0               	movwf	?_scale+2
  5479  0EC1  0845               	movf	??_scale+3,w
  5480  0EC2  00BF               	movwf	?_scale+1
  5481  0EC3  0844               	movf	??_scale+2,w
  5482  0EC4  00BE               	movwf	?_scale
  5483  0EC5  2FFF               	goto	l416
  5484  0EC6                     l3384:
  5485                           
  5486                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  5487  0EC6  0852               	movf	scale@scl,w
  5488  0EC7  3A80               	xorlw	128
  5489  0EC8  3E12               	addlw	-238
  5490  0EC9  1C03               	skipc
  5491  0ECA  2ECC               	goto	u4061
  5492  0ECB  2ECD               	goto	u4060
  5493  0ECC                     u4061:
  5494  0ECC  2F79               	goto	l3392
  5495  0ECD                     u4060:
  5496  0ECD                     l3386:
  5497                           
  5498                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5499  0ECD  300A               	movlw	10
  5500  0ECE  00F7               	movwf	___awdiv@divisor
  5501  0ECF  3000               	movlw	0
  5502  0ED0  00F8               	movwf	___awdiv@divisor+1
  5503  0ED1  0852               	movf	scale@scl,w
  5504  0ED2  00F2               	movwf	___awmod@dividend
  5505  0ED3  01F3               	clrf	___awmod@dividend+1
  5506  0ED4  1BF2               	btfsc	___awmod@dividend,7
  5507  0ED5  03F3               	decf	___awmod@dividend+1,f
  5508  0ED6  3064               	movlw	100
  5509  0ED7  00F0               	movwf	___awmod@divisor
  5510  0ED8  3000               	movlw	0
  5511  0ED9  00F1               	movwf	___awmod@divisor+1
  5512  0EDA  319E  26F3  318D   	fcall	___awmod
  5513  0EDD  0871               	movf	?___awmod+1,w
  5514  0EDE  00FA               	movwf	___awdiv@dividend+1
  5515  0EDF  0870               	movf	?___awmod,w
  5516  0EE0  00F9               	movwf	___awdiv@dividend
  5517  0EE1  319F  27A0  318D   	fcall	___awdiv
  5518  0EE4  0877               	movf	?___awdiv,w
  5519  0EE5  3E09               	addlw	9
  5520  0EE6  0020               	movlb	0	; select bank0
  5521  0EE7  00C2               	movwf	??_scale
  5522  0EE8  01C3               	clrf	??_scale+1
  5523  0EE9  35C2               	lslf	??_scale,f
  5524  0EEA  0DC3               	rlf	??_scale+1,f
  5525  0EEB  35C2               	lslf	??_scale,f
  5526  0EEC  0DC3               	rlf	??_scale+1,f
  5527  0EED  3037               	movlw	low (__powers_| (0+32768))
  5528  0EEE  0742               	addwf	??_scale,w
  5529  0EEF  0084               	movwf	4
  5530  0EF0  30A0               	movlw	high (__powers_| (0+32768))
  5531  0EF1  3D43               	addwfc	??_scale+1,w
  5532  0EF2  0085               	movwf	5
  5533  0EF3  3F00               	moviw [0]fsr0
  5534  0EF4  00C4               	movwf	??_scale+2
  5535  0EF5  3F01               	moviw [1]fsr0
  5536  0EF6  00C5               	movwf	??_scale+3
  5537  0EF7  3F02               	moviw [2]fsr0
  5538  0EF8  00C6               	movwf	??_scale+4
  5539  0EF9  3F03               	moviw [3]fsr0
  5540  0EFA  00C7               	movwf	??_scale+5
  5541  0EFB  0847               	movf	??_scale+5,w
  5542  0EFC  00A7               	movwf	___flmul@b+3
  5543  0EFD  0846               	movf	??_scale+4,w
  5544  0EFE  00A6               	movwf	___flmul@b+2
  5545  0EFF  0845               	movf	??_scale+3,w
  5546  0F00  00A5               	movwf	___flmul@b+1
  5547  0F01  0844               	movf	??_scale+2,w
  5548  0F02  00A4               	movwf	___flmul@b
  5549  0F03  3064               	movlw	100
  5550  0F04  00F7               	movwf	___awdiv@divisor
  5551  0F05  3000               	movlw	0
  5552  0F06  00F8               	movwf	___awdiv@divisor+1
  5553  0F07  0852               	movf	scale@scl,w
  5554  0F08  00F9               	movwf	___awdiv@dividend
  5555  0F09  01FA               	clrf	___awdiv@dividend+1
  5556  0F0A  1BF9               	btfsc	___awdiv@dividend,7
  5557  0F0B  03FA               	decf	___awdiv@dividend+1,f
  5558  0F0C  319F  27A0  318D   	fcall	___awdiv
  5559  0F0F  0877               	movf	?___awdiv,w
  5560  0F10  3E12               	addlw	18
  5561  0F11  0020               	movlb	0	; select bank0
  5562  0F12  00C8               	movwf	??_scale+6
  5563  0F13  01C9               	clrf	??_scale+7
  5564  0F14  35C8               	lslf	??_scale+6,f
  5565  0F15  0DC9               	rlf	??_scale+7,f
  5566  0F16  35C8               	lslf	??_scale+6,f
  5567  0F17  0DC9               	rlf	??_scale+7,f
  5568  0F18  3037               	movlw	low (__powers_| (0+32768))
  5569  0F19  0748               	addwf	??_scale+6,w
  5570  0F1A  0084               	movwf	4
  5571  0F1B  30A0               	movlw	high (__powers_| (0+32768))
  5572  0F1C  3D49               	addwfc	??_scale+7,w
  5573  0F1D  0085               	movwf	5
  5574  0F1E  3F00               	moviw [0]fsr0
  5575  0F1F  00CA               	movwf	??_scale+8
  5576  0F20  3F01               	moviw [1]fsr0
  5577  0F21  00CB               	movwf	??_scale+9
  5578  0F22  3F02               	moviw [2]fsr0
  5579  0F23  00CC               	movwf	??_scale+10
  5580  0F24  3F03               	moviw [3]fsr0
  5581  0F25  00CD               	movwf	??_scale+11
  5582  0F26  084D               	movf	??_scale+11,w
  5583  0F27  00AB               	movwf	___flmul@a+3
  5584  0F28  084C               	movf	??_scale+10,w
  5585  0F29  00AA               	movwf	___flmul@a+2
  5586  0F2A  084B               	movf	??_scale+9,w
  5587  0F2B  00A9               	movwf	___flmul@a+1
  5588  0F2C  084A               	movf	??_scale+8,w
  5589  0F2D  00A8               	movwf	___flmul@a
  5590  0F2E  318B  232D  318D   	fcall	___flmul
  5591  0F31  0020               	movlb	0	; select bank0
  5592  0F32  0827               	movf	?___flmul+3,w
  5593  0F33  00D1               	movwf	_scale$1081+3
  5594  0F34  0826               	movf	?___flmul+2,w
  5595  0F35  00D0               	movwf	_scale$1081+2
  5596  0F36  0825               	movf	?___flmul+1,w
  5597  0F37  00CF               	movwf	_scale$1081+1
  5598  0F38  0824               	movf	?___flmul,w
  5599  0F39  00CE               	movwf	_scale$1081
  5600                           
  5601                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5602  0F3A  300A               	movlw	10
  5603  0F3B  00F0               	movwf	___awmod@divisor
  5604  0F3C  3000               	movlw	0
  5605  0F3D  00F1               	movwf	___awmod@divisor+1
  5606  0F3E  0852               	movf	scale@scl,w
  5607  0F3F  00F2               	movwf	___awmod@dividend
  5608  0F40  01F3               	clrf	___awmod@dividend+1
  5609  0F41  1BF2               	btfsc	___awmod@dividend,7
  5610  0F42  03F3               	decf	___awmod@dividend+1,f
  5611  0F43  319E  26F3  318D   	fcall	___awmod
  5612  0F46  0870               	movf	?___awmod,w
  5613  0F47  0020               	movlb	0	; select bank0
  5614  0F48  00C2               	movwf	??_scale
  5615  0F49  01C3               	clrf	??_scale+1
  5616  0F4A  35C2               	lslf	??_scale,f
  5617  0F4B  0DC3               	rlf	??_scale+1,f
  5618  0F4C  35C2               	lslf	??_scale,f
  5619  0F4D  0DC3               	rlf	??_scale+1,f
  5620  0F4E  3037               	movlw	low (__powers_| (0+32768))
  5621  0F4F  0742               	addwf	??_scale,w
  5622  0F50  0084               	movwf	4
  5623  0F51  30A0               	movlw	high (__powers_| (0+32768))
  5624  0F52  3D43               	addwfc	??_scale+1,w
  5625  0F53  0085               	movwf	5
  5626  0F54  3F00               	moviw [0]fsr0
  5627  0F55  00C4               	movwf	??_scale+2
  5628  0F56  3F01               	moviw [1]fsr0
  5629  0F57  00C5               	movwf	??_scale+3
  5630  0F58  3F02               	moviw [2]fsr0
  5631  0F59  00C6               	movwf	??_scale+4
  5632  0F5A  3F03               	moviw [3]fsr0
  5633  0F5B  00C7               	movwf	??_scale+5
  5634  0F5C  0847               	movf	??_scale+5,w
  5635  0F5D  00A7               	movwf	___flmul@b+3
  5636  0F5E  0846               	movf	??_scale+4,w
  5637  0F5F  00A6               	movwf	___flmul@b+2
  5638  0F60  0845               	movf	??_scale+3,w
  5639  0F61  00A5               	movwf	___flmul@b+1
  5640  0F62  0844               	movf	??_scale+2,w
  5641  0F63  00A4               	movwf	___flmul@b
  5642  0F64  0851               	movf	_scale$1081+3,w
  5643  0F65  00AB               	movwf	___flmul@a+3
  5644  0F66  0850               	movf	_scale$1081+2,w
  5645  0F67  00AA               	movwf	___flmul@a+2
  5646  0F68  084F               	movf	_scale$1081+1,w
  5647  0F69  00A9               	movwf	___flmul@a+1
  5648  0F6A  084E               	movf	_scale$1081,w
  5649  0F6B  00A8               	movwf	___flmul@a
  5650  0F6C  318B  232D  318D   	fcall	___flmul
  5651  0F6F  0020               	movlb	0	; select bank0
  5652  0F70  0827               	movf	?___flmul+3,w
  5653  0F71  00C1               	movwf	?_scale+3
  5654  0F72  0826               	movf	?___flmul+2,w
  5655  0F73  00C0               	movwf	?_scale+2
  5656  0F74  0825               	movf	?___flmul+1,w
  5657  0F75  00BF               	movwf	?_scale+1
  5658  0F76  0824               	movf	?___flmul,w
  5659  0F77  00BE               	movwf	?_scale
  5660  0F78  2FFF               	goto	l416
  5661  0F79                     l3392:
  5662                           
  5663                           ;doprnt.c: 446: else if(scl > 10)
  5664  0F79  0852               	movf	scale@scl,w
  5665  0F7A  3A80               	xorlw	128
  5666  0F7B  3E75               	addlw	-139
  5667  0F7C  1C03               	skipc
  5668  0F7D  2F7F               	goto	u4071
  5669  0F7E  2F80               	goto	u4070
  5670  0F7F                     u4071:
  5671  0F7F  2FE2               	goto	l3398
  5672  0F80                     u4070:
  5673  0F80                     l3394:
  5674                           
  5675                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  5676  0F80  300A               	movlw	10
  5677  0F81  00F0               	movwf	___awmod@divisor
  5678  0F82  3000               	movlw	0
  5679  0F83  00F1               	movwf	___awmod@divisor+1
  5680  0F84  0852               	movf	scale@scl,w
  5681  0F85  00F2               	movwf	___awmod@dividend
  5682  0F86  01F3               	clrf	___awmod@dividend+1
  5683  0F87  1BF2               	btfsc	___awmod@dividend,7
  5684  0F88  03F3               	decf	___awmod@dividend+1,f
  5685  0F89  319E  26F3  318D   	fcall	___awmod
  5686  0F8C  0870               	movf	?___awmod,w
  5687  0F8D  0020               	movlb	0	; select bank0
  5688  0F8E  00C2               	movwf	??_scale
  5689  0F8F  01C3               	clrf	??_scale+1
  5690  0F90  35C2               	lslf	??_scale,f
  5691  0F91  0DC3               	rlf	??_scale+1,f
  5692  0F92  35C2               	lslf	??_scale,f
  5693  0F93  0DC3               	rlf	??_scale+1,f
  5694  0F94  3037               	movlw	low (__powers_| (0+32768))
  5695  0F95  0742               	addwf	??_scale,w
  5696  0F96  0084               	movwf	4
  5697  0F97  30A0               	movlw	high (__powers_| (0+32768))
  5698  0F98  3D43               	addwfc	??_scale+1,w
  5699  0F99  0085               	movwf	5
  5700  0F9A  3F00               	moviw [0]fsr0
  5701  0F9B  00C4               	movwf	??_scale+2
  5702  0F9C  3F01               	moviw [1]fsr0
  5703  0F9D  00C5               	movwf	??_scale+3
  5704  0F9E  3F02               	moviw [2]fsr0
  5705  0F9F  00C6               	movwf	??_scale+4
  5706  0FA0  3F03               	moviw [3]fsr0
  5707  0FA1  00C7               	movwf	??_scale+5
  5708  0FA2  0847               	movf	??_scale+5,w
  5709  0FA3  00A7               	movwf	___flmul@b+3
  5710  0FA4  0846               	movf	??_scale+4,w
  5711  0FA5  00A6               	movwf	___flmul@b+2
  5712  0FA6  0845               	movf	??_scale+3,w
  5713  0FA7  00A5               	movwf	___flmul@b+1
  5714  0FA8  0844               	movf	??_scale+2,w
  5715  0FA9  00A4               	movwf	___flmul@b
  5716  0FAA  300A               	movlw	10
  5717  0FAB  00F7               	movwf	___awdiv@divisor
  5718  0FAC  3000               	movlw	0
  5719  0FAD  00F8               	movwf	___awdiv@divisor+1
  5720  0FAE  0852               	movf	scale@scl,w
  5721  0FAF  00F9               	movwf	___awdiv@dividend
  5722  0FB0  01FA               	clrf	___awdiv@dividend+1
  5723  0FB1  1BF9               	btfsc	___awdiv@dividend,7
  5724  0FB2  03FA               	decf	___awdiv@dividend+1,f
  5725  0FB3  319F  27A0  318D   	fcall	___awdiv
  5726  0FB6  0877               	movf	?___awdiv,w
  5727  0FB7  3E09               	addlw	9
  5728  0FB8  0020               	movlb	0	; select bank0
  5729  0FB9  00C8               	movwf	??_scale+6
  5730  0FBA  01C9               	clrf	??_scale+7
  5731  0FBB  35C8               	lslf	??_scale+6,f
  5732  0FBC  0DC9               	rlf	??_scale+7,f
  5733  0FBD  35C8               	lslf	??_scale+6,f
  5734  0FBE  0DC9               	rlf	??_scale+7,f
  5735  0FBF  3037               	movlw	low (__powers_| (0+32768))
  5736  0FC0  0748               	addwf	??_scale+6,w
  5737  0FC1  0084               	movwf	4
  5738  0FC2  30A0               	movlw	high (__powers_| (0+32768))
  5739  0FC3  3D49               	addwfc	??_scale+7,w
  5740  0FC4  0085               	movwf	5
  5741  0FC5  3F00               	moviw [0]fsr0
  5742  0FC6  00CA               	movwf	??_scale+8
  5743  0FC7  3F01               	moviw [1]fsr0
  5744  0FC8  00CB               	movwf	??_scale+9
  5745  0FC9  3F02               	moviw [2]fsr0
  5746  0FCA  00CC               	movwf	??_scale+10
  5747  0FCB  3F03               	moviw [3]fsr0
  5748  0FCC  00CD               	movwf	??_scale+11
  5749  0FCD  084D               	movf	??_scale+11,w
  5750  0FCE  00AB               	movwf	___flmul@a+3
  5751  0FCF  084C               	movf	??_scale+10,w
  5752  0FD0  00AA               	movwf	___flmul@a+2
  5753  0FD1  084B               	movf	??_scale+9,w
  5754  0FD2  00A9               	movwf	___flmul@a+1
  5755  0FD3  084A               	movf	??_scale+8,w
  5756  0FD4  00A8               	movwf	___flmul@a
  5757  0FD5  318B  232D  318D   	fcall	___flmul
  5758  0FD8  0020               	movlb	0	; select bank0
  5759  0FD9  0827               	movf	?___flmul+3,w
  5760  0FDA  00C1               	movwf	?_scale+3
  5761  0FDB  0826               	movf	?___flmul+2,w
  5762  0FDC  00C0               	movwf	?_scale+2
  5763  0FDD  0825               	movf	?___flmul+1,w
  5764  0FDE  00BF               	movwf	?_scale+1
  5765  0FDF  0824               	movf	?___flmul,w
  5766  0FE0  00BE               	movwf	?_scale
  5767  0FE1  2FFF               	goto	l416
  5768  0FE2                     l3398:
  5769                           
  5770                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  5771  0FE2  0852               	movf	scale@scl,w
  5772  0FE3  00C2               	movwf	??_scale
  5773  0FE4  01C3               	clrf	??_scale+1
  5774  0FE5  35C2               	lslf	??_scale,f
  5775  0FE6  0DC3               	rlf	??_scale+1,f
  5776  0FE7  35C2               	lslf	??_scale,f
  5777  0FE8  0DC3               	rlf	??_scale+1,f
  5778  0FE9  3037               	movlw	low (__powers_| (0+32768))
  5779  0FEA  0742               	addwf	??_scale,w
  5780  0FEB  0084               	movwf	4
  5781  0FEC  30A0               	movlw	high (__powers_| (0+32768))
  5782  0FED  3D43               	addwfc	??_scale+1,w
  5783  0FEE  0085               	movwf	5
  5784  0FEF  3F00               	moviw [0]fsr0
  5785  0FF0  00C4               	movwf	??_scale+2
  5786  0FF1  3F01               	moviw [1]fsr0
  5787  0FF2  00C5               	movwf	??_scale+3
  5788  0FF3  3F02               	moviw [2]fsr0
  5789  0FF4  00C6               	movwf	??_scale+4
  5790  0FF5  3F03               	moviw [3]fsr0
  5791  0FF6  00C7               	movwf	??_scale+5
  5792  0FF7  0847               	movf	??_scale+5,w
  5793  0FF8  00C1               	movwf	?_scale+3
  5794  0FF9  0846               	movf	??_scale+4,w
  5795  0FFA  00C0               	movwf	?_scale+2
  5796  0FFB  0845               	movf	??_scale+3,w
  5797  0FFC  00BF               	movwf	?_scale+1
  5798  0FFD  0844               	movf	??_scale+2,w
  5799  0FFE  00BE               	movwf	?_scale
  5800  0FFF                     l416:
  5801  0FFF  0008               	return
  5802  1000                     __end_of_scale:
  5803                           
  5804                           	psect	text3
  5805  1EF3                     __ptext3:	
  5806 ;; *************** function ___awmod *****************
  5807 ;; Defined at:
  5808 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  divisor         2    0[COMMON] int 
  5811 ;;  dividend        2    2[COMMON] int 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  sign            1    6[COMMON] unsigned char 
  5814 ;;  counter         1    5[COMMON] unsigned char 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  2    0[COMMON] int 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5828 ;;Total ram usage:        7 bytes
  5829 ;; Hardware stack levels used: 1
  5830 ;; This function calls:
  5831 ;;		Nothing
  5832 ;; This function is called by:
  5833 ;;		_scale
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           
  5838                           ;psect for function ___awmod
  5839  1EF3                     ___awmod:
  5840  1EF3                     l2844:	
  5841                           ;incstack = 0
  5842                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5843                           
  5844  1EF3  01F6               	clrf	___awmod@sign
  5845  1EF4                     l2846:
  5846  1EF4  1FF3               	btfss	___awmod@dividend+1,7
  5847  1EF5  2EF7               	goto	u3081
  5848  1EF6  2EF8               	goto	u3080
  5849  1EF7                     u3081:
  5850  1EF7  2EFF               	goto	l2852
  5851  1EF8                     u3080:
  5852  1EF8                     l2848:
  5853  1EF8  09F2               	comf	___awmod@dividend,f
  5854  1EF9  09F3               	comf	___awmod@dividend+1,f
  5855  1EFA  0AF2               	incf	___awmod@dividend,f
  5856  1EFB  1903               	skipnz
  5857  1EFC  0AF3               	incf	___awmod@dividend+1,f
  5858  1EFD                     l2850:
  5859  1EFD  01F6               	clrf	___awmod@sign
  5860  1EFE  0AF6               	incf	___awmod@sign,f
  5861  1EFF                     l2852:
  5862  1EFF  1FF1               	btfss	___awmod@divisor+1,7
  5863  1F00  2F02               	goto	u3091
  5864  1F01  2F03               	goto	u3090
  5865  1F02                     u3091:
  5866  1F02  2F08               	goto	l2856
  5867  1F03                     u3090:
  5868  1F03                     l2854:
  5869  1F03  09F0               	comf	___awmod@divisor,f
  5870  1F04  09F1               	comf	___awmod@divisor+1,f
  5871  1F05  0AF0               	incf	___awmod@divisor,f
  5872  1F06  1903               	skipnz
  5873  1F07  0AF1               	incf	___awmod@divisor+1,f
  5874  1F08                     l2856:
  5875  1F08  0870               	movf	___awmod@divisor,w
  5876  1F09  0471               	iorwf	___awmod@divisor+1,w
  5877  1F0A  1903               	btfsc	3,2
  5878  1F0B  2F0D               	goto	u3101
  5879  1F0C  2F0E               	goto	u3100
  5880  1F0D                     u3101:
  5881  1F0D  2F37               	goto	l2874
  5882  1F0E                     u3100:
  5883  1F0E                     l2858:
  5884  1F0E  01F5               	clrf	___awmod@counter
  5885  1F0F  0AF5               	incf	___awmod@counter,f
  5886  1F10  2F1A               	goto	l2864
  5887  1F11                     l2860:
  5888  1F11  3001               	movlw	1
  5889  1F12                     u3115:
  5890  1F12  35F0               	lslf	___awmod@divisor,f
  5891  1F13  0DF1               	rlf	___awmod@divisor+1,f
  5892  1F14  0B89               	decfsz	9,f
  5893  1F15  2F12               	goto	u3115
  5894  1F16                     l2862:
  5895  1F16  3001               	movlw	1
  5896  1F17  00F4               	movwf	??___awmod
  5897  1F18  0874               	movf	??___awmod,w
  5898  1F19  07F5               	addwf	___awmod@counter,f
  5899  1F1A                     l2864:
  5900  1F1A  1FF1               	btfss	___awmod@divisor+1,7
  5901  1F1B  2F1D               	goto	u3121
  5902  1F1C  2F1E               	goto	u3120
  5903  1F1D                     u3121:
  5904  1F1D  2F11               	goto	l2860
  5905  1F1E                     u3120:
  5906  1F1E                     l2866:
  5907  1F1E  0871               	movf	___awmod@divisor+1,w
  5908  1F1F  0273               	subwf	___awmod@dividend+1,w
  5909  1F20  1D03               	skipz
  5910  1F21  2F24               	goto	u3135
  5911  1F22  0870               	movf	___awmod@divisor,w
  5912  1F23  0272               	subwf	___awmod@dividend,w
  5913  1F24                     u3135:
  5914  1F24  1C03               	skipc
  5915  1F25  2F27               	goto	u3131
  5916  1F26  2F28               	goto	u3130
  5917  1F27                     u3131:
  5918  1F27  2F2C               	goto	l2870
  5919  1F28                     u3130:
  5920  1F28                     l2868:
  5921  1F28  0870               	movf	___awmod@divisor,w
  5922  1F29  02F2               	subwf	___awmod@dividend,f
  5923  1F2A  0871               	movf	___awmod@divisor+1,w
  5924  1F2B  3BF3               	subwfb	___awmod@dividend+1,f
  5925  1F2C                     l2870:
  5926  1F2C  3001               	movlw	1
  5927  1F2D                     u3145:
  5928  1F2D  36F1               	lsrf	___awmod@divisor+1,f
  5929  1F2E  0CF0               	rrf	___awmod@divisor,f
  5930  1F2F  0B89               	decfsz	9,f
  5931  1F30  2F2D               	goto	u3145
  5932  1F31                     l2872:
  5933  1F31  3001               	movlw	1
  5934  1F32  02F5               	subwf	___awmod@counter,f
  5935  1F33  1D03               	btfss	3,2
  5936  1F34  2F36               	goto	u3151
  5937  1F35  2F37               	goto	u3150
  5938  1F36                     u3151:
  5939  1F36  2F1E               	goto	l2866
  5940  1F37                     u3150:
  5941  1F37                     l2874:
  5942  1F37  0876               	movf	___awmod@sign,w
  5943  1F38  1903               	btfsc	3,2
  5944  1F39  2F3B               	goto	u3161
  5945  1F3A  2F3C               	goto	u3160
  5946  1F3B                     u3161:
  5947  1F3B  2F41               	goto	l2878
  5948  1F3C                     u3160:
  5949  1F3C                     l2876:
  5950  1F3C  09F2               	comf	___awmod@dividend,f
  5951  1F3D  09F3               	comf	___awmod@dividend+1,f
  5952  1F3E  0AF2               	incf	___awmod@dividend,f
  5953  1F3F  1903               	skipnz
  5954  1F40  0AF3               	incf	___awmod@dividend+1,f
  5955  1F41                     l2878:
  5956  1F41  0873               	movf	___awmod@dividend+1,w
  5957  1F42  00F1               	movwf	?___awmod+1
  5958  1F43  0872               	movf	___awmod@dividend,w
  5959  1F44  00F0               	movwf	?___awmod
  5960  1F45                     l687:
  5961  1F45  0008               	return
  5962  1F46                     __end_of___awmod:
  5963                           
  5964                           	psect	text4
  5965  1FA0                     __ptext4:	
  5966 ;; *************** function ___awdiv *****************
  5967 ;; Defined at:
  5968 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  divisor         2    7[COMMON] int 
  5971 ;;  dividend        2    9[COMMON] int 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  quotient        2    2[BANK0 ] int 
  5974 ;;  sign            1    1[BANK0 ] unsigned char 
  5975 ;;  counter         1    0[BANK0 ] unsigned char 
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  2    7[COMMON] int 
  5978 ;; Registers used:
  5979 ;;		wreg, status,2, status,0
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5985 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5989 ;;Total ram usage:        9 bytes
  5990 ;; Hardware stack levels used: 1
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		_scale
  5995 ;;		_sprintf
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           
  6000                           ;psect for function ___awdiv
  6001  1FA0                     ___awdiv:
  6002  1FA0                     l2800:	
  6003                           ;incstack = 0
  6004                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6005                           
  6006  1FA0  0020               	movlb	0	; select bank0
  6007  1FA1  01A1               	clrf	___awdiv@sign
  6008  1FA2                     l2802:
  6009  1FA2  1FF8               	btfss	___awdiv@divisor+1,7
  6010  1FA3  2FA5               	goto	u2981
  6011  1FA4  2FA6               	goto	u2980
  6012  1FA5                     u2981:
  6013  1FA5  2FAD               	goto	l2808
  6014  1FA6                     u2980:
  6015  1FA6                     l2804:
  6016  1FA6  09F7               	comf	___awdiv@divisor,f
  6017  1FA7  09F8               	comf	___awdiv@divisor+1,f
  6018  1FA8  0AF7               	incf	___awdiv@divisor,f
  6019  1FA9  1903               	skipnz
  6020  1FAA  0AF8               	incf	___awdiv@divisor+1,f
  6021  1FAB                     l2806:
  6022  1FAB  01A1               	clrf	___awdiv@sign
  6023  1FAC  0AA1               	incf	___awdiv@sign,f
  6024  1FAD                     l2808:
  6025  1FAD  1FFA               	btfss	___awdiv@dividend+1,7
  6026  1FAE  2FB0               	goto	u2991
  6027  1FAF  2FB1               	goto	u2990
  6028  1FB0                     u2991:
  6029  1FB0  2FBA               	goto	l2814
  6030  1FB1                     u2990:
  6031  1FB1                     l2810:
  6032  1FB1  09F9               	comf	___awdiv@dividend,f
  6033  1FB2  09FA               	comf	___awdiv@dividend+1,f
  6034  1FB3  0AF9               	incf	___awdiv@dividend,f
  6035  1FB4  1903               	skipnz
  6036  1FB5  0AFA               	incf	___awdiv@dividend+1,f
  6037  1FB6                     l2812:
  6038  1FB6  3001               	movlw	1
  6039  1FB7  00FB               	movwf	??___awdiv
  6040  1FB8  087B               	movf	??___awdiv,w
  6041  1FB9  06A1               	xorwf	___awdiv@sign,f
  6042  1FBA                     l2814:
  6043  1FBA  01A2               	clrf	___awdiv@quotient
  6044  1FBB  01A3               	clrf	___awdiv@quotient+1
  6045  1FBC                     l2816:
  6046  1FBC  0877               	movf	___awdiv@divisor,w
  6047  1FBD  0478               	iorwf	___awdiv@divisor+1,w
  6048  1FBE  1903               	btfsc	3,2
  6049  1FBF  2FC1               	goto	u3001
  6050  1FC0  2FC2               	goto	u3000
  6051  1FC1                     u3001:
  6052  1FC1  2FF1               	goto	l2836
  6053  1FC2                     u3000:
  6054  1FC2                     l2818:
  6055  1FC2  01A0               	clrf	___awdiv@counter
  6056  1FC3  0AA0               	incf	___awdiv@counter,f
  6057  1FC4  2FCE               	goto	l2824
  6058  1FC5                     l2820:
  6059  1FC5  3001               	movlw	1
  6060  1FC6                     u3015:
  6061  1FC6  35F7               	lslf	___awdiv@divisor,f
  6062  1FC7  0DF8               	rlf	___awdiv@divisor+1,f
  6063  1FC8  0B89               	decfsz	9,f
  6064  1FC9  2FC6               	goto	u3015
  6065  1FCA                     l2822:
  6066  1FCA  3001               	movlw	1
  6067  1FCB  00FB               	movwf	??___awdiv
  6068  1FCC  087B               	movf	??___awdiv,w
  6069  1FCD  07A0               	addwf	___awdiv@counter,f
  6070  1FCE                     l2824:
  6071  1FCE  1FF8               	btfss	___awdiv@divisor+1,7
  6072  1FCF  2FD1               	goto	u3021
  6073  1FD0  2FD2               	goto	u3020
  6074  1FD1                     u3021:
  6075  1FD1  2FC5               	goto	l2820
  6076  1FD2                     u3020:
  6077  1FD2                     l2826:
  6078  1FD2  3001               	movlw	1
  6079  1FD3                     u3035:
  6080  1FD3  35A2               	lslf	___awdiv@quotient,f
  6081  1FD4  0DA3               	rlf	___awdiv@quotient+1,f
  6082  1FD5  0B89               	decfsz	9,f
  6083  1FD6  2FD3               	goto	u3035
  6084  1FD7  0878               	movf	___awdiv@divisor+1,w
  6085  1FD8  027A               	subwf	___awdiv@dividend+1,w
  6086  1FD9  1D03               	skipz
  6087  1FDA  2FDD               	goto	u3045
  6088  1FDB  0877               	movf	___awdiv@divisor,w
  6089  1FDC  0279               	subwf	___awdiv@dividend,w
  6090  1FDD                     u3045:
  6091  1FDD  1C03               	skipc
  6092  1FDE  2FE0               	goto	u3041
  6093  1FDF  2FE1               	goto	u3040
  6094  1FE0                     u3041:
  6095  1FE0  2FE6               	goto	l2832
  6096  1FE1                     u3040:
  6097  1FE1                     l2828:
  6098  1FE1  0877               	movf	___awdiv@divisor,w
  6099  1FE2  02F9               	subwf	___awdiv@dividend,f
  6100  1FE3  0878               	movf	___awdiv@divisor+1,w
  6101  1FE4  3BFA               	subwfb	___awdiv@dividend+1,f
  6102  1FE5                     l2830:
  6103  1FE5  1422               	bsf	___awdiv@quotient,0
  6104  1FE6                     l2832:
  6105  1FE6  3001               	movlw	1
  6106  1FE7                     u3055:
  6107  1FE7  36F8               	lsrf	___awdiv@divisor+1,f
  6108  1FE8  0CF7               	rrf	___awdiv@divisor,f
  6109  1FE9  0B89               	decfsz	9,f
  6110  1FEA  2FE7               	goto	u3055
  6111  1FEB                     l2834:
  6112  1FEB  3001               	movlw	1
  6113  1FEC  02A0               	subwf	___awdiv@counter,f
  6114  1FED  1D03               	btfss	3,2
  6115  1FEE  2FF0               	goto	u3061
  6116  1FEF  2FF1               	goto	u3060
  6117  1FF0                     u3061:
  6118  1FF0  2FD2               	goto	l2826
  6119  1FF1                     u3060:
  6120  1FF1                     l2836:
  6121  1FF1  0821               	movf	___awdiv@sign,w
  6122  1FF2  1903               	btfsc	3,2
  6123  1FF3  2FF5               	goto	u3071
  6124  1FF4  2FF6               	goto	u3070
  6125  1FF5                     u3071:
  6126  1FF5  2FFB               	goto	l2840
  6127  1FF6                     u3070:
  6128  1FF6                     l2838:
  6129  1FF6  09A2               	comf	___awdiv@quotient,f
  6130  1FF7  09A3               	comf	___awdiv@quotient+1,f
  6131  1FF8  0AA2               	incf	___awdiv@quotient,f
  6132  1FF9  1903               	skipnz
  6133  1FFA  0AA3               	incf	___awdiv@quotient+1,f
  6134  1FFB                     l2840:
  6135  1FFB  0823               	movf	___awdiv@quotient+1,w
  6136  1FFC  00F8               	movwf	?___awdiv+1
  6137  1FFD  0822               	movf	___awdiv@quotient,w
  6138  1FFE  00F7               	movwf	?___awdiv
  6139  1FFF                     l674:
  6140  1FFF  0008               	return
  6141  2000                     __end_of___awdiv:
  6142                           
  6143                           	psect	text5
  6144  1CB8                     __ptext5:	
  6145 ;; *************** function _isdigit *****************
  6146 ;; Defined at:
  6147 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;  c               1    wreg     unsigned char 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;  c               1    1[COMMON] unsigned char 
  6152 ;; Return value:  Size  Location     Type
  6153 ;;		None               void
  6154 ;; Registers used:
  6155 ;;		wreg, status,2, status,0
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6164 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;Total ram usage:        2 bytes
  6166 ;; Hardware stack levels used: 1
  6167 ;; This function calls:
  6168 ;;		Nothing
  6169 ;; This function is called by:
  6170 ;;		_sprintf
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           
  6175                           ;psect for function _isdigit
  6176  1CB8                     _isdigit:
  6177                           
  6178                           ;incstack = 0
  6179                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6180                           ;isdigit@c stored from wreg
  6181  1CB8  00F1               	movwf	isdigit@c
  6182  1CB9                     l3402:
  6183  1CB9  01F0               	clrf	_isdigit$886
  6184  1CBA                     l3404:
  6185  1CBA  303A               	movlw	58
  6186  1CBB  0271               	subwf	isdigit@c,w
  6187  1CBC  1803               	skipnc
  6188  1CBD  2CBF               	goto	u4081
  6189  1CBE  2CC0               	goto	u4080
  6190  1CBF                     u4081:
  6191  1CBF  2CC8               	goto	l3410
  6192  1CC0                     u4080:
  6193  1CC0                     l3406:
  6194  1CC0  3030               	movlw	48
  6195  1CC1  0271               	subwf	isdigit@c,w
  6196  1CC2  1C03               	skipc
  6197  1CC3  2CC5               	goto	u4091
  6198  1CC4  2CC6               	goto	u4090
  6199  1CC5                     u4091:
  6200  1CC5  2CC8               	goto	l3410
  6201  1CC6                     u4090:
  6202  1CC6                     l3408:
  6203  1CC6  01F0               	clrf	_isdigit$886
  6204  1CC7  0AF0               	incf	_isdigit$886,f
  6205  1CC8                     l3410:
  6206  1CC8  0C70               	rrf	_isdigit$886,w
  6207  1CC9                     l1008:
  6208  1CC9  0008               	return
  6209  1CCA                     __end_of_isdigit:
  6210                           
  6211                           	psect	text6
  6212  14C4                     __ptext6:	
  6213 ;; *************** function _fround *****************
  6214 ;; Defined at:
  6215 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  prec            1    wreg     unsigned char 
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  prec            1   48[BANK0 ] unsigned char 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  4   30[BANK0 ] unsigned char 
  6222 ;; Registers used:
  6223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6230 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6231 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;Total ram usage:       19 bytes
  6234 ;; Hardware stack levels used: 1
  6235 ;; Hardware stack levels required when called: 2
  6236 ;; This function calls:
  6237 ;;		___flmul
  6238 ;;		___lwdiv
  6239 ;;		___lwmod
  6240 ;; This function is called by:
  6241 ;;		_sprintf
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           
  6245                           
  6246                           ;psect for function _fround
  6247  14C4                     _fround:
  6248                           
  6249                           ;incstack = 0
  6250                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6251                           ;fround@prec stored from wreg
  6252  14C4  0020               	movlb	0	; select bank0
  6253  14C5  00D0               	movwf	fround@prec
  6254  14C6                     l3344:
  6255                           
  6256                           ;doprnt.c: 421: if(prec>=110)
  6257  14C6  306E               	movlw	110
  6258  14C7  0250               	subwf	fround@prec,w
  6259  14C8  1C03               	skipc
  6260  14C9  2CCB               	goto	u4011
  6261  14CA  2CCC               	goto	u4010
  6262  14CB                     u4011:
  6263  14CB  2D95               	goto	l3352
  6264  14CC                     u4010:
  6265  14CC                     l3346:
  6266                           
  6267                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6268  14CC  303F               	movlw	63
  6269  14CD  00A7               	movwf	___flmul@b+3
  6270  14CE  3000               	movlw	0
  6271  14CF  00A6               	movwf	___flmul@b+2
  6272  14D0  3000               	movlw	0
  6273  14D1  00A5               	movwf	___flmul@b+1
  6274  14D2  3000               	movlw	0
  6275  14D3  00A4               	movwf	___flmul@b
  6276  14D4  3064               	movlw	100
  6277  14D5  00F6               	movwf	___lwdiv@divisor
  6278  14D6  3000               	movlw	0
  6279  14D7  00F7               	movwf	___lwdiv@divisor+1
  6280  14D8  0850               	movf	fround@prec,w
  6281  14D9  00C2               	movwf	??_fround
  6282  14DA  01C3               	clrf	??_fround+1
  6283  14DB  0842               	movf	??_fround,w
  6284  14DC  00F8               	movwf	___lwdiv@dividend
  6285  14DD  0843               	movf	??_fround+1,w
  6286  14DE  00F9               	movwf	___lwdiv@dividend+1
  6287  14DF  3190  2001  3194   	fcall	___lwdiv
  6288  14E2  0877               	movf	?___lwdiv+1,w
  6289  14E3  0085               	movwf	5
  6290  14E4  0876               	movf	?___lwdiv,w
  6291  14E5  0084               	movwf	4
  6292  14E6  3584               	lslf	4,f
  6293  14E7  0D85               	rlf	5,f
  6294  14E8  3584               	lslf	4,f
  6295  14E9  0D85               	rlf	5,f
  6296  14EA  30B3               	movlw	low ((__npowers_+72)| (0+32768))
  6297  14EB  0784               	addwf	4,f
  6298  14EC  30A0               	movlw	high ((__npowers_+72)| (0+32768))
  6299  14ED  3D85               	addwfc	5,f
  6300  14EE  3F00               	moviw [0]fsr0
  6301  14EF  0020               	movlb	0	; select bank0
  6302  14F0  00C4               	movwf	??_fround+2
  6303  14F1  3F01               	moviw [1]fsr0
  6304  14F2  00C5               	movwf	??_fround+3
  6305  14F3  3F02               	moviw [2]fsr0
  6306  14F4  00C6               	movwf	??_fround+4
  6307  14F5  3F03               	moviw [3]fsr0
  6308  14F6  00C7               	movwf	??_fround+5
  6309  14F7  0847               	movf	??_fround+5,w
  6310  14F8  00AB               	movwf	___flmul@a+3
  6311  14F9  0846               	movf	??_fround+4,w
  6312  14FA  00AA               	movwf	___flmul@a+2
  6313  14FB  0845               	movf	??_fround+3,w
  6314  14FC  00A9               	movwf	___flmul@a+1
  6315  14FD  0844               	movf	??_fround+2,w
  6316  14FE  00A8               	movwf	___flmul@a
  6317  14FF  318B  232D  3194   	fcall	___flmul
  6318  1502  0020               	movlb	0	; select bank0
  6319  1503  0827               	movf	?___flmul+3,w
  6320  1504  00CF               	movwf	_fround$1079+3
  6321  1505  0826               	movf	?___flmul+2,w
  6322  1506  00CE               	movwf	_fround$1079+2
  6323  1507  0825               	movf	?___flmul+1,w
  6324  1508  00CD               	movwf	_fround$1079+1
  6325  1509  0824               	movf	?___flmul,w
  6326  150A  00CC               	movwf	_fround$1079
  6327                           
  6328                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6329  150B  300A               	movlw	10
  6330  150C  00F6               	movwf	___lwdiv@divisor
  6331  150D  3000               	movlw	0
  6332  150E  00F7               	movwf	___lwdiv@divisor+1
  6333  150F  0850               	movf	fround@prec,w
  6334  1510  00C2               	movwf	??_fround
  6335  1511  01C3               	clrf	??_fround+1
  6336  1512  0842               	movf	??_fround,w
  6337  1513  00F2               	movwf	___lwmod@dividend
  6338  1514  0843               	movf	??_fround+1,w
  6339  1515  00F3               	movwf	___lwmod@dividend+1
  6340  1516  3064               	movlw	100
  6341  1517  00F0               	movwf	___lwmod@divisor
  6342  1518  3000               	movlw	0
  6343  1519  00F1               	movwf	___lwmod@divisor+1
  6344  151A  319D  25A0  3194   	fcall	___lwmod
  6345  151D  0871               	movf	?___lwmod+1,w
  6346  151E  00F9               	movwf	___lwdiv@dividend+1
  6347  151F  0870               	movf	?___lwmod,w
  6348  1520  00F8               	movwf	___lwdiv@dividend
  6349  1521  3190  2001  3194   	fcall	___lwdiv
  6350  1524  0877               	movf	?___lwdiv+1,w
  6351  1525  0085               	movwf	5
  6352  1526  0876               	movf	?___lwdiv,w
  6353  1527  0084               	movwf	4
  6354  1528  3584               	lslf	4,f
  6355  1529  0D85               	rlf	5,f
  6356  152A  3584               	lslf	4,f
  6357  152B  0D85               	rlf	5,f
  6358  152C  308F               	movlw	low ((__npowers_+36)| (0+32768))
  6359  152D  0784               	addwf	4,f
  6360  152E  30A0               	movlw	high ((__npowers_+36)| (0+32768))
  6361  152F  3D85               	addwfc	5,f
  6362  1530  3F00               	moviw [0]fsr0
  6363  1531  0020               	movlb	0	; select bank0
  6364  1532  00C4               	movwf	??_fround+2
  6365  1533  3F01               	moviw [1]fsr0
  6366  1534  00C5               	movwf	??_fround+3
  6367  1535  3F02               	moviw [2]fsr0
  6368  1536  00C6               	movwf	??_fround+4
  6369  1537  3F03               	moviw [3]fsr0
  6370  1538  00C7               	movwf	??_fround+5
  6371  1539  0847               	movf	??_fround+5,w
  6372  153A  00A7               	movwf	___flmul@b+3
  6373  153B  0846               	movf	??_fround+4,w
  6374  153C  00A6               	movwf	___flmul@b+2
  6375  153D  0845               	movf	??_fround+3,w
  6376  153E  00A5               	movwf	___flmul@b+1
  6377  153F  0844               	movf	??_fround+2,w
  6378  1540  00A4               	movwf	___flmul@b
  6379  1541  084F               	movf	_fround$1079+3,w
  6380  1542  00AB               	movwf	___flmul@a+3
  6381  1543  084E               	movf	_fround$1079+2,w
  6382  1544  00AA               	movwf	___flmul@a+2
  6383  1545  084D               	movf	_fround$1079+1,w
  6384  1546  00A9               	movwf	___flmul@a+1
  6385  1547  084C               	movf	_fround$1079,w
  6386  1548  00A8               	movwf	___flmul@a
  6387  1549  318B  232D  3194   	fcall	___flmul
  6388  154C  0020               	movlb	0	; select bank0
  6389  154D  0827               	movf	?___flmul+3,w
  6390  154E  00CB               	movwf	_fround$1080+3
  6391  154F  0826               	movf	?___flmul+2,w
  6392  1550  00CA               	movwf	_fround$1080+2
  6393  1551  0825               	movf	?___flmul+1,w
  6394  1552  00C9               	movwf	_fround$1080+1
  6395  1553  0824               	movf	?___flmul,w
  6396  1554  00C8               	movwf	_fround$1080
  6397                           
  6398                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6399  1555  300A               	movlw	10
  6400  1556  00F0               	movwf	___lwmod@divisor
  6401  1557  3000               	movlw	0
  6402  1558  00F1               	movwf	___lwmod@divisor+1
  6403  1559  0850               	movf	fround@prec,w
  6404  155A  00C2               	movwf	??_fround
  6405  155B  01C3               	clrf	??_fround+1
  6406  155C  0842               	movf	??_fround,w
  6407  155D  00F2               	movwf	___lwmod@dividend
  6408  155E  0843               	movf	??_fround+1,w
  6409  155F  00F3               	movwf	___lwmod@dividend+1
  6410  1560  319D  25A0  3194   	fcall	___lwmod
  6411  1563  0871               	movf	?___lwmod+1,w
  6412  1564  0085               	movwf	5
  6413  1565  0870               	movf	?___lwmod,w
  6414  1566  0084               	movwf	4
  6415  1567  3584               	lslf	4,f
  6416  1568  0D85               	rlf	5,f
  6417  1569  3584               	lslf	4,f
  6418  156A  0D85               	rlf	5,f
  6419  156B  306B               	movlw	low (__npowers_| (0+32768))
  6420  156C  0784               	addwf	4,f
  6421  156D  30A0               	movlw	high (__npowers_| (0+32768))
  6422  156E  3D85               	addwfc	5,f
  6423  156F  3F00               	moviw [0]fsr0
  6424  1570  0020               	movlb	0	; select bank0
  6425  1571  00C4               	movwf	??_fround+2
  6426  1572  3F01               	moviw [1]fsr0
  6427  1573  00C5               	movwf	??_fround+3
  6428  1574  3F02               	moviw [2]fsr0
  6429  1575  00C6               	movwf	??_fround+4
  6430  1576  3F03               	moviw [3]fsr0
  6431  1577  00C7               	movwf	??_fround+5
  6432  1578  0847               	movf	??_fround+5,w
  6433  1579  00A7               	movwf	___flmul@b+3
  6434  157A  0846               	movf	??_fround+4,w
  6435  157B  00A6               	movwf	___flmul@b+2
  6436  157C  0845               	movf	??_fround+3,w
  6437  157D  00A5               	movwf	___flmul@b+1
  6438  157E  0844               	movf	??_fround+2,w
  6439  157F  00A4               	movwf	___flmul@b
  6440  1580  084B               	movf	_fround$1080+3,w
  6441  1581  00AB               	movwf	___flmul@a+3
  6442  1582  084A               	movf	_fround$1080+2,w
  6443  1583  00AA               	movwf	___flmul@a+2
  6444  1584  0849               	movf	_fround$1080+1,w
  6445  1585  00A9               	movwf	___flmul@a+1
  6446  1586  0848               	movf	_fround$1080,w
  6447  1587  00A8               	movwf	___flmul@a
  6448  1588  318B  232D  3194   	fcall	___flmul
  6449  158B  0020               	movlb	0	; select bank0
  6450  158C  0827               	movf	?___flmul+3,w
  6451  158D  00C1               	movwf	?_fround+3
  6452  158E  0826               	movf	?___flmul+2,w
  6453  158F  00C0               	movwf	?_fround+2
  6454  1590  0825               	movf	?___flmul+1,w
  6455  1591  00BF               	movwf	?_fround+1
  6456  1592  0824               	movf	?___flmul,w
  6457  1593  00BE               	movwf	?_fround
  6458  1594  2E4B               	goto	l409
  6459  1595                     l3352:
  6460                           
  6461                           ;doprnt.c: 423: else if(prec > 10)
  6462  1595  300B               	movlw	11
  6463  1596  0250               	subwf	fround@prec,w
  6464  1597  1C03               	skipc
  6465  1598  2D9A               	goto	u4021
  6466  1599  2D9B               	goto	u4020
  6467  159A                     u4021:
  6468  159A  2E1A               	goto	l3358
  6469  159B                     u4020:
  6470  159B                     l3354:
  6471                           
  6472                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6473  159B  303F               	movlw	63
  6474  159C  00A7               	movwf	___flmul@b+3
  6475  159D  3000               	movlw	0
  6476  159E  00A6               	movwf	___flmul@b+2
  6477  159F  3000               	movlw	0
  6478  15A0  00A5               	movwf	___flmul@b+1
  6479  15A1  3000               	movlw	0
  6480  15A2  00A4               	movwf	___flmul@b
  6481  15A3  300A               	movlw	10
  6482  15A4  00F6               	movwf	___lwdiv@divisor
  6483  15A5  3000               	movlw	0
  6484  15A6  00F7               	movwf	___lwdiv@divisor+1
  6485  15A7  0850               	movf	fround@prec,w
  6486  15A8  00C2               	movwf	??_fround
  6487  15A9  01C3               	clrf	??_fround+1
  6488  15AA  0842               	movf	??_fround,w
  6489  15AB  00F8               	movwf	___lwdiv@dividend
  6490  15AC  0843               	movf	??_fround+1,w
  6491  15AD  00F9               	movwf	___lwdiv@dividend+1
  6492  15AE  3190  2001  3194   	fcall	___lwdiv
  6493  15B1  0877               	movf	?___lwdiv+1,w
  6494  15B2  0085               	movwf	5
  6495  15B3  0876               	movf	?___lwdiv,w
  6496  15B4  0084               	movwf	4
  6497  15B5  3584               	lslf	4,f
  6498  15B6  0D85               	rlf	5,f
  6499  15B7  3584               	lslf	4,f
  6500  15B8  0D85               	rlf	5,f
  6501  15B9  308F               	movlw	low ((__npowers_+36)| (0+32768))
  6502  15BA  0784               	addwf	4,f
  6503  15BB  30A0               	movlw	high ((__npowers_+36)| (0+32768))
  6504  15BC  3D85               	addwfc	5,f
  6505  15BD  3F00               	moviw [0]fsr0
  6506  15BE  0020               	movlb	0	; select bank0
  6507  15BF  00C4               	movwf	??_fround+2
  6508  15C0  3F01               	moviw [1]fsr0
  6509  15C1  00C5               	movwf	??_fround+3
  6510  15C2  3F02               	moviw [2]fsr0
  6511  15C3  00C6               	movwf	??_fround+4
  6512  15C4  3F03               	moviw [3]fsr0
  6513  15C5  00C7               	movwf	??_fround+5
  6514  15C6  0847               	movf	??_fround+5,w
  6515  15C7  00AB               	movwf	___flmul@a+3
  6516  15C8  0846               	movf	??_fround+4,w
  6517  15C9  00AA               	movwf	___flmul@a+2
  6518  15CA  0845               	movf	??_fround+3,w
  6519  15CB  00A9               	movwf	___flmul@a+1
  6520  15CC  0844               	movf	??_fround+2,w
  6521  15CD  00A8               	movwf	___flmul@a
  6522  15CE  318B  232D  3194   	fcall	___flmul
  6523  15D1  0020               	movlb	0	; select bank0
  6524  15D2  0827               	movf	?___flmul+3,w
  6525  15D3  00CF               	movwf	_fround$1079+3
  6526  15D4  0826               	movf	?___flmul+2,w
  6527  15D5  00CE               	movwf	_fround$1079+2
  6528  15D6  0825               	movf	?___flmul+1,w
  6529  15D7  00CD               	movwf	_fround$1079+1
  6530  15D8  0824               	movf	?___flmul,w
  6531  15D9  00CC               	movwf	_fround$1079
  6532                           
  6533                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6534  15DA  300A               	movlw	10
  6535  15DB  00F0               	movwf	___lwmod@divisor
  6536  15DC  3000               	movlw	0
  6537  15DD  00F1               	movwf	___lwmod@divisor+1
  6538  15DE  0850               	movf	fround@prec,w
  6539  15DF  00C2               	movwf	??_fround
  6540  15E0  01C3               	clrf	??_fround+1
  6541  15E1  0842               	movf	??_fround,w
  6542  15E2  00F2               	movwf	___lwmod@dividend
  6543  15E3  0843               	movf	??_fround+1,w
  6544  15E4  00F3               	movwf	___lwmod@dividend+1
  6545  15E5  319D  25A0  3194   	fcall	___lwmod
  6546  15E8  0871               	movf	?___lwmod+1,w
  6547  15E9  0085               	movwf	5
  6548  15EA  0870               	movf	?___lwmod,w
  6549  15EB  0084               	movwf	4
  6550  15EC  3584               	lslf	4,f
  6551  15ED  0D85               	rlf	5,f
  6552  15EE  3584               	lslf	4,f
  6553  15EF  0D85               	rlf	5,f
  6554  15F0  306B               	movlw	low (__npowers_| (0+32768))
  6555  15F1  0784               	addwf	4,f
  6556  15F2  30A0               	movlw	high (__npowers_| (0+32768))
  6557  15F3  3D85               	addwfc	5,f
  6558  15F4  3F00               	moviw [0]fsr0
  6559  15F5  0020               	movlb	0	; select bank0
  6560  15F6  00C4               	movwf	??_fround+2
  6561  15F7  3F01               	moviw [1]fsr0
  6562  15F8  00C5               	movwf	??_fround+3
  6563  15F9  3F02               	moviw [2]fsr0
  6564  15FA  00C6               	movwf	??_fround+4
  6565  15FB  3F03               	moviw [3]fsr0
  6566  15FC  00C7               	movwf	??_fround+5
  6567  15FD  0847               	movf	??_fround+5,w
  6568  15FE  00A7               	movwf	___flmul@b+3
  6569  15FF  0846               	movf	??_fround+4,w
  6570  1600  00A6               	movwf	___flmul@b+2
  6571  1601  0845               	movf	??_fround+3,w
  6572  1602  00A5               	movwf	___flmul@b+1
  6573  1603  0844               	movf	??_fround+2,w
  6574  1604  00A4               	movwf	___flmul@b
  6575  1605  084F               	movf	_fround$1079+3,w
  6576  1606  00AB               	movwf	___flmul@a+3
  6577  1607  084E               	movf	_fround$1079+2,w
  6578  1608  00AA               	movwf	___flmul@a+2
  6579  1609  084D               	movf	_fround$1079+1,w
  6580  160A  00A9               	movwf	___flmul@a+1
  6581  160B  084C               	movf	_fround$1079,w
  6582  160C  00A8               	movwf	___flmul@a
  6583  160D  318B  232D  3194   	fcall	___flmul
  6584  1610  0020               	movlb	0	; select bank0
  6585  1611  0827               	movf	?___flmul+3,w
  6586  1612  00C1               	movwf	?_fround+3
  6587  1613  0826               	movf	?___flmul+2,w
  6588  1614  00C0               	movwf	?_fround+2
  6589  1615  0825               	movf	?___flmul+1,w
  6590  1616  00BF               	movwf	?_fround+1
  6591  1617  0824               	movf	?___flmul,w
  6592  1618  00BE               	movwf	?_fround
  6593  1619  2E4B               	goto	l409
  6594  161A                     l3358:
  6595                           
  6596                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  6597  161A  303F               	movlw	63
  6598  161B  00A7               	movwf	___flmul@b+3
  6599  161C  3000               	movlw	0
  6600  161D  00A6               	movwf	___flmul@b+2
  6601  161E  3000               	movlw	0
  6602  161F  00A5               	movwf	___flmul@b+1
  6603  1620  3000               	movlw	0
  6604  1621  00A4               	movwf	___flmul@b
  6605  1622  0850               	movf	fround@prec,w
  6606  1623  00C2               	movwf	??_fround
  6607  1624  01C3               	clrf	??_fround+1
  6608  1625  35C2               	lslf	??_fround,f
  6609  1626  0DC3               	rlf	??_fround+1,f
  6610  1627  35C2               	lslf	??_fround,f
  6611  1628  0DC3               	rlf	??_fround+1,f
  6612  1629  306B               	movlw	low (__npowers_| (0+32768))
  6613  162A  0742               	addwf	??_fround,w
  6614  162B  0084               	movwf	4
  6615  162C  30A0               	movlw	high (__npowers_| (0+32768))
  6616  162D  3D43               	addwfc	??_fround+1,w
  6617  162E  0085               	movwf	5
  6618  162F  3F00               	moviw [0]fsr0
  6619  1630  00C4               	movwf	??_fround+2
  6620  1631  3F01               	moviw [1]fsr0
  6621  1632  00C5               	movwf	??_fround+3
  6622  1633  3F02               	moviw [2]fsr0
  6623  1634  00C6               	movwf	??_fround+4
  6624  1635  3F03               	moviw [3]fsr0
  6625  1636  00C7               	movwf	??_fround+5
  6626  1637  0847               	movf	??_fround+5,w
  6627  1638  00AB               	movwf	___flmul@a+3
  6628  1639  0846               	movf	??_fround+4,w
  6629  163A  00AA               	movwf	___flmul@a+2
  6630  163B  0845               	movf	??_fround+3,w
  6631  163C  00A9               	movwf	___flmul@a+1
  6632  163D  0844               	movf	??_fround+2,w
  6633  163E  00A8               	movwf	___flmul@a
  6634  163F  318B  232D  3194   	fcall	___flmul
  6635  1642  0020               	movlb	0	; select bank0
  6636  1643  0827               	movf	?___flmul+3,w
  6637  1644  00C1               	movwf	?_fround+3
  6638  1645  0826               	movf	?___flmul+2,w
  6639  1646  00C0               	movwf	?_fround+2
  6640  1647  0825               	movf	?___flmul+1,w
  6641  1648  00BF               	movwf	?_fround+1
  6642  1649  0824               	movf	?___flmul,w
  6643  164A  00BE               	movwf	?_fround
  6644  164B                     l409:
  6645  164B  0008               	return
  6646  164C                     __end_of_fround:
  6647                           
  6648                           	psect	text7
  6649  1DA0                     __ptext7:	
  6650 ;; *************** function ___lwmod *****************
  6651 ;; Defined at:
  6652 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  divisor         2    0[COMMON] unsigned int 
  6655 ;;  dividend        2    2[COMMON] unsigned int 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  counter         1    5[COMMON] unsigned char 
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  2    0[COMMON] unsigned int 
  6660 ;; Registers used:
  6661 ;;		wreg, status,2, status,0
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6667 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6670 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6671 ;;Total ram usage:        6 bytes
  6672 ;; Hardware stack levels used: 1
  6673 ;; This function calls:
  6674 ;;		Nothing
  6675 ;; This function is called by:
  6676 ;;		_fround
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           
  6681                           ;psect for function ___lwmod
  6682  1DA0                     ___lwmod:
  6683  1DA0                     l2908:	
  6684                           ;incstack = 0
  6685                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6686                           
  6687  1DA0  0870               	movf	___lwmod@divisor,w
  6688  1DA1  0471               	iorwf	___lwmod@divisor+1,w
  6689  1DA2  1903               	btfsc	3,2
  6690  1DA3  2DA5               	goto	u3241
  6691  1DA4  2DA6               	goto	u3240
  6692  1DA5                     u3241:
  6693  1DA5  2DCF               	goto	l2926
  6694  1DA6                     u3240:
  6695  1DA6                     l2910:
  6696  1DA6  01F5               	clrf	___lwmod@counter
  6697  1DA7  0AF5               	incf	___lwmod@counter,f
  6698  1DA8  2DB2               	goto	l2916
  6699  1DA9                     l2912:
  6700  1DA9  3001               	movlw	1
  6701  1DAA                     u3255:
  6702  1DAA  35F0               	lslf	___lwmod@divisor,f
  6703  1DAB  0DF1               	rlf	___lwmod@divisor+1,f
  6704  1DAC  0B89               	decfsz	9,f
  6705  1DAD  2DAA               	goto	u3255
  6706  1DAE                     l2914:
  6707  1DAE  3001               	movlw	1
  6708  1DAF  00F4               	movwf	??___lwmod
  6709  1DB0  0874               	movf	??___lwmod,w
  6710  1DB1  07F5               	addwf	___lwmod@counter,f
  6711  1DB2                     l2916:
  6712  1DB2  1FF1               	btfss	___lwmod@divisor+1,7
  6713  1DB3  2DB5               	goto	u3261
  6714  1DB4  2DB6               	goto	u3260
  6715  1DB5                     u3261:
  6716  1DB5  2DA9               	goto	l2912
  6717  1DB6                     u3260:
  6718  1DB6                     l2918:
  6719  1DB6  0871               	movf	___lwmod@divisor+1,w
  6720  1DB7  0273               	subwf	___lwmod@dividend+1,w
  6721  1DB8  1D03               	skipz
  6722  1DB9  2DBC               	goto	u3275
  6723  1DBA  0870               	movf	___lwmod@divisor,w
  6724  1DBB  0272               	subwf	___lwmod@dividend,w
  6725  1DBC                     u3275:
  6726  1DBC  1C03               	skipc
  6727  1DBD  2DBF               	goto	u3271
  6728  1DBE  2DC0               	goto	u3270
  6729  1DBF                     u3271:
  6730  1DBF  2DC4               	goto	l2922
  6731  1DC0                     u3270:
  6732  1DC0                     l2920:
  6733  1DC0  0870               	movf	___lwmod@divisor,w
  6734  1DC1  02F2               	subwf	___lwmod@dividend,f
  6735  1DC2  0871               	movf	___lwmod@divisor+1,w
  6736  1DC3  3BF3               	subwfb	___lwmod@dividend+1,f
  6737  1DC4                     l2922:
  6738  1DC4  3001               	movlw	1
  6739  1DC5                     u3285:
  6740  1DC5  36F1               	lsrf	___lwmod@divisor+1,f
  6741  1DC6  0CF0               	rrf	___lwmod@divisor,f
  6742  1DC7  0B89               	decfsz	9,f
  6743  1DC8  2DC5               	goto	u3285
  6744  1DC9                     l2924:
  6745  1DC9  3001               	movlw	1
  6746  1DCA  02F5               	subwf	___lwmod@counter,f
  6747  1DCB  1D03               	btfss	3,2
  6748  1DCC  2DCE               	goto	u3291
  6749  1DCD  2DCF               	goto	u3290
  6750  1DCE                     u3291:
  6751  1DCE  2DB6               	goto	l2918
  6752  1DCF                     u3290:
  6753  1DCF                     l2926:
  6754  1DCF  0873               	movf	___lwmod@dividend+1,w
  6755  1DD0  00F1               	movwf	?___lwmod+1
  6756  1DD1  0872               	movf	___lwmod@dividend,w
  6757  1DD2  00F0               	movwf	?___lwmod
  6758  1DD3                     l837:
  6759  1DD3  0008               	return
  6760  1DD4                     __end_of___lwmod:
  6761                           
  6762                           	psect	text8
  6763  1001                     __ptext8:	
  6764 ;; *************** function ___lwdiv *****************
  6765 ;; Defined at:
  6766 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  divisor         2    6[COMMON] unsigned int 
  6769 ;;  dividend        2    8[COMMON] unsigned int 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  quotient        2   11[COMMON] unsigned int 
  6772 ;;  counter         1   13[COMMON] unsigned char 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  2    6[COMMON] unsigned int 
  6775 ;; Registers used:
  6776 ;;		wreg, status,2, status,0
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6786 ;;Total ram usage:        8 bytes
  6787 ;; Hardware stack levels used: 1
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_fround
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           
  6796                           ;psect for function ___lwdiv
  6797  1001                     ___lwdiv:
  6798  1001                     l2882:	
  6799                           ;incstack = 0
  6800                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6801                           
  6802  1001  01FB               	clrf	___lwdiv@quotient
  6803  1002  01FC               	clrf	___lwdiv@quotient+1
  6804  1003                     l2884:
  6805  1003  0876               	movf	___lwdiv@divisor,w
  6806  1004  0477               	iorwf	___lwdiv@divisor+1,w
  6807  1005  1903               	btfsc	3,2
  6808  1006  2808               	goto	u3171
  6809  1007  2809               	goto	u3170
  6810  1008                     u3171:
  6811  1008  2838               	goto	l2904
  6812  1009                     u3170:
  6813  1009                     l2886:
  6814  1009  01FD               	clrf	___lwdiv@counter
  6815  100A  0AFD               	incf	___lwdiv@counter,f
  6816  100B  2815               	goto	l2892
  6817  100C                     l2888:
  6818  100C  3001               	movlw	1
  6819  100D                     u3185:
  6820  100D  35F6               	lslf	___lwdiv@divisor,f
  6821  100E  0DF7               	rlf	___lwdiv@divisor+1,f
  6822  100F  0B89               	decfsz	9,f
  6823  1010  280D               	goto	u3185
  6824  1011                     l2890:
  6825  1011  3001               	movlw	1
  6826  1012  00FA               	movwf	??___lwdiv
  6827  1013  087A               	movf	??___lwdiv,w
  6828  1014  07FD               	addwf	___lwdiv@counter,f
  6829  1015                     l2892:
  6830  1015  1FF7               	btfss	___lwdiv@divisor+1,7
  6831  1016  2818               	goto	u3191
  6832  1017  2819               	goto	u3190
  6833  1018                     u3191:
  6834  1018  280C               	goto	l2888
  6835  1019                     u3190:
  6836  1019                     l2894:
  6837  1019  3001               	movlw	1
  6838  101A                     u3205:
  6839  101A  35FB               	lslf	___lwdiv@quotient,f
  6840  101B  0DFC               	rlf	___lwdiv@quotient+1,f
  6841  101C  0B89               	decfsz	9,f
  6842  101D  281A               	goto	u3205
  6843  101E  0877               	movf	___lwdiv@divisor+1,w
  6844  101F  0279               	subwf	___lwdiv@dividend+1,w
  6845  1020  1D03               	skipz
  6846  1021  2824               	goto	u3215
  6847  1022  0876               	movf	___lwdiv@divisor,w
  6848  1023  0278               	subwf	___lwdiv@dividend,w
  6849  1024                     u3215:
  6850  1024  1C03               	skipc
  6851  1025  2827               	goto	u3211
  6852  1026  2828               	goto	u3210
  6853  1027                     u3211:
  6854  1027  282D               	goto	l2900
  6855  1028                     u3210:
  6856  1028                     l2896:
  6857  1028  0876               	movf	___lwdiv@divisor,w
  6858  1029  02F8               	subwf	___lwdiv@dividend,f
  6859  102A  0877               	movf	___lwdiv@divisor+1,w
  6860  102B  3BF9               	subwfb	___lwdiv@dividend+1,f
  6861  102C                     l2898:
  6862  102C  147B               	bsf	___lwdiv@quotient,0
  6863  102D                     l2900:
  6864  102D  3001               	movlw	1
  6865  102E                     u3225:
  6866  102E  36F7               	lsrf	___lwdiv@divisor+1,f
  6867  102F  0CF6               	rrf	___lwdiv@divisor,f
  6868  1030  0B89               	decfsz	9,f
  6869  1031  282E               	goto	u3225
  6870  1032                     l2902:
  6871  1032  3001               	movlw	1
  6872  1033  02FD               	subwf	___lwdiv@counter,f
  6873  1034  1D03               	btfss	3,2
  6874  1035  2837               	goto	u3231
  6875  1036  2838               	goto	u3230
  6876  1037                     u3231:
  6877  1037  2819               	goto	l2894
  6878  1038                     u3230:
  6879  1038                     l2904:
  6880  1038  087C               	movf	___lwdiv@quotient+1,w
  6881  1039  00F7               	movwf	?___lwdiv+1
  6882  103A  087B               	movf	___lwdiv@quotient,w
  6883  103B  00F6               	movwf	?___lwdiv
  6884  103C                     l827:
  6885  103C  0008               	return
  6886  103D                     __end_of___lwdiv:
  6887                           
  6888                           	psect	text9
  6889  0B2D                     __ptext9:	
  6890 ;; *************** function ___flmul *****************
  6891 ;; Defined at:
  6892 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  b               4    4[BANK0 ] unsigned int 
  6895 ;;  a               4    8[BANK0 ] unsigned int 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  prod            4   24[BANK0 ] struct .
  6898 ;;  grs             4   18[BANK0 ] unsigned long 
  6899 ;;  temp            2   28[BANK0 ] struct .
  6900 ;;  bexp            1   23[BANK0 ] unsigned char 
  6901 ;;  aexp            1   22[BANK0 ] unsigned char 
  6902 ;;  sign            1   17[BANK0 ] unsigned char 
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  4    4[BANK0 ] unsigned char 
  6905 ;; Registers used:
  6906 ;;		wreg, status,2, status,0, pclath, cstack
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6912 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6915 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6916 ;;Total ram usage:       26 bytes
  6917 ;; Hardware stack levels used: 1
  6918 ;; Hardware stack levels required when called: 1
  6919 ;; This function calls:
  6920 ;;		__Umul8_16
  6921 ;; This function is called by:
  6922 ;;		_fround
  6923 ;;		_scale
  6924 ;;		_sprintf
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           
  6929                           ;psect for function ___flmul
  6930  0B2D                     ___flmul:
  6931  0B2D                     l3124:	
  6932                           ;incstack = 0
  6933                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  6934                           
  6935  0B2D  0020               	movlb	0	; select bank0
  6936  0B2E  0827               	movf	___flmul@b+3,w
  6937  0B2F  3980               	andlw	128
  6938  0B30  00AC               	movwf	??___flmul
  6939  0B31  082C               	movf	??___flmul,w
  6940  0B32  00B1               	movwf	___flmul@sign
  6941  0B33                     l3126:
  6942  0B33  3527               	lslf	___flmul@b+3,w
  6943  0B34  00AC               	movwf	??___flmul
  6944  0B35  082C               	movf	??___flmul,w
  6945  0B36  00B7               	movwf	___flmul@bexp
  6946  0B37                     l3128:
  6947  0B37  1FA6               	btfss	___flmul@b+2,7
  6948  0B38  2B3A               	goto	u3731
  6949  0B39  2B3B               	goto	u3730
  6950  0B3A                     u3731:
  6951  0B3A  2B3C               	goto	l3132
  6952  0B3B                     u3730:
  6953  0B3B                     l3130:
  6954  0B3B  1437               	bsf	___flmul@bexp,0
  6955  0B3C                     l3132:
  6956  0B3C  0837               	movf	___flmul@bexp,w
  6957  0B3D  1903               	btfsc	3,2
  6958  0B3E  2B40               	goto	u3741
  6959  0B3F  2B41               	goto	u3740
  6960  0B40                     u3741:
  6961  0B40  2B50               	goto	l3140
  6962  0B41                     u3740:
  6963  0B41                     l3134:
  6964  0B41  0A37               	incf	___flmul@bexp,w
  6965  0B42  1D03               	btfss	3,2
  6966  0B43  2B45               	goto	u3751
  6967  0B44  2B46               	goto	u3750
  6968  0B45                     u3751:
  6969  0B45  2B4E               	goto	l3138
  6970  0B46                     u3750:
  6971  0B46                     l3136:
  6972  0B46  3000               	movlw	0
  6973  0B47  00A7               	movwf	___flmul@b+3
  6974  0B48  3000               	movlw	0
  6975  0B49  00A6               	movwf	___flmul@b+2
  6976  0B4A  3000               	movlw	0
  6977  0B4B  00A5               	movwf	___flmul@b+1
  6978  0B4C  3000               	movlw	0
  6979  0B4D  00A4               	movwf	___flmul@b
  6980  0B4E                     l3138:
  6981  0B4E  17A6               	bsf	___flmul@b+2,7
  6982  0B4F  2B58               	goto	l3142
  6983  0B50                     l3140:
  6984  0B50  3000               	movlw	0
  6985  0B51  00A7               	movwf	___flmul@b+3
  6986  0B52  3000               	movlw	0
  6987  0B53  00A6               	movwf	___flmul@b+2
  6988  0B54  3000               	movlw	0
  6989  0B55  00A5               	movwf	___flmul@b+1
  6990  0B56  3000               	movlw	0
  6991  0B57  00A4               	movwf	___flmul@b
  6992  0B58                     l3142:
  6993  0B58  082B               	movf	___flmul@a+3,w
  6994  0B59  3980               	andlw	128
  6995  0B5A  00AC               	movwf	??___flmul
  6996  0B5B  082C               	movf	??___flmul,w
  6997  0B5C  06B1               	xorwf	___flmul@sign,f
  6998  0B5D                     l3144:
  6999  0B5D  352B               	lslf	___flmul@a+3,w
  7000  0B5E  00AC               	movwf	??___flmul
  7001  0B5F  082C               	movf	??___flmul,w
  7002  0B60  00B6               	movwf	___flmul@aexp
  7003  0B61                     l3146:
  7004  0B61  1FAA               	btfss	___flmul@a+2,7
  7005  0B62  2B64               	goto	u3761
  7006  0B63  2B65               	goto	u3760
  7007  0B64                     u3761:
  7008  0B64  2B66               	goto	l3150
  7009  0B65                     u3760:
  7010  0B65                     l3148:
  7011  0B65  1436               	bsf	___flmul@aexp,0
  7012  0B66                     l3150:
  7013  0B66  0836               	movf	___flmul@aexp,w
  7014  0B67  1903               	btfsc	3,2
  7015  0B68  2B6A               	goto	u3771
  7016  0B69  2B6B               	goto	u3770
  7017  0B6A                     u3771:
  7018  0B6A  2B7A               	goto	l3158
  7019  0B6B                     u3770:
  7020  0B6B                     l3152:
  7021  0B6B  0A36               	incf	___flmul@aexp,w
  7022  0B6C  1D03               	btfss	3,2
  7023  0B6D  2B6F               	goto	u3781
  7024  0B6E  2B70               	goto	u3780
  7025  0B6F                     u3781:
  7026  0B6F  2B78               	goto	l3156
  7027  0B70                     u3780:
  7028  0B70                     l3154:
  7029  0B70  3000               	movlw	0
  7030  0B71  00AB               	movwf	___flmul@a+3
  7031  0B72  3000               	movlw	0
  7032  0B73  00AA               	movwf	___flmul@a+2
  7033  0B74  3000               	movlw	0
  7034  0B75  00A9               	movwf	___flmul@a+1
  7035  0B76  3000               	movlw	0
  7036  0B77  00A8               	movwf	___flmul@a
  7037  0B78                     l3156:
  7038  0B78  17AA               	bsf	___flmul@a+2,7
  7039  0B79  2B82               	goto	l3160
  7040  0B7A                     l3158:
  7041  0B7A  3000               	movlw	0
  7042  0B7B  00AB               	movwf	___flmul@a+3
  7043  0B7C  3000               	movlw	0
  7044  0B7D  00AA               	movwf	___flmul@a+2
  7045  0B7E  3000               	movlw	0
  7046  0B7F  00A9               	movwf	___flmul@a+1
  7047  0B80  3000               	movlw	0
  7048  0B81  00A8               	movwf	___flmul@a
  7049  0B82                     l3160:
  7050  0B82  0836               	movf	___flmul@aexp,w
  7051  0B83  1903               	btfsc	3,2
  7052  0B84  2B86               	goto	u3791
  7053  0B85  2B87               	goto	u3790
  7054  0B86                     u3791:
  7055  0B86  2B8C               	goto	l3164
  7056  0B87                     u3790:
  7057  0B87                     l3162:
  7058  0B87  0837               	movf	___flmul@bexp,w
  7059  0B88  1D03               	btfss	3,2
  7060  0B89  2B8B               	goto	u3801
  7061  0B8A  2B8C               	goto	u3800
  7062  0B8B                     u3801:
  7063  0B8B  2B95               	goto	l3168
  7064  0B8C                     u3800:
  7065  0B8C                     l3164:
  7066  0B8C  3000               	movlw	0
  7067  0B8D  00A7               	movwf	?___flmul+3
  7068  0B8E  3000               	movlw	0
  7069  0B8F  00A6               	movwf	?___flmul+2
  7070  0B90  3000               	movlw	0
  7071  0B91  00A5               	movwf	?___flmul+1
  7072  0B92  3000               	movlw	0
  7073  0B93  00A4               	movwf	?___flmul
  7074  0B94  2D83               	goto	l944
  7075  0B95                     l3168:
  7076  0B95  0824               	movf	___flmul@b,w
  7077  0B96  00AC               	movwf	??___flmul
  7078  0B97  082C               	movf	??___flmul,w
  7079  0B98  00F0               	movwf	__Umul8_16@multiplicand
  7080  0B99  082A               	movf	___flmul@a+2,w
  7081  0B9A  319D  2526  318B   	fcall	__Umul8_16
  7082  0B9D  0871               	movf	?__Umul8_16+1,w
  7083  0B9E  0020               	movlb	0	; select bank0
  7084  0B9F  00BD               	movwf	___flmul@temp+1
  7085  0BA0  0870               	movf	?__Umul8_16,w
  7086  0BA1  00BC               	movwf	___flmul@temp
  7087  0BA2                     l3170:
  7088  0BA2  083C               	movf	___flmul@temp,w
  7089  0BA3  00AC               	movwf	??___flmul
  7090  0BA4  01AD               	clrf	??___flmul+1
  7091  0BA5  01AE               	clrf	??___flmul+2
  7092  0BA6  01AF               	clrf	??___flmul+3
  7093  0BA7  082F               	movf	??___flmul+3,w
  7094  0BA8  00B5               	movwf	___flmul@grs+3
  7095  0BA9  082E               	movf	??___flmul+2,w
  7096  0BAA  00B4               	movwf	___flmul@grs+2
  7097  0BAB  082D               	movf	??___flmul+1,w
  7098  0BAC  00B3               	movwf	___flmul@grs+1
  7099  0BAD  082C               	movf	??___flmul,w
  7100  0BAE  00B2               	movwf	___flmul@grs
  7101  0BAF                     l3172:
  7102  0BAF  083D               	movf	___flmul@temp+1,w
  7103  0BB0  00AC               	movwf	??___flmul
  7104  0BB1  01AD               	clrf	??___flmul+1
  7105  0BB2  01AE               	clrf	??___flmul+2
  7106  0BB3  01AF               	clrf	??___flmul+3
  7107  0BB4  082F               	movf	??___flmul+3,w
  7108  0BB5  00BB               	movwf	___flmul@prod+3
  7109  0BB6  082E               	movf	??___flmul+2,w
  7110  0BB7  00BA               	movwf	___flmul@prod+2
  7111  0BB8  082D               	movf	??___flmul+1,w
  7112  0BB9  00B9               	movwf	___flmul@prod+1
  7113  0BBA  082C               	movf	??___flmul,w
  7114  0BBB  00B8               	movwf	___flmul@prod
  7115  0BBC  0825               	movf	___flmul@b+1,w
  7116  0BBD  00AC               	movwf	??___flmul
  7117  0BBE  082C               	movf	??___flmul,w
  7118  0BBF  00F0               	movwf	__Umul8_16@multiplicand
  7119  0BC0  0829               	movf	___flmul@a+1,w
  7120  0BC1  319D  2526  318B   	fcall	__Umul8_16
  7121  0BC4  0871               	movf	?__Umul8_16+1,w
  7122  0BC5  0020               	movlb	0	; select bank0
  7123  0BC6  00BD               	movwf	___flmul@temp+1
  7124  0BC7  0870               	movf	?__Umul8_16,w
  7125  0BC8  00BC               	movwf	___flmul@temp
  7126  0BC9                     l3174:
  7127  0BC9  083C               	movf	___flmul@temp,w
  7128  0BCA  00AC               	movwf	??___flmul
  7129  0BCB  01AD               	clrf	??___flmul+1
  7130  0BCC  01AE               	clrf	??___flmul+2
  7131  0BCD  01AF               	clrf	??___flmul+3
  7132  0BCE  082C               	movf	??___flmul,w
  7133  0BCF  07B2               	addwf	___flmul@grs,f
  7134  0BD0  082D               	movf	??___flmul+1,w
  7135  0BD1  3DB3               	addwfc	___flmul@grs+1,f
  7136  0BD2  082E               	movf	??___flmul+2,w
  7137  0BD3  3DB4               	addwfc	___flmul@grs+2,f
  7138  0BD4  082F               	movf	??___flmul+3,w
  7139  0BD5  3DB5               	addwfc	___flmul@grs+3,f
  7140  0BD6                     l3176:
  7141  0BD6  083D               	movf	___flmul@temp+1,w
  7142  0BD7  00AC               	movwf	??___flmul
  7143  0BD8  01AD               	clrf	??___flmul+1
  7144  0BD9  01AE               	clrf	??___flmul+2
  7145  0BDA  01AF               	clrf	??___flmul+3
  7146  0BDB  082C               	movf	??___flmul,w
  7147  0BDC  07B8               	addwf	___flmul@prod,f
  7148  0BDD  082D               	movf	??___flmul+1,w
  7149  0BDE  3DB9               	addwfc	___flmul@prod+1,f
  7150  0BDF  082E               	movf	??___flmul+2,w
  7151  0BE0  3DBA               	addwfc	___flmul@prod+2,f
  7152  0BE1  082F               	movf	??___flmul+3,w
  7153  0BE2  3DBB               	addwfc	___flmul@prod+3,f
  7154  0BE3  0826               	movf	___flmul@b+2,w
  7155  0BE4  00AC               	movwf	??___flmul
  7156  0BE5  082C               	movf	??___flmul,w
  7157  0BE6  00F0               	movwf	__Umul8_16@multiplicand
  7158  0BE7  0828               	movf	___flmul@a,w
  7159  0BE8  319D  2526  318B   	fcall	__Umul8_16
  7160  0BEB  0871               	movf	?__Umul8_16+1,w
  7161  0BEC  0020               	movlb	0	; select bank0
  7162  0BED  00BD               	movwf	___flmul@temp+1
  7163  0BEE  0870               	movf	?__Umul8_16,w
  7164  0BEF  00BC               	movwf	___flmul@temp
  7165  0BF0                     l3178:
  7166  0BF0  083C               	movf	___flmul@temp,w
  7167  0BF1  00AC               	movwf	??___flmul
  7168  0BF2  01AD               	clrf	??___flmul+1
  7169  0BF3  01AE               	clrf	??___flmul+2
  7170  0BF4  01AF               	clrf	??___flmul+3
  7171  0BF5  082C               	movf	??___flmul,w
  7172  0BF6  07B2               	addwf	___flmul@grs,f
  7173  0BF7  082D               	movf	??___flmul+1,w
  7174  0BF8  3DB3               	addwfc	___flmul@grs+1,f
  7175  0BF9  082E               	movf	??___flmul+2,w
  7176  0BFA  3DB4               	addwfc	___flmul@grs+2,f
  7177  0BFB  082F               	movf	??___flmul+3,w
  7178  0BFC  3DB5               	addwfc	___flmul@grs+3,f
  7179  0BFD                     l3180:
  7180  0BFD  083D               	movf	___flmul@temp+1,w
  7181  0BFE  00AC               	movwf	??___flmul
  7182  0BFF  01AD               	clrf	??___flmul+1
  7183  0C00  01AE               	clrf	??___flmul+2
  7184  0C01  01AF               	clrf	??___flmul+3
  7185  0C02  082C               	movf	??___flmul,w
  7186  0C03  07B8               	addwf	___flmul@prod,f
  7187  0C04  082D               	movf	??___flmul+1,w
  7188  0C05  3DB9               	addwfc	___flmul@prod+1,f
  7189  0C06  082E               	movf	??___flmul+2,w
  7190  0C07  3DBA               	addwfc	___flmul@prod+2,f
  7191  0C08  082F               	movf	??___flmul+3,w
  7192  0C09  3DBB               	addwfc	___flmul@prod+3,f
  7193  0C0A                     l3182:
  7194  0C0A  3008               	movlw	8
  7195  0C0B                     u3815:
  7196  0C0B  35B2               	lslf	___flmul@grs,f
  7197  0C0C  0DB3               	rlf	___flmul@grs+1,f
  7198  0C0D  0DB4               	rlf	___flmul@grs+2,f
  7199  0C0E  0DB5               	rlf	___flmul@grs+3,f
  7200  0C0F  0B89               	decfsz	9,f
  7201  0C10  2C0B               	goto	u3815
  7202  0C11                     l3184:
  7203  0C11  0825               	movf	___flmul@b+1,w
  7204  0C12  00AC               	movwf	??___flmul
  7205  0C13  082C               	movf	??___flmul,w
  7206  0C14  00F0               	movwf	__Umul8_16@multiplicand
  7207  0C15  0828               	movf	___flmul@a,w
  7208  0C16  319D  2526  318B   	fcall	__Umul8_16
  7209  0C19  0871               	movf	?__Umul8_16+1,w
  7210  0C1A  0020               	movlb	0	; select bank0
  7211  0C1B  00BD               	movwf	___flmul@temp+1
  7212  0C1C  0870               	movf	?__Umul8_16,w
  7213  0C1D  00BC               	movwf	___flmul@temp
  7214  0C1E                     l3186:
  7215  0C1E  083C               	movf	___flmul@temp,w
  7216  0C1F  07B2               	addwf	___flmul@grs,f
  7217  0C20  083D               	movf	___flmul@temp+1,w
  7218  0C21  3DB3               	addwfc	___flmul@grs+1,f
  7219  0C22  3000               	movlw	0
  7220  0C23  3DB4               	addwfc	___flmul@grs+2,f
  7221  0C24  3DB5               	addwfc	___flmul@grs+3,f
  7222  0C25                     l3188:
  7223  0C25  0824               	movf	___flmul@b,w
  7224  0C26  00AC               	movwf	??___flmul
  7225  0C27  082C               	movf	??___flmul,w
  7226  0C28  00F0               	movwf	__Umul8_16@multiplicand
  7227  0C29  0829               	movf	___flmul@a+1,w
  7228  0C2A  319D  2526  318B   	fcall	__Umul8_16
  7229  0C2D  0871               	movf	?__Umul8_16+1,w
  7230  0C2E  0020               	movlb	0	; select bank0
  7231  0C2F  00BD               	movwf	___flmul@temp+1
  7232  0C30  0870               	movf	?__Umul8_16,w
  7233  0C31  00BC               	movwf	___flmul@temp
  7234  0C32                     l3190:
  7235  0C32  083C               	movf	___flmul@temp,w
  7236  0C33  07B2               	addwf	___flmul@grs,f
  7237  0C34  083D               	movf	___flmul@temp+1,w
  7238  0C35  3DB3               	addwfc	___flmul@grs+1,f
  7239  0C36  3000               	movlw	0
  7240  0C37  3DB4               	addwfc	___flmul@grs+2,f
  7241  0C38  3DB5               	addwfc	___flmul@grs+3,f
  7242  0C39                     l3192:
  7243  0C39  3008               	movlw	8
  7244  0C3A                     u3825:
  7245  0C3A  35B2               	lslf	___flmul@grs,f
  7246  0C3B  0DB3               	rlf	___flmul@grs+1,f
  7247  0C3C  0DB4               	rlf	___flmul@grs+2,f
  7248  0C3D  0DB5               	rlf	___flmul@grs+3,f
  7249  0C3E  0B89               	decfsz	9,f
  7250  0C3F  2C3A               	goto	u3825
  7251  0C40  0824               	movf	___flmul@b,w
  7252  0C41  00AC               	movwf	??___flmul
  7253  0C42  082C               	movf	??___flmul,w
  7254  0C43  00F0               	movwf	__Umul8_16@multiplicand
  7255  0C44  0828               	movf	___flmul@a,w
  7256  0C45  319D  2526  318B   	fcall	__Umul8_16
  7257  0C48  0871               	movf	?__Umul8_16+1,w
  7258  0C49  0020               	movlb	0	; select bank0
  7259  0C4A  00BD               	movwf	___flmul@temp+1
  7260  0C4B  0870               	movf	?__Umul8_16,w
  7261  0C4C  00BC               	movwf	___flmul@temp
  7262  0C4D                     l3194:
  7263  0C4D  083C               	movf	___flmul@temp,w
  7264  0C4E  07B2               	addwf	___flmul@grs,f
  7265  0C4F  083D               	movf	___flmul@temp+1,w
  7266  0C50  3DB3               	addwfc	___flmul@grs+1,f
  7267  0C51  3000               	movlw	0
  7268  0C52  3DB4               	addwfc	___flmul@grs+2,f
  7269  0C53  3DB5               	addwfc	___flmul@grs+3,f
  7270  0C54                     l3196:
  7271  0C54  0825               	movf	___flmul@b+1,w
  7272  0C55  00AC               	movwf	??___flmul
  7273  0C56  082C               	movf	??___flmul,w
  7274  0C57  00F0               	movwf	__Umul8_16@multiplicand
  7275  0C58  082A               	movf	___flmul@a+2,w
  7276  0C59  319D  2526  318B   	fcall	__Umul8_16
  7277  0C5C  0871               	movf	?__Umul8_16+1,w
  7278  0C5D  0020               	movlb	0	; select bank0
  7279  0C5E  00BD               	movwf	___flmul@temp+1
  7280  0C5F  0870               	movf	?__Umul8_16,w
  7281  0C60  00BC               	movwf	___flmul@temp
  7282  0C61  083C               	movf	___flmul@temp,w
  7283  0C62  07B8               	addwf	___flmul@prod,f
  7284  0C63  083D               	movf	___flmul@temp+1,w
  7285  0C64  3DB9               	addwfc	___flmul@prod+1,f
  7286  0C65  3000               	movlw	0
  7287  0C66  3DBA               	addwfc	___flmul@prod+2,f
  7288  0C67  3DBB               	addwfc	___flmul@prod+3,f
  7289  0C68                     l3198:
  7290  0C68  0826               	movf	___flmul@b+2,w
  7291  0C69  00AC               	movwf	??___flmul
  7292  0C6A  082C               	movf	??___flmul,w
  7293  0C6B  00F0               	movwf	__Umul8_16@multiplicand
  7294  0C6C  0829               	movf	___flmul@a+1,w
  7295  0C6D  319D  2526  318B   	fcall	__Umul8_16
  7296  0C70  0871               	movf	?__Umul8_16+1,w
  7297  0C71  0020               	movlb	0	; select bank0
  7298  0C72  00BD               	movwf	___flmul@temp+1
  7299  0C73  0870               	movf	?__Umul8_16,w
  7300  0C74  00BC               	movwf	___flmul@temp
  7301  0C75                     l3200:
  7302  0C75  083C               	movf	___flmul@temp,w
  7303  0C76  07B8               	addwf	___flmul@prod,f
  7304  0C77  083D               	movf	___flmul@temp+1,w
  7305  0C78  3DB9               	addwfc	___flmul@prod+1,f
  7306  0C79  3000               	movlw	0
  7307  0C7A  3DBA               	addwfc	___flmul@prod+2,f
  7308  0C7B  3DBB               	addwfc	___flmul@prod+3,f
  7309  0C7C  0826               	movf	___flmul@b+2,w
  7310  0C7D  00AC               	movwf	??___flmul
  7311  0C7E  082C               	movf	??___flmul,w
  7312  0C7F  00F0               	movwf	__Umul8_16@multiplicand
  7313  0C80  082A               	movf	___flmul@a+2,w
  7314  0C81  319D  2526  318B   	fcall	__Umul8_16
  7315  0C84  0871               	movf	?__Umul8_16+1,w
  7316  0C85  0020               	movlb	0	; select bank0
  7317  0C86  00BD               	movwf	___flmul@temp+1
  7318  0C87  0870               	movf	?__Umul8_16,w
  7319  0C88  00BC               	movwf	___flmul@temp
  7320  0C89                     l3202:
  7321  0C89  083C               	movf	___flmul@temp,w
  7322  0C8A  00AC               	movwf	??___flmul
  7323  0C8B  083D               	movf	___flmul@temp+1,w
  7324  0C8C  00AD               	movwf	??___flmul+1
  7325  0C8D  01AE               	clrf	??___flmul+2
  7326  0C8E  01AF               	clrf	??___flmul+3
  7327  0C8F  3008               	movlw	8
  7328  0C90                     u3835:
  7329  0C90  35AC               	lslf	??___flmul,f
  7330  0C91  0DAD               	rlf	??___flmul+1,f
  7331  0C92  0DAE               	rlf	??___flmul+2,f
  7332  0C93  0DAF               	rlf	??___flmul+3,f
  7333  0C94                     u3830:
  7334  0C94  0B89               	decfsz	9,f
  7335  0C95  2C90               	goto	u3835
  7336  0C96  082C               	movf	??___flmul,w
  7337  0C97  07B8               	addwf	___flmul@prod,f
  7338  0C98  082D               	movf	??___flmul+1,w
  7339  0C99  3DB9               	addwfc	___flmul@prod+1,f
  7340  0C9A  082E               	movf	??___flmul+2,w
  7341  0C9B  3DBA               	addwfc	___flmul@prod+2,f
  7342  0C9C  082F               	movf	??___flmul+3,w
  7343  0C9D  3DBB               	addwfc	___flmul@prod+3,f
  7344  0C9E                     l3204:
  7345  0C9E  0832               	movf	___flmul@grs,w
  7346  0C9F  00AC               	movwf	??___flmul
  7347  0CA0  0833               	movf	___flmul@grs+1,w
  7348  0CA1  00AD               	movwf	??___flmul+1
  7349  0CA2  0834               	movf	___flmul@grs+2,w
  7350  0CA3  00AE               	movwf	??___flmul+2
  7351  0CA4  0835               	movf	___flmul@grs+3,w
  7352  0CA5  00AF               	movwf	??___flmul+3
  7353  0CA6  3018               	movlw	24
  7354  0CA7                     u3845:
  7355  0CA7  36AF               	lsrf	??___flmul+3,f
  7356  0CA8  0CAE               	rrf	??___flmul+2,f
  7357  0CA9  0CAD               	rrf	??___flmul+1,f
  7358  0CAA  0CAC               	rrf	??___flmul,f
  7359  0CAB                     u3840:
  7360  0CAB  0B89               	decfsz	9,f
  7361  0CAC  2CA7               	goto	u3845
  7362  0CAD  082C               	movf	??___flmul,w
  7363  0CAE  07B8               	addwf	___flmul@prod,f
  7364  0CAF  082D               	movf	??___flmul+1,w
  7365  0CB0  3DB9               	addwfc	___flmul@prod+1,f
  7366  0CB1  082E               	movf	??___flmul+2,w
  7367  0CB2  3DBA               	addwfc	___flmul@prod+2,f
  7368  0CB3  082F               	movf	??___flmul+3,w
  7369  0CB4  3DBB               	addwfc	___flmul@prod+3,f
  7370  0CB5                     l3206:
  7371  0CB5  3008               	movlw	8
  7372  0CB6                     u3855:
  7373  0CB6  35B2               	lslf	___flmul@grs,f
  7374  0CB7  0DB3               	rlf	___flmul@grs+1,f
  7375  0CB8  0DB4               	rlf	___flmul@grs+2,f
  7376  0CB9  0DB5               	rlf	___flmul@grs+3,f
  7377  0CBA  0B89               	decfsz	9,f
  7378  0CBB  2CB6               	goto	u3855
  7379  0CBC                     l3208:
  7380  0CBC  0837               	movf	___flmul@bexp,w
  7381  0CBD  0736               	addwf	___flmul@aexp,w
  7382  0CBE  00AC               	movwf	??___flmul
  7383  0CBF  01AD               	clrf	??___flmul+1
  7384  0CC0  0DAD               	rlf	??___flmul+1,f
  7385  0CC1  082C               	movf	??___flmul,w
  7386  0CC2  3E82               	addlw	130
  7387  0CC3  00BC               	movwf	___flmul@temp
  7388  0CC4  30FF               	movlw	255
  7389  0CC5  3D2D               	addwfc	??___flmul+1,w
  7390  0CC6  00BD               	movwf	___flmul@temp+1
  7391  0CC7  2CDF               	goto	l3220
  7392  0CC8                     l3210:
  7393  0CC8  3001               	movlw	1
  7394  0CC9                     u3865:
  7395  0CC9  35B8               	lslf	___flmul@prod,f
  7396  0CCA  0DB9               	rlf	___flmul@prod+1,f
  7397  0CCB  0DBA               	rlf	___flmul@prod+2,f
  7398  0CCC  0DBB               	rlf	___flmul@prod+3,f
  7399  0CCD  0B89               	decfsz	9,f
  7400  0CCE  2CC9               	goto	u3865
  7401  0CCF                     l3212:
  7402  0CCF  1FB5               	btfss	___flmul@grs+3,7
  7403  0CD0  2CD2               	goto	u3871
  7404  0CD1  2CD3               	goto	u3870
  7405  0CD2                     u3871:
  7406  0CD2  2CD4               	goto	l3216
  7407  0CD3                     u3870:
  7408  0CD3                     l3214:
  7409  0CD3  1438               	bsf	___flmul@prod,0
  7410  0CD4                     l3216:
  7411  0CD4  3001               	movlw	1
  7412  0CD5                     u3885:
  7413  0CD5  35B2               	lslf	___flmul@grs,f
  7414  0CD6  0DB3               	rlf	___flmul@grs+1,f
  7415  0CD7  0DB4               	rlf	___flmul@grs+2,f
  7416  0CD8  0DB5               	rlf	___flmul@grs+3,f
  7417  0CD9  0B89               	decfsz	9,f
  7418  0CDA  2CD5               	goto	u3885
  7419  0CDB                     l3218:
  7420  0CDB  30FF               	movlw	255
  7421  0CDC  07BC               	addwf	___flmul@temp,f
  7422  0CDD  30FF               	movlw	255
  7423  0CDE  3DBD               	addwfc	___flmul@temp+1,f
  7424  0CDF                     l3220:
  7425  0CDF  1FBA               	btfss	___flmul@prod+2,7
  7426  0CE0  2CE2               	goto	u3891
  7427  0CE1  2CE3               	goto	u3890
  7428  0CE2                     u3891:
  7429  0CE2  2CC8               	goto	l3210
  7430  0CE3                     u3890:
  7431  0CE3                     l3222:
  7432  0CE3  01B6               	clrf	___flmul@aexp
  7433  0CE4                     l3224:
  7434  0CE4  1FB5               	btfss	___flmul@grs+3,7
  7435  0CE5  2CE7               	goto	u3901
  7436  0CE6  2CE8               	goto	u3900
  7437  0CE7                     u3901:
  7438  0CE7  2D04               	goto	l3232
  7439  0CE8                     u3900:
  7440  0CE8                     l3226:
  7441  0CE8  30FF               	movlw	255
  7442  0CE9  0532               	andwf	___flmul@grs,w
  7443  0CEA  00AC               	movwf	??___flmul
  7444  0CEB  30FF               	movlw	255
  7445  0CEC  0533               	andwf	___flmul@grs+1,w
  7446  0CED  00AD               	movwf	??___flmul+1
  7447  0CEE  30FF               	movlw	255
  7448  0CEF  0534               	andwf	___flmul@grs+2,w
  7449  0CF0  00AE               	movwf	??___flmul+2
  7450  0CF1  307F               	movlw	127
  7451  0CF2  0535               	andwf	___flmul@grs+3,w
  7452  0CF3  00AF               	movwf	??___flmul+3
  7453  0CF4  082F               	movf	??___flmul+3,w
  7454  0CF5  042E               	iorwf	??___flmul+2,w
  7455  0CF6  042D               	iorwf	??___flmul+1,w
  7456  0CF7  042C               	iorwf	??___flmul,w
  7457  0CF8  1903               	skipnz
  7458  0CF9  2CFB               	goto	u3911
  7459  0CFA  2CFC               	goto	u3910
  7460  0CFB                     u3911:
  7461  0CFB  2CFF               	goto	l950
  7462  0CFC                     u3910:
  7463  0CFC                     l3228:
  7464  0CFC  01B6               	clrf	___flmul@aexp
  7465  0CFD  0AB6               	incf	___flmul@aexp,f
  7466  0CFE  2D04               	goto	l3232
  7467  0CFF                     l950:
  7468  0CFF  1C38               	btfss	___flmul@prod,0
  7469  0D00  2D02               	goto	u3921
  7470  0D01  2D03               	goto	u3920
  7471  0D02                     u3921:
  7472  0D02  2D04               	goto	l3232
  7473  0D03                     u3920:
  7474  0D03  2CFC               	goto	l3228
  7475  0D04                     l3232:
  7476  0D04  0836               	movf	___flmul@aexp,w
  7477  0D05  1903               	btfsc	3,2
  7478  0D06  2D08               	goto	u3931
  7479  0D07  2D09               	goto	u3930
  7480  0D08                     u3931:
  7481  0D08  2D31               	goto	l3242
  7482  0D09                     u3930:
  7483  0D09                     l3234:
  7484  0D09  3001               	movlw	1
  7485  0D0A  07B8               	addwf	___flmul@prod,f
  7486  0D0B  3000               	movlw	0
  7487  0D0C  3DB9               	addwfc	___flmul@prod+1,f
  7488  0D0D  3000               	movlw	0
  7489  0D0E  3DBA               	addwfc	___flmul@prod+2,f
  7490  0D0F  3000               	movlw	0
  7491  0D10  3DBB               	addwfc	___flmul@prod+3,f
  7492  0D11                     l3236:
  7493  0D11  1C3B               	btfss	___flmul@prod+3,0
  7494  0D12  2D14               	goto	u3941
  7495  0D13  2D15               	goto	u3940
  7496  0D14                     u3941:
  7497  0D14  2D31               	goto	l3242
  7498  0D15                     u3940:
  7499  0D15                     l3238:
  7500  0D15  0838               	movf	___flmul@prod,w
  7501  0D16  00AC               	movwf	??___flmul
  7502  0D17  0839               	movf	___flmul@prod+1,w
  7503  0D18  00AD               	movwf	??___flmul+1
  7504  0D19  083A               	movf	___flmul@prod+2,w
  7505  0D1A  00AE               	movwf	??___flmul+2
  7506  0D1B  083B               	movf	___flmul@prod+3,w
  7507  0D1C  00AF               	movwf	??___flmul+3
  7508  0D1D  3001               	movlw	1
  7509  0D1E  00B0               	movwf	??___flmul+4
  7510  0D1F                     u3955:
  7511  0D1F  37AF               	asrf	??___flmul+3,f
  7512  0D20  0CAE               	rrf	??___flmul+2,f
  7513  0D21  0CAD               	rrf	??___flmul+1,f
  7514  0D22  0CAC               	rrf	??___flmul,f
  7515  0D23                     u3950:
  7516  0D23  0BB0               	decfsz	??___flmul+4,f
  7517  0D24  2D1F               	goto	u3955
  7518  0D25  082F               	movf	??___flmul+3,w
  7519  0D26  00BB               	movwf	___flmul@prod+3
  7520  0D27  082E               	movf	??___flmul+2,w
  7521  0D28  00BA               	movwf	___flmul@prod+2
  7522  0D29  082D               	movf	??___flmul+1,w
  7523  0D2A  00B9               	movwf	___flmul@prod+1
  7524  0D2B  082C               	movf	??___flmul,w
  7525  0D2C  00B8               	movwf	___flmul@prod
  7526  0D2D                     l3240:
  7527  0D2D  3001               	movlw	1
  7528  0D2E  07BC               	addwf	___flmul@temp,f
  7529  0D2F  3000               	movlw	0
  7530  0D30  3DBD               	addwfc	___flmul@temp+1,f
  7531  0D31                     l3242:
  7532  0D31  083D               	movf	___flmul@temp+1,w
  7533  0D32  3A80               	xorlw	128
  7534  0D33  00AC               	movwf	??___flmul
  7535  0D34  3080               	movlw	128
  7536  0D35  022C               	subwf	??___flmul,w
  7537  0D36  1D03               	skipz
  7538  0D37  2D3A               	goto	u3965
  7539  0D38  30FF               	movlw	255
  7540  0D39  023C               	subwf	___flmul@temp,w
  7541  0D3A                     u3965:
  7542  0D3A  1C03               	skipc
  7543  0D3B  2D3D               	goto	u3961
  7544  0D3C  2D3E               	goto	u3960
  7545  0D3D                     u3961:
  7546  0D3D  2D48               	goto	l3246
  7547  0D3E                     u3960:
  7548  0D3E                     l3244:
  7549  0D3E  307F               	movlw	127
  7550  0D3F  0020               	movlb	0	; select bank0
  7551  0D40  00BB               	movwf	___flmul@prod+3
  7552  0D41  3080               	movlw	128
  7553  0D42  00BA               	movwf	___flmul@prod+2
  7554  0D43  3000               	movlw	0
  7555  0D44  00B9               	movwf	___flmul@prod+1
  7556  0D45  3000               	movlw	0
  7557  0D46  00B8               	movwf	___flmul@prod
  7558  0D47  2D77               	goto	l956
  7559  0D48                     l3246:
  7560  0D48  0020               	movlb	0	; select bank0
  7561  0D49  083D               	movf	___flmul@temp+1,w
  7562  0D4A  3A80               	xorlw	128
  7563  0D4B  00AC               	movwf	??___flmul
  7564  0D4C  3080               	movlw	128
  7565  0D4D  022C               	subwf	??___flmul,w
  7566  0D4E  1D03               	skipz
  7567  0D4F  2D52               	goto	u3975
  7568  0D50  3001               	movlw	1
  7569  0D51  023C               	subwf	___flmul@temp,w
  7570  0D52                     u3975:
  7571  0D52  1803               	skipnc
  7572  0D53  2D55               	goto	u3971
  7573  0D54  2D56               	goto	u3970
  7574  0D55                     u3971:
  7575  0D55  2D61               	goto	l3252
  7576  0D56                     u3970:
  7577  0D56                     l3248:
  7578  0D56  3000               	movlw	0
  7579  0D57  0020               	movlb	0	; select bank0
  7580  0D58  00BB               	movwf	___flmul@prod+3
  7581  0D59  3000               	movlw	0
  7582  0D5A  00BA               	movwf	___flmul@prod+2
  7583  0D5B  3000               	movlw	0
  7584  0D5C  00B9               	movwf	___flmul@prod+1
  7585  0D5D  3000               	movlw	0
  7586  0D5E  00B8               	movwf	___flmul@prod
  7587  0D5F                     l3250:
  7588  0D5F  01B1               	clrf	___flmul@sign
  7589  0D60  2D77               	goto	l956
  7590  0D61                     l3252:
  7591  0D61  0020               	movlb	0	; select bank0
  7592  0D62  083C               	movf	___flmul@temp,w
  7593  0D63  00AC               	movwf	??___flmul
  7594  0D64  082C               	movf	??___flmul,w
  7595  0D65  00B7               	movwf	___flmul@bexp
  7596  0D66  30FF               	movlw	255
  7597  0D67  05B8               	andwf	___flmul@prod,f
  7598  0D68  30FF               	movlw	255
  7599  0D69  05B9               	andwf	___flmul@prod+1,f
  7600  0D6A  307F               	movlw	127
  7601  0D6B  05BA               	andwf	___flmul@prod+2,f
  7602  0D6C  3000               	movlw	0
  7603  0D6D  05BB               	andwf	___flmul@prod+3,f
  7604  0D6E                     l3254:
  7605  0D6E  1C37               	btfss	___flmul@bexp,0
  7606  0D6F  2D71               	goto	u3981
  7607  0D70  2D72               	goto	u3980
  7608  0D71                     u3981:
  7609  0D71  2D73               	goto	l3258
  7610  0D72                     u3980:
  7611  0D72                     l3256:
  7612  0D72  17BA               	bsf	___flmul@prod+2,7
  7613  0D73                     l3258:
  7614  0D73  3637               	lsrf	___flmul@bexp,w
  7615  0D74  00AC               	movwf	??___flmul
  7616  0D75  082C               	movf	??___flmul,w
  7617  0D76  00BB               	movwf	___flmul@prod+3
  7618  0D77                     l956:
  7619  0D77  0831               	movf	___flmul@sign,w
  7620  0D78  00AC               	movwf	??___flmul
  7621  0D79  082C               	movf	??___flmul,w
  7622  0D7A  04BB               	iorwf	___flmul@prod+3,f
  7623  0D7B                     l3260:
  7624  0D7B  083B               	movf	___flmul@prod+3,w
  7625  0D7C  00A7               	movwf	?___flmul+3
  7626  0D7D  083A               	movf	___flmul@prod+2,w
  7627  0D7E  00A6               	movwf	?___flmul+2
  7628  0D7F  0839               	movf	___flmul@prod+1,w
  7629  0D80  00A5               	movwf	?___flmul+1
  7630  0D81  0838               	movf	___flmul@prod,w
  7631  0D82  00A4               	movwf	?___flmul
  7632  0D83                     l944:
  7633  0D83  0008               	return
  7634  0D84                     __end_of___flmul:
  7635                           
  7636                           	psect	text10
  7637  1D26                     __ptext10:	
  7638 ;; *************** function __Umul8_16 *****************
  7639 ;; Defined at:
  7640 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  multiplier      1    wreg     unsigned char 
  7643 ;;  multiplicand    1    0[COMMON] unsigned char 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  multiplier      1    8[COMMON] unsigned char 
  7646 ;;  word_mpld       2    6[COMMON] unsigned int 
  7647 ;;  product         2    4[COMMON] unsigned int 
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  2    0[COMMON] unsigned int 
  7650 ;; Registers used:
  7651 ;;		wreg, status,2, status,0
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7661 ;;Total ram usage:        9 bytes
  7662 ;; Hardware stack levels used: 1
  7663 ;; This function calls:
  7664 ;;		Nothing
  7665 ;; This function is called by:
  7666 ;;		___flmul
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           
  7671                           ;psect for function __Umul8_16
  7672  1D26                     __Umul8_16:
  7673                           
  7674                           ;incstack = 0
  7675                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7676                           ;__Umul8_16@multiplier stored from wreg
  7677  1D26  00F8               	movwf	__Umul8_16@multiplier
  7678  1D27                     l2770:
  7679  1D27  01F4               	clrf	__Umul8_16@product
  7680  1D28  01F5               	clrf	__Umul8_16@product+1
  7681  1D29                     l2772:
  7682  1D29  0870               	movf	__Umul8_16@multiplicand,w
  7683  1D2A  00F2               	movwf	??__Umul8_16
  7684  1D2B  01F3               	clrf	??__Umul8_16+1
  7685  1D2C  0872               	movf	??__Umul8_16,w
  7686  1D2D  00F6               	movwf	__Umul8_16@word_mpld
  7687  1D2E  0873               	movf	??__Umul8_16+1,w
  7688  1D2F  00F7               	movwf	__Umul8_16@word_mpld+1
  7689  1D30                     l2774:
  7690  1D30  1C78               	btfss	__Umul8_16@multiplier,0
  7691  1D31  2D33               	goto	u2941
  7692  1D32  2D34               	goto	u2940
  7693  1D33                     u2941:
  7694  1D33  2D38               	goto	l963
  7695  1D34                     u2940:
  7696  1D34                     l2776:
  7697  1D34  0876               	movf	__Umul8_16@word_mpld,w
  7698  1D35  07F4               	addwf	__Umul8_16@product,f
  7699  1D36  0877               	movf	__Umul8_16@word_mpld+1,w
  7700  1D37  3DF5               	addwfc	__Umul8_16@product+1,f
  7701  1D38                     l963:
  7702  1D38  3001               	movlw	1
  7703  1D39                     u2955:
  7704  1D39  35F6               	lslf	__Umul8_16@word_mpld,f
  7705  1D3A  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7706  1D3B  0B89               	decfsz	9,f
  7707  1D3C  2D39               	goto	u2955
  7708  1D3D  1003               	clrc
  7709  1D3E  0CF8               	rrf	__Umul8_16@multiplier,f
  7710  1D3F                     l2778:
  7711  1D3F  0878               	movf	__Umul8_16@multiplier,w
  7712  1D40  1D03               	btfss	3,2
  7713  1D41  2D43               	goto	u2961
  7714  1D42  2D44               	goto	u2960
  7715  1D43                     u2961:
  7716  1D43  2D30               	goto	l2774
  7717  1D44                     u2960:
  7718  1D44                     l2780:
  7719  1D44  0875               	movf	__Umul8_16@product+1,w
  7720  1D45  00F1               	movwf	?__Umul8_16+1
  7721  1D46  0874               	movf	__Umul8_16@product,w
  7722  1D47  00F0               	movwf	?__Umul8_16
  7723  1D48                     l965:
  7724  1D48  0008               	return
  7725  1D49                     __end_of__Umul8_16:
  7726                           
  7727                           	psect	text11
  7728  120D                     __ptext11:	
  7729 ;; *************** function __tdiv_to_l_ *****************
  7730 ;; Defined at:
  7731 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  f1              4    0[COMMON] float 
  7734 ;;  f2              4    4[COMMON] float 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  quot            4    0[BANK0 ] unsigned long 
  7737 ;;  exp1            1    5[BANK0 ] unsigned char 
  7738 ;;  cntr            1    4[BANK0 ] unsigned char 
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  4    0[COMMON] unsigned long 
  7741 ;; Registers used:
  7742 ;;		wreg, status,2, status,0
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7748 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7750 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7751 ;;      Totals:        12       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7752 ;;Total ram usage:       18 bytes
  7753 ;; Hardware stack levels used: 1
  7754 ;; This function calls:
  7755 ;;		Nothing
  7756 ;; This function is called by:
  7757 ;;		_sprintf
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           
  7762                           ;psect for function __tdiv_to_l_
  7763  120D                     __tdiv_to_l_:
  7764  120D                     l3414:	
  7765                           ;incstack = 0
  7766                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7767                           
  7768  120D  0870               	movf	__tdiv_to_l_@f1,w
  7769  120E  00F8               	movwf	??__tdiv_to_l_
  7770  120F  0871               	movf	__tdiv_to_l_@f1+1,w
  7771  1210  00F9               	movwf	??__tdiv_to_l_+1
  7772  1211  0872               	movf	__tdiv_to_l_@f1+2,w
  7773  1212  00FA               	movwf	??__tdiv_to_l_+2
  7774  1213  1003               	clrc
  7775  1214  0D79               	rlf	??__tdiv_to_l_+1,w
  7776  1215  0D7A               	rlf	??__tdiv_to_l_+2,w
  7777  1216  00FB               	movwf	??__tdiv_to_l_+3
  7778  1217  087B               	movf	??__tdiv_to_l_+3,w
  7779  1218  0020               	movlb	0	; select bank0
  7780  1219  00A5               	movwf	__tdiv_to_l_@exp1
  7781  121A  0825               	movf	__tdiv_to_l_@exp1,w
  7782  121B  1D03               	btfss	3,2
  7783  121C  2A1E               	goto	u4101
  7784  121D  2A1F               	goto	u4100
  7785  121E                     u4101:
  7786  121E  2A28               	goto	l3420
  7787  121F                     u4100:
  7788  121F                     l3416:
  7789  121F  3000               	movlw	0
  7790  1220  00F3               	movwf	?__tdiv_to_l_+3
  7791  1221  3000               	movlw	0
  7792  1222  00F2               	movwf	?__tdiv_to_l_+2
  7793  1223  3000               	movlw	0
  7794  1224  00F1               	movwf	?__tdiv_to_l_+1
  7795  1225  3000               	movlw	0
  7796  1226  00F0               	movwf	?__tdiv_to_l_
  7797  1227  2ABC               	goto	l738
  7798  1228                     l3420:
  7799  1228  0874               	movf	__tdiv_to_l_@f2,w
  7800  1229  00F8               	movwf	??__tdiv_to_l_
  7801  122A  0875               	movf	__tdiv_to_l_@f2+1,w
  7802  122B  00F9               	movwf	??__tdiv_to_l_+1
  7803  122C  0876               	movf	__tdiv_to_l_@f2+2,w
  7804  122D  00FA               	movwf	??__tdiv_to_l_+2
  7805  122E  1003               	clrc
  7806  122F  0D79               	rlf	??__tdiv_to_l_+1,w
  7807  1230  0D7A               	rlf	??__tdiv_to_l_+2,w
  7808  1231  00FB               	movwf	??__tdiv_to_l_+3
  7809  1232  087B               	movf	??__tdiv_to_l_+3,w
  7810  1233  00A4               	movwf	__tdiv_to_l_@cntr
  7811  1234  0824               	movf	__tdiv_to_l_@cntr,w
  7812  1235  1D03               	btfss	3,2
  7813  1236  2A38               	goto	u4111
  7814  1237  2A39               	goto	u4110
  7815  1238                     u4111:
  7816  1238  2A3A               	goto	l739
  7817  1239                     u4110:
  7818  1239  2A1F               	goto	l3416
  7819  123A                     l739:
  7820  123A  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7821  123B                     l3426:
  7822  123B  30FF               	movlw	255
  7823  123C  05F0               	andwf	__tdiv_to_l_@f1,f
  7824  123D  30FF               	movlw	255
  7825  123E  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7826  123F  3000               	movlw	0
  7827  1240  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7828  1241                     l3428:
  7829  1241  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7830  1242  30FF               	movlw	255
  7831  1243  05F4               	andwf	__tdiv_to_l_@f2,f
  7832  1244  30FF               	movlw	255
  7833  1245  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7834  1246  3000               	movlw	0
  7835  1247  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7836  1248  3000               	movlw	0
  7837  1249  00A3               	movwf	__tdiv_to_l_@quot+3
  7838  124A  3000               	movlw	0
  7839  124B  00A2               	movwf	__tdiv_to_l_@quot+2
  7840  124C  3000               	movlw	0
  7841  124D  00A1               	movwf	__tdiv_to_l_@quot+1
  7842  124E  3000               	movlw	0
  7843  124F  00A0               	movwf	__tdiv_to_l_@quot
  7844  1250                     l3430:
  7845  1250  307F               	movlw	127
  7846  1251  02A5               	subwf	__tdiv_to_l_@exp1,f
  7847  1252                     l3432:
  7848  1252  3098               	movlw	152
  7849  1253  0724               	addwf	__tdiv_to_l_@cntr,w
  7850  1254  00F8               	movwf	??__tdiv_to_l_
  7851  1255  0878               	movf	??__tdiv_to_l_,w
  7852  1256  02A5               	subwf	__tdiv_to_l_@exp1,f
  7853  1257  3018               	movlw	24
  7854  1258  00F8               	movwf	??__tdiv_to_l_
  7855  1259  0878               	movf	??__tdiv_to_l_,w
  7856  125A  00A4               	movwf	__tdiv_to_l_@cntr
  7857  125B                     l3434:
  7858  125B  3001               	movlw	1
  7859  125C                     u4125:
  7860  125C  35A0               	lslf	__tdiv_to_l_@quot,f
  7861  125D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7862  125E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7863  125F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7864  1260  0B89               	decfsz	9,f
  7865  1261  2A5C               	goto	u4125
  7866  1262                     l3436:
  7867  1262  0876               	movf	__tdiv_to_l_@f2+2,w
  7868  1263  0272               	subwf	__tdiv_to_l_@f1+2,w
  7869  1264  1D03               	skipz
  7870  1265  2A6C               	goto	u4135
  7871  1266  0875               	movf	__tdiv_to_l_@f2+1,w
  7872  1267  0271               	subwf	__tdiv_to_l_@f1+1,w
  7873  1268  1D03               	skipz
  7874  1269  2A6C               	goto	u4135
  7875  126A  0874               	movf	__tdiv_to_l_@f2,w
  7876  126B  0270               	subwf	__tdiv_to_l_@f1,w
  7877  126C                     u4135:
  7878  126C  1C03               	skipc
  7879  126D  2A6F               	goto	u4131
  7880  126E  2A70               	goto	u4130
  7881  126F                     u4131:
  7882  126F  2A77               	goto	l3442
  7883  1270                     u4130:
  7884  1270                     l3438:
  7885  1270  0874               	movf	__tdiv_to_l_@f2,w
  7886  1271  02F0               	subwf	__tdiv_to_l_@f1,f
  7887  1272  0875               	movf	__tdiv_to_l_@f2+1,w
  7888  1273  3BF1               	subwfb	__tdiv_to_l_@f1+1,f
  7889  1274  0876               	movf	__tdiv_to_l_@f2+2,w
  7890  1275  3BF2               	subwfb	__tdiv_to_l_@f1+2,f
  7891  1276                     l3440:
  7892  1276  1420               	bsf	__tdiv_to_l_@quot,0
  7893  1277                     l3442:
  7894  1277  3001               	movlw	1
  7895  1278                     u4145:
  7896  1278  35F0               	lslf	__tdiv_to_l_@f1,f
  7897  1279  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7898  127A  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7899  127B  0B89               	decfsz	9,f
  7900  127C  2A78               	goto	u4145
  7901  127D                     l3444:
  7902  127D  3001               	movlw	1
  7903  127E  02A4               	subwf	__tdiv_to_l_@cntr,f
  7904  127F  1D03               	btfss	3,2
  7905  1280  2A82               	goto	u4151
  7906  1281  2A83               	goto	u4150
  7907  1282                     u4151:
  7908  1282  2A5B               	goto	l3434
  7909  1283                     u4150:
  7910  1283                     l742:
  7911  1283  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7912  1284  2A86               	goto	u4161
  7913  1285  2A87               	goto	u4160
  7914  1286                     u4161:
  7915  1286  2A9F               	goto	l3454
  7916  1287                     u4160:
  7917  1287                     l3446:
  7918  1287  0825               	movf	__tdiv_to_l_@exp1,w
  7919  1288  3A80               	xorlw	128
  7920  1289  3E97               	addlw	151
  7921  128A  1803               	skipnc
  7922  128B  2A8D               	goto	u4171
  7923  128C  2A8E               	goto	u4170
  7924  128D                     u4171:
  7925  128D  2A8F               	goto	l3452
  7926  128E                     u4170:
  7927  128E  2A1F               	goto	l3416
  7928  128F                     l3452:
  7929  128F  3001               	movlw	1
  7930  1290                     u4185:
  7931  1290  36A3               	lsrf	__tdiv_to_l_@quot+3,f
  7932  1291  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7933  1292  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7934  1293  0CA0               	rrf	__tdiv_to_l_@quot,f
  7935  1294  0B89               	decfsz	9,f
  7936  1295  2A90               	goto	u4185
  7937  1296  3001               	movlw	1
  7938  1297  00F8               	movwf	??__tdiv_to_l_
  7939  1298  0878               	movf	??__tdiv_to_l_,w
  7940  1299  07A5               	addwf	__tdiv_to_l_@exp1,f
  7941  129A  1D03               	btfss	3,2
  7942  129B  2A9D               	goto	u4191
  7943  129C  2A9E               	goto	u4190
  7944  129D                     u4191:
  7945  129D  2A8F               	goto	l3452
  7946  129E                     u4190:
  7947  129E  2AB4               	goto	l3462
  7948  129F                     l3454:
  7949  129F  3018               	movlw	24
  7950  12A0  0225               	subwf	__tdiv_to_l_@exp1,w
  7951  12A1  1C03               	skipc
  7952  12A2  2AA4               	goto	u4201
  7953  12A3  2AA5               	goto	u4200
  7954  12A4                     u4201:
  7955  12A4  2AAF               	goto	l749
  7956  12A5                     u4200:
  7957  12A5  2A1F               	goto	l3416
  7958  12A6                     l3460:
  7959  12A6  3001               	movlw	1
  7960  12A7                     u4215:
  7961  12A7  35A0               	lslf	__tdiv_to_l_@quot,f
  7962  12A8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7963  12A9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7964  12AA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7965  12AB  0B89               	decfsz	9,f
  7966  12AC  2AA7               	goto	u4215
  7967  12AD  3001               	movlw	1
  7968  12AE  02A5               	subwf	__tdiv_to_l_@exp1,f
  7969  12AF                     l749:
  7970  12AF  0825               	movf	__tdiv_to_l_@exp1,w
  7971  12B0  1D03               	btfss	3,2
  7972  12B1  2AB3               	goto	u4221
  7973  12B2  2AB4               	goto	u4220
  7974  12B3                     u4221:
  7975  12B3  2AA6               	goto	l3460
  7976  12B4                     u4220:
  7977  12B4                     l3462:
  7978  12B4  0823               	movf	__tdiv_to_l_@quot+3,w
  7979  12B5  00F3               	movwf	?__tdiv_to_l_+3
  7980  12B6  0822               	movf	__tdiv_to_l_@quot+2,w
  7981  12B7  00F2               	movwf	?__tdiv_to_l_+2
  7982  12B8  0821               	movf	__tdiv_to_l_@quot+1,w
  7983  12B9  00F1               	movwf	?__tdiv_to_l_+1
  7984  12BA  0820               	movf	__tdiv_to_l_@quot,w
  7985  12BB  00F0               	movwf	?__tdiv_to_l_
  7986  12BC                     l738:
  7987  12BC  0008               	return
  7988  12BD                     __end_of__tdiv_to_l_:
  7989                           
  7990                           	psect	text12
  7991  115E                     __ptext12:	
  7992 ;; *************** function __div_to_l_ *****************
  7993 ;; Defined at:
  7994 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;  f1              4    0[COMMON] unsigned long 
  7997 ;;  f2              4    4[COMMON] unsigned long 
  7998 ;; Auto vars:     Size  Location     Type
  7999 ;;  quot            4    0[BANK0 ] unsigned long 
  8000 ;;  exp1            1    5[BANK0 ] unsigned char 
  8001 ;;  cntr            1    4[BANK0 ] unsigned char 
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  4    0[COMMON] unsigned long 
  8004 ;; Registers used:
  8005 ;;		wreg, status,2, status,0
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8011 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8012 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8014 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8015 ;;Total ram usage:       15 bytes
  8016 ;; Hardware stack levels used: 1
  8017 ;; This function calls:
  8018 ;;		Nothing
  8019 ;; This function is called by:
  8020 ;;		_sprintf
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           
  8025                           ;psect for function __div_to_l_
  8026  115E                     __div_to_l_:
  8027  115E                     l3466:	
  8028                           ;incstack = 0
  8029                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  8030                           
  8031  115E  1003               	clrc
  8032  115F  0D72               	rlf	__div_to_l_@f1+2,w
  8033  1160  0D73               	rlf	__div_to_l_@f1+3,w
  8034  1161  00F8               	movwf	??__div_to_l_
  8035  1162  0878               	movf	??__div_to_l_,w
  8036  1163  0020               	movlb	0	; select bank0
  8037  1164  00A5               	movwf	__div_to_l_@exp1
  8038  1165  0825               	movf	__div_to_l_@exp1,w
  8039  1166  1D03               	btfss	3,2
  8040  1167  2969               	goto	u4231
  8041  1168  296A               	goto	u4230
  8042  1169                     u4231:
  8043  1169  2973               	goto	l3472
  8044  116A                     u4230:
  8045  116A                     l3468:
  8046  116A  3000               	movlw	0
  8047  116B  00F3               	movwf	?__div_to_l_+3
  8048  116C  3000               	movlw	0
  8049  116D  00F2               	movwf	?__div_to_l_+2
  8050  116E  3000               	movlw	0
  8051  116F  00F1               	movwf	?__div_to_l_+1
  8052  1170  3000               	movlw	0
  8053  1171  00F0               	movwf	?__div_to_l_
  8054  1172  2A0C               	goto	l691
  8055  1173                     l3472:
  8056  1173  1003               	clrc
  8057  1174  0D76               	rlf	__div_to_l_@f2+2,w
  8058  1175  0D77               	rlf	__div_to_l_@f2+3,w
  8059  1176  00F8               	movwf	??__div_to_l_
  8060  1177  0878               	movf	??__div_to_l_,w
  8061  1178  00A4               	movwf	__div_to_l_@cntr
  8062  1179  0824               	movf	__div_to_l_@cntr,w
  8063  117A  1D03               	btfss	3,2
  8064  117B  297D               	goto	u4241
  8065  117C  297E               	goto	u4240
  8066  117D                     u4241:
  8067  117D  297F               	goto	l692
  8068  117E                     u4240:
  8069  117E  296A               	goto	l3468
  8070  117F                     l692:
  8071  117F  17F2               	bsf	__div_to_l_@f1+2,7
  8072  1180                     l3478:
  8073  1180  30FF               	movlw	255
  8074  1181  05F0               	andwf	__div_to_l_@f1,f
  8075  1182  30FF               	movlw	255
  8076  1183  05F1               	andwf	__div_to_l_@f1+1,f
  8077  1184  30FF               	movlw	255
  8078  1185  05F2               	andwf	__div_to_l_@f1+2,f
  8079  1186  3000               	movlw	0
  8080  1187  05F3               	andwf	__div_to_l_@f1+3,f
  8081  1188                     l3480:
  8082  1188  17F6               	bsf	__div_to_l_@f2+2,7
  8083  1189  30FF               	movlw	255
  8084  118A  05F4               	andwf	__div_to_l_@f2,f
  8085  118B  30FF               	movlw	255
  8086  118C  05F5               	andwf	__div_to_l_@f2+1,f
  8087  118D  30FF               	movlw	255
  8088  118E  05F6               	andwf	__div_to_l_@f2+2,f
  8089  118F  3000               	movlw	0
  8090  1190  05F7               	andwf	__div_to_l_@f2+3,f
  8091  1191  3000               	movlw	0
  8092  1192  00A3               	movwf	__div_to_l_@quot+3
  8093  1193  3000               	movlw	0
  8094  1194  00A2               	movwf	__div_to_l_@quot+2
  8095  1195  3000               	movlw	0
  8096  1196  00A1               	movwf	__div_to_l_@quot+1
  8097  1197  3000               	movlw	0
  8098  1198  00A0               	movwf	__div_to_l_@quot
  8099  1199                     l3482:
  8100  1199  307F               	movlw	127
  8101  119A  02A5               	subwf	__div_to_l_@exp1,f
  8102  119B                     l3484:
  8103  119B  30A0               	movlw	160
  8104  119C  0724               	addwf	__div_to_l_@cntr,w
  8105  119D  00F8               	movwf	??__div_to_l_
  8106  119E  0878               	movf	??__div_to_l_,w
  8107  119F  02A5               	subwf	__div_to_l_@exp1,f
  8108  11A0  3020               	movlw	32
  8109  11A1  00F8               	movwf	??__div_to_l_
  8110  11A2  0878               	movf	??__div_to_l_,w
  8111  11A3  00A4               	movwf	__div_to_l_@cntr
  8112  11A4                     l3486:
  8113  11A4  3001               	movlw	1
  8114  11A5                     u4255:
  8115  11A5  35A0               	lslf	__div_to_l_@quot,f
  8116  11A6  0DA1               	rlf	__div_to_l_@quot+1,f
  8117  11A7  0DA2               	rlf	__div_to_l_@quot+2,f
  8118  11A8  0DA3               	rlf	__div_to_l_@quot+3,f
  8119  11A9  0B89               	decfsz	9,f
  8120  11AA  29A5               	goto	u4255
  8121  11AB                     l3488:
  8122  11AB  0877               	movf	__div_to_l_@f2+3,w
  8123  11AC  0273               	subwf	__div_to_l_@f1+3,w
  8124  11AD  1D03               	skipz
  8125  11AE  29B9               	goto	u4265
  8126  11AF  0876               	movf	__div_to_l_@f2+2,w
  8127  11B0  0272               	subwf	__div_to_l_@f1+2,w
  8128  11B1  1D03               	skipz
  8129  11B2  29B9               	goto	u4265
  8130  11B3  0875               	movf	__div_to_l_@f2+1,w
  8131  11B4  0271               	subwf	__div_to_l_@f1+1,w
  8132  11B5  1D03               	skipz
  8133  11B6  29B9               	goto	u4265
  8134  11B7  0874               	movf	__div_to_l_@f2,w
  8135  11B8  0270               	subwf	__div_to_l_@f1,w
  8136  11B9                     u4265:
  8137  11B9  1C03               	skipc
  8138  11BA  29BC               	goto	u4261
  8139  11BB  29BD               	goto	u4260
  8140  11BC                     u4261:
  8141  11BC  29C6               	goto	l3494
  8142  11BD                     u4260:
  8143  11BD                     l3490:
  8144  11BD  0874               	movf	__div_to_l_@f2,w
  8145  11BE  02F0               	subwf	__div_to_l_@f1,f
  8146  11BF  0875               	movf	__div_to_l_@f2+1,w
  8147  11C0  3BF1               	subwfb	__div_to_l_@f1+1,f
  8148  11C1  0876               	movf	__div_to_l_@f2+2,w
  8149  11C2  3BF2               	subwfb	__div_to_l_@f1+2,f
  8150  11C3  0877               	movf	__div_to_l_@f2+3,w
  8151  11C4  3BF3               	subwfb	__div_to_l_@f1+3,f
  8152  11C5                     l3492:
  8153  11C5  1420               	bsf	__div_to_l_@quot,0
  8154  11C6                     l3494:
  8155  11C6  3001               	movlw	1
  8156  11C7                     u4275:
  8157  11C7  35F0               	lslf	__div_to_l_@f1,f
  8158  11C8  0DF1               	rlf	__div_to_l_@f1+1,f
  8159  11C9  0DF2               	rlf	__div_to_l_@f1+2,f
  8160  11CA  0DF3               	rlf	__div_to_l_@f1+3,f
  8161  11CB  0B89               	decfsz	9,f
  8162  11CC  29C7               	goto	u4275
  8163  11CD                     l3496:
  8164  11CD  3001               	movlw	1
  8165  11CE  02A4               	subwf	__div_to_l_@cntr,f
  8166  11CF  1D03               	btfss	3,2
  8167  11D0  29D2               	goto	u4281
  8168  11D1  29D3               	goto	u4280
  8169  11D2                     u4281:
  8170  11D2  29A4               	goto	l3486
  8171  11D3                     u4280:
  8172  11D3                     l695:
  8173  11D3  1FA5               	btfss	__div_to_l_@exp1,7
  8174  11D4  29D6               	goto	u4291
  8175  11D5  29D7               	goto	u4290
  8176  11D6                     u4291:
  8177  11D6  29EF               	goto	l3506
  8178  11D7                     u4290:
  8179  11D7                     l3498:
  8180  11D7  0825               	movf	__div_to_l_@exp1,w
  8181  11D8  3A80               	xorlw	128
  8182  11D9  3E9F               	addlw	159
  8183  11DA  1803               	skipnc
  8184  11DB  29DD               	goto	u4301
  8185  11DC  29DE               	goto	u4300
  8186  11DD                     u4301:
  8187  11DD  29DF               	goto	l3504
  8188  11DE                     u4300:
  8189  11DE  296A               	goto	l3468
  8190  11DF                     l3504:
  8191  11DF  3001               	movlw	1
  8192  11E0                     u4315:
  8193  11E0  36A3               	lsrf	__div_to_l_@quot+3,f
  8194  11E1  0CA2               	rrf	__div_to_l_@quot+2,f
  8195  11E2  0CA1               	rrf	__div_to_l_@quot+1,f
  8196  11E3  0CA0               	rrf	__div_to_l_@quot,f
  8197  11E4  0B89               	decfsz	9,f
  8198  11E5  29E0               	goto	u4315
  8199  11E6  3001               	movlw	1
  8200  11E7  00F8               	movwf	??__div_to_l_
  8201  11E8  0878               	movf	??__div_to_l_,w
  8202  11E9  07A5               	addwf	__div_to_l_@exp1,f
  8203  11EA  1D03               	btfss	3,2
  8204  11EB  29ED               	goto	u4321
  8205  11EC  29EE               	goto	u4320
  8206  11ED                     u4321:
  8207  11ED  29DF               	goto	l3504
  8208  11EE                     u4320:
  8209  11EE  2A04               	goto	l3514
  8210  11EF                     l3506:
  8211  11EF  3020               	movlw	32
  8212  11F0  0225               	subwf	__div_to_l_@exp1,w
  8213  11F1  1C03               	skipc
  8214  11F2  29F4               	goto	u4331
  8215  11F3  29F5               	goto	u4330
  8216  11F4                     u4331:
  8217  11F4  29FF               	goto	l702
  8218  11F5                     u4330:
  8219  11F5  296A               	goto	l3468
  8220  11F6                     l3512:
  8221  11F6  3001               	movlw	1
  8222  11F7                     u4345:
  8223  11F7  35A0               	lslf	__div_to_l_@quot,f
  8224  11F8  0DA1               	rlf	__div_to_l_@quot+1,f
  8225  11F9  0DA2               	rlf	__div_to_l_@quot+2,f
  8226  11FA  0DA3               	rlf	__div_to_l_@quot+3,f
  8227  11FB  0B89               	decfsz	9,f
  8228  11FC  29F7               	goto	u4345
  8229  11FD  3001               	movlw	1
  8230  11FE  02A5               	subwf	__div_to_l_@exp1,f
  8231  11FF                     l702:
  8232  11FF  0825               	movf	__div_to_l_@exp1,w
  8233  1200  1D03               	btfss	3,2
  8234  1201  2A03               	goto	u4351
  8235  1202  2A04               	goto	u4350
  8236  1203                     u4351:
  8237  1203  29F6               	goto	l3512
  8238  1204                     u4350:
  8239  1204                     l3514:
  8240  1204  0823               	movf	__div_to_l_@quot+3,w
  8241  1205  00F3               	movwf	?__div_to_l_+3
  8242  1206  0822               	movf	__div_to_l_@quot+2,w
  8243  1207  00F2               	movwf	?__div_to_l_+2
  8244  1208  0821               	movf	__div_to_l_@quot+1,w
  8245  1209  00F1               	movwf	?__div_to_l_+1
  8246  120A  0820               	movf	__div_to_l_@quot,w
  8247  120B  00F0               	movwf	?__div_to_l_
  8248  120C                     l691:
  8249  120C  0008               	return
  8250  120D                     __end_of__div_to_l_:
  8251                           
  8252                           	psect	text13
  8253  1CE7                     __ptext13:	
  8254 ;; *************** function ___wmul *****************
  8255 ;; Defined at:
  8256 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;  multiplier      2    0[COMMON] unsigned int 
  8259 ;;  multiplicand    2    2[COMMON] unsigned int 
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;  product         2    4[COMMON] unsigned int 
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  2    0[COMMON] unsigned int 
  8264 ;; Registers used:
  8265 ;;		wreg, status,2, status,0
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8275 ;;Total ram usage:        6 bytes
  8276 ;; Hardware stack levels used: 1
  8277 ;; This function calls:
  8278 ;;		Nothing
  8279 ;; This function is called by:
  8280 ;;		_sprintf
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           
  8285                           ;psect for function ___wmul
  8286  1CE7                     ___wmul:
  8287  1CE7                     l3518:	
  8288                           ;incstack = 0
  8289                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8290                           
  8291  1CE7  01F4               	clrf	___wmul@product
  8292  1CE8  01F5               	clrf	___wmul@product+1
  8293  1CE9                     l3520:
  8294  1CE9  1C70               	btfss	___wmul@multiplier,0
  8295  1CEA  2CEC               	goto	u4361
  8296  1CEB  2CED               	goto	u4360
  8297  1CEC                     u4361:
  8298  1CEC  2CF1               	goto	l521
  8299  1CED                     u4360:
  8300  1CED                     l3522:
  8301  1CED  0872               	movf	___wmul@multiplicand,w
  8302  1CEE  07F4               	addwf	___wmul@product,f
  8303  1CEF  0873               	movf	___wmul@multiplicand+1,w
  8304  1CF0  3DF5               	addwfc	___wmul@product+1,f
  8305  1CF1                     l521:
  8306  1CF1  3001               	movlw	1
  8307  1CF2                     u4375:
  8308  1CF2  35F2               	lslf	___wmul@multiplicand,f
  8309  1CF3  0DF3               	rlf	___wmul@multiplicand+1,f
  8310  1CF4  0B89               	decfsz	9,f
  8311  1CF5  2CF2               	goto	u4375
  8312  1CF6                     l3524:
  8313  1CF6  3001               	movlw	1
  8314  1CF7                     u4385:
  8315  1CF7  36F1               	lsrf	___wmul@multiplier+1,f
  8316  1CF8  0CF0               	rrf	___wmul@multiplier,f
  8317  1CF9  0B89               	decfsz	9,f
  8318  1CFA  2CF7               	goto	u4385
  8319  1CFB                     l3526:
  8320  1CFB  0870               	movf	___wmul@multiplier,w
  8321  1CFC  0471               	iorwf	___wmul@multiplier+1,w
  8322  1CFD  1D03               	btfss	3,2
  8323  1CFE  2D00               	goto	u4391
  8324  1CFF  2D01               	goto	u4390
  8325  1D00                     u4391:
  8326  1D00  2CE9               	goto	l3520
  8327  1D01                     u4390:
  8328  1D01                     l3528:
  8329  1D01  0875               	movf	___wmul@product+1,w
  8330  1D02  00F1               	movwf	?___wmul+1
  8331  1D03  0874               	movf	___wmul@product,w
  8332  1D04  00F0               	movwf	?___wmul
  8333  1D05                     l523:
  8334  1D05  0008               	return
  8335  1D06                     __end_of___wmul:
  8336                           
  8337                           	psect	text14
  8338  1E0C                     __ptext14:	
  8339 ;; *************** function ___llmod *****************
  8340 ;; Defined at:
  8341 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;  divisor         4    0[BANK0 ] unsigned long 
  8344 ;;  dividend        4    4[BANK0 ] unsigned long 
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;  counter         1    9[BANK0 ] unsigned char 
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  4    0[BANK0 ] unsigned long 
  8349 ;; Registers used:
  8350 ;;		wreg, status,2, status,0
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8356 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;Total ram usage:       10 bytes
  8361 ;; Hardware stack levels used: 1
  8362 ;; This function calls:
  8363 ;;		Nothing
  8364 ;; This function is called by:
  8365 ;;		_sprintf
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           
  8370                           ;psect for function ___llmod
  8371  1E0C                     ___llmod:
  8372  1E0C                     l3632:	
  8373                           ;incstack = 0
  8374                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8375                           
  8376  1E0C  0020               	movlb	0	; select bank0
  8377  1E0D  0823               	movf	___llmod@divisor+3,w
  8378  1E0E  0422               	iorwf	___llmod@divisor+2,w
  8379  1E0F  0421               	iorwf	___llmod@divisor+1,w
  8380  1E10  0420               	iorwf	___llmod@divisor,w
  8381  1E11  1903               	skipnz
  8382  1E12  2E14               	goto	u4661
  8383  1E13  2E15               	goto	u4660
  8384  1E14                     u4661:
  8385  1E14  2E4E               	goto	l3648
  8386  1E15                     u4660:
  8387  1E15                     l3634:
  8388  1E15  01A9               	clrf	___llmod@counter
  8389  1E16  0AA9               	incf	___llmod@counter,f
  8390  1E17  2E23               	goto	l3638
  8391  1E18                     l3636:
  8392  1E18  3001               	movlw	1
  8393  1E19                     u4675:
  8394  1E19  35A0               	lslf	___llmod@divisor,f
  8395  1E1A  0DA1               	rlf	___llmod@divisor+1,f
  8396  1E1B  0DA2               	rlf	___llmod@divisor+2,f
  8397  1E1C  0DA3               	rlf	___llmod@divisor+3,f
  8398  1E1D  0B89               	decfsz	9,f
  8399  1E1E  2E19               	goto	u4675
  8400  1E1F  3001               	movlw	1
  8401  1E20  00A8               	movwf	??___llmod
  8402  1E21  0828               	movf	??___llmod,w
  8403  1E22  07A9               	addwf	___llmod@counter,f
  8404  1E23                     l3638:
  8405  1E23  1FA3               	btfss	___llmod@divisor+3,7
  8406  1E24  2E26               	goto	u4681
  8407  1E25  2E27               	goto	u4680
  8408  1E26                     u4681:
  8409  1E26  2E18               	goto	l3636
  8410  1E27                     u4680:
  8411  1E27                     l3640:
  8412  1E27  0823               	movf	___llmod@divisor+3,w
  8413  1E28  0227               	subwf	___llmod@dividend+3,w
  8414  1E29  1D03               	skipz
  8415  1E2A  2E35               	goto	u4695
  8416  1E2B  0822               	movf	___llmod@divisor+2,w
  8417  1E2C  0226               	subwf	___llmod@dividend+2,w
  8418  1E2D  1D03               	skipz
  8419  1E2E  2E35               	goto	u4695
  8420  1E2F  0821               	movf	___llmod@divisor+1,w
  8421  1E30  0225               	subwf	___llmod@dividend+1,w
  8422  1E31  1D03               	skipz
  8423  1E32  2E35               	goto	u4695
  8424  1E33  0820               	movf	___llmod@divisor,w
  8425  1E34  0224               	subwf	___llmod@dividend,w
  8426  1E35                     u4695:
  8427  1E35  1C03               	skipc
  8428  1E36  2E38               	goto	u4691
  8429  1E37  2E39               	goto	u4690
  8430  1E38                     u4691:
  8431  1E38  2E41               	goto	l3644
  8432  1E39                     u4690:
  8433  1E39                     l3642:
  8434  1E39  0820               	movf	___llmod@divisor,w
  8435  1E3A  02A4               	subwf	___llmod@dividend,f
  8436  1E3B  0821               	movf	___llmod@divisor+1,w
  8437  1E3C  3BA5               	subwfb	___llmod@dividend+1,f
  8438  1E3D  0822               	movf	___llmod@divisor+2,w
  8439  1E3E  3BA6               	subwfb	___llmod@dividend+2,f
  8440  1E3F  0823               	movf	___llmod@divisor+3,w
  8441  1E40  3BA7               	subwfb	___llmod@dividend+3,f
  8442  1E41                     l3644:
  8443  1E41  3001               	movlw	1
  8444  1E42                     u4705:
  8445  1E42  36A3               	lsrf	___llmod@divisor+3,f
  8446  1E43  0CA2               	rrf	___llmod@divisor+2,f
  8447  1E44  0CA1               	rrf	___llmod@divisor+1,f
  8448  1E45  0CA0               	rrf	___llmod@divisor,f
  8449  1E46  0B89               	decfsz	9,f
  8450  1E47  2E42               	goto	u4705
  8451  1E48                     l3646:
  8452  1E48  3001               	movlw	1
  8453  1E49  02A9               	subwf	___llmod@counter,f
  8454  1E4A  1D03               	btfss	3,2
  8455  1E4B  2E4D               	goto	u4711
  8456  1E4C  2E4E               	goto	u4710
  8457  1E4D                     u4711:
  8458  1E4D  2E27               	goto	l3640
  8459  1E4E                     u4710:
  8460  1E4E                     l3648:
  8461  1E4E  0827               	movf	___llmod@dividend+3,w
  8462  1E4F  00A3               	movwf	?___llmod+3
  8463  1E50  0826               	movf	___llmod@dividend+2,w
  8464  1E51  00A2               	movwf	?___llmod+2
  8465  1E52  0825               	movf	___llmod@dividend+1,w
  8466  1E53  00A1               	movwf	?___llmod+1
  8467  1E54  0824               	movf	___llmod@dividend,w
  8468  1E55  00A0               	movwf	?___llmod
  8469  1E56                     l777:
  8470  1E56  0008               	return
  8471  1E57                     __end_of___llmod:
  8472                           
  8473                           	psect	text15
  8474  103D                     __ptext15:	
  8475 ;; *************** function ___fltol *****************
  8476 ;; Defined at:
  8477 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;  f1              4   51[BANK0 ] unsigned long 
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;  exp1            1   61[BANK0 ] unsigned char 
  8482 ;;  sign1           1   60[BANK0 ] unsigned char 
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  4   51[BANK0 ] long 
  8485 ;; Registers used:
  8486 ;;		wreg, status,2, status,0
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8492 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8493 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8494 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8495 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8496 ;;Total ram usage:       11 bytes
  8497 ;; Hardware stack levels used: 1
  8498 ;; This function calls:
  8499 ;;		Nothing
  8500 ;; This function is called by:
  8501 ;;		_sprintf
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           
  8506                           ;psect for function ___fltol
  8507  103D                     ___fltol:
  8508  103D                     l3596:	
  8509                           ;incstack = 0
  8510                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8511                           
  8512  103D  1003               	clrc
  8513  103E  0020               	movlb	0	; select bank0
  8514  103F  0D55               	rlf	___fltol@f1+2,w
  8515  1040  0D56               	rlf	___fltol@f1+3,w
  8516  1041  00D7               	movwf	??___fltol
  8517  1042  0857               	movf	??___fltol,w
  8518  1043  00DD               	movwf	___fltol@exp1
  8519  1044  085D               	movf	___fltol@exp1,w
  8520  1045  1D03               	btfss	3,2
  8521  1046  2848               	goto	u4561
  8522  1047  2849               	goto	u4560
  8523  1048                     u4561:
  8524  1048  2852               	goto	l3602
  8525  1049                     u4560:
  8526  1049                     l3598:
  8527  1049  3000               	movlw	0
  8528  104A  00D6               	movwf	?___fltol+3
  8529  104B  3000               	movlw	0
  8530  104C  00D5               	movwf	?___fltol+2
  8531  104D  3000               	movlw	0
  8532  104E  00D4               	movwf	?___fltol+1
  8533  104F  3000               	movlw	0
  8534  1050  00D3               	movwf	?___fltol
  8535  1051  28B1               	goto	l724
  8536  1052                     l3602:
  8537  1052  0853               	movf	___fltol@f1,w
  8538  1053  00D7               	movwf	??___fltol
  8539  1054  0854               	movf	___fltol@f1+1,w
  8540  1055  00D8               	movwf	??___fltol+1
  8541  1056  0855               	movf	___fltol@f1+2,w
  8542  1057  00D9               	movwf	??___fltol+2
  8543  1058  0856               	movf	___fltol@f1+3,w
  8544  1059  00DA               	movwf	??___fltol+3
  8545  105A  301F               	movlw	31
  8546  105B                     u4575:
  8547  105B  36DA               	lsrf	??___fltol+3,f
  8548  105C  0CD9               	rrf	??___fltol+2,f
  8549  105D  0CD8               	rrf	??___fltol+1,f
  8550  105E  0CD7               	rrf	??___fltol,f
  8551  105F                     u4570:
  8552  105F  0B89               	decfsz	9,f
  8553  1060  285B               	goto	u4575
  8554  1061  0857               	movf	??___fltol,w
  8555  1062  00DB               	movwf	??___fltol+4
  8556  1063  085B               	movf	??___fltol+4,w
  8557  1064  00DC               	movwf	___fltol@sign1
  8558  1065                     l3604:
  8559  1065  17D5               	bsf	___fltol@f1+2,7
  8560  1066                     l3606:
  8561  1066  30FF               	movlw	255
  8562  1067  05D3               	andwf	___fltol@f1,f
  8563  1068  30FF               	movlw	255
  8564  1069  05D4               	andwf	___fltol@f1+1,f
  8565  106A  30FF               	movlw	255
  8566  106B  05D5               	andwf	___fltol@f1+2,f
  8567  106C  3000               	movlw	0
  8568  106D  05D6               	andwf	___fltol@f1+3,f
  8569  106E                     l3608:
  8570  106E  3096               	movlw	150
  8571  106F  02DD               	subwf	___fltol@exp1,f
  8572  1070                     l3610:
  8573  1070  1FDD               	btfss	___fltol@exp1,7
  8574  1071  2873               	goto	u4581
  8575  1072  2874               	goto	u4580
  8576  1073                     u4581:
  8577  1073  288C               	goto	l3620
  8578  1074                     u4580:
  8579  1074                     l3612:
  8580  1074  085D               	movf	___fltol@exp1,w
  8581  1075  3A80               	xorlw	128
  8582  1076  3E97               	addlw	151
  8583  1077  1803               	skipnc
  8584  1078  287A               	goto	u4591
  8585  1079  287B               	goto	u4590
  8586  107A                     u4591:
  8587  107A  287C               	goto	l3618
  8588  107B                     u4590:
  8589  107B  2849               	goto	l3598
  8590  107C                     l3618:
  8591  107C  3001               	movlw	1
  8592  107D                     u4605:
  8593  107D  36D6               	lsrf	___fltol@f1+3,f
  8594  107E  0CD5               	rrf	___fltol@f1+2,f
  8595  107F  0CD4               	rrf	___fltol@f1+1,f
  8596  1080  0CD3               	rrf	___fltol@f1,f
  8597  1081  0B89               	decfsz	9,f
  8598  1082  287D               	goto	u4605
  8599  1083  3001               	movlw	1
  8600  1084  00D7               	movwf	??___fltol
  8601  1085  0857               	movf	??___fltol,w
  8602  1086  07DD               	addwf	___fltol@exp1,f
  8603  1087  1D03               	btfss	3,2
  8604  1088  288A               	goto	u4611
  8605  1089  288B               	goto	u4610
  8606  108A                     u4611:
  8607  108A  287C               	goto	l3618
  8608  108B                     u4610:
  8609  108B  28A1               	goto	l3628
  8610  108C                     l3620:
  8611  108C  3020               	movlw	32
  8612  108D  025D               	subwf	___fltol@exp1,w
  8613  108E  1C03               	skipc
  8614  108F  2891               	goto	u4621
  8615  1090  2892               	goto	u4620
  8616  1091                     u4621:
  8617  1091  289C               	goto	l731
  8618  1092                     u4620:
  8619  1092  2849               	goto	l3598
  8620  1093                     l3626:
  8621  1093  3001               	movlw	1
  8622  1094                     u4635:
  8623  1094  35D3               	lslf	___fltol@f1,f
  8624  1095  0DD4               	rlf	___fltol@f1+1,f
  8625  1096  0DD5               	rlf	___fltol@f1+2,f
  8626  1097  0DD6               	rlf	___fltol@f1+3,f
  8627  1098  0B89               	decfsz	9,f
  8628  1099  2894               	goto	u4635
  8629  109A  3001               	movlw	1
  8630  109B  02DD               	subwf	___fltol@exp1,f
  8631  109C                     l731:
  8632  109C  085D               	movf	___fltol@exp1,w
  8633  109D  1D03               	btfss	3,2
  8634  109E  28A0               	goto	u4641
  8635  109F  28A1               	goto	u4640
  8636  10A0                     u4641:
  8637  10A0  2893               	goto	l3626
  8638  10A1                     u4640:
  8639  10A1                     l3628:
  8640  10A1  085C               	movf	___fltol@sign1,w
  8641  10A2  1903               	btfsc	3,2
  8642  10A3  28A5               	goto	u4651
  8643  10A4  28A6               	goto	u4650
  8644  10A5                     u4651:
  8645  10A5  28B1               	goto	l734
  8646  10A6                     u4650:
  8647  10A6                     l3630:
  8648  10A6  09D3               	comf	___fltol@f1,f
  8649  10A7  09D4               	comf	___fltol@f1+1,f
  8650  10A8  09D5               	comf	___fltol@f1+2,f
  8651  10A9  09D6               	comf	___fltol@f1+3,f
  8652  10AA  0AD3               	incf	___fltol@f1,f
  8653  10AB  1903               	skipnz
  8654  10AC  0AD4               	incf	___fltol@f1+1,f
  8655  10AD  1903               	skipnz
  8656  10AE  0AD5               	incf	___fltol@f1+2,f
  8657  10AF  1903               	skipnz
  8658  10B0  0AD6               	incf	___fltol@f1+3,f
  8659  10B1                     l734:
  8660  10B1                     l724:
  8661  10B1  0008               	return
  8662  10B2                     __end_of___fltol:
  8663                           
  8664                           	psect	text16
  8665  1D06                     __ptext16:	
  8666 ;; *************** function ___flsub *****************
  8667 ;; Defined at:
  8668 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  a               4   69[BANK0 ] long 
  8671 ;;  b               4   73[BANK0 ] long 
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;		None
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  4   69[BANK0 ] long 
  8676 ;; Registers used:
  8677 ;;		wreg, status,2, status,0, pclath, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8683 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8686 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8687 ;;Total ram usage:        8 bytes
  8688 ;; Hardware stack levels used: 1
  8689 ;; Hardware stack levels required when called: 1
  8690 ;; This function calls:
  8691 ;;		___fladd
  8692 ;; This function is called by:
  8693 ;;		_sprintf
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           
  8698                           ;psect for function ___flsub
  8699  1D06                     ___flsub:
  8700  1D06                     l3652:	
  8701                           ;incstack = 0
  8702                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  8703                           
  8704  1D06  3080               	movlw	128
  8705  1D07  0020               	movlb	0	; select bank0
  8706  1D08  06E8               	xorwf	___flsub@a+3,f
  8707  1D09                     l3654:
  8708  1D09  086C               	movf	___flsub@b+3,w
  8709  1D0A  00D4               	movwf	___fladd@b+3
  8710  1D0B  086B               	movf	___flsub@b+2,w
  8711  1D0C  00D3               	movwf	___fladd@b+2
  8712  1D0D  086A               	movf	___flsub@b+1,w
  8713  1D0E  00D2               	movwf	___fladd@b+1
  8714  1D0F  0869               	movf	___flsub@b,w
  8715  1D10  00D1               	movwf	___fladd@b
  8716  1D11  0868               	movf	___flsub@a+3,w
  8717  1D12  00D8               	movwf	___fladd@a+3
  8718  1D13  0867               	movf	___flsub@a+2,w
  8719  1D14  00D7               	movwf	___fladd@a+2
  8720  1D15  0866               	movf	___flsub@a+1,w
  8721  1D16  00D6               	movwf	___fladd@a+1
  8722  1D17  0865               	movf	___flsub@a,w
  8723  1D18  00D5               	movwf	___fladd@a
  8724  1D19  3188  20F5  319D   	fcall	___fladd
  8725  1D1C  0020               	movlb	0	; select bank0
  8726  1D1D  0854               	movf	?___fladd+3,w
  8727  1D1E  00E8               	movwf	?___flsub+3
  8728  1D1F  0853               	movf	?___fladd+2,w
  8729  1D20  00E7               	movwf	?___flsub+2
  8730  1D21  0852               	movf	?___fladd+1,w
  8731  1D22  00E6               	movwf	?___flsub+1
  8732  1D23  0851               	movf	?___fladd,w
  8733  1D24  00E5               	movwf	?___flsub
  8734  1D25                     l894:
  8735  1D25  0008               	return
  8736  1D26                     __end_of___flsub:
  8737                           
  8738                           	psect	text17
  8739  08F5                     __ptext17:	
  8740 ;; *************** function ___fladd *****************
  8741 ;; Defined at:
  8742 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;  b               4   49[BANK0 ] long 
  8745 ;;  a               4   53[BANK0 ] long 
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;  grs             1   68[BANK0 ] unsigned char 
  8748 ;;  bexp            1   67[BANK0 ] unsigned char 
  8749 ;;  aexp            1   66[BANK0 ] unsigned char 
  8750 ;;  signs           1   65[BANK0 ] unsigned char 
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  4   49[BANK0 ] unsigned char 
  8753 ;; Registers used:
  8754 ;;		wreg, status,2, status,0
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8760 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8762 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8763 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8764 ;;Total ram usage:       20 bytes
  8765 ;; Hardware stack levels used: 1
  8766 ;; This function calls:
  8767 ;;		Nothing
  8768 ;; This function is called by:
  8769 ;;		_sprintf
  8770 ;;		___flsub
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774                           
  8775                           ;psect for function ___fladd
  8776  08F5                     ___fladd:
  8777  08F5                     l2930:	
  8778                           ;incstack = 0
  8779                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  8780                           
  8781  08F5  0020               	movlb	0	; select bank0
  8782  08F6  0854               	movf	___fladd@b+3,w
  8783  08F7  3980               	andlw	128
  8784  08F8  00D9               	movwf	??___fladd
  8785  08F9  0859               	movf	??___fladd,w
  8786  08FA  00E1               	movwf	___fladd@signs
  8787  08FB                     l2932:
  8788  08FB  3554               	lslf	___fladd@b+3,w
  8789  08FC  00D9               	movwf	??___fladd
  8790  08FD  0859               	movf	??___fladd,w
  8791  08FE  00E3               	movwf	___fladd@bexp
  8792  08FF                     l2934:
  8793  08FF  1FD3               	btfss	___fladd@b+2,7
  8794  0900  2902               	goto	u3301
  8795  0901  2903               	goto	u3300
  8796  0902                     u3301:
  8797  0902  2904               	goto	l2938
  8798  0903                     u3300:
  8799  0903                     l2936:
  8800  0903  1463               	bsf	___fladd@bexp,0
  8801  0904                     l2938:
  8802  0904  0863               	movf	___fladd@bexp,w
  8803  0905  1903               	btfsc	3,2
  8804  0906  2908               	goto	u3311
  8805  0907  2909               	goto	u3310
  8806  0908                     u3311:
  8807  0908  2919               	goto	l2948
  8808  0909                     u3310:
  8809  0909                     l2940:
  8810  0909  0A63               	incf	___fladd@bexp,w
  8811  090A  1D03               	btfss	3,2
  8812  090B  290D               	goto	u3321
  8813  090C  290E               	goto	u3320
  8814  090D                     u3321:
  8815  090D  2916               	goto	l2944
  8816  090E                     u3320:
  8817  090E                     l2942:
  8818  090E  3000               	movlw	0
  8819  090F  00D4               	movwf	___fladd@b+3
  8820  0910  3000               	movlw	0
  8821  0911  00D3               	movwf	___fladd@b+2
  8822  0912  3000               	movlw	0
  8823  0913  00D2               	movwf	___fladd@b+1
  8824  0914  3000               	movlw	0
  8825  0915  00D1               	movwf	___fladd@b
  8826  0916                     l2944:
  8827  0916  17D3               	bsf	___fladd@b+2,7
  8828  0917                     l2946:
  8829  0917  01D4               	clrf	___fladd@b+3
  8830  0918  2921               	goto	l2950
  8831  0919                     l2948:
  8832  0919  3000               	movlw	0
  8833  091A  00D4               	movwf	___fladd@b+3
  8834  091B  3000               	movlw	0
  8835  091C  00D3               	movwf	___fladd@b+2
  8836  091D  3000               	movlw	0
  8837  091E  00D2               	movwf	___fladd@b+1
  8838  091F  3000               	movlw	0
  8839  0920  00D1               	movwf	___fladd@b
  8840  0921                     l2950:
  8841  0921  0858               	movf	___fladd@a+3,w
  8842  0922  3980               	andlw	128
  8843  0923  00D9               	movwf	??___fladd
  8844  0924  0859               	movf	??___fladd,w
  8845  0925  00E2               	movwf	___fladd@aexp
  8846  0926                     l2952:
  8847  0926  0862               	movf	___fladd@aexp,w
  8848  0927  0661               	xorwf	___fladd@signs,w
  8849  0928  1903               	skipnz
  8850  0929  292B               	goto	u3331
  8851  092A  292C               	goto	u3330
  8852  092B                     u3331:
  8853  092B  292D               	goto	l2956
  8854  092C                     u3330:
  8855  092C                     l2954:
  8856  092C  1761               	bsf	___fladd@signs,6
  8857  092D                     l2956:
  8858  092D  3558               	lslf	___fladd@a+3,w
  8859  092E  00D9               	movwf	??___fladd
  8860  092F  0859               	movf	??___fladd,w
  8861  0930  00E2               	movwf	___fladd@aexp
  8862  0931                     l2958:
  8863  0931  1FD7               	btfss	___fladd@a+2,7
  8864  0932  2934               	goto	u3341
  8865  0933  2935               	goto	u3340
  8866  0934                     u3341:
  8867  0934  2936               	goto	l2962
  8868  0935                     u3340:
  8869  0935                     l2960:
  8870  0935  1462               	bsf	___fladd@aexp,0
  8871  0936                     l2962:
  8872  0936  0862               	movf	___fladd@aexp,w
  8873  0937  1903               	btfsc	3,2
  8874  0938  293A               	goto	u3351
  8875  0939  293B               	goto	u3350
  8876  093A                     u3351:
  8877  093A  294B               	goto	l2972
  8878  093B                     u3350:
  8879  093B                     l2964:
  8880  093B  0A62               	incf	___fladd@aexp,w
  8881  093C  1D03               	btfss	3,2
  8882  093D  293F               	goto	u3361
  8883  093E  2940               	goto	u3360
  8884  093F                     u3361:
  8885  093F  2948               	goto	l2968
  8886  0940                     u3360:
  8887  0940                     l2966:
  8888  0940  3000               	movlw	0
  8889  0941  00D8               	movwf	___fladd@a+3
  8890  0942  3000               	movlw	0
  8891  0943  00D7               	movwf	___fladd@a+2
  8892  0944  3000               	movlw	0
  8893  0945  00D6               	movwf	___fladd@a+1
  8894  0946  3000               	movlw	0
  8895  0947  00D5               	movwf	___fladd@a
  8896  0948                     l2968:
  8897  0948  17D7               	bsf	___fladd@a+2,7
  8898  0949                     l2970:
  8899  0949  01D8               	clrf	___fladd@a+3
  8900  094A  2953               	goto	l848
  8901  094B                     l2972:
  8902  094B  3000               	movlw	0
  8903  094C  00D8               	movwf	___fladd@a+3
  8904  094D  3000               	movlw	0
  8905  094E  00D7               	movwf	___fladd@a+2
  8906  094F  3000               	movlw	0
  8907  0950  00D6               	movwf	___fladd@a+1
  8908  0951  3000               	movlw	0
  8909  0952  00D5               	movwf	___fladd@a
  8910  0953                     l848:
  8911  0953  0863               	movf	___fladd@bexp,w
  8912  0954  0262               	subwf	___fladd@aexp,w
  8913  0955  1803               	skipnc
  8914  0956  2958               	goto	u3371
  8915  0957  2959               	goto	u3370
  8916  0958                     u3371:
  8917  0958  299D               	goto	l3008
  8918  0959                     u3370:
  8919  0959                     l2974:
  8920  0959  1F61               	btfss	___fladd@signs,6
  8921  095A  295C               	goto	u3381
  8922  095B  295D               	goto	u3380
  8923  095C                     u3381:
  8924  095C  2961               	goto	l2978
  8925  095D                     u3380:
  8926  095D                     l2976:
  8927  095D  3080               	movlw	128
  8928  095E  00D9               	movwf	??___fladd
  8929  095F  0859               	movf	??___fladd,w
  8930  0960  06E1               	xorwf	___fladd@signs,f
  8931  0961                     l2978:
  8932  0961  0863               	movf	___fladd@bexp,w
  8933  0962  00D9               	movwf	??___fladd
  8934  0963  0859               	movf	??___fladd,w
  8935  0964  00E4               	movwf	___fladd@grs
  8936  0965                     l2980:
  8937  0965  0862               	movf	___fladd@aexp,w
  8938  0966  00D9               	movwf	??___fladd
  8939  0967  0859               	movf	??___fladd,w
  8940  0968  00E3               	movwf	___fladd@bexp
  8941  0969                     l2982:
  8942  0969  0864               	movf	___fladd@grs,w
  8943  096A  00D9               	movwf	??___fladd
  8944  096B  0859               	movf	??___fladd,w
  8945  096C  00E2               	movwf	___fladd@aexp
  8946  096D                     l2984:
  8947  096D  0851               	movf	___fladd@b,w
  8948  096E  00D9               	movwf	??___fladd
  8949  096F  0859               	movf	??___fladd,w
  8950  0970  00E4               	movwf	___fladd@grs
  8951  0971                     l2986:
  8952  0971  0855               	movf	___fladd@a,w
  8953  0972  00D9               	movwf	??___fladd
  8954  0973  0859               	movf	??___fladd,w
  8955  0974  00D1               	movwf	___fladd@b
  8956  0975                     l2988:
  8957  0975  0864               	movf	___fladd@grs,w
  8958  0976  00D9               	movwf	??___fladd
  8959  0977  0859               	movf	??___fladd,w
  8960  0978  00D5               	movwf	___fladd@a
  8961  0979                     l2990:
  8962  0979  0852               	movf	___fladd@b+1,w
  8963  097A  00D9               	movwf	??___fladd
  8964  097B  0859               	movf	??___fladd,w
  8965  097C  00E4               	movwf	___fladd@grs
  8966  097D                     l2992:
  8967  097D  0856               	movf	___fladd@a+1,w
  8968  097E  00D9               	movwf	??___fladd
  8969  097F  0859               	movf	??___fladd,w
  8970  0980  00D2               	movwf	___fladd@b+1
  8971  0981                     l2994:
  8972  0981  0864               	movf	___fladd@grs,w
  8973  0982  00D9               	movwf	??___fladd
  8974  0983  0859               	movf	??___fladd,w
  8975  0984  00D6               	movwf	___fladd@a+1
  8976  0985                     l2996:
  8977  0985  0853               	movf	___fladd@b+2,w
  8978  0986  00D9               	movwf	??___fladd
  8979  0987  0859               	movf	??___fladd,w
  8980  0988  00E4               	movwf	___fladd@grs
  8981  0989                     l2998:
  8982  0989  0857               	movf	___fladd@a+2,w
  8983  098A  00D9               	movwf	??___fladd
  8984  098B  0859               	movf	??___fladd,w
  8985  098C  00D3               	movwf	___fladd@b+2
  8986  098D                     l3000:
  8987  098D  0864               	movf	___fladd@grs,w
  8988  098E  00D9               	movwf	??___fladd
  8989  098F  0859               	movf	??___fladd,w
  8990  0990  00D7               	movwf	___fladd@a+2
  8991  0991                     l3002:
  8992  0991  0854               	movf	___fladd@b+3,w
  8993  0992  00D9               	movwf	??___fladd
  8994  0993  0859               	movf	??___fladd,w
  8995  0994  00E4               	movwf	___fladd@grs
  8996  0995                     l3004:
  8997  0995  0858               	movf	___fladd@a+3,w
  8998  0996  00D9               	movwf	??___fladd
  8999  0997  0859               	movf	??___fladd,w
  9000  0998  00D4               	movwf	___fladd@b+3
  9001  0999                     l3006:
  9002  0999  0864               	movf	___fladd@grs,w
  9003  099A  00D9               	movwf	??___fladd
  9004  099B  0859               	movf	??___fladd,w
  9005  099C  00D8               	movwf	___fladd@a+3
  9006  099D                     l3008:
  9007  099D  01E4               	clrf	___fladd@grs
  9008  099E                     l3010:
  9009  099E  0862               	movf	___fladd@aexp,w
  9010  099F  00D9               	movwf	??___fladd
  9011  09A0  01DA               	clrf	??___fladd+1
  9012  09A1  085A               	movf	??___fladd+1,w
  9013  09A2  00DC               	movwf	??___fladd+3
  9014  09A3  0863               	movf	___fladd@bexp,w
  9015  09A4  0259               	subwf	??___fladd,w
  9016  09A5  00DB               	movwf	??___fladd+2
  9017  09A6  1C03               	skipc
  9018  09A7  03DC               	decf	??___fladd+3,f
  9019  09A8  085C               	movf	??___fladd+3,w
  9020  09A9  3A80               	xorlw	128
  9021  09AA  00DD               	movwf	??___fladd+4
  9022  09AB  3080               	movlw	128
  9023  09AC  025D               	subwf	??___fladd+4,w
  9024  09AD  1D03               	skipz
  9025  09AE  29B1               	goto	u3395
  9026  09AF  301A               	movlw	26
  9027  09B0  025B               	subwf	??___fladd+2,w
  9028  09B1                     u3395:
  9029  09B1  1C03               	skipc
  9030  09B2  29B4               	goto	u3391
  9031  09B3  29B5               	goto	u3390
  9032  09B4                     u3391:
  9033  09B4  29ED               	goto	l3026
  9034  09B5                     u3390:
  9035  09B5                     l3012:
  9036  09B5  0020               	movlb	0	; select bank0
  9037  09B6  0854               	movf	___fladd@b+3,w
  9038  09B7  0453               	iorwf	___fladd@b+2,w
  9039  09B8  0452               	iorwf	___fladd@b+1,w
  9040  09B9  0451               	iorwf	___fladd@b,w
  9041  09BA  1D03               	skipz
  9042  09BB  29BD               	goto	u3401
  9043  09BC  29BF               	goto	u3400
  9044  09BD                     u3401:
  9045  09BD  3001               	movlw	1
  9046  09BE  29C0               	goto	u3410
  9047  09BF                     u3400:
  9048  09BF  3000               	movlw	0
  9049  09C0                     u3410:
  9050  09C0  00D9               	movwf	??___fladd
  9051  09C1  0859               	movf	??___fladd,w
  9052  09C2  00E4               	movwf	___fladd@grs
  9053  09C3  3000               	movlw	0
  9054  09C4  00D4               	movwf	___fladd@b+3
  9055  09C5  3000               	movlw	0
  9056  09C6  00D3               	movwf	___fladd@b+2
  9057  09C7  3000               	movlw	0
  9058  09C8  00D2               	movwf	___fladd@b+1
  9059  09C9  3000               	movlw	0
  9060  09CA  00D1               	movwf	___fladd@b
  9061  09CB  0862               	movf	___fladd@aexp,w
  9062  09CC  00D9               	movwf	??___fladd
  9063  09CD  0859               	movf	??___fladd,w
  9064  09CE  00E3               	movwf	___fladd@bexp
  9065  09CF  29F4               	goto	l852
  9066  09D0                     l854:
  9067  09D0  1C64               	btfss	___fladd@grs,0
  9068  09D1  29D3               	goto	u3421
  9069  09D2  29D4               	goto	u3420
  9070  09D3                     u3421:
  9071  09D3  29DA               	goto	l3016
  9072  09D4                     u3420:
  9073  09D4                     l3014:
  9074  09D4  3664               	lsrf	___fladd@grs,w
  9075  09D5  3801               	iorlw	1
  9076  09D6  00D9               	movwf	??___fladd
  9077  09D7  0859               	movf	??___fladd,w
  9078  09D8  00E4               	movwf	___fladd@grs
  9079  09D9  29DC               	goto	l3018
  9080  09DA                     l3016:
  9081  09DA  1003               	clrc
  9082  09DB  0CE4               	rrf	___fladd@grs,f
  9083  09DC                     l3018:
  9084  09DC  1C51               	btfss	___fladd@b,0
  9085  09DD  29DF               	goto	u3431
  9086  09DE  29E0               	goto	u3430
  9087  09DF                     u3431:
  9088  09DF  29E1               	goto	l3022
  9089  09E0                     u3430:
  9090  09E0                     l3020:
  9091  09E0  17E4               	bsf	___fladd@grs,7
  9092  09E1                     l3022:
  9093  09E1  3001               	movlw	1
  9094  09E2  00D9               	movwf	??___fladd
  9095  09E3                     u3445:
  9096  09E3  37D4               	asrf	___fladd@b+3,f
  9097  09E4  0CD3               	rrf	___fladd@b+2,f
  9098  09E5  0CD2               	rrf	___fladd@b+1,f
  9099  09E6  0CD1               	rrf	___fladd@b,f
  9100  09E7  0BD9               	decfsz	??___fladd& (0+127),f
  9101  09E8  29E3               	goto	u3445
  9102  09E9                     l3024:
  9103  09E9  3001               	movlw	1
  9104  09EA  00D9               	movwf	??___fladd
  9105  09EB  0859               	movf	??___fladd,w
  9106  09EC  07E3               	addwf	___fladd@bexp,f
  9107  09ED                     l3026:
  9108  09ED  0020               	movlb	0	; select bank0
  9109  09EE  0862               	movf	___fladd@aexp,w
  9110  09EF  0263               	subwf	___fladd@bexp,w
  9111  09F0  1C03               	skipc
  9112  09F1  29F3               	goto	u3451
  9113  09F2  29F4               	goto	u3450
  9114  09F3                     u3451:
  9115  09F3  29D0               	goto	l854
  9116  09F4                     u3450:
  9117  09F4                     l852:
  9118  09F4  1B61               	btfsc	___fladd@signs,6
  9119  09F5  29F7               	goto	u3461
  9120  09F6  29F8               	goto	u3460
  9121  09F7                     u3461:
  9122  09F7  2A30               	goto	l3052
  9123  09F8                     u3460:
  9124  09F8                     l3028:
  9125  09F8  0863               	movf	___fladd@bexp,w
  9126  09F9  1D03               	btfss	3,2
  9127  09FA  29FC               	goto	u3471
  9128  09FB  29FD               	goto	u3470
  9129  09FC                     u3471:
  9130  09FC  2A06               	goto	l3034
  9131  09FD                     u3470:
  9132  09FD                     l3030:
  9133  09FD  3000               	movlw	0
  9134  09FE  00D4               	movwf	?___fladd+3
  9135  09FF  3000               	movlw	0
  9136  0A00  00D3               	movwf	?___fladd+2
  9137  0A01  3000               	movlw	0
  9138  0A02  00D2               	movwf	?___fladd+1
  9139  0A03  3000               	movlw	0
  9140  0A04  00D1               	movwf	?___fladd
  9141  0A05  2B2C               	goto	l861
  9142  0A06                     l3034:
  9143  0A06  0855               	movf	___fladd@a,w
  9144  0A07  07D1               	addwf	___fladd@b,f
  9145  0A08  0856               	movf	___fladd@a+1,w
  9146  0A09  3DD2               	addwfc	___fladd@b+1,f
  9147  0A0A  0857               	movf	___fladd@a+2,w
  9148  0A0B  3DD3               	addwfc	___fladd@b+2,f
  9149  0A0C  0858               	movf	___fladd@a+3,w
  9150  0A0D  3DD4               	addwfc	___fladd@b+3,f
  9151  0A0E                     l3036:
  9152  0A0E  1C54               	btfss	___fladd@b+3,0
  9153  0A0F  2A11               	goto	u3481
  9154  0A10  2A12               	goto	u3480
  9155  0A11                     u3481:
  9156  0A11  2ABC               	goto	l3086
  9157  0A12                     u3480:
  9158  0A12                     l3038:
  9159  0A12  1C64               	btfss	___fladd@grs,0
  9160  0A13  2A15               	goto	u3491
  9161  0A14  2A16               	goto	u3490
  9162  0A15                     u3491:
  9163  0A15  2A1C               	goto	l3042
  9164  0A16                     u3490:
  9165  0A16                     l3040:
  9166  0A16  3664               	lsrf	___fladd@grs,w
  9167  0A17  3801               	iorlw	1
  9168  0A18  00D9               	movwf	??___fladd
  9169  0A19  0859               	movf	??___fladd,w
  9170  0A1A  00E4               	movwf	___fladd@grs
  9171  0A1B  2A1E               	goto	l3044
  9172  0A1C                     l3042:
  9173  0A1C  1003               	clrc
  9174  0A1D  0CE4               	rrf	___fladd@grs,f
  9175  0A1E                     l3044:
  9176  0A1E  1C51               	btfss	___fladd@b,0
  9177  0A1F  2A21               	goto	u3501
  9178  0A20  2A22               	goto	u3500
  9179  0A21                     u3501:
  9180  0A21  2A23               	goto	l3048
  9181  0A22                     u3500:
  9182  0A22                     l3046:
  9183  0A22  17E4               	bsf	___fladd@grs,7
  9184  0A23                     l3048:
  9185  0A23  3001               	movlw	1
  9186  0A24  00D9               	movwf	??___fladd
  9187  0A25                     u3515:
  9188  0A25  37D4               	asrf	___fladd@b+3,f
  9189  0A26  0CD3               	rrf	___fladd@b+2,f
  9190  0A27  0CD2               	rrf	___fladd@b+1,f
  9191  0A28  0CD1               	rrf	___fladd@b,f
  9192  0A29  0BD9               	decfsz	??___fladd& (0+127),f
  9193  0A2A  2A25               	goto	u3515
  9194  0A2B                     l3050:
  9195  0A2B  3001               	movlw	1
  9196  0A2C  00D9               	movwf	??___fladd
  9197  0A2D  0859               	movf	??___fladd,w
  9198  0A2E  07E3               	addwf	___fladd@bexp,f
  9199  0A2F  2ABC               	goto	l3086
  9200  0A30                     l3052:
  9201  0A30  0854               	movf	___fladd@b+3,w
  9202  0A31  3A80               	xorlw	128
  9203  0A32  00D9               	movwf	??___fladd
  9204  0A33  0858               	movf	___fladd@a+3,w
  9205  0A34  3A80               	xorlw	128
  9206  0A35  0259               	subwf	??___fladd,w
  9207  0A36  1D03               	skipz
  9208  0A37  2A42               	goto	u3523
  9209  0A38  0857               	movf	___fladd@a+2,w
  9210  0A39  0253               	subwf	___fladd@b+2,w
  9211  0A3A  1D03               	skipz
  9212  0A3B  2A42               	goto	u3523
  9213  0A3C  0856               	movf	___fladd@a+1,w
  9214  0A3D  0252               	subwf	___fladd@b+1,w
  9215  0A3E  1D03               	skipz
  9216  0A3F  2A42               	goto	u3523
  9217  0A40  0855               	movf	___fladd@a,w
  9218  0A41  0251               	subwf	___fladd@b,w
  9219  0A42                     u3523:
  9220  0A42  1803               	skipnc
  9221  0A43  2A45               	goto	u3521
  9222  0A44  2A46               	goto	u3520
  9223  0A45                     u3521:
  9224  0A45  2A7E               	goto	l3062
  9225  0A46                     u3520:
  9226  0A46                     l3054:
  9227  0A46  30FF               	movlw	255
  9228  0A47  00D9               	movwf	??___fladd
  9229  0A48  30FF               	movlw	255
  9230  0A49  00DA               	movwf	??___fladd+1
  9231  0A4A  30FF               	movlw	255
  9232  0A4B  00DB               	movwf	??___fladd+2
  9233  0A4C  30FF               	movlw	255
  9234  0A4D  00DC               	movwf	??___fladd+3
  9235  0A4E  0851               	movf	___fladd@b,w
  9236  0A4F  0255               	subwf	___fladd@a,w
  9237  0A50  00DD               	movwf	??___fladd+4
  9238  0A51  0852               	movf	___fladd@b+1,w
  9239  0A52  3B56               	subwfb	___fladd@a+1,w
  9240  0A53  00DE               	movwf	??___fladd+5
  9241  0A54  0853               	movf	___fladd@b+2,w
  9242  0A55  3B57               	subwfb	___fladd@a+2,w
  9243  0A56  00DF               	movwf	??___fladd+6
  9244  0A57  0854               	movf	___fladd@b+3,w
  9245  0A58  3B58               	subwfb	___fladd@a+3,w
  9246  0A59  00E0               	movwf	??___fladd+7
  9247  0A5A  085D               	movf	??___fladd+4,w
  9248  0A5B  07D9               	addwf	??___fladd,f
  9249  0A5C  085E               	movf	??___fladd+5,w
  9250  0A5D  3DDA               	addwfc	??___fladd+1,f
  9251  0A5E  085F               	movf	??___fladd+6,w
  9252  0A5F  3DDB               	addwfc	??___fladd+2,f
  9253  0A60  0860               	movf	??___fladd+7,w
  9254  0A61  3DDC               	addwfc	??___fladd+3,f
  9255  0A62  085C               	movf	??___fladd+3,w
  9256  0A63  00D4               	movwf	___fladd@b+3
  9257  0A64  085B               	movf	??___fladd+2,w
  9258  0A65  00D3               	movwf	___fladd@b+2
  9259  0A66  085A               	movf	??___fladd+1,w
  9260  0A67  00D2               	movwf	___fladd@b+1
  9261  0A68  0859               	movf	??___fladd,w
  9262  0A69  00D1               	movwf	___fladd@b
  9263  0A6A                     l3056:
  9264  0A6A  3080               	movlw	128
  9265  0A6B  00D9               	movwf	??___fladd
  9266  0A6C  0859               	movf	??___fladd,w
  9267  0A6D  06E1               	xorwf	___fladd@signs,f
  9268  0A6E  09E4               	comf	___fladd@grs,f
  9269  0A6F  0AE4               	incf	___fladd@grs,f
  9270  0A70                     l3058:
  9271  0A70  0864               	movf	___fladd@grs,w
  9272  0A71  1D03               	btfss	3,2
  9273  0A72  2A74               	goto	u3531
  9274  0A73  2A75               	goto	u3530
  9275  0A74                     u3531:
  9276  0A74  2A86               	goto	l869
  9277  0A75                     u3530:
  9278  0A75                     l3060:
  9279  0A75  3001               	movlw	1
  9280  0A76  07D1               	addwf	___fladd@b,f
  9281  0A77  3000               	movlw	0
  9282  0A78  3DD2               	addwfc	___fladd@b+1,f
  9283  0A79  3000               	movlw	0
  9284  0A7A  3DD3               	addwfc	___fladd@b+2,f
  9285  0A7B  3000               	movlw	0
  9286  0A7C  3DD4               	addwfc	___fladd@b+3,f
  9287  0A7D  2A86               	goto	l869
  9288  0A7E                     l3062:
  9289  0A7E  0855               	movf	___fladd@a,w
  9290  0A7F  02D1               	subwf	___fladd@b,f
  9291  0A80  0856               	movf	___fladd@a+1,w
  9292  0A81  3BD2               	subwfb	___fladd@b+1,f
  9293  0A82  0857               	movf	___fladd@a+2,w
  9294  0A83  3BD3               	subwfb	___fladd@b+2,f
  9295  0A84  0858               	movf	___fladd@a+3,w
  9296  0A85  3BD4               	subwfb	___fladd@b+3,f
  9297  0A86                     l869:
  9298  0A86  0854               	movf	___fladd@b+3,w
  9299  0A87  0453               	iorwf	___fladd@b+2,w
  9300  0A88  0452               	iorwf	___fladd@b+1,w
  9301  0A89  0451               	iorwf	___fladd@b,w
  9302  0A8A  1D03               	skipz
  9303  0A8B  2A8D               	goto	u3541
  9304  0A8C  2A8E               	goto	u3540
  9305  0A8D                     u3541:
  9306  0A8D  2AB8               	goto	l3084
  9307  0A8E                     u3540:
  9308  0A8E                     l3064:
  9309  0A8E  0864               	movf	___fladd@grs,w
  9310  0A8F  1D03               	btfss	3,2
  9311  0A90  2A92               	goto	u3551
  9312  0A91  2A93               	goto	u3550
  9313  0A92                     u3551:
  9314  0A92  2AB8               	goto	l3084
  9315  0A93                     u3550:
  9316  0A93                     l3066:
  9317  0A93  3000               	movlw	0
  9318  0A94  00D4               	movwf	?___fladd+3
  9319  0A95  3000               	movlw	0
  9320  0A96  00D3               	movwf	?___fladd+2
  9321  0A97  3000               	movlw	0
  9322  0A98  00D2               	movwf	?___fladd+1
  9323  0A99  3000               	movlw	0
  9324  0A9A  00D1               	movwf	?___fladd
  9325  0A9B  2B2C               	goto	l861
  9326  0A9C                     l3070:
  9327  0A9C  3001               	movlw	1
  9328  0A9D                     u3565:
  9329  0A9D  35D1               	lslf	___fladd@b,f
  9330  0A9E  0DD2               	rlf	___fladd@b+1,f
  9331  0A9F  0DD3               	rlf	___fladd@b+2,f
  9332  0AA0  0DD4               	rlf	___fladd@b+3,f
  9333  0AA1  0B89               	decfsz	9,f
  9334  0AA2  2A9D               	goto	u3565
  9335  0AA3                     l3072:
  9336  0AA3  1FE4               	btfss	___fladd@grs,7
  9337  0AA4  2AA6               	goto	u3571
  9338  0AA5  2AA7               	goto	u3570
  9339  0AA6                     u3571:
  9340  0AA6  2AA8               	goto	l873
  9341  0AA7                     u3570:
  9342  0AA7                     l3074:
  9343  0AA7  1451               	bsf	___fladd@b,0
  9344  0AA8                     l873:
  9345  0AA8  1C64               	btfss	___fladd@grs,0
  9346  0AA9  2AAB               	goto	u3581
  9347  0AAA  2AAC               	goto	u3580
  9348  0AAB                     u3581:
  9349  0AAB  2AAF               	goto	l3078
  9350  0AAC                     u3580:
  9351  0AAC                     l3076:
  9352  0AAC  1403               	setc
  9353  0AAD  0DE4               	rlf	___fladd@grs,f
  9354  0AAE  2AB1               	goto	l3080
  9355  0AAF                     l3078:
  9356  0AAF  1003               	clrc
  9357  0AB0  0DE4               	rlf	___fladd@grs,f
  9358  0AB1                     l3080:
  9359  0AB1  0863               	movf	___fladd@bexp,w
  9360  0AB2  1903               	btfsc	3,2
  9361  0AB3  2AB5               	goto	u3591
  9362  0AB4  2AB6               	goto	u3590
  9363  0AB5                     u3591:
  9364  0AB5  2AB8               	goto	l3084
  9365  0AB6                     u3590:
  9366  0AB6                     l3082:
  9367  0AB6  3001               	movlw	1
  9368  0AB7  02E3               	subwf	___fladd@bexp,f
  9369  0AB8                     l3084:
  9370  0AB8  1FD3               	btfss	___fladd@b+2,7
  9371  0AB9  2ABB               	goto	u3601
  9372  0ABA  2ABC               	goto	u3600
  9373  0ABB                     u3601:
  9374  0ABB  2A9C               	goto	l3070
  9375  0ABC                     u3600:
  9376  0ABC                     l3086:
  9377  0ABC  01E2               	clrf	___fladd@aexp
  9378  0ABD                     l3088:
  9379  0ABD  1FE4               	btfss	___fladd@grs,7
  9380  0ABE  2AC0               	goto	u3611
  9381  0ABF  2AC1               	goto	u3610
  9382  0AC0                     u3611:
  9383  0AC0  2ACF               	goto	l3096
  9384  0AC1                     u3610:
  9385  0AC1                     l3090:
  9386  0AC1  0864               	movf	___fladd@grs,w
  9387  0AC2  397F               	andlw	127
  9388  0AC3  1903               	btfsc	3,2
  9389  0AC4  2AC6               	goto	u3621
  9390  0AC5  2AC7               	goto	u3620
  9391  0AC6                     u3621:
  9392  0AC6  2ACA               	goto	l879
  9393  0AC7                     u3620:
  9394  0AC7                     l3092:
  9395  0AC7  01E2               	clrf	___fladd@aexp
  9396  0AC8  0AE2               	incf	___fladd@aexp,f
  9397  0AC9  2ACF               	goto	l3096
  9398  0ACA                     l879:
  9399  0ACA  1C51               	btfss	___fladd@b,0
  9400  0ACB  2ACD               	goto	u3631
  9401  0ACC  2ACE               	goto	u3630
  9402  0ACD                     u3631:
  9403  0ACD  2ACF               	goto	l3096
  9404  0ACE                     u3630:
  9405  0ACE  2AC7               	goto	l3092
  9406  0ACF                     l3096:
  9407  0ACF  0862               	movf	___fladd@aexp,w
  9408  0AD0  1903               	btfsc	3,2
  9409  0AD1  2AD3               	goto	u3641
  9410  0AD2  2AD4               	goto	u3640
  9411  0AD3                     u3641:
  9412  0AD3  2B01               	goto	l882
  9413  0AD4                     u3640:
  9414  0AD4                     l3098:
  9415  0AD4  3001               	movlw	1
  9416  0AD5  07D1               	addwf	___fladd@b,f
  9417  0AD6  3000               	movlw	0
  9418  0AD7  3DD2               	addwfc	___fladd@b+1,f
  9419  0AD8  3000               	movlw	0
  9420  0AD9  3DD3               	addwfc	___fladd@b+2,f
  9421  0ADA  3000               	movlw	0
  9422  0ADB  3DD4               	addwfc	___fladd@b+3,f
  9423  0ADC                     l3100:
  9424  0ADC  1C54               	btfss	___fladd@b+3,0
  9425  0ADD  2ADF               	goto	u3651
  9426  0ADE  2AE0               	goto	u3650
  9427  0ADF                     u3651:
  9428  0ADF  2B01               	goto	l882
  9429  0AE0                     u3650:
  9430  0AE0                     l3102:
  9431  0AE0  0851               	movf	___fladd@b,w
  9432  0AE1  00D9               	movwf	??___fladd
  9433  0AE2  0852               	movf	___fladd@b+1,w
  9434  0AE3  00DA               	movwf	??___fladd+1
  9435  0AE4  0853               	movf	___fladd@b+2,w
  9436  0AE5  00DB               	movwf	??___fladd+2
  9437  0AE6  0854               	movf	___fladd@b+3,w
  9438  0AE7  00DC               	movwf	??___fladd+3
  9439  0AE8  3001               	movlw	1
  9440  0AE9  00DD               	movwf	??___fladd+4
  9441  0AEA                     u3665:
  9442  0AEA  37DC               	asrf	??___fladd+3,f
  9443  0AEB  0CDB               	rrf	??___fladd+2,f
  9444  0AEC  0CDA               	rrf	??___fladd+1,f
  9445  0AED  0CD9               	rrf	??___fladd,f
  9446  0AEE                     u3660:
  9447  0AEE  0BDD               	decfsz	??___fladd+4,f
  9448  0AEF  2AEA               	goto	u3665
  9449  0AF0  085C               	movf	??___fladd+3,w
  9450  0AF1  00D4               	movwf	___fladd@b+3
  9451  0AF2  085B               	movf	??___fladd+2,w
  9452  0AF3  00D3               	movwf	___fladd@b+2
  9453  0AF4  085A               	movf	??___fladd+1,w
  9454  0AF5  00D2               	movwf	___fladd@b+1
  9455  0AF6  0859               	movf	??___fladd,w
  9456  0AF7  00D1               	movwf	___fladd@b
  9457  0AF8  0A63               	incf	___fladd@bexp,w
  9458  0AF9  1903               	btfsc	3,2
  9459  0AFA  2AFC               	goto	u3671
  9460  0AFB  2AFD               	goto	u3670
  9461  0AFC                     u3671:
  9462  0AFC  2B01               	goto	l882
  9463  0AFD                     u3670:
  9464  0AFD                     l3104:
  9465  0AFD  3001               	movlw	1
  9466  0AFE  00D9               	movwf	??___fladd
  9467  0AFF  0859               	movf	??___fladd,w
  9468  0B00  07E3               	addwf	___fladd@bexp,f
  9469  0B01                     l882:
  9470  0B01  0A63               	incf	___fladd@bexp,w
  9471  0B02  1903               	btfsc	3,2
  9472  0B03  2B05               	goto	u3681
  9473  0B04  2B06               	goto	u3680
  9474  0B05                     u3681:
  9475  0B05  2B0B               	goto	l3108
  9476  0B06                     u3680:
  9477  0B06                     l3106:
  9478  0B06  0863               	movf	___fladd@bexp,w
  9479  0B07  1D03               	btfss	3,2
  9480  0B08  2B0A               	goto	u3691
  9481  0B09  2B0B               	goto	u3690
  9482  0B0A                     u3691:
  9483  0B0A  2B19               	goto	l3114
  9484  0B0B                     u3690:
  9485  0B0B                     l3108:
  9486  0B0B  3000               	movlw	0
  9487  0B0C  00D4               	movwf	___fladd@b+3
  9488  0B0D  3000               	movlw	0
  9489  0B0E  00D3               	movwf	___fladd@b+2
  9490  0B0F  3000               	movlw	0
  9491  0B10  00D2               	movwf	___fladd@b+1
  9492  0B11  3000               	movlw	0
  9493  0B12  00D1               	movwf	___fladd@b
  9494  0B13                     l3110:
  9495  0B13  0863               	movf	___fladd@bexp,w
  9496  0B14  1D03               	btfss	3,2
  9497  0B15  2B17               	goto	u3701
  9498  0B16  2B18               	goto	u3700
  9499  0B17                     u3701:
  9500  0B17  2B19               	goto	l3114
  9501  0B18                     u3700:
  9502  0B18                     l3112:
  9503  0B18  01E1               	clrf	___fladd@signs
  9504  0B19                     l3114:
  9505  0B19  1C63               	btfss	___fladd@bexp,0
  9506  0B1A  2B1C               	goto	u3711
  9507  0B1B  2B1D               	goto	u3710
  9508  0B1C                     u3711:
  9509  0B1C  2B1F               	goto	l3118
  9510  0B1D                     u3710:
  9511  0B1D                     l3116:
  9512  0B1D  17D3               	bsf	___fladd@b+2,7
  9513  0B1E  2B23               	goto	l890
  9514  0B1F                     l3118:
  9515  0B1F  307F               	movlw	127
  9516  0B20  00D9               	movwf	??___fladd
  9517  0B21  0859               	movf	??___fladd,w
  9518  0B22  05D3               	andwf	___fladd@b+2,f
  9519  0B23                     l890:
  9520  0B23  3663               	lsrf	___fladd@bexp,w
  9521  0B24  00D9               	movwf	??___fladd
  9522  0B25  0859               	movf	??___fladd,w
  9523  0B26  00D4               	movwf	___fladd@b+3
  9524  0B27                     l3120:
  9525  0B27  1FE1               	btfss	___fladd@signs,7
  9526  0B28  2B2A               	goto	u3721
  9527  0B29  2B2B               	goto	u3720
  9528  0B2A                     u3721:
  9529  0B2A  2B2C               	goto	l891
  9530  0B2B                     u3720:
  9531  0B2B                     l3122:
  9532  0B2B  17D4               	bsf	___fladd@b+3,7
  9533  0B2C                     l891:
  9534  0B2C                     l861:
  9535  0B2C  0008               	return
  9536  0B2D                     __end_of___fladd:
  9537                           
  9538                           	psect	text18
  9539  1C71                     __ptext18:	
  9540 ;; *************** function ___flneg *****************
  9541 ;; Defined at:
  9542 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;  f1              4    0[COMMON] unsigned char 
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;		None
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  4    0[COMMON] unsigned char 
  9549 ;; Registers used:
  9550 ;;		wreg
  9551 ;; Tracked objects:
  9552 ;;		On entry : 0/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;Total ram usage:        4 bytes
  9561 ;; Hardware stack levels used: 1
  9562 ;; This function calls:
  9563 ;;		Nothing
  9564 ;; This function is called by:
  9565 ;;		_sprintf
  9566 ;; This function uses a non-reentrant model
  9567 ;;
  9568                           
  9569                           
  9570                           ;psect for function ___flneg
  9571  1C71                     ___flneg:
  9572  1C71                     l3588:	
  9573                           ;incstack = 0
  9574                           ; Regs used in ___flneg: [wreg]
  9575                           
  9576  1C71  0873               	movf	___flneg@f1+3,w
  9577  1C72  0472               	iorwf	___flneg@f1+2,w
  9578  1C73  0471               	iorwf	___flneg@f1+1,w
  9579  1C74  0470               	iorwf	___flneg@f1,w
  9580  1C75  1903               	skipnz
  9581  1C76  2C78               	goto	u4551
  9582  1C77  2C79               	goto	u4550
  9583  1C78                     u4551:
  9584  1C78  2C7B               	goto	l3592
  9585  1C79                     u4550:
  9586  1C79                     l3590:
  9587  1C79  3080               	movlw	128
  9588  1C7A  06F3               	xorwf	___flneg@f1+3,f
  9589  1C7B                     l3592:
  9590  1C7B                     l720:
  9591  1C7B  0008               	return
  9592  1C7C                     __end_of___flneg:
  9593                           
  9594                           	psect	text19
  9595  0018                     __ptext19:	
  9596 ;; *************** function ___flge *****************
  9597 ;; Defined at:
  9598 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  9599 ;; Parameters:    Size  Location     Type
  9600 ;;  ff1             4    0[COMMON] unsigned char 
  9601 ;;  ff2             4    4[COMMON] unsigned char 
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;		None
  9604 ;; Return value:  Size  Location     Type
  9605 ;;		None               void
  9606 ;; Registers used:
  9607 ;;		wreg, status,2, status,0
  9608 ;; Tracked objects:
  9609 ;;		On entry : 0/0
  9610 ;;		On exit  : 0/0
  9611 ;;		Unchanged: 0/0
  9612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9613 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;Total ram usage:       12 bytes
  9618 ;; Hardware stack levels used: 1
  9619 ;; This function calls:
  9620 ;;		Nothing
  9621 ;; This function is called by:
  9622 ;;		_sprintf
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           
  9627                           ;psect for function ___flge
  9628  0018                     ___flge:
  9629  0018                     l3568:	
  9630                           ;incstack = 0
  9631                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9632                           
  9633  0018  3000               	movlw	0
  9634  0019  0570               	andwf	___flge@ff1,w
  9635  001A  00F8               	movwf	??___flge
  9636  001B  3000               	movlw	0
  9637  001C  0571               	andwf	___flge@ff1+1,w
  9638  001D  00F9               	movwf	??___flge+1
  9639  001E  3080               	movlw	128
  9640  001F  0572               	andwf	___flge@ff1+2,w
  9641  0020  00FA               	movwf	??___flge+2
  9642  0021  307F               	movlw	127
  9643  0022  0573               	andwf	___flge@ff1+3,w
  9644  0023  00FB               	movwf	??___flge+3
  9645  0024  087B               	movf	??___flge+3,w
  9646  0025  047A               	iorwf	??___flge+2,w
  9647  0026  0479               	iorwf	??___flge+1,w
  9648  0027  0478               	iorwf	??___flge,w
  9649  0028  1D03               	skipz
  9650  0029  282B               	goto	u4501
  9651  002A  282C               	goto	u4500
  9652  002B                     u4501:
  9653  002B  2834               	goto	l712
  9654  002C                     u4500:
  9655  002C                     l3570:
  9656  002C  3000               	movlw	0
  9657  002D  00F3               	movwf	___flge@ff1+3
  9658  002E  3000               	movlw	0
  9659  002F  00F2               	movwf	___flge@ff1+2
  9660  0030  3000               	movlw	0
  9661  0031  00F1               	movwf	___flge@ff1+1
  9662  0032  3000               	movlw	0
  9663  0033  00F0               	movwf	___flge@ff1
  9664  0034                     l712:
  9665  0034  3000               	movlw	0
  9666  0035  0574               	andwf	___flge@ff2,w
  9667  0036  00F8               	movwf	??___flge
  9668  0037  3000               	movlw	0
  9669  0038  0575               	andwf	___flge@ff2+1,w
  9670  0039  00F9               	movwf	??___flge+1
  9671  003A  3080               	movlw	128
  9672  003B  0576               	andwf	___flge@ff2+2,w
  9673  003C  00FA               	movwf	??___flge+2
  9674  003D  307F               	movlw	127
  9675  003E  0577               	andwf	___flge@ff2+3,w
  9676  003F  00FB               	movwf	??___flge+3
  9677  0040  087B               	movf	??___flge+3,w
  9678  0041  047A               	iorwf	??___flge+2,w
  9679  0042  0479               	iorwf	??___flge+1,w
  9680  0043  0478               	iorwf	??___flge,w
  9681  0044  1D03               	skipz
  9682  0045  2847               	goto	u4511
  9683  0046  2848               	goto	u4510
  9684  0047                     u4511:
  9685  0047  2850               	goto	l3574
  9686  0048                     u4510:
  9687  0048                     l3572:
  9688  0048  3000               	movlw	0
  9689  0049  00F7               	movwf	___flge@ff2+3
  9690  004A  3000               	movlw	0
  9691  004B  00F6               	movwf	___flge@ff2+2
  9692  004C  3000               	movlw	0
  9693  004D  00F5               	movwf	___flge@ff2+1
  9694  004E  3000               	movlw	0
  9695  004F  00F4               	movwf	___flge@ff2
  9696  0050                     l3574:
  9697  0050  1FF3               	btfss	___flge@ff1+3,7
  9698  0051  2853               	goto	u4521
  9699  0052  2854               	goto	u4520
  9700  0053                     u4521:
  9701  0053  286C               	goto	l3578
  9702  0054                     u4520:
  9703  0054                     l3576:
  9704  0054  3000               	movlw	0
  9705  0055  00F8               	movwf	??___flge
  9706  0056  3000               	movlw	0
  9707  0057  00F9               	movwf	??___flge+1
  9708  0058  3000               	movlw	0
  9709  0059  00FA               	movwf	??___flge+2
  9710  005A  3080               	movlw	128
  9711  005B  00FB               	movwf	??___flge+3
  9712  005C  0870               	movf	___flge@ff1,w
  9713  005D  02F8               	subwf	??___flge,f
  9714  005E  0871               	movf	___flge@ff1+1,w
  9715  005F  3BF9               	subwfb	??___flge+1,f
  9716  0060  0872               	movf	___flge@ff1+2,w
  9717  0061  3BFA               	subwfb	??___flge+2,f
  9718  0062  0873               	movf	___flge@ff1+3,w
  9719  0063  3BFB               	subwfb	??___flge+3,f
  9720  0064  087B               	movf	??___flge+3,w
  9721  0065  00F3               	movwf	___flge@ff1+3
  9722  0066  087A               	movf	??___flge+2,w
  9723  0067  00F2               	movwf	___flge@ff1+2
  9724  0068  0879               	movf	??___flge+1,w
  9725  0069  00F1               	movwf	___flge@ff1+1
  9726  006A  0878               	movf	??___flge,w
  9727  006B  00F0               	movwf	___flge@ff1
  9728  006C                     l3578:
  9729  006C  1FF7               	btfss	___flge@ff2+3,7
  9730  006D  286F               	goto	u4531
  9731  006E  2870               	goto	u4530
  9732  006F                     u4531:
  9733  006F  2888               	goto	l715
  9734  0070                     u4530:
  9735  0070                     l3580:
  9736  0070  3000               	movlw	0
  9737  0071  00F8               	movwf	??___flge
  9738  0072  3000               	movlw	0
  9739  0073  00F9               	movwf	??___flge+1
  9740  0074  3000               	movlw	0
  9741  0075  00FA               	movwf	??___flge+2
  9742  0076  3080               	movlw	128
  9743  0077  00FB               	movwf	??___flge+3
  9744  0078  0874               	movf	___flge@ff2,w
  9745  0079  02F8               	subwf	??___flge,f
  9746  007A  0875               	movf	___flge@ff2+1,w
  9747  007B  3BF9               	subwfb	??___flge+1,f
  9748  007C  0876               	movf	___flge@ff2+2,w
  9749  007D  3BFA               	subwfb	??___flge+2,f
  9750  007E  0877               	movf	___flge@ff2+3,w
  9751  007F  3BFB               	subwfb	??___flge+3,f
  9752  0080  087B               	movf	??___flge+3,w
  9753  0081  00F7               	movwf	___flge@ff2+3
  9754  0082  087A               	movf	??___flge+2,w
  9755  0083  00F6               	movwf	___flge@ff2+2
  9756  0084  0879               	movf	??___flge+1,w
  9757  0085  00F5               	movwf	___flge@ff2+1
  9758  0086  0878               	movf	??___flge,w
  9759  0087  00F4               	movwf	___flge@ff2
  9760  0088                     l715:
  9761  0088  3080               	movlw	128
  9762  0089  06F3               	xorwf	___flge@ff1+3,f
  9763  008A  3080               	movlw	128
  9764  008B  06F7               	xorwf	___flge@ff2+3,f
  9765  008C  0877               	movf	___flge@ff2+3,w
  9766  008D  0273               	subwf	___flge@ff1+3,w
  9767  008E  1D03               	skipz
  9768  008F  289A               	goto	u4545
  9769  0090  0876               	movf	___flge@ff2+2,w
  9770  0091  0272               	subwf	___flge@ff1+2,w
  9771  0092  1D03               	skipz
  9772  0093  289A               	goto	u4545
  9773  0094  0875               	movf	___flge@ff2+1,w
  9774  0095  0271               	subwf	___flge@ff1+1,w
  9775  0096  1D03               	skipz
  9776  0097  289A               	goto	u4545
  9777  0098  0874               	movf	___flge@ff2,w
  9778  0099  0270               	subwf	___flge@ff1,w
  9779  009A                     u4545:
  9780  009A  1803               	skipnc
  9781  009B  289D               	goto	u4541
  9782  009C  289E               	goto	u4540
  9783  009D                     u4541:
  9784  009D  28A0               	goto	l3584
  9785  009E                     u4540:
  9786  009E                     l3582:
  9787  009E  1003               	clrc
  9788  009F  28A1               	goto	l716
  9789  00A0                     l3584:
  9790  00A0  1403               	setc
  9791  00A1                     l716:
  9792  00A1  0008               	return
  9793  00A2                     __end_of___flge:
  9794                           
  9795                           	psect	text20
  9796  1EA5                     __ptext20:	
  9797 ;; *************** function ___fleq *****************
  9798 ;; Defined at:
  9799 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
  9800 ;; Parameters:    Size  Location     Type
  9801 ;;  ff1             4    0[COMMON] unsigned char 
  9802 ;;  ff2             4    4[COMMON] unsigned char 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;		None
  9805 ;; Return value:  Size  Location     Type
  9806 ;;		None               void
  9807 ;; Registers used:
  9808 ;;		wreg, status,2, status,0
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9814 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9818 ;;Total ram usage:       12 bytes
  9819 ;; Hardware stack levels used: 1
  9820 ;; This function calls:
  9821 ;;		Nothing
  9822 ;; This function is called by:
  9823 ;;		_sprintf
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           
  9828                           ;psect for function ___fleq
  9829  1EA5                     ___fleq:
  9830  1EA5                     l3556:	
  9831                           ;incstack = 0
  9832                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9833                           
  9834  1EA5  3000               	movlw	0
  9835  1EA6  0570               	andwf	___fleq@ff1,w
  9836  1EA7  00F8               	movwf	??___fleq
  9837  1EA8  3000               	movlw	0
  9838  1EA9  0571               	andwf	___fleq@ff1+1,w
  9839  1EAA  00F9               	movwf	??___fleq+1
  9840  1EAB  3080               	movlw	128
  9841  1EAC  0572               	andwf	___fleq@ff1+2,w
  9842  1EAD  00FA               	movwf	??___fleq+2
  9843  1EAE  307F               	movlw	127
  9844  1EAF  0573               	andwf	___fleq@ff1+3,w
  9845  1EB0  00FB               	movwf	??___fleq+3
  9846  1EB1  087B               	movf	??___fleq+3,w
  9847  1EB2  047A               	iorwf	??___fleq+2,w
  9848  1EB3  0479               	iorwf	??___fleq+1,w
  9849  1EB4  0478               	iorwf	??___fleq,w
  9850  1EB5  1D03               	skipz
  9851  1EB6  2EB8               	goto	u4471
  9852  1EB7  2EB9               	goto	u4470
  9853  1EB8                     u4471:
  9854  1EB8  2EC1               	goto	l707
  9855  1EB9                     u4470:
  9856  1EB9                     l3558:
  9857  1EB9  3000               	movlw	0
  9858  1EBA  00F3               	movwf	___fleq@ff1+3
  9859  1EBB  3000               	movlw	0
  9860  1EBC  00F2               	movwf	___fleq@ff1+2
  9861  1EBD  3000               	movlw	0
  9862  1EBE  00F1               	movwf	___fleq@ff1+1
  9863  1EBF  3000               	movlw	0
  9864  1EC0  00F0               	movwf	___fleq@ff1
  9865  1EC1                     l707:
  9866  1EC1  3000               	movlw	0
  9867  1EC2  0574               	andwf	___fleq@ff2,w
  9868  1EC3  00F8               	movwf	??___fleq
  9869  1EC4  3000               	movlw	0
  9870  1EC5  0575               	andwf	___fleq@ff2+1,w
  9871  1EC6  00F9               	movwf	??___fleq+1
  9872  1EC7  3080               	movlw	128
  9873  1EC8  0576               	andwf	___fleq@ff2+2,w
  9874  1EC9  00FA               	movwf	??___fleq+2
  9875  1ECA  307F               	movlw	127
  9876  1ECB  0577               	andwf	___fleq@ff2+3,w
  9877  1ECC  00FB               	movwf	??___fleq+3
  9878  1ECD  087B               	movf	??___fleq+3,w
  9879  1ECE  047A               	iorwf	??___fleq+2,w
  9880  1ECF  0479               	iorwf	??___fleq+1,w
  9881  1ED0  0478               	iorwf	??___fleq,w
  9882  1ED1  1D03               	skipz
  9883  1ED2  2ED4               	goto	u4481
  9884  1ED3  2ED5               	goto	u4480
  9885  1ED4                     u4481:
  9886  1ED4  2EDD               	goto	l708
  9887  1ED5                     u4480:
  9888  1ED5                     l3560:
  9889  1ED5  3000               	movlw	0
  9890  1ED6  00F7               	movwf	___fleq@ff2+3
  9891  1ED7  3000               	movlw	0
  9892  1ED8  00F6               	movwf	___fleq@ff2+2
  9893  1ED9  3000               	movlw	0
  9894  1EDA  00F5               	movwf	___fleq@ff2+1
  9895  1EDB  3000               	movlw	0
  9896  1EDC  00F4               	movwf	___fleq@ff2
  9897  1EDD                     l708:
  9898  1EDD  0877               	movf	___fleq@ff2+3,w
  9899  1EDE  0673               	xorwf	___fleq@ff1+3,w
  9900  1EDF  1D03               	skipz
  9901  1EE0  2EEB               	goto	u4495
  9902  1EE1  0876               	movf	___fleq@ff2+2,w
  9903  1EE2  0672               	xorwf	___fleq@ff1+2,w
  9904  1EE3  1D03               	skipz
  9905  1EE4  2EEB               	goto	u4495
  9906  1EE5  0875               	movf	___fleq@ff2+1,w
  9907  1EE6  0671               	xorwf	___fleq@ff1+1,w
  9908  1EE7  1D03               	skipz
  9909  1EE8  2EEB               	goto	u4495
  9910  1EE9  0874               	movf	___fleq@ff2,w
  9911  1EEA  0670               	xorwf	___fleq@ff1,w
  9912  1EEB                     u4495:
  9913  1EEB  1903               	skipnz
  9914  1EEC  2EEE               	goto	u4491
  9915  1EED  2EEF               	goto	u4490
  9916  1EEE                     u4491:
  9917  1EEE  2EF1               	goto	l3564
  9918  1EEF                     u4490:
  9919  1EEF                     l3562:
  9920  1EEF  1003               	clrc
  9921  1EF0  2EF2               	goto	l709
  9922  1EF1                     l3564:
  9923  1EF1  1403               	setc
  9924  1EF2                     l709:
  9925  1EF2  0008               	return
  9926  1EF3                     __end_of___fleq:
  9927                           
  9928                           	psect	text21
  9929  1E57                     __ptext21:	
  9930 ;; *************** function _scale_convert_gram *****************
  9931 ;; Defined at:
  9932 ;;		line 66 in file "loadcell.c"
  9933 ;; Parameters:    Size  Location     Type
  9934 ;;  count           4   13[BANK0 ] unsigned long 
  9935 ;; Auto vars:     Size  Location     Type
  9936 ;;  temp            4   21[BANK0 ] float 
  9937 ;; Return value:  Size  Location     Type
  9938 ;;                  4   13[BANK0 ] float 
  9939 ;; Registers used:
  9940 ;;		wreg, status,2, status,0, pclath, cstack
  9941 ;; Tracked objects:
  9942 ;;		On entry : 0/0
  9943 ;;		On exit  : 0/0
  9944 ;;		Unchanged: 0/0
  9945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9946 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9949 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9950 ;;Total ram usage:       12 bytes
  9951 ;; Hardware stack levels used: 1
  9952 ;; Hardware stack levels required when called: 1
  9953 ;; This function calls:
  9954 ;;		___fldiv
  9955 ;;		___xxtofl
  9956 ;; This function is called by:
  9957 ;;		_main
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           
  9962                           ;psect for function _scale_convert_gram
  9963  1E57                     _scale_convert_gram:
  9964  1E57                     l4312:	
  9965                           ;incstack = 0
  9966                           ; Regs used in _scale_convert_gram: [wreg+status,2+status,0+pclath+cstack]
  9967                           
  9968                           
  9969                           ;loadcell.c: 68: float temp = count - weight_zero;
  9970  1E57  0021               	movlb	1	; select bank1
  9971  1E58  084C               	movf	_weight_zero^(0+128),w
  9972  1E59  0020               	movlb	0	; select bank0
  9973  1E5A  022D               	subwf	scale_convert_gram@count,w
  9974  1E5B  00B1               	movwf	??_scale_convert_gram
  9975  1E5C  0021               	movlb	1	; select bank1
  9976  1E5D  084D               	movf	(_weight_zero+1)^(0+128),w
  9977  1E5E  0020               	movlb	0	; select bank0
  9978  1E5F  3B2E               	subwfb	scale_convert_gram@count+1,w
  9979  1E60  00B2               	movwf	??_scale_convert_gram+1
  9980  1E61  0021               	movlb	1	; select bank1
  9981  1E62  084E               	movf	(_weight_zero+2)^(0+128),w
  9982  1E63  0020               	movlb	0	; select bank0
  9983  1E64  3B2F               	subwfb	scale_convert_gram@count+2,w
  9984  1E65  00B3               	movwf	??_scale_convert_gram+2
  9985  1E66  0021               	movlb	1	; select bank1
  9986  1E67  084F               	movf	(_weight_zero+3)^(0+128),w
  9987  1E68  0020               	movlb	0	; select bank0
  9988  1E69  3B30               	subwfb	scale_convert_gram@count+3,w
  9989  1E6A  00B4               	movwf	??_scale_convert_gram+3
  9990  1E6B  0834               	movf	??_scale_convert_gram+3,w
  9991  1E6C  00F3               	movwf	___xxtofl@val+3
  9992  1E6D  0833               	movf	??_scale_convert_gram+2,w
  9993  1E6E  00F2               	movwf	___xxtofl@val+2
  9994  1E6F  0832               	movf	??_scale_convert_gram+1,w
  9995  1E70  00F1               	movwf	___xxtofl@val+1
  9996  1E71  0831               	movf	??_scale_convert_gram,w
  9997  1E72  00F0               	movwf	___xxtofl@val
  9998  1E73  3000               	movlw	0
  9999  1E74  3190  20B2  319E   	fcall	___xxtofl
 10000  1E77  0873               	movf	?___xxtofl+3,w
 10001  1E78  0020               	movlb	0	; select bank0
 10002  1E79  00B8               	movwf	scale_convert_gram@temp+3
 10003  1E7A  0872               	movf	?___xxtofl+2,w
 10004  1E7B  00B7               	movwf	scale_convert_gram@temp+2
 10005  1E7C  0871               	movf	?___xxtofl+1,w
 10006  1E7D  00B6               	movwf	scale_convert_gram@temp+1
 10007  1E7E  0870               	movf	?___xxtofl,w
 10008  1E7F  00B5               	movwf	scale_convert_gram@temp
 10009                           
 10010                           ;loadcell.c: 69: temp = temp / 493;
 10011  1E80  3043               	movlw	67
 10012  1E81  00F3               	movwf	___fldiv@a+3
 10013  1E82  30F6               	movlw	246
 10014  1E83  00F2               	movwf	___fldiv@a+2
 10015  1E84  3080               	movlw	128
 10016  1E85  00F1               	movwf	___fldiv@a+1
 10017  1E86  3000               	movlw	0
 10018  1E87  00F0               	movwf	___fldiv@a
 10019  1E88  0838               	movf	scale_convert_gram@temp+3,w
 10020  1E89  00F7               	movwf	___fldiv@b+3
 10021  1E8A  0837               	movf	scale_convert_gram@temp+2,w
 10022  1E8B  00F6               	movwf	___fldiv@b+2
 10023  1E8C  0836               	movf	scale_convert_gram@temp+1,w
 10024  1E8D  00F5               	movwf	___fldiv@b+1
 10025  1E8E  0835               	movf	scale_convert_gram@temp,w
 10026  1E8F  00F4               	movwf	___fldiv@b
 10027  1E90  3196  264C  319E   	fcall	___fldiv
 10028  1E93  0873               	movf	?___fldiv+3,w
 10029  1E94  0020               	movlb	0	; select bank0
 10030  1E95  00B8               	movwf	scale_convert_gram@temp+3
 10031  1E96  0872               	movf	?___fldiv+2,w
 10032  1E97  00B7               	movwf	scale_convert_gram@temp+2
 10033  1E98  0871               	movf	?___fldiv+1,w
 10034  1E99  00B6               	movwf	scale_convert_gram@temp+1
 10035  1E9A  0870               	movf	?___fldiv,w
 10036  1E9B  00B5               	movwf	scale_convert_gram@temp
 10037  1E9C                     l4314:
 10038                           
 10039                           ;loadcell.c: 70: return temp;
 10040  1E9C  0838               	movf	scale_convert_gram@temp+3,w
 10041  1E9D  00B0               	movwf	?_scale_convert_gram+3
 10042  1E9E  0837               	movf	scale_convert_gram@temp+2,w
 10043  1E9F  00AF               	movwf	?_scale_convert_gram+2
 10044  1EA0  0836               	movf	scale_convert_gram@temp+1,w
 10045  1EA1  00AE               	movwf	?_scale_convert_gram+1
 10046  1EA2  0835               	movf	scale_convert_gram@temp,w
 10047  1EA3  00AD               	movwf	?_scale_convert_gram
 10048  1EA4                     l145:
 10049  1EA4  0008               	return
 10050  1EA5                     __end_of_scale_convert_gram:
 10051                           
 10052                           	psect	text22
 10053  10B2                     __ptext22:	
 10054 ;; *************** function ___xxtofl *****************
 10055 ;; Defined at:
 10056 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
 10057 ;; Parameters:    Size  Location     Type
 10058 ;;  sign            1    wreg     unsigned char 
 10059 ;;  val             4    0[COMMON] long 
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;  sign            1    8[COMMON] unsigned char 
 10062 ;;  arg             4   10[COMMON] unsigned long 
 10063 ;;  exp             1    9[COMMON] unsigned char 
 10064 ;; Return value:  Size  Location     Type
 10065 ;;                  4    0[COMMON] unsigned char 
 10066 ;; Registers used:
 10067 ;;		wreg, status,2, status,0
 10068 ;; Tracked objects:
 10069 ;;		On entry : 0/0
 10070 ;;		On exit  : 0/0
 10071 ;;		Unchanged: 0/0
 10072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10074 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10075 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10076 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10077 ;;Total ram usage:       14 bytes
 10078 ;; Hardware stack levels used: 1
 10079 ;; This function calls:
 10080 ;;		Nothing
 10081 ;; This function is called by:
 10082 ;;		_scale_convert_gram
 10083 ;;		_sprintf
 10084 ;; This function uses a non-reentrant model
 10085 ;;
 10086                           
 10087                           
 10088                           ;psect for function ___xxtofl
 10089  10B2                     ___xxtofl:
 10090                           
 10091                           ;incstack = 0
 10092                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10093                           ;___xxtofl@sign stored from wreg
 10094  10B2  00F8               	movwf	___xxtofl@sign
 10095  10B3                     l3798:
 10096  10B3  0878               	movf	___xxtofl@sign,w
 10097  10B4  1903               	btfsc	3,2
 10098  10B5  28B7               	goto	u5011
 10099  10B6  28B8               	goto	u5010
 10100  10B7                     u5011:
 10101  10B7  28CC               	goto	l3804
 10102  10B8                     u5010:
 10103  10B8                     l3800:
 10104  10B8  1FF3               	btfss	___xxtofl@val+3,7
 10105  10B9  28BB               	goto	u5021
 10106  10BA  28BC               	goto	u5020
 10107  10BB                     u5021:
 10108  10BB  28CC               	goto	l3804
 10109  10BC                     u5020:
 10110  10BC                     l3802:
 10111  10BC  0970               	comf	___xxtofl@val,w
 10112  10BD  00FA               	movwf	___xxtofl@arg
 10113  10BE  0971               	comf	___xxtofl@val+1,w
 10114  10BF  00FB               	movwf	___xxtofl@arg+1
 10115  10C0  0972               	comf	___xxtofl@val+2,w
 10116  10C1  00FC               	movwf	___xxtofl@arg+2
 10117  10C2  0973               	comf	___xxtofl@val+3,w
 10118  10C3  00FD               	movwf	___xxtofl@arg+3
 10119  10C4  0AFA               	incf	___xxtofl@arg,f
 10120  10C5  1903               	skipnz
 10121  10C6  0AFB               	incf	___xxtofl@arg+1,f
 10122  10C7  1903               	skipnz
 10123  10C8  0AFC               	incf	___xxtofl@arg+2,f
 10124  10C9  1903               	skipnz
 10125  10CA  0AFD               	incf	___xxtofl@arg+3,f
 10126  10CB  28D4               	goto	l988
 10127  10CC                     l3804:
 10128  10CC  0873               	movf	___xxtofl@val+3,w
 10129  10CD  00FD               	movwf	___xxtofl@arg+3
 10130  10CE  0872               	movf	___xxtofl@val+2,w
 10131  10CF  00FC               	movwf	___xxtofl@arg+2
 10132  10D0  0871               	movf	___xxtofl@val+1,w
 10133  10D1  00FB               	movwf	___xxtofl@arg+1
 10134  10D2  0870               	movf	___xxtofl@val,w
 10135  10D3  00FA               	movwf	___xxtofl@arg
 10136  10D4                     l988:
 10137  10D4  0873               	movf	___xxtofl@val+3,w
 10138  10D5  0472               	iorwf	___xxtofl@val+2,w
 10139  10D6  0471               	iorwf	___xxtofl@val+1,w
 10140  10D7  0470               	iorwf	___xxtofl@val,w
 10141  10D8  1D03               	skipz
 10142  10D9  28DB               	goto	u5031
 10143  10DA  28DC               	goto	u5030
 10144  10DB                     u5031:
 10145  10DB  28E5               	goto	l3810
 10146  10DC                     u5030:
 10147  10DC                     l3806:
 10148  10DC  3000               	movlw	0
 10149  10DD  00F3               	movwf	?___xxtofl+3
 10150  10DE  3000               	movlw	0
 10151  10DF  00F2               	movwf	?___xxtofl+2
 10152  10E0  3000               	movlw	0
 10153  10E1  00F1               	movwf	?___xxtofl+1
 10154  10E2  3000               	movlw	0
 10155  10E3  00F0               	movwf	?___xxtofl
 10156  10E4  295D               	goto	l990
 10157  10E5                     l3810:
 10158  10E5  3096               	movlw	150
 10159  10E6  00F4               	movwf	??___xxtofl
 10160  10E7  0874               	movf	??___xxtofl,w
 10161  10E8  00F9               	movwf	___xxtofl@exp
 10162  10E9  28F5               	goto	l3814
 10163  10EA                     l3812:
 10164  10EA  3001               	movlw	1
 10165  10EB  00F4               	movwf	??___xxtofl
 10166  10EC  0874               	movf	??___xxtofl,w
 10167  10ED  07F9               	addwf	___xxtofl@exp,f
 10168  10EE  3001               	movlw	1
 10169  10EF                     u5045:
 10170  10EF  36FD               	lsrf	___xxtofl@arg+3,f
 10171  10F0  0CFC               	rrf	___xxtofl@arg+2,f
 10172  10F1  0CFB               	rrf	___xxtofl@arg+1,f
 10173  10F2  0CFA               	rrf	___xxtofl@arg,f
 10174  10F3  0B89               	decfsz	9,f
 10175  10F4  28EF               	goto	u5045
 10176  10F5                     l3814:
 10177  10F5  30FE               	movlw	254
 10178  10F6  057D               	andwf	___xxtofl@arg+3,w
 10179  10F7  1D03               	btfss	3,2
 10180  10F8  28FA               	goto	u5051
 10181  10F9  28FB               	goto	u5050
 10182  10FA                     u5051:
 10183  10FA  28EA               	goto	l3812
 10184  10FB                     u5050:
 10185  10FB  290F               	goto	l994
 10186  10FC                     l3816:
 10187  10FC  3001               	movlw	1
 10188  10FD  00F4               	movwf	??___xxtofl
 10189  10FE  0874               	movf	??___xxtofl,w
 10190  10FF  07F9               	addwf	___xxtofl@exp,f
 10191  1100                     l3818:
 10192  1100  3001               	movlw	1
 10193  1101  07FA               	addwf	___xxtofl@arg,f
 10194  1102  3000               	movlw	0
 10195  1103  3DFB               	addwfc	___xxtofl@arg+1,f
 10196  1104  3000               	movlw	0
 10197  1105  3DFC               	addwfc	___xxtofl@arg+2,f
 10198  1106  3000               	movlw	0
 10199  1107  3DFD               	addwfc	___xxtofl@arg+3,f
 10200  1108                     l3820:
 10201  1108  3001               	movlw	1
 10202  1109                     u5065:
 10203  1109  36FD               	lsrf	___xxtofl@arg+3,f
 10204  110A  0CFC               	rrf	___xxtofl@arg+2,f
 10205  110B  0CFB               	rrf	___xxtofl@arg+1,f
 10206  110C  0CFA               	rrf	___xxtofl@arg,f
 10207  110D  0B89               	decfsz	9,f
 10208  110E  2909               	goto	u5065
 10209  110F                     l994:
 10210  110F  30FF               	movlw	255
 10211  1110  057D               	andwf	___xxtofl@arg+3,w
 10212  1111  1D03               	btfss	3,2
 10213  1112  2914               	goto	u5071
 10214  1113  2915               	goto	u5070
 10215  1114                     u5071:
 10216  1114  28FC               	goto	l3816
 10217  1115                     u5070:
 10218  1115  291F               	goto	l3824
 10219  1116                     l3822:
 10220  1116  3001               	movlw	1
 10221  1117  02F9               	subwf	___xxtofl@exp,f
 10222  1118  3001               	movlw	1
 10223  1119                     u5085:
 10224  1119  35FA               	lslf	___xxtofl@arg,f
 10225  111A  0DFB               	rlf	___xxtofl@arg+1,f
 10226  111B  0DFC               	rlf	___xxtofl@arg+2,f
 10227  111C  0DFD               	rlf	___xxtofl@arg+3,f
 10228  111D  0B89               	decfsz	9,f
 10229  111E  2919               	goto	u5085
 10230  111F                     l3824:
 10231  111F  1BFC               	btfsc	___xxtofl@arg+2,7
 10232  1120  2922               	goto	u5091
 10233  1121  2923               	goto	u5090
 10234  1122                     u5091:
 10235  1122  2929               	goto	l1001
 10236  1123                     u5090:
 10237  1123                     l3826:
 10238  1123  3002               	movlw	2
 10239  1124  0279               	subwf	___xxtofl@exp,w
 10240  1125  1803               	skipnc
 10241  1126  2928               	goto	u5101
 10242  1127  2929               	goto	u5100
 10243  1128                     u5101:
 10244  1128  2916               	goto	l3822
 10245  1129                     u5100:
 10246  1129                     l1001:
 10247  1129  1879               	btfsc	___xxtofl@exp,0
 10248  112A  292C               	goto	u5111
 10249  112B  292D               	goto	u5110
 10250  112C                     u5111:
 10251  112C  2935               	goto	l1002
 10252  112D                     u5110:
 10253  112D                     l3828:
 10254  112D  30FF               	movlw	255
 10255  112E  05FA               	andwf	___xxtofl@arg,f
 10256  112F  30FF               	movlw	255
 10257  1130  05FB               	andwf	___xxtofl@arg+1,f
 10258  1131  307F               	movlw	127
 10259  1132  05FC               	andwf	___xxtofl@arg+2,f
 10260  1133  30FF               	movlw	255
 10261  1134  05FD               	andwf	___xxtofl@arg+3,f
 10262  1135                     l1002:
 10263  1135  1003               	clrc
 10264  1136  0CF9               	rrf	___xxtofl@exp,f
 10265  1137                     l3830:
 10266  1137  0879               	movf	___xxtofl@exp,w
 10267  1138  00F4               	movwf	??___xxtofl
 10268  1139  01F5               	clrf	??___xxtofl+1
 10269  113A  01F6               	clrf	??___xxtofl+2
 10270  113B  01F7               	clrf	??___xxtofl+3
 10271  113C  3018               	movlw	24
 10272  113D                     u5125:
 10273  113D  35F4               	lslf	??___xxtofl,f
 10274  113E  0DF5               	rlf	??___xxtofl+1,f
 10275  113F  0DF6               	rlf	??___xxtofl+2,f
 10276  1140  0DF7               	rlf	??___xxtofl+3,f
 10277  1141                     u5120:
 10278  1141  0B89               	decfsz	9,f
 10279  1142  293D               	goto	u5125
 10280  1143  0874               	movf	??___xxtofl,w
 10281  1144  04FA               	iorwf	___xxtofl@arg,f
 10282  1145  0875               	movf	??___xxtofl+1,w
 10283  1146  04FB               	iorwf	___xxtofl@arg+1,f
 10284  1147  0876               	movf	??___xxtofl+2,w
 10285  1148  04FC               	iorwf	___xxtofl@arg+2,f
 10286  1149  0877               	movf	??___xxtofl+3,w
 10287  114A  04FD               	iorwf	___xxtofl@arg+3,f
 10288  114B                     l3832:
 10289  114B  0878               	movf	___xxtofl@sign,w
 10290  114C  1903               	btfsc	3,2
 10291  114D  294F               	goto	u5131
 10292  114E  2950               	goto	u5130
 10293  114F                     u5131:
 10294  114F  2955               	goto	l3838
 10295  1150                     u5130:
 10296  1150                     l3834:
 10297  1150  1FF3               	btfss	___xxtofl@val+3,7
 10298  1151  2953               	goto	u5141
 10299  1152  2954               	goto	u5140
 10300  1153                     u5141:
 10301  1153  2955               	goto	l3838
 10302  1154                     u5140:
 10303  1154                     l3836:
 10304  1154  17FD               	bsf	___xxtofl@arg+3,7
 10305  1155                     l3838:
 10306  1155  087D               	movf	___xxtofl@arg+3,w
 10307  1156  00F3               	movwf	?___xxtofl+3
 10308  1157  087C               	movf	___xxtofl@arg+2,w
 10309  1158  00F2               	movwf	?___xxtofl+2
 10310  1159  087B               	movf	___xxtofl@arg+1,w
 10311  115A  00F1               	movwf	?___xxtofl+1
 10312  115B  087A               	movf	___xxtofl@arg,w
 10313  115C  00F0               	movwf	?___xxtofl
 10314  115D                     l990:
 10315  115D  0008               	return
 10316  115E                     __end_of___xxtofl:
 10317                           
 10318                           	psect	text23
 10319  164C                     __ptext23:	
 10320 ;; *************** function ___fldiv *****************
 10321 ;; Defined at:
 10322 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;  a               4    0[COMMON] unsigned char 
 10325 ;;  b               4    4[COMMON] unsigned char 
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;  grs             4    7[BANK0 ] unsigned long 
 10328 ;;  rem             4    0[BANK0 ] unsigned long 
 10329 ;;  new_exp         2    5[BANK0 ] int 
 10330 ;;  aexp            1   12[BANK0 ] unsigned char 
 10331 ;;  bexp            1   11[BANK0 ] unsigned char 
 10332 ;;  sign            1    4[BANK0 ] unsigned char 
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  4    0[COMMON] unsigned char 
 10335 ;; Registers used:
 10336 ;;		wreg, status,2, status,0
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10342 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10345 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10346 ;;Total ram usage:       26 bytes
 10347 ;; Hardware stack levels used: 1
 10348 ;; This function calls:
 10349 ;;		Nothing
 10350 ;; This function is called by:
 10351 ;;		_scale_convert_gram
 10352 ;; This function uses a non-reentrant model
 10353 ;;
 10354                           
 10355                           
 10356                           ;psect for function ___fldiv
 10357  164C                     ___fldiv:
 10358  164C                     l3658:	
 10359                           ;incstack = 0
 10360                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10361                           
 10362  164C  0877               	movf	___fldiv@b+3,w
 10363  164D  3980               	andlw	128
 10364  164E  00F8               	movwf	??___fldiv
 10365  164F  0878               	movf	??___fldiv,w
 10366  1650  0020               	movlb	0	; select bank0
 10367  1651  00A4               	movwf	___fldiv@sign
 10368  1652                     l3660:
 10369  1652  3577               	lslf	___fldiv@b+3,w
 10370  1653  00F8               	movwf	??___fldiv
 10371  1654  0878               	movf	??___fldiv,w
 10372  1655  00AB               	movwf	___fldiv@bexp
 10373  1656                     l3662:
 10374  1656  1FF6               	btfss	___fldiv@b+2,7
 10375  1657  2E59               	goto	u4721
 10376  1658  2E5A               	goto	u4720
 10377  1659                     u4721:
 10378  1659  2E5B               	goto	l3666
 10379  165A                     u4720:
 10380  165A                     l3664:
 10381  165A  142B               	bsf	___fldiv@bexp,0
 10382  165B                     l3666:
 10383  165B  082B               	movf	___fldiv@bexp,w
 10384  165C  1903               	btfsc	3,2
 10385  165D  2E5F               	goto	u4731
 10386  165E  2E60               	goto	u4730
 10387  165F                     u4731:
 10388  165F  2E70               	goto	l3676
 10389  1660                     u4730:
 10390  1660                     l3668:
 10391  1660  0A2B               	incf	___fldiv@bexp,w
 10392  1661  1D03               	btfss	3,2
 10393  1662  2E64               	goto	u4741
 10394  1663  2E65               	goto	u4740
 10395  1664                     u4741:
 10396  1664  2E6D               	goto	l3672
 10397  1665                     u4740:
 10398  1665                     l3670:
 10399  1665  3000               	movlw	0
 10400  1666  00F7               	movwf	___fldiv@b+3
 10401  1667  3000               	movlw	0
 10402  1668  00F6               	movwf	___fldiv@b+2
 10403  1669  3000               	movlw	0
 10404  166A  00F5               	movwf	___fldiv@b+1
 10405  166B  3000               	movlw	0
 10406  166C  00F4               	movwf	___fldiv@b
 10407  166D                     l3672:
 10408  166D  17F6               	bsf	___fldiv@b+2,7
 10409  166E                     l3674:
 10410  166E  01F7               	clrf	___fldiv@b+3
 10411  166F  2E78               	goto	l3678
 10412  1670                     l3676:
 10413  1670  3000               	movlw	0
 10414  1671  00F7               	movwf	___fldiv@b+3
 10415  1672  3000               	movlw	0
 10416  1673  00F6               	movwf	___fldiv@b+2
 10417  1674  3000               	movlw	0
 10418  1675  00F5               	movwf	___fldiv@b+1
 10419  1676  3000               	movlw	0
 10420  1677  00F4               	movwf	___fldiv@b
 10421  1678                     l3678:
 10422  1678  0873               	movf	___fldiv@a+3,w
 10423  1679  3980               	andlw	128
 10424  167A  00F8               	movwf	??___fldiv
 10425  167B  0878               	movf	??___fldiv,w
 10426  167C  06A4               	xorwf	___fldiv@sign,f
 10427  167D                     l3680:
 10428  167D  3573               	lslf	___fldiv@a+3,w
 10429  167E  00F8               	movwf	??___fldiv
 10430  167F  0878               	movf	??___fldiv,w
 10431  1680  00AC               	movwf	___fldiv@aexp
 10432  1681                     l3682:
 10433  1681  1FF2               	btfss	___fldiv@a+2,7
 10434  1682  2E84               	goto	u4751
 10435  1683  2E85               	goto	u4750
 10436  1684                     u4751:
 10437  1684  2E86               	goto	l3686
 10438  1685                     u4750:
 10439  1685                     l3684:
 10440  1685  142C               	bsf	___fldiv@aexp,0
 10441  1686                     l3686:
 10442  1686  082C               	movf	___fldiv@aexp,w
 10443  1687  1903               	btfsc	3,2
 10444  1688  2E8A               	goto	u4761
 10445  1689  2E8B               	goto	u4760
 10446  168A                     u4761:
 10447  168A  2E9B               	goto	l3696
 10448  168B                     u4760:
 10449  168B                     l3688:
 10450  168B  0A2C               	incf	___fldiv@aexp,w
 10451  168C  1D03               	btfss	3,2
 10452  168D  2E8F               	goto	u4771
 10453  168E  2E90               	goto	u4770
 10454  168F                     u4771:
 10455  168F  2E98               	goto	l3692
 10456  1690                     u4770:
 10457  1690                     l3690:
 10458  1690  3000               	movlw	0
 10459  1691  00F3               	movwf	___fldiv@a+3
 10460  1692  3000               	movlw	0
 10461  1693  00F2               	movwf	___fldiv@a+2
 10462  1694  3000               	movlw	0
 10463  1695  00F1               	movwf	___fldiv@a+1
 10464  1696  3000               	movlw	0
 10465  1697  00F0               	movwf	___fldiv@a
 10466  1698                     l3692:
 10467  1698  17F2               	bsf	___fldiv@a+2,7
 10468  1699                     l3694:
 10469  1699  01F3               	clrf	___fldiv@a+3
 10470  169A  2EA3               	goto	l904
 10471  169B                     l3696:
 10472  169B  3000               	movlw	0
 10473  169C  00F3               	movwf	___fldiv@a+3
 10474  169D  3000               	movlw	0
 10475  169E  00F2               	movwf	___fldiv@a+2
 10476  169F  3000               	movlw	0
 10477  16A0  00F1               	movwf	___fldiv@a+1
 10478  16A1  3000               	movlw	0
 10479  16A2  00F0               	movwf	___fldiv@a
 10480  16A3                     l904:
 10481  16A3  0873               	movf	___fldiv@a+3,w
 10482  16A4  0472               	iorwf	___fldiv@a+2,w
 10483  16A5  0471               	iorwf	___fldiv@a+1,w
 10484  16A6  0470               	iorwf	___fldiv@a,w
 10485  16A7  1D03               	skipz
 10486  16A8  2EAA               	goto	u4781
 10487  16A9  2EAB               	goto	u4780
 10488  16AA                     u4781:
 10489  16AA  2EC4               	goto	l3706
 10490  16AB                     u4780:
 10491  16AB                     l3698:
 10492  16AB  3000               	movlw	0
 10493  16AC  00F7               	movwf	___fldiv@b+3
 10494  16AD  3000               	movlw	0
 10495  16AE  00F6               	movwf	___fldiv@b+2
 10496  16AF  3000               	movlw	0
 10497  16B0  00F5               	movwf	___fldiv@b+1
 10498  16B1  3000               	movlw	0
 10499  16B2  00F4               	movwf	___fldiv@b
 10500  16B3  3080               	movlw	128
 10501  16B4  04F6               	iorwf	___fldiv@b+2,f
 10502  16B5  307F               	movlw	127
 10503  16B6  04F7               	iorwf	___fldiv@b+3,f
 10504  16B7                     l3700:
 10505  16B7  0824               	movf	___fldiv@sign,w
 10506  16B8  00F8               	movwf	??___fldiv
 10507  16B9  0878               	movf	??___fldiv,w
 10508  16BA  04F7               	iorwf	___fldiv@b+3,f
 10509  16BB                     l3702:
 10510  16BB  0877               	movf	___fldiv@b+3,w
 10511  16BC  00F3               	movwf	?___fldiv+3
 10512  16BD  0876               	movf	___fldiv@b+2,w
 10513  16BE  00F2               	movwf	?___fldiv+2
 10514  16BF  0875               	movf	___fldiv@b+1,w
 10515  16C0  00F1               	movwf	?___fldiv+1
 10516  16C1  0874               	movf	___fldiv@b,w
 10517  16C2  00F0               	movwf	?___fldiv
 10518  16C3  2FFF               	goto	l906
 10519  16C4                     l3706:
 10520  16C4  082B               	movf	___fldiv@bexp,w
 10521  16C5  1D03               	btfss	3,2
 10522  16C6  2EC8               	goto	u4791
 10523  16C7  2EC9               	goto	u4790
 10524  16C8                     u4791:
 10525  16C8  2ED2               	goto	l3712
 10526  16C9                     u4790:
 10527  16C9                     l3708:
 10528  16C9  3000               	movlw	0
 10529  16CA  00F3               	movwf	?___fldiv+3
 10530  16CB  3000               	movlw	0
 10531  16CC  00F2               	movwf	?___fldiv+2
 10532  16CD  3000               	movlw	0
 10533  16CE  00F1               	movwf	?___fldiv+1
 10534  16CF  3000               	movlw	0
 10535  16D0  00F0               	movwf	?___fldiv
 10536  16D1  2FFF               	goto	l906
 10537  16D2                     l3712:
 10538  16D2  082B               	movf	___fldiv@bexp,w
 10539  16D3  00F8               	movwf	??___fldiv
 10540  16D4  01F9               	clrf	??___fldiv+1
 10541  16D5  0879               	movf	??___fldiv+1,w
 10542  16D6  00FB               	movwf	??___fldiv+3
 10543  16D7  082C               	movf	___fldiv@aexp,w
 10544  16D8  0278               	subwf	??___fldiv,w
 10545  16D9  00FA               	movwf	??___fldiv+2
 10546  16DA  1C03               	skipc
 10547  16DB  03FB               	decf	??___fldiv+3,f
 10548  16DC  087A               	movf	??___fldiv+2,w
 10549  16DD  3E7F               	addlw	127
 10550  16DE  00A5               	movwf	___fldiv@new_exp
 10551  16DF  3000               	movlw	0
 10552  16E0  3D7B               	addwfc	??___fldiv+3,w
 10553  16E1  00A6               	movwf	___fldiv@new_exp+1
 10554  16E2                     l3714:
 10555  16E2  0877               	movf	___fldiv@b+3,w
 10556  16E3  00A3               	movwf	___fldiv@rem+3
 10557  16E4  0876               	movf	___fldiv@b+2,w
 10558  16E5  00A2               	movwf	___fldiv@rem+2
 10559  16E6  0875               	movf	___fldiv@b+1,w
 10560  16E7  00A1               	movwf	___fldiv@rem+1
 10561  16E8  0874               	movf	___fldiv@b,w
 10562  16E9  00A0               	movwf	___fldiv@rem
 10563  16EA                     l3716:
 10564  16EA  3000               	movlw	0
 10565  16EB  00F7               	movwf	___fldiv@b+3
 10566  16EC  3000               	movlw	0
 10567  16ED  00F6               	movwf	___fldiv@b+2
 10568  16EE  3000               	movlw	0
 10569  16EF  00F5               	movwf	___fldiv@b+1
 10570  16F0  3000               	movlw	0
 10571  16F1  00F4               	movwf	___fldiv@b
 10572  16F2                     l3718:
 10573  16F2  3000               	movlw	0
 10574  16F3  00AA               	movwf	___fldiv@grs+3
 10575  16F4  3000               	movlw	0
 10576  16F5  00A9               	movwf	___fldiv@grs+2
 10577  16F6  3000               	movlw	0
 10578  16F7  00A8               	movwf	___fldiv@grs+1
 10579  16F8  3000               	movlw	0
 10580  16F9  00A7               	movwf	___fldiv@grs
 10581  16FA                     l3720:
 10582  16FA  01AC               	clrf	___fldiv@aexp
 10583  16FB  2F3A               	goto	l3740
 10584  16FC                     l3722:
 10585  16FC  082C               	movf	___fldiv@aexp,w
 10586  16FD  1903               	btfsc	3,2
 10587  16FE  2F00               	goto	u4801
 10588  16FF  2F01               	goto	u4800
 10589  1700                     u4801:
 10590  1700  2F1B               	goto	l3732
 10591  1701                     u4800:
 10592  1701                     l3724:
 10593  1701  3001               	movlw	1
 10594  1702                     u4815:
 10595  1702  35A0               	lslf	___fldiv@rem,f
 10596  1703  0DA1               	rlf	___fldiv@rem+1,f
 10597  1704  0DA2               	rlf	___fldiv@rem+2,f
 10598  1705  0DA3               	rlf	___fldiv@rem+3,f
 10599  1706  0B89               	decfsz	9,f
 10600  1707  2F02               	goto	u4815
 10601  1708  3001               	movlw	1
 10602  1709                     u4825:
 10603  1709  35F4               	lslf	___fldiv@b,f
 10604  170A  0DF5               	rlf	___fldiv@b+1,f
 10605  170B  0DF6               	rlf	___fldiv@b+2,f
 10606  170C  0DF7               	rlf	___fldiv@b+3,f
 10607  170D  0B89               	decfsz	9,f
 10608  170E  2F09               	goto	u4825
 10609  170F                     l3726:
 10610  170F  1FAA               	btfss	___fldiv@grs+3,7
 10611  1710  2F12               	goto	u4831
 10612  1711  2F13               	goto	u4830
 10613  1712                     u4831:
 10614  1712  2F14               	goto	l3730
 10615  1713                     u4830:
 10616  1713                     l3728:
 10617  1713  1474               	bsf	___fldiv@b,0
 10618  1714                     l3730:
 10619  1714  3001               	movlw	1
 10620  1715                     u4845:
 10621  1715  35A7               	lslf	___fldiv@grs,f
 10622  1716  0DA8               	rlf	___fldiv@grs+1,f
 10623  1717  0DA9               	rlf	___fldiv@grs+2,f
 10624  1718  0DAA               	rlf	___fldiv@grs+3,f
 10625  1719  0B89               	decfsz	9,f
 10626  171A  2F15               	goto	u4845
 10627  171B                     l3732:
 10628  171B  0873               	movf	___fldiv@a+3,w
 10629  171C  0223               	subwf	___fldiv@rem+3,w
 10630  171D  1D03               	skipz
 10631  171E  2F29               	goto	u4855
 10632  171F  0872               	movf	___fldiv@a+2,w
 10633  1720  0222               	subwf	___fldiv@rem+2,w
 10634  1721  1D03               	skipz
 10635  1722  2F29               	goto	u4855
 10636  1723  0871               	movf	___fldiv@a+1,w
 10637  1724  0221               	subwf	___fldiv@rem+1,w
 10638  1725  1D03               	skipz
 10639  1726  2F29               	goto	u4855
 10640  1727  0870               	movf	___fldiv@a,w
 10641  1728  0220               	subwf	___fldiv@rem,w
 10642  1729                     u4855:
 10643  1729  1C03               	skipc
 10644  172A  2F2C               	goto	u4851
 10645  172B  2F2D               	goto	u4850
 10646  172C                     u4851:
 10647  172C  2F36               	goto	l3738
 10648  172D                     u4850:
 10649  172D                     l3734:
 10650  172D  172A               	bsf	___fldiv@grs+3,6
 10651  172E                     l3736:
 10652  172E  0870               	movf	___fldiv@a,w
 10653  172F  02A0               	subwf	___fldiv@rem,f
 10654  1730  0871               	movf	___fldiv@a+1,w
 10655  1731  3BA1               	subwfb	___fldiv@rem+1,f
 10656  1732  0872               	movf	___fldiv@a+2,w
 10657  1733  3BA2               	subwfb	___fldiv@rem+2,f
 10658  1734  0873               	movf	___fldiv@a+3,w
 10659  1735  3BA3               	subwfb	___fldiv@rem+3,f
 10660  1736                     l3738:
 10661  1736  3001               	movlw	1
 10662  1737  00F8               	movwf	??___fldiv
 10663  1738  0878               	movf	??___fldiv,w
 10664  1739  07AC               	addwf	___fldiv@aexp,f
 10665  173A                     l3740:
 10666  173A  301A               	movlw	26
 10667  173B  022C               	subwf	___fldiv@aexp,w
 10668  173C  1C03               	skipc
 10669  173D  2F3F               	goto	u4861
 10670  173E  2F40               	goto	u4860
 10671  173F                     u4861:
 10672  173F  2EFC               	goto	l3722
 10673  1740                     u4860:
 10674  1740                     l3742:
 10675  1740  0823               	movf	___fldiv@rem+3,w
 10676  1741  0422               	iorwf	___fldiv@rem+2,w
 10677  1742  0421               	iorwf	___fldiv@rem+1,w
 10678  1743  0420               	iorwf	___fldiv@rem,w
 10679  1744  1903               	skipnz
 10680  1745  2F47               	goto	u4871
 10681  1746  2F48               	goto	u4870
 10682  1747                     u4871:
 10683  1747  2F61               	goto	l3756
 10684  1748                     u4870:
 10685  1748                     l3744:
 10686  1748  1427               	bsf	___fldiv@grs,0
 10687  1749  2F61               	goto	l3756
 10688  174A                     l3746:
 10689  174A  3001               	movlw	1
 10690  174B                     u4885:
 10691  174B  35F4               	lslf	___fldiv@b,f
 10692  174C  0DF5               	rlf	___fldiv@b+1,f
 10693  174D  0DF6               	rlf	___fldiv@b+2,f
 10694  174E  0DF7               	rlf	___fldiv@b+3,f
 10695  174F  0B89               	decfsz	9,f
 10696  1750  2F4B               	goto	u4885
 10697  1751                     l3748:
 10698  1751  1FAA               	btfss	___fldiv@grs+3,7
 10699  1752  2F54               	goto	u4891
 10700  1753  2F55               	goto	u4890
 10701  1754                     u4891:
 10702  1754  2F56               	goto	l3752
 10703  1755                     u4890:
 10704  1755                     l3750:
 10705  1755  1474               	bsf	___fldiv@b,0
 10706  1756                     l3752:
 10707  1756  3001               	movlw	1
 10708  1757                     u4905:
 10709  1757  35A7               	lslf	___fldiv@grs,f
 10710  1758  0DA8               	rlf	___fldiv@grs+1,f
 10711  1759  0DA9               	rlf	___fldiv@grs+2,f
 10712  175A  0DAA               	rlf	___fldiv@grs+3,f
 10713  175B  0B89               	decfsz	9,f
 10714  175C  2F57               	goto	u4905
 10715  175D                     l3754:
 10716  175D  30FF               	movlw	255
 10717  175E  07A5               	addwf	___fldiv@new_exp,f
 10718  175F  30FF               	movlw	255
 10719  1760  3DA6               	addwfc	___fldiv@new_exp+1,f
 10720  1761                     l3756:
 10721  1761  1FF6               	btfss	___fldiv@b+2,7
 10722  1762  2F64               	goto	u4911
 10723  1763  2F65               	goto	u4910
 10724  1764                     u4911:
 10725  1764  2F4A               	goto	l3746
 10726  1765                     u4910:
 10727  1765                     l3758:
 10728  1765  01AC               	clrf	___fldiv@aexp
 10729  1766                     l3760:
 10730  1766  1FAA               	btfss	___fldiv@grs+3,7
 10731  1767  2F69               	goto	u4921
 10732  1768  2F6A               	goto	u4920
 10733  1769                     u4921:
 10734  1769  2F86               	goto	l3768
 10735  176A                     u4920:
 10736  176A                     l3762:
 10737  176A  30FF               	movlw	255
 10738  176B  0527               	andwf	___fldiv@grs,w
 10739  176C  00F8               	movwf	??___fldiv
 10740  176D  30FF               	movlw	255
 10741  176E  0528               	andwf	___fldiv@grs+1,w
 10742  176F  00F9               	movwf	??___fldiv+1
 10743  1770  30FF               	movlw	255
 10744  1771  0529               	andwf	___fldiv@grs+2,w
 10745  1772  00FA               	movwf	??___fldiv+2
 10746  1773  307F               	movlw	127
 10747  1774  052A               	andwf	___fldiv@grs+3,w
 10748  1775  00FB               	movwf	??___fldiv+3
 10749  1776  087B               	movf	??___fldiv+3,w
 10750  1777  047A               	iorwf	??___fldiv+2,w
 10751  1778  0479               	iorwf	??___fldiv+1,w
 10752  1779  0478               	iorwf	??___fldiv,w
 10753  177A  1903               	skipnz
 10754  177B  2F7D               	goto	u4931
 10755  177C  2F7E               	goto	u4930
 10756  177D                     u4931:
 10757  177D  2F81               	goto	l920
 10758  177E                     u4930:
 10759  177E                     l3764:
 10760  177E  01AC               	clrf	___fldiv@aexp
 10761  177F  0AAC               	incf	___fldiv@aexp,f
 10762  1780  2F86               	goto	l3768
 10763  1781                     l920:
 10764  1781  1C74               	btfss	___fldiv@b,0
 10765  1782  2F84               	goto	u4941
 10766  1783  2F85               	goto	u4940
 10767  1784                     u4941:
 10768  1784  2F86               	goto	l3768
 10769  1785                     u4940:
 10770  1785  2F7E               	goto	l3764
 10771  1786                     l3768:
 10772  1786  082C               	movf	___fldiv@aexp,w
 10773  1787  1903               	btfsc	3,2
 10774  1788  2F8A               	goto	u4951
 10775  1789  2F8B               	goto	u4950
 10776  178A                     u4951:
 10777  178A  2FB3               	goto	l3778
 10778  178B                     u4950:
 10779  178B                     l3770:
 10780  178B  3001               	movlw	1
 10781  178C  07F4               	addwf	___fldiv@b,f
 10782  178D  3000               	movlw	0
 10783  178E  3DF5               	addwfc	___fldiv@b+1,f
 10784  178F  3000               	movlw	0
 10785  1790  3DF6               	addwfc	___fldiv@b+2,f
 10786  1791  3000               	movlw	0
 10787  1792  3DF7               	addwfc	___fldiv@b+3,f
 10788  1793                     l3772:
 10789  1793  1C77               	btfss	___fldiv@b+3,0
 10790  1794  2F96               	goto	u4961
 10791  1795  2F97               	goto	u4960
 10792  1796                     u4961:
 10793  1796  2FB3               	goto	l3778
 10794  1797                     u4960:
 10795  1797                     l3774:
 10796  1797  0874               	movf	___fldiv@b,w
 10797  1798  00F8               	movwf	??___fldiv
 10798  1799  0875               	movf	___fldiv@b+1,w
 10799  179A  00F9               	movwf	??___fldiv+1
 10800  179B  0876               	movf	___fldiv@b+2,w
 10801  179C  00FA               	movwf	??___fldiv+2
 10802  179D  0877               	movf	___fldiv@b+3,w
 10803  179E  00FB               	movwf	??___fldiv+3
 10804  179F  3001               	movlw	1
 10805  17A0  00FC               	movwf	??___fldiv+4
 10806  17A1                     u4975:
 10807  17A1  37FB               	asrf	??___fldiv+3,f
 10808  17A2  0CFA               	rrf	??___fldiv+2,f
 10809  17A3  0CF9               	rrf	??___fldiv+1,f
 10810  17A4  0CF8               	rrf	??___fldiv,f
 10811  17A5                     u4970:
 10812  17A5  0BFC               	decfsz	??___fldiv+4,f
 10813  17A6  2FA1               	goto	u4975
 10814  17A7  087B               	movf	??___fldiv+3,w
 10815  17A8  00F7               	movwf	___fldiv@b+3
 10816  17A9  087A               	movf	??___fldiv+2,w
 10817  17AA  00F6               	movwf	___fldiv@b+2
 10818  17AB  0879               	movf	??___fldiv+1,w
 10819  17AC  00F5               	movwf	___fldiv@b+1
 10820  17AD  0878               	movf	??___fldiv,w
 10821  17AE  00F4               	movwf	___fldiv@b
 10822  17AF                     l3776:
 10823  17AF  3001               	movlw	1
 10824  17B0  07A5               	addwf	___fldiv@new_exp,f
 10825  17B1  3000               	movlw	0
 10826  17B2  3DA6               	addwfc	___fldiv@new_exp+1,f
 10827  17B3                     l3778:
 10828  17B3  0826               	movf	___fldiv@new_exp+1,w
 10829  17B4  3A80               	xorlw	128
 10830  17B5  00F8               	movwf	??___fldiv
 10831  17B6  3080               	movlw	128
 10832  17B7  0278               	subwf	??___fldiv,w
 10833  17B8  1D03               	skipz
 10834  17B9  2FBC               	goto	u4985
 10835  17BA  30FF               	movlw	255
 10836  17BB  0225               	subwf	___fldiv@new_exp,w
 10837  17BC                     u4985:
 10838  17BC  1C03               	skipc
 10839  17BD  2FBF               	goto	u4981
 10840  17BE  2FC0               	goto	u4980
 10841  17BF                     u4981:
 10842  17BF  2FCD               	goto	l925
 10843  17C0                     u4980:
 10844  17C0                     l3780:
 10845  17C0  30FF               	movlw	255
 10846  17C1  0020               	movlb	0	; select bank0
 10847  17C2  00A5               	movwf	___fldiv@new_exp
 10848  17C3  3000               	movlw	0
 10849  17C4  00A6               	movwf	___fldiv@new_exp+1
 10850  17C5  3000               	movlw	0
 10851  17C6  00F7               	movwf	___fldiv@b+3
 10852  17C7  3000               	movlw	0
 10853  17C8  00F6               	movwf	___fldiv@b+2
 10854  17C9  3000               	movlw	0
 10855  17CA  00F5               	movwf	___fldiv@b+1
 10856  17CB  3000               	movlw	0
 10857  17CC  00F4               	movwf	___fldiv@b
 10858  17CD                     l925:
 10859  17CD  0020               	movlb	0	; select bank0
 10860  17CE  0826               	movf	___fldiv@new_exp+1,w
 10861  17CF  3A80               	xorlw	128
 10862  17D0  00F8               	movwf	??___fldiv
 10863  17D1  3080               	movlw	128
 10864  17D2  0278               	subwf	??___fldiv,w
 10865  17D3  1D03               	skipz
 10866  17D4  2FD7               	goto	u4995
 10867  17D5  3001               	movlw	1
 10868  17D6  0225               	subwf	___fldiv@new_exp,w
 10869  17D7                     u4995:
 10870  17D7  1803               	skipnc
 10871  17D8  2FDA               	goto	u4991
 10872  17D9  2FDB               	goto	u4990
 10873  17DA                     u4991:
 10874  17DA  2FE7               	goto	l926
 10875  17DB                     u4990:
 10876  17DB                     l3782:
 10877  17DB  0020               	movlb	0	; select bank0
 10878  17DC  01A5               	clrf	___fldiv@new_exp
 10879  17DD  01A6               	clrf	___fldiv@new_exp+1
 10880  17DE                     l3784:
 10881  17DE  3000               	movlw	0
 10882  17DF  00F7               	movwf	___fldiv@b+3
 10883  17E0  3000               	movlw	0
 10884  17E1  00F6               	movwf	___fldiv@b+2
 10885  17E2  3000               	movlw	0
 10886  17E3  00F5               	movwf	___fldiv@b+1
 10887  17E4  3000               	movlw	0
 10888  17E5  00F4               	movwf	___fldiv@b
 10889  17E6                     l3786:
 10890  17E6  01A4               	clrf	___fldiv@sign
 10891  17E7                     l926:
 10892  17E7  0020               	movlb	0	; select bank0
 10893  17E8  0825               	movf	___fldiv@new_exp,w
 10894  17E9  00F8               	movwf	??___fldiv
 10895  17EA  0878               	movf	??___fldiv,w
 10896  17EB  00AB               	movwf	___fldiv@bexp
 10897  17EC                     l3788:
 10898  17EC  1C2B               	btfss	___fldiv@bexp,0
 10899  17ED  2FEF               	goto	u5001
 10900  17EE  2FF0               	goto	u5000
 10901  17EF                     u5001:
 10902  17EF  2FF2               	goto	l3792
 10903  17F0                     u5000:
 10904  17F0                     l3790:
 10905  17F0  17F6               	bsf	___fldiv@b+2,7
 10906  17F1  2FF6               	goto	l928
 10907  17F2                     l3792:
 10908  17F2  307F               	movlw	127
 10909  17F3  00F8               	movwf	??___fldiv
 10910  17F4  0878               	movf	??___fldiv,w
 10911  17F5  05F6               	andwf	___fldiv@b+2,f
 10912  17F6                     l928:
 10913  17F6  362B               	lsrf	___fldiv@bexp,w
 10914  17F7  00F8               	movwf	??___fldiv
 10915  17F8  0878               	movf	??___fldiv,w
 10916  17F9  00F7               	movwf	___fldiv@b+3
 10917  17FA  0824               	movf	___fldiv@sign,w
 10918  17FB  00F8               	movwf	??___fldiv
 10919  17FC  0878               	movf	??___fldiv,w
 10920  17FD  04F7               	iorwf	___fldiv@b+3,f
 10921  17FE  2EBB               	goto	l3702
 10922  17FF                     l906:
 10923  17FF  0008               	return
 10924  1800                     __end_of___fldiv:
 10925                           
 10926                           	psect	text24
 10927  0809                     __ptext24:	
 10928 ;; *************** function _lcd_init *****************
 10929 ;; Defined at:
 10930 ;;		line 19 in file "lcd_lib.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;		None
 10933 ;; Auto vars:     Size  Location     Type
 10934 ;;		None
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  1    wreg      void 
 10937 ;; Registers used:
 10938 ;;		wreg, status,2, status,0, pclath, cstack
 10939 ;; Tracked objects:
 10940 ;;		On entry : 0/0
 10941 ;;		On exit  : 0/0
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10947 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;Total ram usage:        2 bytes
 10949 ;; Hardware stack levels used: 1
 10950 ;; Hardware stack levels required when called: 3
 10951 ;; This function calls:
 10952 ;;		_lcd_cmd
 10953 ;; This function is called by:
 10954 ;;		_main
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           
 10958                           
 10959                           ;psect for function _lcd_init
 10960  0809                     _lcd_init:
 10961  0809                     l3844:	
 10962                           ;incstack = 0
 10963                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
 10964                           
 10965                           
 10966                           ;lcd_lib.c: 20: _delay((unsigned long)((400)*(8000000/4000.0)));
 10967  0809  3005               	movlw	5
 10968  080A  00F3               	movwf	??_lcd_init+1
 10969  080B  300F               	movlw	15
 10970  080C  00F2               	movwf	??_lcd_init
 10971  080D  30F1               	movlw	241
 10972  080E                     u5797:
 10973  080E  0B89               	decfsz	9,f
 10974  080F  280E               	goto	u5797
 10975  0810  0BF2               	decfsz	??_lcd_init,f
 10976  0811  280E               	goto	u5797
 10977  0812  0BF3               	decfsz	??_lcd_init+1,f
 10978  0813  280E               	goto	u5797
 10979  0814  0000               	nop
 10980  0815                     l3846:
 10981                           
 10982                           ;lcd_lib.c: 22: lcd_cmd(0x30);
 10983  0815  3030               	movlw	48
 10984  0816  3180  2004  3188   	fcall	_lcd_cmd
 10985  0819                     l3848:
 10986                           
 10987                           ;lcd_lib.c: 23: lcd_cmd(0x34);
 10988  0819  3034               	movlw	52
 10989  081A  3180  2004  3188   	fcall	_lcd_cmd
 10990  081D                     l3850:
 10991                           
 10992                           ;lcd_lib.c: 24: lcd_cmd(0x30);
 10993  081D  3030               	movlw	48
 10994  081E  3180  2004  3188   	fcall	_lcd_cmd
 10995  0821                     l3852:
 10996                           
 10997                           ;lcd_lib.c: 25: _delay((unsigned long)((5)*(8000000/4000.0)));
 10998  0821  300D               	movlw	13
 10999  0822  00F2               	movwf	??_lcd_init
 11000  0823  30FC               	movlw	252
 11001  0824                     u5807:
 11002  0824  0B89               	decfsz	9,f
 11003  0825  2824               	goto	u5807
 11004  0826  0BF2               	decfsz	??_lcd_init,f
 11005  0827  2824               	goto	u5807
 11006                           
 11007                           ;lcd_lib.c: 27: lcd_cmd(0x30);
 11008  0828  3030               	movlw	48
 11009  0829  3180  2004  3188   	fcall	_lcd_cmd
 11010                           
 11011                           ;lcd_lib.c: 28: lcd_cmd(0x34);
 11012  082C  3034               	movlw	52
 11013  082D  3180  2004  3188   	fcall	_lcd_cmd
 11014                           
 11015                           ;lcd_lib.c: 29: lcd_cmd(0x30);
 11016  0830  3030               	movlw	48
 11017  0831  3180  2004  3188   	fcall	_lcd_cmd
 11018  0834                     l3854:
 11019                           
 11020                           ;lcd_lib.c: 30: _delay((unsigned long)((5)*(8000000/4000.0)));
 11021  0834  300D               	movlw	13
 11022  0835  00F2               	movwf	??_lcd_init
 11023  0836  30FC               	movlw	252
 11024  0837                     u5817:
 11025  0837  0B89               	decfsz	9,f
 11026  0838  2837               	goto	u5817
 11027  0839  0BF2               	decfsz	??_lcd_init,f
 11028  083A  2837               	goto	u5817
 11029  083B                     l3856:
 11030                           
 11031                           ;lcd_lib.c: 32: lcd_cmd(0x30);
 11032  083B  3030               	movlw	48
 11033  083C  3180  2004  3188   	fcall	_lcd_cmd
 11034  083F                     l3858:
 11035                           
 11036                           ;lcd_lib.c: 33: lcd_cmd(0x34);
 11037  083F  3034               	movlw	52
 11038  0840  3180  2004  3188   	fcall	_lcd_cmd
 11039  0843                     l3860:
 11040                           
 11041                           ;lcd_lib.c: 34: lcd_cmd(0x30);
 11042  0843  3030               	movlw	48
 11043  0844  3180  2004  3188   	fcall	_lcd_cmd
 11044                           
 11045                           ;lcd_lib.c: 35: _delay((unsigned long)((300)*(8000000/4000000.0)));
 11046  0847  30C8               	movlw	200
 11047  0848                     u5827:
 11048  0848  0B89               	decfsz	9,f
 11049  0849  2848               	goto	u5827
 11050  084A                     l3862:
 11051                           
 11052                           ;lcd_lib.c: 37: lcd_cmd(0x20);
 11053  084A  3020               	movlw	32
 11054  084B  3180  2004  3188   	fcall	_lcd_cmd
 11055  084E                     l3864:
 11056                           
 11057                           ;lcd_lib.c: 38: lcd_cmd(0x24);
 11058  084E  3024               	movlw	36
 11059  084F  3180  2004  3188   	fcall	_lcd_cmd
 11060  0852                     l3866:
 11061                           
 11062                           ;lcd_lib.c: 39: lcd_cmd(0x20);
 11063  0852  3020               	movlw	32
 11064  0853  3180  2004  3188   	fcall	_lcd_cmd
 11065  0856                     l3868:
 11066                           
 11067                           ;lcd_lib.c: 40: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11068  0856  3006               	movlw	6
 11069  0857                     u5837:
 11070  0857  0B89               	decfsz	9,f
 11071  0858  2857               	goto	u5837
 11072  0859  3200               	nop2
 11073                           
 11074                           ;lcd_lib.c: 43: lcd_cmd(0x20);
 11075  085A  3020               	movlw	32
 11076  085B  3180  2004  3188   	fcall	_lcd_cmd
 11077                           
 11078                           ;lcd_lib.c: 44: lcd_cmd(0x24);
 11079  085E  3024               	movlw	36
 11080  085F  3180  2004  3188   	fcall	_lcd_cmd
 11081                           
 11082                           ;lcd_lib.c: 45: lcd_cmd(0x20);
 11083  0862  3020               	movlw	32
 11084  0863  3180  2004  3188   	fcall	_lcd_cmd
 11085  0866                     l3870:
 11086                           
 11087                           ;lcd_lib.c: 47: _delay((unsigned long)((100)*(8000000/4000000.0)));
 11088  0866  3042               	movlw	66
 11089  0867                     u5847:
 11090  0867  0B89               	decfsz	9,f
 11091  0868  2867               	goto	u5847
 11092  0869  3200               	nop2
 11093  086A                     l3872:
 11094                           
 11095                           ;lcd_lib.c: 49: lcd_cmd(0x80);
 11096  086A  3080               	movlw	128
 11097  086B  3180  2004  3188   	fcall	_lcd_cmd
 11098  086E                     l3874:
 11099                           
 11100                           ;lcd_lib.c: 50: lcd_cmd(0x84);
 11101  086E  3084               	movlw	132
 11102  086F  3180  2004  3188   	fcall	_lcd_cmd
 11103  0872                     l3876:
 11104                           
 11105                           ;lcd_lib.c: 51: lcd_cmd(0x80);
 11106  0872  3080               	movlw	128
 11107  0873  3180  2004  3188   	fcall	_lcd_cmd
 11108  0876                     l3878:
 11109                           
 11110                           ;lcd_lib.c: 55: lcd_cmd(0x00);
 11111  0876  3000               	movlw	0
 11112  0877  3180  2004  3188   	fcall	_lcd_cmd
 11113  087A                     l3880:
 11114                           
 11115                           ;lcd_lib.c: 56: lcd_cmd(0x04);
 11116  087A  3004               	movlw	4
 11117  087B  3180  2004  3188   	fcall	_lcd_cmd
 11118  087E                     l3882:
 11119                           
 11120                           ;lcd_lib.c: 57: lcd_cmd(0x00);
 11121  087E  3000               	movlw	0
 11122  087F  3180  2004  3188   	fcall	_lcd_cmd
 11123  0882                     l3884:
 11124                           
 11125                           ;lcd_lib.c: 59: _delay((unsigned long)((100)*(8000000/4000000.0)));
 11126  0882  3042               	movlw	66
 11127  0883                     u5857:
 11128  0883  0B89               	decfsz	9,f
 11129  0884  2883               	goto	u5857
 11130  0885  3200               	nop2
 11131                           
 11132                           ;lcd_lib.c: 61: lcd_cmd(0xC0);
 11133  0886  30C0               	movlw	192
 11134  0887  3180  2004  3188   	fcall	_lcd_cmd
 11135                           
 11136                           ;lcd_lib.c: 62: lcd_cmd(0xC4);
 11137  088A  30C4               	movlw	196
 11138  088B  3180  2004  3188   	fcall	_lcd_cmd
 11139                           
 11140                           ;lcd_lib.c: 63: lcd_cmd(0xC0);
 11141  088E  30C0               	movlw	192
 11142  088F  3180  2004  3188   	fcall	_lcd_cmd
 11143                           
 11144                           ;lcd_lib.c: 67: lcd_cmd(0x00);
 11145  0892  3000               	movlw	0
 11146  0893  3180  2004  3188   	fcall	_lcd_cmd
 11147                           
 11148                           ;lcd_lib.c: 68: lcd_cmd(0x04);
 11149  0896  3004               	movlw	4
 11150  0897  3180  2004  3188   	fcall	_lcd_cmd
 11151                           
 11152                           ;lcd_lib.c: 69: lcd_cmd(0x00);
 11153  089A  3000               	movlw	0
 11154  089B  3180  2004  3188   	fcall	_lcd_cmd
 11155  089E                     l3886:
 11156                           
 11157                           ;lcd_lib.c: 71: _delay((unsigned long)((100)*(8000000/4000000.0)));
 11158  089E  3042               	movlw	66
 11159  089F                     u5867:
 11160  089F  0B89               	decfsz	9,f
 11161  08A0  289F               	goto	u5867
 11162  08A1  3200               	nop2
 11163  08A2                     l3888:
 11164                           
 11165                           ;lcd_lib.c: 73: lcd_cmd(0x10);
 11166  08A2  3010               	movlw	16
 11167  08A3  3180  2004  3188   	fcall	_lcd_cmd
 11168  08A6                     l3890:
 11169                           
 11170                           ;lcd_lib.c: 74: lcd_cmd(0x14);
 11171  08A6  3014               	movlw	20
 11172  08A7  3180  2004  3188   	fcall	_lcd_cmd
 11173  08AA                     l3892:
 11174                           
 11175                           ;lcd_lib.c: 75: lcd_cmd(0x10);
 11176  08AA  3010               	movlw	16
 11177  08AB  3180  2004  3188   	fcall	_lcd_cmd
 11178                           
 11179                           ;lcd_lib.c: 77: _delay((unsigned long)((5)*(8000000/4000.0)));
 11180  08AE  300D               	movlw	13
 11181  08AF  00F2               	movwf	??_lcd_init
 11182  08B0  30FC               	movlw	252
 11183  08B1                     u5877:
 11184  08B1  0B89               	decfsz	9,f
 11185  08B2  28B1               	goto	u5877
 11186  08B3  0BF2               	decfsz	??_lcd_init,f
 11187  08B4  28B1               	goto	u5877
 11188  08B5                     l3894:
 11189                           
 11190                           ;lcd_lib.c: 80: lcd_cmd(0x00);
 11191  08B5  3000               	movlw	0
 11192  08B6  3180  2004  3188   	fcall	_lcd_cmd
 11193  08B9                     l3896:
 11194                           
 11195                           ;lcd_lib.c: 81: lcd_cmd(0x04);
 11196  08B9  3004               	movlw	4
 11197  08BA  3180  2004  3188   	fcall	_lcd_cmd
 11198  08BD                     l3898:
 11199                           
 11200                           ;lcd_lib.c: 82: lcd_cmd(0x00);
 11201  08BD  3000               	movlw	0
 11202  08BE  3180  2004  3188   	fcall	_lcd_cmd
 11203  08C1                     l3900:
 11204                           
 11205                           ;lcd_lib.c: 84: _delay((unsigned long)((100)*(8000000/4000000.0)));
 11206  08C1  3042               	movlw	66
 11207  08C2                     u5887:
 11208  08C2  0B89               	decfsz	9,f
 11209  08C3  28C2               	goto	u5887
 11210  08C4  3200               	nop2
 11211                           
 11212                           ;lcd_lib.c: 86: lcd_cmd(0x60);
 11213  08C5  3060               	movlw	96
 11214  08C6  3180  2004  3188   	fcall	_lcd_cmd
 11215                           
 11216                           ;lcd_lib.c: 87: lcd_cmd(0x64);
 11217  08C9  3064               	movlw	100
 11218  08CA  3180  2004  3188   	fcall	_lcd_cmd
 11219                           
 11220                           ;lcd_lib.c: 88: lcd_cmd(0x60);
 11221  08CD  3060               	movlw	96
 11222  08CE  3180  2004  3188   	fcall	_lcd_cmd
 11223                           
 11224                           ;lcd_lib.c: 92: lcd_cmd(0x00);
 11225  08D1  3000               	movlw	0
 11226  08D2  3180  2004  3188   	fcall	_lcd_cmd
 11227                           
 11228                           ;lcd_lib.c: 93: lcd_cmd(0x04);
 11229  08D5  3004               	movlw	4
 11230  08D6  3180  2004  3188   	fcall	_lcd_cmd
 11231                           
 11232                           ;lcd_lib.c: 94: lcd_cmd(0x00);
 11233  08D9  3000               	movlw	0
 11234  08DA  3180  2004  3188   	fcall	_lcd_cmd
 11235  08DD                     l3902:
 11236                           
 11237                           ;lcd_lib.c: 96: _delay((unsigned long)((100)*(8000000/4000000.0)));
 11238  08DD  3042               	movlw	66
 11239  08DE                     u5897:
 11240  08DE  0B89               	decfsz	9,f
 11241  08DF  28DE               	goto	u5897
 11242  08E0  3200               	nop2
 11243  08E1                     l3904:
 11244                           
 11245                           ;lcd_lib.c: 98: lcd_cmd(0x20);
 11246  08E1  3020               	movlw	32
 11247  08E2  3180  2004  3188   	fcall	_lcd_cmd
 11248  08E5                     l3906:
 11249                           
 11250                           ;lcd_lib.c: 99: lcd_cmd(0x24);
 11251  08E5  3024               	movlw	36
 11252  08E6  3180  2004  3188   	fcall	_lcd_cmd
 11253  08E9                     l3908:
 11254                           
 11255                           ;lcd_lib.c: 100: lcd_cmd(0x20);
 11256  08E9  3020               	movlw	32
 11257  08EA  3180  2004  3188   	fcall	_lcd_cmd
 11258                           
 11259                           ;lcd_lib.c: 102: _delay((unsigned long)((3)*(8000000/4000.0)));
 11260  08ED  3008               	movlw	8
 11261  08EE  00F2               	movwf	??_lcd_init
 11262  08EF  30CA               	movlw	202
 11263  08F0                     u5907:
 11264  08F0  0B89               	decfsz	9,f
 11265  08F1  28F0               	goto	u5907
 11266  08F2  0BF2               	decfsz	??_lcd_init,f
 11267  08F3  28F0               	goto	u5907
 11268  08F4                     l218:
 11269  08F4  0008               	return
 11270  08F5                     __end_of_lcd_init:
 11271                           
 11272                           	psect	text25
 11273  1D73                     __ptext25:	
 11274 ;; *************** function _lcd_clear *****************
 11275 ;; Defined at:
 11276 ;;		line 111 in file "lcd_lib.c"
 11277 ;; Parameters:    Size  Location     Type
 11278 ;;		None
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;  col             1    7[BANK0 ] unsigned char 
 11281 ;;  row             1    6[BANK0 ] unsigned char 
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  1    wreg      void 
 11284 ;; Registers used:
 11285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11294 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11295 ;;Total ram usage:        3 bytes
 11296 ;; Hardware stack levels used: 1
 11297 ;; Hardware stack levels required when called: 5
 11298 ;; This function calls:
 11299 ;;		_lcd_print
 11300 ;;		_lcd_set_cursor
 11301 ;; This function is called by:
 11302 ;;		_main
 11303 ;; This function uses a non-reentrant model
 11304 ;;
 11305                           
 11306                           
 11307                           ;psect for function _lcd_clear
 11308  1D73                     _lcd_clear:
 11309  1D73                     l3982:	
 11310                           ;incstack = 0
 11311                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11312                           
 11313                           
 11314                           ;lcd_lib.c: 112: for(uint8_t row = 0; row < 2; row++){
 11315  1D73  0020               	movlb	0	; select bank0
 11316  1D74  01A6               	clrf	lcd_clear@row
 11317  1D75                     l3988:
 11318                           
 11319                           ;lcd_lib.c: 113: for(uint8_t col = 0; col < 16; col++){
 11320  1D75  01A7               	clrf	lcd_clear@col
 11321  1D76                     l3994:
 11322                           
 11323                           ;lcd_lib.c: 114: lcd_set_cursor(col, row);
 11324  1D76  0826               	movf	lcd_clear@row,w
 11325  1D77  00FC               	movwf	??_lcd_clear
 11326  1D78  087C               	movf	??_lcd_clear,w
 11327  1D79  00F8               	movwf	lcd_set_cursor@row
 11328  1D7A  0827               	movf	lcd_clear@col,w
 11329  1D7B  319D  2549  319D   	fcall	_lcd_set_cursor
 11330  1D7E                     l3996:
 11331                           
 11332                           ;lcd_lib.c: 115: lcd_print(" ");
 11333  1D7E  30CB               	movlw	low ((STR_3+7)| (0+32768))
 11334  1D7F  00F8               	movwf	lcd_print@str
 11335  1D80  30A0               	movlw	high ((STR_3+7)| (0+32768))
 11336  1D81  00F9               	movwf	lcd_print@str+1
 11337  1D82  319C  24CA  319D   	fcall	_lcd_print
 11338  1D85                     l3998:
 11339  1D85  3001               	movlw	1
 11340  1D86  00FC               	movwf	??_lcd_clear
 11341  1D87  087C               	movf	??_lcd_clear,w
 11342  1D88  0020               	movlb	0	; select bank0
 11343  1D89  07A7               	addwf	lcd_clear@col,f
 11344  1D8A                     l4000:
 11345  1D8A  3010               	movlw	16
 11346  1D8B  0227               	subwf	lcd_clear@col,w
 11347  1D8C  1C03               	skipc
 11348  1D8D  2D8F               	goto	u5211
 11349  1D8E  2D90               	goto	u5210
 11350  1D8F                     u5211:
 11351  1D8F  2D76               	goto	l3994
 11352  1D90                     u5210:
 11353  1D90                     l4002:
 11354  1D90  3001               	movlw	1
 11355  1D91  00FC               	movwf	??_lcd_clear
 11356  1D92  087C               	movf	??_lcd_clear,w
 11357  1D93  07A6               	addwf	lcd_clear@row,f
 11358  1D94                     l4004:
 11359  1D94  3002               	movlw	2
 11360  1D95  0226               	subwf	lcd_clear@row,w
 11361  1D96  1C03               	skipc
 11362  1D97  2D99               	goto	u5221
 11363  1D98  2D9A               	goto	u5220
 11364  1D99                     u5221:
 11365  1D99  2D75               	goto	l3988
 11366  1D9A                     u5220:
 11367  1D9A                     l4006:
 11368                           
 11369                           ;lcd_lib.c: 116: };lcd_lib.c: 117: };lcd_lib.c: 119: lcd_set_cursor(0, 0);
 11370  1D9A  01F8               	clrf	lcd_set_cursor@row
 11371  1D9B  3000               	movlw	0
 11372  1D9C  319D  2549  319D   	fcall	_lcd_set_cursor
 11373  1D9F                     l228:
 11374  1D9F  0008               	return
 11375  1DA0                     __end_of_lcd_clear:
 11376                           
 11377                           	psect	text26
 11378  1D49                     __ptext26:	
 11379 ;; *************** function _lcd_set_cursor *****************
 11380 ;; Defined at:
 11381 ;;		line 127 in file "lcd_lib.c"
 11382 ;; Parameters:    Size  Location     Type
 11383 ;;  col             1    wreg     unsigned char 
 11384 ;;  row             1    8[COMMON] unsigned char 
 11385 ;; Auto vars:     Size  Location     Type
 11386 ;;  col             1    4[BANK0 ] unsigned char 
 11387 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
 11388 ;;  cmd             1    5[BANK0 ] unsigned char 
 11389 ;; Return value:  Size  Location     Type
 11390 ;;                  1    wreg      void 
 11391 ;; Registers used:
 11392 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11393 ;; Tracked objects:
 11394 ;;		On entry : 0/0
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11398 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11399 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11400 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11401 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11402 ;;Total ram usage:        8 bytes
 11403 ;; Hardware stack levels used: 1
 11404 ;; Hardware stack levels required when called: 4
 11405 ;; This function calls:
 11406 ;;		_command
 11407 ;; This function is called by:
 11408 ;;		_main
 11409 ;;		_lcd_clear
 11410 ;; This function uses a non-reentrant model
 11411 ;;
 11412                           
 11413                           
 11414                           ;psect for function _lcd_set_cursor
 11415  1D49                     _lcd_set_cursor:
 11416                           
 11417                           ;incstack = 0
 11418                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11419                           ;lcd_set_cursor@col stored from wreg
 11420  1D49  0020               	movlb	0	; select bank0
 11421  1D4A  00A4               	movwf	lcd_set_cursor@col
 11422  1D4B                     l3284:
 11423                           
 11424                           ;lcd_lib.c: 128: uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 11425  1D4B  0021               	movlb	1	; select bank1
 11426  1D4C  0867               	movf	(lcd_set_cursor@F2624+3)^(0+128),w
 11427  1D4D  0020               	movlb	0	; select bank0
 11428  1D4E  00A3               	movwf	lcd_set_cursor@row_offsets+3
 11429  1D4F  0021               	movlb	1	; select bank1
 11430  1D50  0866               	movf	(lcd_set_cursor@F2624+2)^(0+128),w
 11431  1D51  0020               	movlb	0	; select bank0
 11432  1D52  00A2               	movwf	lcd_set_cursor@row_offsets+2
 11433  1D53  0021               	movlb	1	; select bank1
 11434  1D54  0865               	movf	(lcd_set_cursor@F2624+1)^(0+128),w
 11435  1D55  0020               	movlb	0	; select bank0
 11436  1D56  00A1               	movwf	lcd_set_cursor@row_offsets+1
 11437  1D57  0021               	movlb	1	; select bank1
 11438  1D58  0864               	movf	lcd_set_cursor@F2624^(0+128),w
 11439  1D59  0020               	movlb	0	; select bank0
 11440  1D5A  00A0               	movwf	lcd_set_cursor@row_offsets
 11441                           
 11442                           ;lcd_lib.c: 129: if(row > 2){
 11443  1D5B  3003               	movlw	3
 11444  1D5C  0278               	subwf	lcd_set_cursor@row,w
 11445  1D5D  1C03               	skipc
 11446  1D5E  2D60               	goto	u3991
 11447  1D5F  2D61               	goto	u3990
 11448  1D60                     u3991:
 11449  1D60  2D63               	goto	l3288
 11450  1D61                     u3990:
 11451  1D61                     l3286:
 11452                           
 11453                           ;lcd_lib.c: 130: row = 2 - 1;
 11454  1D61  01F8               	clrf	lcd_set_cursor@row
 11455  1D62  0AF8               	incf	lcd_set_cursor@row,f
 11456  1D63                     l3288:
 11457                           
 11458                           ;lcd_lib.c: 131: };lcd_lib.c: 132: uint8_t cmd = 0x80 | (col + row_offsets[row]);
 11459  1D63  0878               	movf	lcd_set_cursor@row,w
 11460  1D64  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
 11461  1D65  0086               	movwf	6
 11462  1D66  0187               	clrf	7
 11463  1D67  0801               	movf	1,w
 11464  1D68  0724               	addwf	lcd_set_cursor@col,w
 11465  1D69  3880               	iorlw	128
 11466  1D6A  00F9               	movwf	??_lcd_set_cursor
 11467  1D6B  0879               	movf	??_lcd_set_cursor,w
 11468  1D6C  00A5               	movwf	lcd_set_cursor@cmd
 11469  1D6D                     l3290:
 11470                           
 11471                           ;lcd_lib.c: 133: command(cmd, 0);
 11472  1D6D  01F2               	clrf	command@mode
 11473  1D6E  0825               	movf	lcd_set_cursor@cmd,w
 11474  1D6F  319D  25D4  319D   	fcall	_command
 11475  1D72                     l234:
 11476  1D72  0008               	return
 11477  1D73                     __end_of_lcd_set_cursor:
 11478                           
 11479                           	psect	text27
 11480  1CCA                     __ptext27:	
 11481 ;; *************** function _lcd_print *****************
 11482 ;; Defined at:
 11483 ;;		line 136 in file "lcd_lib.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;  str             2    8[COMMON] PTR unsigned char 
 11486 ;;		 -> STR_7(2), gramstr(16), valstr(16), STR_2(15), 
 11487 ;;		 -> STR_1(11), 
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;  cmd             1   11[COMMON] unsigned char 
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  1    wreg      void 
 11492 ;; Registers used:
 11493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;Total ram usage:        4 bytes
 11504 ;; Hardware stack levels used: 1
 11505 ;; Hardware stack levels required when called: 4
 11506 ;; This function calls:
 11507 ;;		_command
 11508 ;; This function is called by:
 11509 ;;		_main
 11510 ;;		_lcd_clear
 11511 ;; This function uses a non-reentrant model
 11512 ;;
 11513                           
 11514                           
 11515                           ;psect for function _lcd_print
 11516  1CCA                     _lcd_print:
 11517  1CCA                     l3292:	
 11518                           ;incstack = 0
 11519                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11520                           
 11521                           
 11522                           ;lcd_lib.c: 137: while (*str) {
 11523  1CCA  2CDD               	goto	l3300
 11524  1CCB                     l3294:
 11525                           
 11526                           ;lcd_lib.c: 138: uint8_t cmd = *str++;
 11527  1CCB  0878               	movf	lcd_print@str,w
 11528  1CCC  0084               	movwf	4
 11529  1CCD  0879               	movf	lcd_print@str+1,w
 11530  1CCE  0085               	movwf	5
 11531  1CCF  0800               	movf	0,w	;code access
 11532  1CD0  00FA               	movwf	??_lcd_print
 11533  1CD1  087A               	movf	??_lcd_print,w
 11534  1CD2  00FB               	movwf	lcd_print@cmd
 11535  1CD3                     l3296:
 11536  1CD3  3001               	movlw	1
 11537  1CD4  07F8               	addwf	lcd_print@str,f
 11538  1CD5  3000               	movlw	0
 11539  1CD6  3DF9               	addwfc	lcd_print@str+1,f
 11540  1CD7                     l3298:
 11541                           
 11542                           ;lcd_lib.c: 139: command(cmd, 0b00000001);
 11543  1CD7  01F2               	clrf	command@mode
 11544  1CD8  0AF2               	incf	command@mode,f
 11545  1CD9  087B               	movf	lcd_print@cmd,w
 11546  1CDA  319D  25D4  319C   	fcall	_command
 11547  1CDD                     l3300:
 11548  1CDD  0878               	movf	lcd_print@str,w
 11549  1CDE  0084               	movwf	4
 11550  1CDF  0879               	movf	lcd_print@str+1,w
 11551  1CE0  0085               	movwf	5
 11552  1CE1  0012               	moviw fsr0++
 11553  1CE2  1D03               	btfss	3,2
 11554  1CE3  2CE5               	goto	u4001
 11555  1CE4  2CE6               	goto	u4000
 11556  1CE5                     u4001:
 11557  1CE5  2CCB               	goto	l3294
 11558  1CE6                     u4000:
 11559  1CE6                     l240:
 11560  1CE6  0008               	return
 11561  1CE7                     __end_of_lcd_print:
 11562                           
 11563                           	psect	text28
 11564  1DD4                     __ptext28:	
 11565 ;; *************** function _command *****************
 11566 ;; Defined at:
 11567 ;;		line 143 in file "lcd_lib.c"
 11568 ;; Parameters:    Size  Location     Type
 11569 ;;  val             1    wreg     unsigned char 
 11570 ;;  mode            1    2[COMMON] unsigned char 
 11571 ;; Auto vars:     Size  Location     Type
 11572 ;;  val             1    5[COMMON] unsigned char 
 11573 ;;  lownib          1    7[COMMON] unsigned char 
 11574 ;;  highnib         1    6[COMMON] unsigned char 
 11575 ;; Return value:  Size  Location     Type
 11576 ;;                  1    wreg      void 
 11577 ;; Registers used:
 11578 ;;		wreg, status,2, status,0, pclath, cstack
 11579 ;; Tracked objects:
 11580 ;;		On entry : 0/0
 11581 ;;		On exit  : 0/0
 11582 ;;		Unchanged: 0/0
 11583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11584 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11585 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11586 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11587 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11588 ;;Total ram usage:        6 bytes
 11589 ;; Hardware stack levels used: 1
 11590 ;; Hardware stack levels required when called: 3
 11591 ;; This function calls:
 11592 ;;		_lcd_cmd
 11593 ;; This function is called by:
 11594 ;;		_lcd_set_cursor
 11595 ;;		_lcd_print
 11596 ;; This function uses a non-reentrant model
 11597 ;;
 11598                           
 11599                           
 11600                           ;psect for function _command
 11601  1DD4                     _command:
 11602                           
 11603                           ;incstack = 0
 11604                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
 11605                           ;command@val stored from wreg
 11606  1DD4  00F5               	movwf	command@val
 11607  1DD5                     l2784:
 11608                           
 11609                           ;lcd_lib.c: 144: uint8_t highnib = (val & 0xf0) | _backlightval | mode;
 11610  1DD5  0875               	movf	command@val,w
 11611  1DD6  39F0               	andlw	240
 11612  1DD7  0020               	movlb	0	; select bank0
 11613  1DD8  046F               	iorwf	__backlightval,w
 11614  1DD9  0472               	iorwf	command@mode,w
 11615  1DDA  00F3               	movwf	??_command
 11616  1DDB  0873               	movf	??_command,w
 11617  1DDC  00F6               	movwf	command@highnib
 11618                           
 11619                           ;lcd_lib.c: 145: uint8_t lownib = ((val << 4) & 0xf0) | _backlightval | mode;
 11620  1DDD  0875               	movf	command@val,w
 11621  1DDE  00F3               	movwf	??_command
 11622  1DDF  3003               	movlw	3
 11623  1DE0                     u2975:
 11624  1DE0  35F3               	lslf	??_command,f
 11625  1DE1  3EFF               	addlw	-1
 11626  1DE2  1D03               	skipz
 11627  1DE3  2DE0               	goto	u2975
 11628  1DE4  3573               	lslf	??_command,w
 11629  1DE5  39F0               	andlw	240
 11630  1DE6  046F               	iorwf	__backlightval,w
 11631  1DE7  0472               	iorwf	command@mode,w
 11632  1DE8  00F4               	movwf	??_command+1
 11633  1DE9  0874               	movf	??_command+1,w
 11634  1DEA  00F7               	movwf	command@lownib
 11635  1DEB                     l2786:
 11636                           
 11637                           ;lcd_lib.c: 147: lcd_cmd(highnib);
 11638  1DEB  0876               	movf	command@highnib,w
 11639  1DEC  3180  2004  319D   	fcall	_lcd_cmd
 11640  1DEF                     l2788:
 11641                           
 11642                           ;lcd_lib.c: 148: lcd_cmd(highnib | 0b00000100);
 11643  1DEF  0876               	movf	command@highnib,w
 11644  1DF0  3804               	iorlw	4
 11645  1DF1  3180  2004  319D   	fcall	_lcd_cmd
 11646  1DF4                     l2790:
 11647                           
 11648                           ;lcd_lib.c: 149: lcd_cmd(highnib & ~0b00000100);
 11649  1DF4  0876               	movf	command@highnib,w
 11650  1DF5  39FB               	andlw	251
 11651  1DF6  3180  2004  319D   	fcall	_lcd_cmd
 11652  1DF9                     l2792:
 11653                           
 11654                           ;lcd_lib.c: 151: _delay((unsigned long)((100)*(8000000/4000000.0)));
 11655  1DF9  3042               	movlw	66
 11656  1DFA                     u5917:
 11657  1DFA  0B89               	decfsz	9,f
 11658  1DFB  2DFA               	goto	u5917
 11659  1DFC  3200               	nop2
 11660  1DFD                     l2794:
 11661                           
 11662                           ;lcd_lib.c: 153: lcd_cmd(lownib);
 11663  1DFD  0877               	movf	command@lownib,w
 11664  1DFE  3180  2004  319D   	fcall	_lcd_cmd
 11665  1E01                     l2796:
 11666                           
 11667                           ;lcd_lib.c: 154: lcd_cmd(lownib | 0b00000100);
 11668  1E01  0877               	movf	command@lownib,w
 11669  1E02  3804               	iorlw	4
 11670  1E03  3180  2004  319D   	fcall	_lcd_cmd
 11671  1E06                     l2798:
 11672                           
 11673                           ;lcd_lib.c: 155: lcd_cmd(lownib & ~0b00000100);
 11674  1E06  0877               	movf	command@lownib,w
 11675  1E07  39FB               	andlw	251
 11676  1E08  3180  2004  319D   	fcall	_lcd_cmd
 11677  1E0B                     l243:
 11678  1E0B  0008               	return
 11679  1E0C                     __end_of_command:
 11680                           
 11681                           	psect	text29
 11682  1C88                     __ptext29:	
 11683 ;; *************** function _lcd_backlight *****************
 11684 ;; Defined at:
 11685 ;;		line 105 in file "lcd_lib.c"
 11686 ;; Parameters:    Size  Location     Type
 11687 ;;		None
 11688 ;; Auto vars:     Size  Location     Type
 11689 ;;		None
 11690 ;; Return value:  Size  Location     Type
 11691 ;;                  1    wreg      void 
 11692 ;; Registers used:
 11693 ;;		wreg, status,2, status,0, pclath, cstack
 11694 ;; Tracked objects:
 11695 ;;		On entry : 0/0
 11696 ;;		On exit  : 0/0
 11697 ;;		Unchanged: 0/0
 11698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11701 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11703 ;;Total ram usage:        1 bytes
 11704 ;; Hardware stack levels used: 1
 11705 ;; Hardware stack levels required when called: 3
 11706 ;; This function calls:
 11707 ;;		_lcd_cmd
 11708 ;; This function is called by:
 11709 ;;		_main
 11710 ;; This function uses a non-reentrant model
 11711 ;;
 11712                           
 11713                           
 11714                           ;psect for function _lcd_backlight
 11715  1C88                     _lcd_backlight:
 11716  1C88                     l3910:	
 11717                           ;incstack = 0
 11718                           ; Regs used in _lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
 11719                           
 11720                           
 11721                           ;lcd_lib.c: 106: lcd_cmd(0x08);
 11722  1C88  3008               	movlw	8
 11723  1C89  3180  2004  319C   	fcall	_lcd_cmd
 11724  1C8C                     l3912:
 11725                           
 11726                           ;lcd_lib.c: 107: _backlightval = 0x08;
 11727  1C8C  3008               	movlw	8
 11728  1C8D  00F2               	movwf	??_lcd_backlight
 11729  1C8E  0872               	movf	??_lcd_backlight,w
 11730  1C8F  0020               	movlb	0	; select bank0
 11731  1C90  00EF               	movwf	__backlightval
 11732  1C91                     l3914:
 11733                           
 11734                           ;lcd_lib.c: 108: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11735  1C91  3006               	movlw	6
 11736  1C92                     u5927:
 11737  1C92  0B89               	decfsz	9,f
 11738  1C93  2C92               	goto	u5927
 11739  1C94  3200               	nop2
 11740  1C95                     l221:
 11741  1C95  0008               	return
 11742  1C96                     __end_of_lcd_backlight:
 11743                           
 11744                           	psect	text30
 11745  0004                     __ptext30:	
 11746 ;; *************** function _lcd_cmd *****************
 11747 ;; Defined at:
 11748 ;;		line 11 in file "lcd_lib.c"
 11749 ;; Parameters:    Size  Location     Type
 11750 ;;  cmd             1    wreg     unsigned char 
 11751 ;; Auto vars:     Size  Location     Type
 11752 ;;  cmd             1    1[COMMON] unsigned char 
 11753 ;; Return value:  Size  Location     Type
 11754 ;;                  1    wreg      void 
 11755 ;; Registers used:
 11756 ;;		wreg, status,2, status,0, pclath, cstack
 11757 ;; Tracked objects:
 11758 ;;		On entry : 0/0
 11759 ;;		On exit  : 0/0
 11760 ;;		Unchanged: 0/0
 11761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11766 ;;Total ram usage:        1 bytes
 11767 ;; Hardware stack levels used: 1
 11768 ;; Hardware stack levels required when called: 2
 11769 ;; This function calls:
 11770 ;;		_i2c_start
 11771 ;;		_i2c_stop
 11772 ;;		_i2c_write
 11773 ;; This function is called by:
 11774 ;;		_lcd_init
 11775 ;;		_lcd_backlight
 11776 ;;		_command
 11777 ;; This function uses a non-reentrant model
 11778 ;;
 11779                           
 11780                           
 11781                           ;psect for function _lcd_cmd
 11782  0004                     _lcd_cmd:
 11783                           
 11784                           ;incstack = 0
 11785                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
 11786                           ;lcd_cmd@cmd stored from wreg
 11787  0004  00F1               	movwf	lcd_cmd@cmd
 11788  0005                     l2766:
 11789                           
 11790                           ;lcd_lib.c: 12: i2c_start();
 11791  0005  319C  2467  3180   	fcall	_i2c_start
 11792                           
 11793                           ;lcd_lib.c: 13: i2c_write(0x27 << 1);
 11794  0008  304E               	movlw	78
 11795  0009  319C  2496  3180   	fcall	_i2c_write
 11796                           
 11797                           ;lcd_lib.c: 14: i2c_write(cmd);
 11798  000C  0871               	movf	lcd_cmd@cmd,w
 11799  000D  319C  2496  3180   	fcall	_i2c_write
 11800  0010                     l2768:
 11801                           
 11802                           ;lcd_lib.c: 15: i2c_stop();
 11803  0010  3188  2002  3180   	fcall	_i2c_stop
 11804                           
 11805                           ;lcd_lib.c: 16: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11806  0013  3006               	movlw	6
 11807  0014                     u5937:
 11808  0014  0B89               	decfsz	9,f
 11809  0015  2814               	goto	u5937
 11810  0016  3200               	nop2
 11811  0017                     l215:
 11812  0017  0008               	return
 11813  0018                     __end_of_lcd_cmd:
 11814                           
 11815                           	psect	text31
 11816  1C96                     __ptext31:	
 11817 ;; *************** function _i2c_write *****************
 11818 ;; Defined at:
 11819 ;;		line 25 in file "i2c.c"
 11820 ;; Parameters:    Size  Location     Type
 11821 ;;  data            1    wreg     unsigned char 
 11822 ;; Auto vars:     Size  Location     Type
 11823 ;;  data            1    0[COMMON] unsigned char 
 11824 ;; Return value:  Size  Location     Type
 11825 ;;                  1    wreg      void 
 11826 ;; Registers used:
 11827 ;;		wreg, status,2, status,0, pclath, cstack
 11828 ;; Tracked objects:
 11829 ;;		On entry : 0/0
 11830 ;;		On exit  : 0/0
 11831 ;;		Unchanged: 0/0
 11832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11837 ;;Total ram usage:        1 bytes
 11838 ;; Hardware stack levels used: 1
 11839 ;; Hardware stack levels required when called: 1
 11840 ;; This function calls:
 11841 ;;		_i2c_wait
 11842 ;; This function is called by:
 11843 ;;		_lcd_cmd
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           
 11848                           ;psect for function _i2c_write
 11849  1C96                     _i2c_write:
 11850                           
 11851                           ;incstack = 0
 11852                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
 11853                           ;i2c_write@data stored from wreg
 11854  1C96  00F0               	movwf	i2c_write@data
 11855  1C97                     l2762:
 11856                           
 11857                           ;i2c.c: 26: SSPBUF = data;
 11858  1C97  0870               	movf	i2c_write@data,w
 11859  1C98  0024               	movlb	4	; select bank4
 11860  1C99  0091               	movwf	17	;volatile
 11861  1C9A                     l184:	
 11862                           ;i2c.c: 27: while(SSPSTATbits.BF);
 11863                           
 11864  1C9A  1814               	btfsc	20,0	;volatile
 11865  1C9B  2C9D               	goto	u2921
 11866  1C9C  2C9E               	goto	u2920
 11867  1C9D                     u2921:
 11868  1C9D  2C9A               	goto	l184
 11869  1C9E                     u2920:
 11870  1C9E                     l187:
 11871  1C9E  1B16               	btfsc	22,6	;volatile
 11872  1C9F  2CA1               	goto	u2931
 11873  1CA0  2CA2               	goto	u2930
 11874  1CA1                     u2931:
 11875  1CA1  2C9E               	goto	l187
 11876  1CA2                     u2930:
 11877  1CA2                     l2764:
 11878                           
 11879                           ;i2c.c: 29: i2c_wait();
 11880  1CA2  319C  247C  319C   	fcall	_i2c_wait
 11881  1CA5                     l190:
 11882  1CA5  0008               	return
 11883  1CA6                     __end_of_i2c_write:
 11884                           
 11885                           	psect	text32
 11886  0802                     __ptext32:	
 11887 ;; *************** function _i2c_stop *****************
 11888 ;; Defined at:
 11889 ;;		line 14 in file "i2c.c"
 11890 ;; Parameters:    Size  Location     Type
 11891 ;;		None
 11892 ;; Auto vars:     Size  Location     Type
 11893 ;;		None
 11894 ;; Return value:  Size  Location     Type
 11895 ;;                  1    wreg      void 
 11896 ;; Registers used:
 11897 ;;		None
 11898 ;; Tracked objects:
 11899 ;;		On entry : 0/0
 11900 ;;		On exit  : 0/0
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11907 ;;Total ram usage:        0 bytes
 11908 ;; Hardware stack levels used: 1
 11909 ;; This function calls:
 11910 ;;		Nothing
 11911 ;; This function is called by:
 11912 ;;		_lcd_cmd
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           
 11917                           ;psect for function _i2c_stop
 11918  0802                     _i2c_stop:
 11919  0802                     l2760:	
 11920                           ;incstack = 0
 11921                           ; Regs used in _i2c_stop: []
 11922                           
 11923                           
 11924                           ;i2c.c: 15: SSPCON2bits.PEN = 1;
 11925  0802  0024               	movlb	4	; select bank4
 11926  0803  1516               	bsf	22,2	;volatile
 11927  0804                     l172:	
 11928                           ;i2c.c: 16: while(SSPCON2bits.PEN);
 11929                           
 11930  0804  1916               	btfsc	22,2	;volatile
 11931  0805  2807               	goto	u2911
 11932  0806  2808               	goto	u2910
 11933  0807                     u2911:
 11934  0807  2804               	goto	l172
 11935  0808                     u2910:
 11936  0808                     l175:
 11937  0808  0008               	return
 11938  0809                     __end_of_i2c_stop:
 11939                           
 11940                           	psect	text33
 11941  1C67                     __ptext33:	
 11942 ;; *************** function _i2c_start *****************
 11943 ;; Defined at:
 11944 ;;		line 8 in file "i2c.c"
 11945 ;; Parameters:    Size  Location     Type
 11946 ;;		None
 11947 ;; Auto vars:     Size  Location     Type
 11948 ;;		None
 11949 ;; Return value:  Size  Location     Type
 11950 ;;                  1    wreg      void 
 11951 ;; Registers used:
 11952 ;;		wreg, status,2, status,0, pclath, cstack
 11953 ;; Tracked objects:
 11954 ;;		On entry : 0/0
 11955 ;;		On exit  : 0/0
 11956 ;;		Unchanged: 0/0
 11957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11962 ;;Total ram usage:        0 bytes
 11963 ;; Hardware stack levels used: 1
 11964 ;; Hardware stack levels required when called: 1
 11965 ;; This function calls:
 11966 ;;		_i2c_wait
 11967 ;; This function is called by:
 11968 ;;		_lcd_cmd
 11969 ;; This function uses a non-reentrant model
 11970 ;;
 11971                           
 11972                           
 11973                           ;psect for function _i2c_start
 11974  1C67                     _i2c_start:
 11975  1C67                     l2756:	
 11976                           ;incstack = 0
 11977                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
 11978                           
 11979                           
 11980                           ;i2c.c: 9: i2c_wait();
 11981  1C67  319C  247C  319C   	fcall	_i2c_wait
 11982  1C6A                     l2758:
 11983                           
 11984                           ;i2c.c: 10: SSPCON2bits.SEN = 1;
 11985  1C6A  0024               	movlb	4	; select bank4
 11986  1C6B  1416               	bsf	22,0	;volatile
 11987  1C6C                     l166:	
 11988                           ;i2c.c: 11: while(SSPCON2bits.SEN);
 11989                           
 11990  1C6C  1816               	btfsc	22,0	;volatile
 11991  1C6D  2C6F               	goto	u2901
 11992  1C6E  2C70               	goto	u2900
 11993  1C6F                     u2901:
 11994  1C6F  2C6C               	goto	l166
 11995  1C70                     u2900:
 11996  1C70                     l169:
 11997  1C70  0008               	return
 11998  1C71                     __end_of_i2c_start:
 11999                           
 12000                           	psect	text34
 12001  1C7C                     __ptext34:	
 12002 ;; *************** function _i2c_wait *****************
 12003 ;; Defined at:
 12004 ;;		line 4 in file "i2c.c"
 12005 ;; Parameters:    Size  Location     Type
 12006 ;;		None
 12007 ;; Auto vars:     Size  Location     Type
 12008 ;;		None
 12009 ;; Return value:  Size  Location     Type
 12010 ;;                  1    wreg      void 
 12011 ;; Registers used:
 12012 ;;		wreg, status,2
 12013 ;; Tracked objects:
 12014 ;;		On entry : 0/0
 12015 ;;		On exit  : 0/0
 12016 ;;		Unchanged: 0/0
 12017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12022 ;;Total ram usage:        0 bytes
 12023 ;; Hardware stack levels used: 1
 12024 ;; This function calls:
 12025 ;;		Nothing
 12026 ;; This function is called by:
 12027 ;;		_i2c_start
 12028 ;;		_i2c_write
 12029 ;;		_i2c_repeated_start
 12030 ;;		_i2c_read
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           
 12035                           ;psect for function _i2c_wait
 12036  1C7C                     _i2c_wait:
 12037  1C7C                     l2750:	
 12038                           ;incstack = 0
 12039                           ; Regs used in _i2c_wait: [wreg+status,2]
 12040                           
 12041  1C7C                     l2752:	
 12042                           ;i2c.c: 5: while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
 12043                           
 12044  1C7C  0024               	movlb	4	; select bank4
 12045  1C7D  0816               	movf	22,w	;volatile
 12046  1C7E  391F               	andlw	31
 12047  1C7F  1D03               	btfss	3,2
 12048  1C80  2C82               	goto	u2881
 12049  1C81  2C83               	goto	u2880
 12050  1C82                     u2881:
 12051  1C82  2C7C               	goto	l2752
 12052  1C83                     u2880:
 12053  1C83                     l2754:
 12054  1C83  1914               	btfsc	20,2	;volatile
 12055  1C84  2C86               	goto	u2891
 12056  1C85  2C87               	goto	u2890
 12057  1C86                     u2891:
 12058  1C86  2C7C               	goto	l2752
 12059  1C87                     u2890:
 12060  1C87                     l163:
 12061  1C87  0008               	return
 12062  1C88                     __end_of_i2c_wait:
 12063                           
 12064                           	psect	text35
 12065  12BD                     __ptext35:	
 12066 ;; *************** function _get_scale_val *****************
 12067 ;; Defined at:
 12068 ;;		line 28 in file "loadcell.c"
 12069 ;; Parameters:    Size  Location     Type
 12070 ;;  n               2    0[BANK0 ] int 
 12071 ;; Auto vars:     Size  Location     Type
 12072 ;;  i               1   17[BANK0 ] unsigned char 
 12073 ;;  j               1   12[BANK0 ] unsigned char 
 12074 ;;  weight_count    4   13[BANK0 ] unsigned long 
 12075 ;;  weight_add      4    8[BANK0 ] unsigned long 
 12076 ;; Return value:  Size  Location     Type
 12077 ;;                  4    0[BANK0 ] unsigned long 
 12078 ;; Registers used:
 12079 ;;		wreg, status,2, status,0, pclath, cstack
 12080 ;; Tracked objects:
 12081 ;;		On entry : 0/0
 12082 ;;		On exit  : 0/0
 12083 ;;		Unchanged: 0/0
 12084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12085 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12086 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12087 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12088 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12089 ;;Total ram usage:       18 bytes
 12090 ;; Hardware stack levels used: 1
 12091 ;; Hardware stack levels required when called: 1
 12092 ;; This function calls:
 12093 ;;		___lldiv
 12094 ;;		_get_CELL_DAT_VAL
 12095 ;;		_set_CELL_CLK_HIGH
 12096 ;;		_set_CELL_CLK_LOW
 12097 ;; This function is called by:
 12098 ;;		_main
 12099 ;; This function uses a non-reentrant model
 12100 ;;
 12101                           
 12102                           
 12103                           ;psect for function _get_scale_val
 12104  12BD                     _get_scale_val:
 12105  12BD                     l3916:	
 12106                           ;incstack = 0
 12107                           ; Regs used in _get_scale_val: [wreg+status,2+status,0+pclath+cstack]
 12108                           
 12109                           
 12110                           ;loadcell.c: 30: set_CELL_CLK_LOW();
 12111  12BD  319C  2440  3192   	fcall	_set_CELL_CLK_LOW
 12112  12C0                     l3918:
 12113                           
 12114                           ;loadcell.c: 32: unsigned long weight_count = 0;
 12115  12C0  3000               	movlw	0
 12116  12C1  0020               	movlb	0	; select bank0
 12117  12C2  00B0               	movwf	get_scale_val@weight_count+3
 12118  12C3  3000               	movlw	0
 12119  12C4  00AF               	movwf	get_scale_val@weight_count+2
 12120  12C5  3000               	movlw	0
 12121  12C6  00AE               	movwf	get_scale_val@weight_count+1
 12122  12C7  3000               	movlw	0
 12123  12C8  00AD               	movwf	get_scale_val@weight_count
 12124  12C9                     l3920:
 12125                           
 12126                           ;loadcell.c: 33: unsigned long weight_add = 0;
 12127  12C9  3000               	movlw	0
 12128  12CA  00AB               	movwf	get_scale_val@weight_add+3
 12129  12CB  3000               	movlw	0
 12130  12CC  00AA               	movwf	get_scale_val@weight_add+2
 12131  12CD  3000               	movlw	0
 12132  12CE  00A9               	movwf	get_scale_val@weight_add+1
 12133  12CF  3000               	movlw	0
 12134  12D0  00A8               	movwf	get_scale_val@weight_add
 12135  12D1                     l3922:
 12136                           
 12137                           ;loadcell.c: 34: for (uint8_t j = 0; j < n; j++)
 12138  12D1  01AC               	clrf	get_scale_val@j
 12139  12D2  2B4D               	goto	l3972
 12140  12D3                     l3924:
 12141  12D3  319C  245D  3192   	fcall	_get_CELL_DAT_VAL
 12142  12D6  0870               	movf	?_get_CELL_DAT_VAL,w
 12143  12D7  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 12144  12D8  1903               	btfsc	3,2
 12145  12D9  2ADB               	goto	u5151
 12146  12DA  2ADC               	goto	u5150
 12147  12DB                     u5151:
 12148  12DB  2AD3               	goto	l3924
 12149  12DC                     u5150:
 12150  12DC                     l3926:
 12151  12DC  319C  245D  3192   	fcall	_get_CELL_DAT_VAL
 12152  12DF  0370               	decf	?_get_CELL_DAT_VAL,w
 12153  12E0  0471               	iorwf	?_get_CELL_DAT_VAL+1,w
 12154  12E1  1903               	btfsc	3,2
 12155  12E2  2AE4               	goto	u5161
 12156  12E3  2AE5               	goto	u5160
 12157  12E4                     u5161:
 12158  12E4  2ADC               	goto	l3926
 12159  12E5                     u5160:
 12160  12E5                     l3928:
 12161                           
 12162                           ;loadcell.c: 38: _delay((unsigned long)((10)*(8000000/4000000.0)));
 12163  12E5  3006               	movlw	6
 12164  12E6                     u5947:
 12165  12E6  0B89               	decfsz	9,f
 12166  12E7  2AE6               	goto	u5947
 12167  12E8  3200               	nop2
 12168  12E9                     l3930:
 12169                           
 12170                           ;loadcell.c: 40: uint8_t i;;loadcell.c: 41: for (i = 0; i < 24; i++){
 12171  12E9  0020               	movlb	0	; select bank0
 12172  12EA  01B1               	clrf	get_scale_val@i
 12173  12EB                     l3936:
 12174                           
 12175                           ;loadcell.c: 42: weight_count <<= 1;
 12176  12EB  3001               	movlw	1
 12177  12EC                     u5175:
 12178  12EC  35AD               	lslf	get_scale_val@weight_count,f
 12179  12ED  0DAE               	rlf	get_scale_val@weight_count+1,f
 12180  12EE  0DAF               	rlf	get_scale_val@weight_count+2,f
 12181  12EF  0DB0               	rlf	get_scale_val@weight_count+3,f
 12182  12F0  0B89               	decfsz	9,f
 12183  12F1  2AEC               	goto	u5175
 12184  12F2                     l3938:
 12185                           
 12186                           ;loadcell.c: 43: set_CELL_CLK_HIGH();
 12187  12F2  319C  2435  3192   	fcall	_set_CELL_CLK_HIGH
 12188  12F5                     l3940:
 12189                           
 12190                           ;loadcell.c: 44: _delay((unsigned long)((10)*(8000000/4000000.0)));
 12191  12F5  3006               	movlw	6
 12192  12F6                     u5957:
 12193  12F6  0B89               	decfsz	9,f
 12194  12F7  2AF6               	goto	u5957
 12195  12F8  3200               	nop2
 12196  12F9                     l3942:
 12197                           
 12198                           ;loadcell.c: 45: set_CELL_CLK_LOW();
 12199  12F9  319C  2440  3192   	fcall	_set_CELL_CLK_LOW
 12200  12FC                     l3944:
 12201                           
 12202                           ;loadcell.c: 46: weight_count += get_CELL_DAT_VAL();
 12203  12FC  319C  245D  3192   	fcall	_get_CELL_DAT_VAL
 12204  12FF  0870               	movf	?_get_CELL_DAT_VAL,w
 12205  1300  0020               	movlb	0	; select bank0
 12206  1301  00A4               	movwf	??_get_scale_val
 12207  1302  0871               	movf	?_get_CELL_DAT_VAL+1,w
 12208  1303  00A5               	movwf	??_get_scale_val+1
 12209  1304  3000               	movlw	0
 12210  1305  1BA5               	btfsc	??_get_scale_val+1,7
 12211  1306  30FF               	movlw	255
 12212  1307  00A6               	movwf	??_get_scale_val+2
 12213  1308  00A7               	movwf	??_get_scale_val+3
 12214  1309  0824               	movf	??_get_scale_val,w
 12215  130A  07AD               	addwf	get_scale_val@weight_count,f
 12216  130B  0825               	movf	??_get_scale_val+1,w
 12217  130C  3DAE               	addwfc	get_scale_val@weight_count+1,f
 12218  130D  0826               	movf	??_get_scale_val+2,w
 12219  130E  3DAF               	addwfc	get_scale_val@weight_count+2,f
 12220  130F  0827               	movf	??_get_scale_val+3,w
 12221  1310  3DB0               	addwfc	get_scale_val@weight_count+3,f
 12222  1311                     l3946:
 12223                           
 12224                           ;loadcell.c: 47: _delay((unsigned long)((10)*(8000000/4000000.0)));
 12225  1311  3006               	movlw	6
 12226  1312                     u5967:
 12227  1312  0B89               	decfsz	9,f
 12228  1313  2B12               	goto	u5967
 12229  1314  3200               	nop2
 12230  1315                     l3948:
 12231  1315  3001               	movlw	1
 12232  1316  0020               	movlb	0	; select bank0
 12233  1317  00A4               	movwf	??_get_scale_val
 12234  1318  0824               	movf	??_get_scale_val,w
 12235  1319  07B1               	addwf	get_scale_val@i,f
 12236  131A                     l3950:
 12237  131A  3018               	movlw	24
 12238  131B  0231               	subwf	get_scale_val@i,w
 12239  131C  1C03               	skipc
 12240  131D  2B1F               	goto	u5181
 12241  131E  2B20               	goto	u5180
 12242  131F                     u5181:
 12243  131F  2AEB               	goto	l3936
 12244  1320                     u5180:
 12245  1320                     l3952:
 12246                           
 12247                           ;loadcell.c: 48: };loadcell.c: 50: for (i = 0; i < 1; i++){
 12248  1320  01B1               	clrf	get_scale_val@i
 12249  1321                     l3958:
 12250                           
 12251                           ;loadcell.c: 51: set_CELL_CLK_HIGH();
 12252  1321  319C  2435  3192   	fcall	_set_CELL_CLK_HIGH
 12253  1324                     l3960:
 12254                           
 12255                           ;loadcell.c: 52: _delay((unsigned long)((10)*(8000000/4000000.0)));
 12256  1324  3006               	movlw	6
 12257  1325                     u5977:
 12258  1325  0B89               	decfsz	9,f
 12259  1326  2B25               	goto	u5977
 12260  1327  3200               	nop2
 12261                           
 12262                           ;loadcell.c: 53: set_CELL_CLK_LOW();
 12263  1328  319C  2440  3192   	fcall	_set_CELL_CLK_LOW
 12264  132B                     l3962:
 12265                           
 12266                           ;loadcell.c: 54: _delay((unsigned long)((10)*(8000000/4000000.0)));
 12267  132B  3006               	movlw	6
 12268  132C                     u5987:
 12269  132C  0B89               	decfsz	9,f
 12270  132D  2B2C               	goto	u5987
 12271  132E  3200               	nop2
 12272  132F                     l3964:
 12273  132F  3001               	movlw	1
 12274  1330  0020               	movlb	0	; select bank0
 12275  1331  00A4               	movwf	??_get_scale_val
 12276  1332  0824               	movf	??_get_scale_val,w
 12277  1333  07B1               	addwf	get_scale_val@i,f
 12278  1334                     l3966:
 12279  1334  0831               	movf	get_scale_val@i,w
 12280  1335  1903               	btfsc	3,2
 12281  1336  2B38               	goto	u5191
 12282  1337  2B39               	goto	u5190
 12283  1338                     u5191:
 12284  1338  2B21               	goto	l3958
 12285  1339                     u5190:
 12286  1339                     l3968:
 12287                           
 12288                           ;loadcell.c: 55: };;loadcell.c: 56: weight_add += weight_count;
 12289  1339  082D               	movf	get_scale_val@weight_count,w
 12290  133A  07A8               	addwf	get_scale_val@weight_add,f
 12291  133B  082E               	movf	get_scale_val@weight_count+1,w
 12292  133C  3DA9               	addwfc	get_scale_val@weight_add+1,f
 12293  133D  082F               	movf	get_scale_val@weight_count+2,w
 12294  133E  3DAA               	addwfc	get_scale_val@weight_add+2,f
 12295  133F  0830               	movf	get_scale_val@weight_count+3,w
 12296  1340  3DAB               	addwfc	get_scale_val@weight_add+3,f
 12297                           
 12298                           ;loadcell.c: 57: weight_count = 0;
 12299  1341  3000               	movlw	0
 12300  1342  00B0               	movwf	get_scale_val@weight_count+3
 12301  1343  3000               	movlw	0
 12302  1344  00AF               	movwf	get_scale_val@weight_count+2
 12303  1345  3000               	movlw	0
 12304  1346  00AE               	movwf	get_scale_val@weight_count+1
 12305  1347  3000               	movlw	0
 12306  1348  00AD               	movwf	get_scale_val@weight_count
 12307  1349                     l3970:
 12308  1349  3001               	movlw	1
 12309  134A  00A4               	movwf	??_get_scale_val
 12310  134B  0824               	movf	??_get_scale_val,w
 12311  134C  07AC               	addwf	get_scale_val@j,f
 12312  134D                     l3972:
 12313  134D  0821               	movf	get_scale_val@n+1,w
 12314  134E  3A80               	xorlw	128
 12315  134F  3C80               	sublw	128
 12316  1350  1D03               	skipz
 12317  1351  2B54               	goto	u5205
 12318  1352  0820               	movf	get_scale_val@n,w
 12319  1353  022C               	subwf	get_scale_val@j,w
 12320  1354                     u5205:
 12321  1354  1C03               	skipc
 12322  1355  2B57               	goto	u5201
 12323  1356  2B58               	goto	u5200
 12324  1357                     u5201:
 12325  1357  2AD3               	goto	l3924
 12326  1358                     u5200:
 12327  1358                     l3974:
 12328                           
 12329                           ;loadcell.c: 58: };loadcell.c: 59: weight_count = weight_add / n;
 12330  1358  0020               	movlb	0	; select bank0
 12331  1359  0820               	movf	get_scale_val@n,w
 12332  135A  00F0               	movwf	___lldiv@divisor
 12333  135B  0821               	movf	get_scale_val@n+1,w
 12334  135C  00F1               	movwf	___lldiv@divisor+1
 12335  135D  0D89               	rlf	9,f
 12336  135E  3B89               	subwfb	9,f
 12337  135F  0989               	comf	9,f
 12338  1360  00F2               	movwf	___lldiv@divisor+2
 12339  1361  00F3               	movwf	___lldiv@divisor+3
 12340  1362  082B               	movf	get_scale_val@weight_add+3,w
 12341  1363  00F7               	movwf	___lldiv@dividend+3
 12342  1364  082A               	movf	get_scale_val@weight_add+2,w
 12343  1365  00F6               	movwf	___lldiv@dividend+2
 12344  1366  0829               	movf	get_scale_val@weight_add+1,w
 12345  1367  00F5               	movwf	___lldiv@dividend+1
 12346  1368  0828               	movf	get_scale_val@weight_add,w
 12347  1369  00F4               	movwf	___lldiv@dividend
 12348  136A  319F  2746  3192   	fcall	___lldiv
 12349  136D  0873               	movf	?___lldiv+3,w
 12350  136E  0020               	movlb	0	; select bank0
 12351  136F  00B0               	movwf	get_scale_val@weight_count+3
 12352  1370  0872               	movf	?___lldiv+2,w
 12353  1371  00AF               	movwf	get_scale_val@weight_count+2
 12354  1372  0871               	movf	?___lldiv+1,w
 12355  1373  00AE               	movwf	get_scale_val@weight_count+1
 12356  1374  0870               	movf	?___lldiv,w
 12357  1375  00AD               	movwf	get_scale_val@weight_count
 12358  1376                     l3976:
 12359                           
 12360                           ;loadcell.c: 62: weight_count = weight_count ^ 0x800000;
 12361  1376  3000               	movlw	0
 12362  1377  062D               	xorwf	get_scale_val@weight_count,w
 12363  1378  00A4               	movwf	??_get_scale_val
 12364  1379  3000               	movlw	0
 12365  137A  062E               	xorwf	get_scale_val@weight_count+1,w
 12366  137B  00A5               	movwf	??_get_scale_val+1
 12367  137C  3080               	movlw	128
 12368  137D  062F               	xorwf	get_scale_val@weight_count+2,w
 12369  137E  00A6               	movwf	??_get_scale_val+2
 12370  137F  3000               	movlw	0
 12371  1380  0630               	xorwf	get_scale_val@weight_count+3,w
 12372  1381  00A7               	movwf	??_get_scale_val+3
 12373  1382  0827               	movf	??_get_scale_val+3,w
 12374  1383  00B0               	movwf	get_scale_val@weight_count+3
 12375  1384  0826               	movf	??_get_scale_val+2,w
 12376  1385  00AF               	movwf	get_scale_val@weight_count+2
 12377  1386  0825               	movf	??_get_scale_val+1,w
 12378  1387  00AE               	movwf	get_scale_val@weight_count+1
 12379  1388  0824               	movf	??_get_scale_val,w
 12380  1389  00AD               	movwf	get_scale_val@weight_count
 12381  138A                     l3978:
 12382                           
 12383                           ;loadcell.c: 63: return weight_count;
 12384  138A  0830               	movf	get_scale_val@weight_count+3,w
 12385  138B  00A3               	movwf	?_get_scale_val+3
 12386  138C  082F               	movf	get_scale_val@weight_count+2,w
 12387  138D  00A2               	movwf	?_get_scale_val+2
 12388  138E  082E               	movf	get_scale_val@weight_count+1,w
 12389  138F  00A1               	movwf	?_get_scale_val+1
 12390  1390  082D               	movf	get_scale_val@weight_count,w
 12391  1391  00A0               	movwf	?_get_scale_val
 12392  1392                     l142:
 12393  1392  0008               	return
 12394  1393                     __end_of_get_scale_val:
 12395                           
 12396                           	psect	text36
 12397  1C40                     __ptext36:	
 12398 ;; *************** function _set_CELL_CLK_LOW *****************
 12399 ;; Defined at:
 12400 ;;		line 7 in file "loadcell.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;		None
 12403 ;; Auto vars:     Size  Location     Type
 12404 ;;		None
 12405 ;; Return value:  Size  Location     Type
 12406 ;;                  1    wreg      void 
 12407 ;; Registers used:
 12408 ;;		wreg, status,2, status,0
 12409 ;; Tracked objects:
 12410 ;;		On entry : 0/0
 12411 ;;		On exit  : 0/0
 12412 ;;		Unchanged: 0/0
 12413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12418 ;;Total ram usage:        1 bytes
 12419 ;; Hardware stack levels used: 1
 12420 ;; This function calls:
 12421 ;;		Nothing
 12422 ;; This function is called by:
 12423 ;;		_get_scale_val
 12424 ;; This function uses a non-reentrant model
 12425 ;;
 12426                           
 12427                           
 12428                           ;psect for function _set_CELL_CLK_LOW
 12429  1C40                     _set_CELL_CLK_LOW:
 12430  1C40                     l3302:	
 12431                           ;incstack = 0
 12432                           ; Regs used in _set_CELL_CLK_LOW: [wreg+status,2+status,0]
 12433                           
 12434  1C40  30FE               	movlw	254
 12435  1C41  00F0               	movwf	??_set_CELL_CLK_LOW
 12436  1C42  0870               	movf	??_set_CELL_CLK_LOW,w
 12437  1C43  0022               	movlb	2	; select bank2
 12438  1C44  058C               	andwf	12,f	;volatile
 12439  1C45                     l112:
 12440  1C45  0008               	return
 12441  1C46                     __end_of_set_CELL_CLK_LOW:
 12442                           
 12443                           	psect	text37
 12444  1C35                     __ptext37:	
 12445 ;; *************** function _set_CELL_CLK_HIGH *****************
 12446 ;; Defined at:
 12447 ;;		line 12 in file "loadcell.c"
 12448 ;; Parameters:    Size  Location     Type
 12449 ;;		None
 12450 ;; Auto vars:     Size  Location     Type
 12451 ;;		None
 12452 ;; Return value:  Size  Location     Type
 12453 ;;                  1    wreg      void 
 12454 ;; Registers used:
 12455 ;;		None
 12456 ;; Tracked objects:
 12457 ;;		On entry : 0/0
 12458 ;;		On exit  : 0/0
 12459 ;;		Unchanged: 0/0
 12460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12465 ;;Total ram usage:        0 bytes
 12466 ;; Hardware stack levels used: 1
 12467 ;; This function calls:
 12468 ;;		Nothing
 12469 ;; This function is called by:
 12470 ;;		_get_scale_val
 12471 ;; This function uses a non-reentrant model
 12472 ;;
 12473                           
 12474                           
 12475                           ;psect for function _set_CELL_CLK_HIGH
 12476  1C35                     _set_CELL_CLK_HIGH:
 12477  1C35                     l3304:	
 12478                           ;incstack = 0
 12479                           ; Regs used in _set_CELL_CLK_HIGH: []
 12480                           
 12481  1C35  0022               	movlb	2	; select bank2
 12482  1C36  140C               	bsf	12,0	;volatile
 12483  1C37                     l115:
 12484  1C37  0008               	return
 12485  1C38                     __end_of_set_CELL_CLK_HIGH:
 12486                           
 12487                           	psect	text38
 12488  1C5D                     __ptext38:	
 12489 ;; *************** function _get_CELL_DAT_VAL *****************
 12490 ;; Defined at:
 12491 ;;		line 15 in file "loadcell.c"
 12492 ;; Parameters:    Size  Location     Type
 12493 ;;		None
 12494 ;; Auto vars:     Size  Location     Type
 12495 ;;		None
 12496 ;; Return value:  Size  Location     Type
 12497 ;;                  2    0[COMMON] int 
 12498 ;; Registers used:
 12499 ;;		wreg, status,2, status,0
 12500 ;; Tracked objects:
 12501 ;;		On entry : 0/0
 12502 ;;		On exit  : 0/0
 12503 ;;		Unchanged: 0/0
 12504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12508 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12509 ;;Total ram usage:        4 bytes
 12510 ;; Hardware stack levels used: 1
 12511 ;; This function calls:
 12512 ;;		Nothing
 12513 ;; This function is called by:
 12514 ;;		_get_scale_val
 12515 ;; This function uses a non-reentrant model
 12516 ;;
 12517                           
 12518                           
 12519                           ;psect for function _get_CELL_DAT_VAL
 12520  1C5D                     _get_CELL_DAT_VAL:
 12521  1C5D                     l3306:	
 12522                           ;incstack = 0
 12523                           ; Regs used in _get_CELL_DAT_VAL: [wreg+status,2+status,0]
 12524                           
 12525  1C5D                     l3312:	
 12526                           ;loadcell.c: 16: if(0x02 == 0x01){ return PORTAbits.RA0; }
 12527                           
 12528  1C5D  0020               	movlb	0	; select bank0
 12529  1C5E  0C0C               	rrf	12,w	;volatile
 12530  1C5F  3901               	andlw	1
 12531  1C60  00F2               	movwf	??_get_CELL_DAT_VAL
 12532  1C61  01F3               	clrf	??_get_CELL_DAT_VAL+1
 12533  1C62  0872               	movf	??_get_CELL_DAT_VAL,w
 12534  1C63  00F0               	movwf	?_get_CELL_DAT_VAL
 12535  1C64  0873               	movf	??_get_CELL_DAT_VAL+1,w
 12536  1C65  00F1               	movwf	?_get_CELL_DAT_VAL+1
 12537  1C66                     l119:
 12538  1C66  0008               	return
 12539  1C67                     __end_of_get_CELL_DAT_VAL:
 12540                           
 12541                           	psect	text39
 12542  1F46                     __ptext39:	
 12543 ;; *************** function ___lldiv *****************
 12544 ;; Defined at:
 12545 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
 12546 ;; Parameters:    Size  Location     Type
 12547 ;;  divisor         4    0[COMMON] unsigned long 
 12548 ;;  dividend        4    4[COMMON] unsigned long 
 12549 ;; Auto vars:     Size  Location     Type
 12550 ;;  quotient        4    9[COMMON] unsigned long 
 12551 ;;  counter         1   13[COMMON] unsigned char 
 12552 ;; Return value:  Size  Location     Type
 12553 ;;                  4    0[COMMON] unsigned long 
 12554 ;; Registers used:
 12555 ;;		wreg, status,2, status,0
 12556 ;; Tracked objects:
 12557 ;;		On entry : 0/0
 12558 ;;		On exit  : 0/0
 12559 ;;		Unchanged: 0/0
 12560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12561 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12562 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12564 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;Total ram usage:       14 bytes
 12566 ;; Hardware stack levels used: 1
 12567 ;; This function calls:
 12568 ;;		Nothing
 12569 ;; This function is called by:
 12570 ;;		_get_scale_val
 12571 ;;		_sprintf
 12572 ;; This function uses a non-reentrant model
 12573 ;;
 12574                           
 12575                           
 12576                           ;psect for function ___lldiv
 12577  1F46                     ___lldiv:
 12578  1F46                     l3532:	
 12579                           ;incstack = 0
 12580                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12581                           
 12582  1F46  3000               	movlw	0
 12583  1F47  00FC               	movwf	___lldiv@quotient+3
 12584  1F48  3000               	movlw	0
 12585  1F49  00FB               	movwf	___lldiv@quotient+2
 12586  1F4A  3000               	movlw	0
 12587  1F4B  00FA               	movwf	___lldiv@quotient+1
 12588  1F4C  3000               	movlw	0
 12589  1F4D  00F9               	movwf	___lldiv@quotient
 12590  1F4E  0873               	movf	___lldiv@divisor+3,w
 12591  1F4F  0472               	iorwf	___lldiv@divisor+2,w
 12592  1F50  0471               	iorwf	___lldiv@divisor+1,w
 12593  1F51  0470               	iorwf	___lldiv@divisor,w
 12594  1F52  1903               	skipnz
 12595  1F53  2F55               	goto	u4401
 12596  1F54  2F56               	goto	u4400
 12597  1F55                     u4401:
 12598  1F55  2F97               	goto	l3552
 12599  1F56                     u4400:
 12600  1F56                     l3534:
 12601  1F56  01FD               	clrf	___lldiv@counter
 12602  1F57  0AFD               	incf	___lldiv@counter,f
 12603  1F58  2F64               	goto	l3538
 12604  1F59                     l3536:
 12605  1F59  3001               	movlw	1
 12606  1F5A                     u4415:
 12607  1F5A  35F0               	lslf	___lldiv@divisor,f
 12608  1F5B  0DF1               	rlf	___lldiv@divisor+1,f
 12609  1F5C  0DF2               	rlf	___lldiv@divisor+2,f
 12610  1F5D  0DF3               	rlf	___lldiv@divisor+3,f
 12611  1F5E  0B89               	decfsz	9,f
 12612  1F5F  2F5A               	goto	u4415
 12613  1F60  3001               	movlw	1
 12614  1F61  00F8               	movwf	??___lldiv
 12615  1F62  0878               	movf	??___lldiv,w
 12616  1F63  07FD               	addwf	___lldiv@counter,f
 12617  1F64                     l3538:
 12618  1F64  1FF3               	btfss	___lldiv@divisor+3,7
 12619  1F65  2F67               	goto	u4421
 12620  1F66  2F68               	goto	u4420
 12621  1F67                     u4421:
 12622  1F67  2F59               	goto	l3536
 12623  1F68                     u4420:
 12624  1F68                     l3540:
 12625  1F68  3001               	movlw	1
 12626  1F69                     u4435:
 12627  1F69  35F9               	lslf	___lldiv@quotient,f
 12628  1F6A  0DFA               	rlf	___lldiv@quotient+1,f
 12629  1F6B  0DFB               	rlf	___lldiv@quotient+2,f
 12630  1F6C  0DFC               	rlf	___lldiv@quotient+3,f
 12631  1F6D  0B89               	decfsz	9,f
 12632  1F6E  2F69               	goto	u4435
 12633  1F6F                     l3542:
 12634  1F6F  0873               	movf	___lldiv@divisor+3,w
 12635  1F70  0277               	subwf	___lldiv@dividend+3,w
 12636  1F71  1D03               	skipz
 12637  1F72  2F7D               	goto	u4445
 12638  1F73  0872               	movf	___lldiv@divisor+2,w
 12639  1F74  0276               	subwf	___lldiv@dividend+2,w
 12640  1F75  1D03               	skipz
 12641  1F76  2F7D               	goto	u4445
 12642  1F77  0871               	movf	___lldiv@divisor+1,w
 12643  1F78  0275               	subwf	___lldiv@dividend+1,w
 12644  1F79  1D03               	skipz
 12645  1F7A  2F7D               	goto	u4445
 12646  1F7B  0870               	movf	___lldiv@divisor,w
 12647  1F7C  0274               	subwf	___lldiv@dividend,w
 12648  1F7D                     u4445:
 12649  1F7D  1C03               	skipc
 12650  1F7E  2F80               	goto	u4441
 12651  1F7F  2F81               	goto	u4440
 12652  1F80                     u4441:
 12653  1F80  2F8A               	goto	l3548
 12654  1F81                     u4440:
 12655  1F81                     l3544:
 12656  1F81  0870               	movf	___lldiv@divisor,w
 12657  1F82  02F4               	subwf	___lldiv@dividend,f
 12658  1F83  0871               	movf	___lldiv@divisor+1,w
 12659  1F84  3BF5               	subwfb	___lldiv@dividend+1,f
 12660  1F85  0872               	movf	___lldiv@divisor+2,w
 12661  1F86  3BF6               	subwfb	___lldiv@dividend+2,f
 12662  1F87  0873               	movf	___lldiv@divisor+3,w
 12663  1F88  3BF7               	subwfb	___lldiv@dividend+3,f
 12664  1F89                     l3546:
 12665  1F89  1479               	bsf	___lldiv@quotient,0
 12666  1F8A                     l3548:
 12667  1F8A  3001               	movlw	1
 12668  1F8B                     u4455:
 12669  1F8B  36F3               	lsrf	___lldiv@divisor+3,f
 12670  1F8C  0CF2               	rrf	___lldiv@divisor+2,f
 12671  1F8D  0CF1               	rrf	___lldiv@divisor+1,f
 12672  1F8E  0CF0               	rrf	___lldiv@divisor,f
 12673  1F8F  0B89               	decfsz	9,f
 12674  1F90  2F8B               	goto	u4455
 12675  1F91                     l3550:
 12676  1F91  3001               	movlw	1
 12677  1F92  02FD               	subwf	___lldiv@counter,f
 12678  1F93  1D03               	btfss	3,2
 12679  1F94  2F96               	goto	u4461
 12680  1F95  2F97               	goto	u4460
 12681  1F96                     u4461:
 12682  1F96  2F68               	goto	l3540
 12683  1F97                     u4460:
 12684  1F97                     l3552:
 12685  1F97  087C               	movf	___lldiv@quotient+3,w
 12686  1F98  00F3               	movwf	?___lldiv+3
 12687  1F99  087B               	movf	___lldiv@quotient+2,w
 12688  1F9A  00F2               	movwf	?___lldiv+2
 12689  1F9B  087A               	movf	___lldiv@quotient+1,w
 12690  1F9C  00F1               	movwf	?___lldiv+1
 12691  1F9D  0879               	movf	___lldiv@quotient,w
 12692  1F9E  00F0               	movwf	?___lldiv
 12693  1F9F                     l557:
 12694  1F9F  0008               	return
 12695  1FA0                     __end_of___lldiv:
 12696                           
 12697                           	psect	text40
 12698  1C53                     __ptext40:	
 12699 ;; *************** function _SYSTEM_Initialize *****************
 12700 ;; Defined at:
 12701 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12702 ;; Parameters:    Size  Location     Type
 12703 ;;		None
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;		None
 12706 ;; Return value:  Size  Location     Type
 12707 ;;                  1    wreg      void 
 12708 ;; Registers used:
 12709 ;;		wreg, status,2, status,0, pclath, cstack
 12710 ;; Tracked objects:
 12711 ;;		On entry : 0/0
 12712 ;;		On exit  : 0/0
 12713 ;;		Unchanged: 0/0
 12714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12719 ;;Total ram usage:        0 bytes
 12720 ;; Hardware stack levels used: 1
 12721 ;; Hardware stack levels required when called: 1
 12722 ;; This function calls:
 12723 ;;		_OSCILLATOR_Initialize
 12724 ;;		_PIN_MANAGER_Initialize
 12725 ;;		_WDT_Initialize
 12726 ;; This function is called by:
 12727 ;;		_main
 12728 ;; This function uses a non-reentrant model
 12729 ;;
 12730                           
 12731                           
 12732                           ;psect for function _SYSTEM_Initialize
 12733  1C53                     _SYSTEM_Initialize:
 12734  1C53                     l3842:	
 12735                           ;incstack = 0
 12736                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12737                           
 12738                           
 12739                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 12740  1C53  319C  24A6  319C   	fcall	_PIN_MANAGER_Initialize
 12741                           
 12742                           ;mcc.c: 54: OSCILLATOR_Initialize();
 12743  1C56  319C  244C  319C   	fcall	_OSCILLATOR_Initialize
 12744                           
 12745                           ;mcc.c: 55: WDT_Initialize();
 12746  1C59  319C  2438  319C   	fcall	_WDT_Initialize
 12747  1C5C                     l17:
 12748  1C5C  0008               	return
 12749  1C5D                     __end_of_SYSTEM_Initialize:
 12750                           
 12751                           	psect	text41
 12752  1C38                     __ptext41:	
 12753 ;; *************** function _WDT_Initialize *****************
 12754 ;; Defined at:
 12755 ;;		line 68 in file "mcc_generated_files/mcc.c"
 12756 ;; Parameters:    Size  Location     Type
 12757 ;;		None
 12758 ;; Auto vars:     Size  Location     Type
 12759 ;;		None
 12760 ;; Return value:  Size  Location     Type
 12761 ;;                  1    wreg      void 
 12762 ;; Registers used:
 12763 ;;		wreg
 12764 ;; Tracked objects:
 12765 ;;		On entry : 0/0
 12766 ;;		On exit  : 0/0
 12767 ;;		Unchanged: 0/0
 12768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12773 ;;Total ram usage:        0 bytes
 12774 ;; Hardware stack levels used: 1
 12775 ;; This function calls:
 12776 ;;		Nothing
 12777 ;; This function is called by:
 12778 ;;		_SYSTEM_Initialize
 12779 ;; This function uses a non-reentrant model
 12780 ;;
 12781                           
 12782                           
 12783                           ;psect for function _WDT_Initialize
 12784  1C38                     _WDT_Initialize:
 12785  1C38                     l3282:	
 12786                           ;incstack = 0
 12787                           ; Regs used in _WDT_Initialize: [wreg]
 12788                           
 12789                           
 12790                           ;mcc.c: 71: WDTCON = 0x16;
 12791  1C38  3016               	movlw	22
 12792  1C39  0021               	movlb	1	; select bank1
 12793  1C3A  0097               	movwf	23	;volatile
 12794  1C3B                     l23:
 12795  1C3B  0008               	return
 12796  1C3C                     __end_of_WDT_Initialize:
 12797                           
 12798                           	psect	text42
 12799  1CA6                     __ptext42:	
 12800 ;; *************** function _PIN_MANAGER_Initialize *****************
 12801 ;; Defined at:
 12802 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12803 ;; Parameters:    Size  Location     Type
 12804 ;;		None
 12805 ;; Auto vars:     Size  Location     Type
 12806 ;;		None
 12807 ;; Return value:  Size  Location     Type
 12808 ;;                  1    wreg      void 
 12809 ;; Registers used:
 12810 ;;		wreg, status,2
 12811 ;; Tracked objects:
 12812 ;;		On entry : 0/0
 12813 ;;		On exit  : 0/0
 12814 ;;		Unchanged: 0/0
 12815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12820 ;;Total ram usage:        0 bytes
 12821 ;; Hardware stack levels used: 1
 12822 ;; This function calls:
 12823 ;;		Nothing
 12824 ;; This function is called by:
 12825 ;;		_SYSTEM_Initialize
 12826 ;; This function uses a non-reentrant model
 12827 ;;
 12828                           
 12829                           
 12830                           ;psect for function _PIN_MANAGER_Initialize
 12831  1CA6                     _PIN_MANAGER_Initialize:
 12832  1CA6                     l3264:	
 12833                           ;incstack = 0
 12834                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12835                           
 12836                           
 12837                           ;pin_manager.c: 60: LATA = 0x00;
 12838  1CA6  0022               	movlb	2	; select bank2
 12839  1CA7  018C               	clrf	12	;volatile
 12840                           
 12841                           ;pin_manager.c: 61: LATB = 0x00;
 12842  1CA8  018D               	clrf	13	;volatile
 12843  1CA9                     l3266:
 12844                           
 12845                           ;pin_manager.c: 66: TRISA = 0xFF;
 12846  1CA9  30FF               	movlw	255
 12847  1CAA  0021               	movlb	1	; select bank1
 12848  1CAB  008C               	movwf	12	;volatile
 12849  1CAC                     l3268:
 12850                           
 12851                           ;pin_manager.c: 67: TRISB = 0xFF;
 12852  1CAC  30FF               	movlw	255
 12853  1CAD  008D               	movwf	13	;volatile
 12854  1CAE                     l3270:
 12855                           
 12856                           ;pin_manager.c: 72: ANSELB = 0xFE;
 12857  1CAE  30FE               	movlw	254
 12858  1CAF  0023               	movlb	3	; select bank3
 12859  1CB0  008D               	movwf	13	;volatile
 12860  1CB1                     l3272:
 12861                           
 12862                           ;pin_manager.c: 73: ANSELA = 0x1F;
 12863  1CB1  301F               	movlw	31
 12864  1CB2  008C               	movwf	12	;volatile
 12865                           
 12866                           ;pin_manager.c: 78: WPUB = 0x00;
 12867  1CB3  0024               	movlb	4	; select bank4
 12868  1CB4  018D               	clrf	13	;volatile
 12869  1CB5                     l3274:
 12870                           
 12871                           ;pin_manager.c: 79: OPTION_REGbits.nWPUEN = 1;
 12872  1CB5  0021               	movlb	1	; select bank1
 12873  1CB6  1795               	bsf	21,7	;volatile
 12874  1CB7                     l42:
 12875  1CB7  0008               	return
 12876  1CB8                     __end_of_PIN_MANAGER_Initialize:
 12877                           
 12878                           	psect	text43
 12879  1C4C                     __ptext43:	
 12880 ;; *************** function _OSCILLATOR_Initialize *****************
 12881 ;; Defined at:
 12882 ;;		line 58 in file "mcc_generated_files/mcc.c"
 12883 ;; Parameters:    Size  Location     Type
 12884 ;;		None
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;		None
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  1    wreg      void 
 12889 ;; Registers used:
 12890 ;;		wreg, status,2
 12891 ;; Tracked objects:
 12892 ;;		On entry : 0/0
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12900 ;;Total ram usage:        0 bytes
 12901 ;; Hardware stack levels used: 1
 12902 ;; This function calls:
 12903 ;;		Nothing
 12904 ;; This function is called by:
 12905 ;;		_SYSTEM_Initialize
 12906 ;; This function uses a non-reentrant model
 12907 ;;
 12908                           
 12909                           
 12910                           ;psect for function _OSCILLATOR_Initialize
 12911  1C4C                     _OSCILLATOR_Initialize:
 12912  1C4C                     l3276:	
 12913                           ;incstack = 0
 12914                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12915                           
 12916                           
 12917                           ;mcc.c: 61: OSCCON = 0x70;
 12918  1C4C  3070               	movlw	112
 12919  1C4D  0021               	movlb	1	; select bank1
 12920  1C4E  0099               	movwf	25	;volatile
 12921  1C4F                     l3278:
 12922                           
 12923                           ;mcc.c: 63: OSCTUNE = 0x00;
 12924  1C4F  0198               	clrf	24	;volatile
 12925  1C50                     l3280:
 12926                           
 12927                           ;mcc.c: 65: BORCON = 0x00;
 12928  1C50  0022               	movlb	2	; select bank2
 12929  1C51  0196               	clrf	22	;volatile
 12930  1C52                     l20:
 12931  1C52  0008               	return
 12932  1C53                     __end_of_OSCILLATOR_Initialize:
 12933  007E                     btemp	set	126	;btemp
 12934  007E                     wtemp0	set	126
 12935                           
 12936                           	psect	config
 12937                           
 12938                           ;Config register CONFIG1 @ 0x8007
 12939                           ;	Oscillator Selection
 12940                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 12941                           ;	Watchdog Timer Enable
 12942                           ;	WDTE = OFF, WDT disabled
 12943                           ;	Power-up Timer Enable
 12944                           ;	PWRTE = OFF, PWRT disabled
 12945                           ;	MCLR Pin Function Select
 12946                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 12947                           ;	Flash Program Memory Code Protection
 12948                           ;	CP = OFF, Program memory code protection is disabled
 12949                           ;	Data Memory Code Protection
 12950                           ;	CPD = OFF, Data memory code protection is disabled
 12951                           ;	Brown-out Reset Enable
 12952                           ;	BOREN = ON, Brown-out Reset enabled
 12953                           ;	Clock Out Enable
 12954                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 12955                           ;	Internal/External Switchover
 12956                           ;	IESO = ON, Internal/External Switchover mode is enabled
 12957                           ;	Fail-Safe Clock Monitor Enable
 12958                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 12959  8007                     	org	32775
 12960  8007  3FE4               	dw	16356
 12961                           
 12962                           ;Config register CONFIG2 @ 0x8008
 12963                           ;	Flash Memory Self-Write Protection
 12964                           ;	WRT = OFF, Write protection off
 12965                           ;	Voltage Regulator Capacitor Enable
 12966                           ;	VCAPEN = 0x3, unprogrammed default
 12967                           ;	PLL Enable
 12968                           ;	PLLEN = OFF, 4x PLL disabled
 12969                           ;	Stack Overflow/Underflow Reset Enable
 12970                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 12971                           ;	Brown-out Reset Voltage Selection
 12972                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 12973                           ;	Low-Voltage Programming Enable
 12974                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 12975  8008                     	org	32776
 12976  8008  1EFF               	dw	7935

Data Sizes:
    Strings     69
    Constant    144
    Data        4
    BSS         41
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     44      72
    BANK2            80      0      16
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[11]), STR_5(CODE[8]), STR_4(CODE[15]), STR_3(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> gramstr(BANK2[16]), valstr(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[2]), gramstr(BANK2[16]), valstr(BANK1[16]), STR_2(CODE[15]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _scale_convert_gram->___xxtofl
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_print
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _get_scale_val->___lldiv

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _scale_convert_gram->___fldiv
    _lcd_clear->_lcd_set_cursor

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   39547
                                             77 BANK0      2     2      0
                                             40 BANK1      4     4      0
                  _SYSTEM_Initialize
                      _get_scale_val
                      _lcd_backlight
                          _lcd_clear
                           _lcd_init
                          _lcd_print
                     _lcd_set_cursor
                 _scale_convert_gram
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   32371
                                              0 BANK1     40    32      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               21    17      4    7408
                                             30 BANK0     21    17      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    15      4    5871
                                             30 BANK0     19    15      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             51 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             69 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             49 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _scale_convert_gram                                  12     8      4    1891
                                             13 BANK0     12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      44
                                              2 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            3     3      0    2066
                                             12 COMMON     1     1      0
                                              6 BANK0      2     2      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       8     7      1     912
                                              8 COMMON     2     1      1
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            4     2      2    1018
                                              8 COMMON     4     2      2
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              6     5      1     418
                                              2 COMMON     6     5      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_backlight                                        1     1      0      44
                                              2 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_scale_val                                       18    14      4    1178
                                              0 BANK0     18    14      4
                            ___lldiv
                   _get_CELL_DAT_VAL
                  _set_CELL_CLK_HIGH
                   _set_CELL_CLK_LOW
 ---------------------------------------------------------------------------------
 (2) _set_CELL_CLK_LOW                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_CELL_CLK_HIGH                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_CELL_DAT_VAL                                     4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _get_scale_val
     ___lldiv
     _get_CELL_DAT_VAL
     _set_CELL_CLK_HIGH
     _set_CELL_CLK_LOW
   _lcd_backlight
     _lcd_cmd
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _lcd_clear
     _lcd_print
       _command
         _lcd_cmd
     _lcd_set_cursor
       _command
   _lcd_init
     _lcd_cmd
   _lcd_print
   _lcd_set_cursor
   _scale_convert_gram
     ___fldiv
     ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     2C      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      10       9       20.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B6      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B6      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Nov 13 13:52:11 2021

                   ___fldiv@aexp 002C                     ___fldiv@bexp 002B                     ___fldiv@sign 0024  
                    _SSPSTATbits 0214                               l20 1C52                               l23 1C3B  
                             l17 1C5C                               l42 1CB7                               l96 143C  
                   ___awdiv@sign 0021              ___wmul@multiplicand 0072                     lcd_clear@col 0027  
            __Umul8_16@word_mpld 0076                     lcd_clear@row 0026                              l112 1C45  
                            l115 1C37                              l221 1C95                              l142 1392  
                            l119 1C66                              l215 0017                              l240 1CE6  
                            l145 1EA4                              l234 1D72                              l218 08F4  
                            l163 1C87                              l243 1E0B                              l172 0804  
                            l228 1D9F                              l166 1C6C                              l190 1CA5  
                            l175 0808                              l184 1C9A                              l416 0FFF  
                            l440 0146                              l169 1C70                              l521 1CF1  
                            l409 164B                              l187 1C9E                              l523 1D05  
                            l517 07D9                              l445 0148                              l702 11FF  
                            l446 0625                              l439 0144                              l712 0034  
                            l720 1C7B                              l481 0504                              l449 028F  
                            l707 1EC1                              l715 0088                              l731 109C  
                            l708 1EDD                              l716 00A1                              l724 10B1  
                            l557 1F9F                              l709 1EF2                              l734 10B1  
                            l742 1283                              l920 1781                              l904 16A3  
                            l489 0665                              l906 17FF                              l738 12BC  
                            l674 1FFF                              l691 120C                              l739 123A  
                            l827 103C                              l852 09F4                              l692 117F  
                            l925 17CD                              l861 0B2C                              l749 12AF  
                            l837 1DD3                              l926 17E7                              l854 09D0  
                            l950 0CFF                              l695 11D3                              l687 1F45  
                            l928 17F6                              l848 0953                              l944 0D83  
                            l873 0AA8                              l777 1E56                              l890 0B23  
                            l882 0B01                              l891 0B2C                              l963 1D38  
                            l956 0D77                              l869 0A86                              l965 1D48  
                            l990 115D                              l894 1D25                              l879 0ACA  
                            l994 110F                              l988 10D4                     ___awmod@sign 0076  
                            wreg 0009                     ___flmul@aexp 0036                     ___flmul@bexp 0037  
                    command@mode 0072                     ___flmul@sign 0031                     ___flmul@temp 003C  
                   ___flmul@prod 0038        get_scale_val@weight_count 002D                  ?_lcd_set_cursor 0078  
                   ___fltol@exp1 005D                             l1001 1129                             l1002 1135  
                           l1008 1CC9                             l3000 098D                             l3010 099E  
                           l3002 0991                             l3100 0ADC                             l3020 09E0  
                           l3012 09B5                             l3004 0995                             l3110 0B13  
                           l3102 0AE0                             l3030 09FD                             l3022 09E1  
                           l3014 09D4                             l3006 0999                             l4000 1D8A  
                           l3120 0B27                             l3112 0B18                             l3104 0AFD  
                           l3040 0A16                             l3024 09E9                             l3016 09DA  
                           l3008 099D                             l3200 0C75                             l4002 1D90  
                           l3122 0B2B                             l3114 0B19                             l3106 0B06  
                           l3050 0A2B                             l3042 0A1C                             l3034 0A06  
                           l3018 09DC                             l3026 09ED                             l3210 0CC8  
                           l3202 0C89                             l3130 0B3B                             l4010 00A8  
                           l3300 1CDD                             l4004 1D94                             l3116 0B1D  
                           l3108 0B0B                             l3060 0A75                             l3044 0A1E  
                           l3036 0A0E                             l3028 09F8                             l3052 0A30  
                           l3212 0CCF                             l3220 0CDF                             l3204 0C9E  
                           l3140 0B50                             l3132 0B3C                             l3124 0B2D  
                           l4100 02CE                             l4020 00C9                             l4012 00AE  
                           l3302 1C40                             l4006 1D9A                             l3118 0B1F  
                           l3070 0A9C                             l3054 0A46                             l3062 0A7E  
                           l3046 0A22                             l3038 0A12                             l3222 0CE3  
                           l3214 0CD3                             l3206 0CB5                             l3150 0B66  
                           l3142 0B58                             l3134 0B41                             l3126 0B33  
                           l4110 0336                             l4102 02DC                             l4022 00CC  
                           l4030 00FC                             l4014 00B4                             l3312 1C5D  
                           l3304 1C35                             l3080 0AB1                             l3072 0AA3  
                           l3064 0A8E                             l3056 0A6A                             l3048 0A23  
                           l3240 0D2D                             l3232 0D04                             l3224 0CE4  
                           l3216 0CD4                             l3208 0CBC                             l3160 0B82  
                           l3152 0B6B                             l3144 0B5D                             l3136 0B46  
                           l3128 0B37                             l4200 05CB                             l4120 0371  
                           l4112 033C                             l4104 02F4                             l4040 0120  
                           l4032 0107                             l4024 00DD                             l4016 00B9  
                           l4008 00A2                             l3306 1C5D                             l3090 0AC1  
                           l3082 0AB6                             l3074 0AA7                             l3066 0A93  
                           l3058 0A70                             l3250 0D5F                             l3234 0D09  
                           l3242 0D31                             l3226 0CE8                             l3218 0CDB  
                           l3170 0BA2                             l3162 0B87                             l3154 0B70  
                           l3146 0B61                             l3138 0B4E                             l3410 1CC8  
                           l3402 1CB9                             l4210 061A                             l4202 05CF  
                           l4114 0341                             l4106 0310                             l4122 037A  
                           l4042 012F                             l4034 0108                             l4026 00EC  
                           l4018 00BD                             l3092 0AC7                             l3076 0AAC  
                           l3084 0AB8                             l3420 1228                             l3260 0D7B  
                           l3252 0D61                             l3244 0D3E                             l3236 0D11  
                           l3228 0CFC                             l3180 0BFD                             l3172 0BAF  
                           l3164 0B8C                             l3156 0B78                             l3148 0B65  
                           l3404 1CBA                             l4300 07AD                             l4220 063D  
                           l4212 061E                             l4204 0608                             l4140 0422  
                           l4132 03D9                             l4124 03D5                             l4116 0355  
                           l4108 031E                             l4060 017F                             l4052 014A  
                           l4044 0133                             l4036 010C                             l4028 00F0  
                           l3270 1CAE                             l3078 0AAF                             l3086 0ABC  
                           l3430 1250                             l3414 120D                             l3254 0D6E  
                           l3246 0D48                             l3238 0D15                             l3190 0C32  
                           l3182 0C0A                             l3174 0BC9                             l3158 0B7A  
                           l3406 1CC0                             l4230 0669                             l4222 064D  
                           l4214 0629                             l4206 0610                             l4142 0426  
                           l4126 03D7                             l4070 01BE                             l4062 018A  
                           l4054 016B                             l4038 010F                             l4046 0140  
                           l3280 1C50                             l3272 1CB1                             l3264 1CA6  
                           l4312 1E57                             l3096 0ACF                             l3088 0ABD  
                           l3520 1CE9                             l3512 11F6                             l3504 11DF  
                           l3440 1276                             l3432 1252                             l3416 121F  
                           l3256 0D72                             l3248 0D56                             l3192 0C39  
                           l3184 0C11                             l3176 0BD6                             l3168 0B95  
                           l3352 1595                             l3344 14C6                             l3408 1CC6  
                           l2800 1FA0                             l4304 07B4                             l4240 0690  
                           l4232 0674                             l4224 0651                             l4216 062D  
                           l4208 0616                             l4160 0468                             l4144 0432  
                           l4152 0443                             l4136 0401                             l4080 01F6  
                           l4072 01C1                             l4064 018E                             l4056 0177  
                           l4048 0142                             l4320 1396                             l3274 1CB5  
                           l3266 1CA9                             l3282 1C38                             l3290 1D6D  
                           l4314 1E9C                             l3098 0AD4                             l3610 1070  
                           l3602 1052                             l3522 1CED                             l3514 1204  
                           l3506 11EF                             l3442 1277                             l3434 125B  
                           l3426 123B                             l3258 0D73                             l3194 0C4D  
                           l3186 0C1E                             l3178 0BF0                             l3354 159B  
                           l3346 14CC                             l2810 1FB1                             l2802 1FA2  
                           l3362 0D86                             l4250 069E                             l4242 0698  
                           l4234 0679                             l4226 0655                             l4218 0638  
                           l4170 04CF                             l4162 0491                             l4154 0450  
                           l4146 0437                             l4138 040B                             l4090 0255  
                           l4082 0206                             l4074 01D8                             l4066 01A5  
                           l4058 017B                             l4306 07C0                             l4330 139F  
                           l4322 1398                             l3276 1C4C                             l3268 1CAC  
                           l3540 1F68                             l3532 1F46                             l3292 1CCA  
                           l3284 1D4B                             l3700 16B7                             l3612 1074  
                           l3620 108C                             l3604 1065                             l3524 1CF6  
                           l3460 12A6                             l3452 128F                             l3444 127D  
                           l3436 1262                             l3428 1241                             l3196 0C54  
                           l3188 0C25                             l2900 102D                             l2820 1FC5  
                           l2812 1FB6                             l2804 1FA6                             l3380 0EA8  
                           l3364 0D8A                             l4260 06E1                             l4244 069C  
                           l4236 0686                             l4228 0659                             l4180 04F9  
                           l4172 04D6                             l4164 04BD                             l4156 045D  
                           l4148 043E                             l4092 026C                             l4084 020A  
                           l4076 01E2                             l4068 01BA                             l4308 07D4  
                           l4340 13A9                             l4332 13A2                             l4324 1399  
                           l3278 1C4F                             l3550 1F91                             l3542 1F6F  
                           l3534 1F56                             l2750 1C7C                             l3294 1CCB  
                           l3286 1D61                             l3702 16BB                             l3630 10A6  
                           l3606 1066                             l3526 1CFB                             l3518 1CE7  
                           l3462 12B4                             l3446 1287                             l3454 129F  
                           l3438 1270                             l3198 0C68                             l2902 1032  
                           l2910 1DA6                             l3358 161A                             l2830 1FE5  
                           l2822 1FCA                             l2814 1FBA                             l2806 1FAB  
                           l3374 0E3F                             l3366 0D8C                             l4270 070E  
                           l4262 06EF                             l4254 06C6                             l4238 068A  
                           l4190 051A                             l4182 04FF                             l4174 04DA  
                           l4158 0463                             l4094 0272                             l4086 020E  
                           l4078 01E6                             l4350 13C5                             l4342 13AC  
                           l4334 13A4                             l4326 139C                             l4318 1393  
                           l3544 1F81                             l3536 1F59                             l3552 1F97  
                           l2752 1C7C                             l2760 0802                             l3296 1CD3  
                           l3288 1D63                             l3720 16FA                             l3712 16D2  
                           l3800 10B8                             l3560 1ED5                             l3608 106E  
                           l3640 1E27                             l3632 1E0C                             l3528 1D01  
                           l3480 1188                             l3472 1173                             l2904 1038  
                           l2920 1DC0                             l2912 1DA9                             l2840 1FFB  
                           l2832 1FE6                             l2824 1FCE                             l2816 1FBC  
                           l2808 1FAD                             l3392 0F79                             l3376 0E46  
                           l3368 0D93                             l3384 0EC6                             l4280 0734  
                           l4272 0712                             l4264 06F7                             l4256 06D0  
                           l4192 052E                             l4184 050B                             l4176 04DE  
                           l4168 04C7                             l4096 028A                             l4088 0223  
                           l4360 1415                             l4352 13EA                             l4344 13B1  
                           l4336 13A5                             l4328 139E                             l3546 1F89  
                           l3538 1F64                             l2754 1C83                             l2762 1C97  
                           l3298 1CD7                             l3730 1714                             l3722 16FC  
                           l3714 16E2                             l3706 16C4                             l3810 10E5  
                           l3802 10BC                             l3562 1EEF                             l3570 002C  
                           l2930 08F5                             l3626 1093                             l3618 107C  
                           l3642 1E39                             l3634 1E15                             l3490 11BD  
                           l3482 1199                             l3466 115E                             l2770 1D27  
                           l2922 1DC4                             l2914 1DAE                             l2834 1FEB  
                           l2826 1FD2                             l2818 1FC2                             l2850 1EFD  
                           l3394 0F80                             l3386 0ECD                             l4290 0750  
                           l4282 073D                             l4274 0720                             l4266 06FE  
                           l4258 06DB                             l4194 056D                             l4186 0510  
                           l4178 04EB                             l4098 029D                             l4370 1489  
                           l4362 1418                             l4354 13ED                             l4346 13B8  
                           l4338 13A6                             l3548 1F8A                             l2756 1C67  
                           l2764 1CA2                             l3900 08C1                             l3724 1701  
                           l3732 171B                             l3740 173A                             l3716 16EA  
                           l3708 16C9                             l3660 1652                             l3820 1108  
                           l3812 10EA                             l3804 10CC                             l3564 1EF1  
                           l3556 1EA5                             l3580 0070                             l3572 0048  
                           l2940 0909                             l2932 08FB                             l3652 1D06  
                           l3628 10A1                             l3644 1E41                             l3636 1E18  
                           l3492 11C5                             l3484 119B                             l3468 116A  
                           l2780 1D44                             l2772 1D29                             l2924 1DC9  
                           l2916 1DB2                             l2908 1DA0                             l2828 1FE1  
                           l2836 1FF1                             l2860 1F11                             l2852 1EFF  
                           l2844 1EF3                             l4292 075A                             l4284 0740  
                           l4276 0726                             l4268 070A                             l4196 0596  
                           l4188 0516                             l4372 149D                             l4364 1428  
                           l4356 1401                             l4348 13BE                             l2758 1C6A  
                           l2766 0005                             l3910 1C88                             l2790 1DF4  
                           l3902 08DD                             l3750 1755                             l3742 1740  
                           l3734 172D                             l3726 170F                             l3718 16F2  
                           l3670 1665                             l3662 1656                             l3830 1137  
                           l3822 1116                             l3814 10F5                             l3806 10DC  
                           l3558 1EB9                             l3582 009E                             l3574 0050  
                           l3590 1C79                             l2950 0921                             l2942 090E  
                           l2934 08FF                             l3654 1D09                             l3646 1E48  
                           l3638 1E23                             l3494 11C6                             l3486 11A4  
                           l3478 1180                             l2774 1D30                             l2918 1DB6  
                           l2926 1DCF                             l2838 1FF6                             l2870 1F2C  
                           l2862 1F16                             l2854 1F03                             l2846 1EF4  
                           l3398 0FE2                             l4294 0766                             l4286 0746  
                           l4278 0729                             l4198 05C2                             l4374 14A0  
                           l4366 142F                             l4358 1408                             l3920 12C9  
                           l2768 0010                             l3912 1C8C                             l2792 1DF9  
                           l2784 1DD5                             l3904 08E1                             l3760 1766  
                           l3752 1756                             l3744 1748                             l3736 172E  
                           l3728 1713                             l3680 167D                             l3672 166D  
                           l3664 165A                             l3832 114B                             l3824 111F  
                           l3816 10FC                             l3584 00A0                             l3576 0054  
                           l3568 0018                             l3592 1C7B                             l2960 0935  
                           l2952 0926                             l2944 0916                             l2936 0903  
                           l3648 1E4E                             l3496 11CD                             l3488 11AB  
                           l2776 1D34                             l2872 1F31                             l2864 1F1A  
                           l2856 1F08                             l2848 1EF8                             l4296 076C  
                           l4288 074C                             l4376 14AD                             l4368 1476  
                           l3842 1C53                             l3930 12E9                             l3922 12D1  
                           l3914 1C91                             l2794 1DFD                             l2786 1DEB  
                           l3906 08E5                             l3850 081D                             l3770 178B  
                           l3762 176A                             l3754 175D                             l3746 174A  
                           l3738 1736                             l3690 1690                             l3682 1681  
                           l3674 166E                             l3666 165B                             l3658 164C  
                           l3834 1150                             l3826 1123                             l3818 1100  
                           l3578 006C                             l2970 0949                             l2962 0936  
                           l2954 092C                             l2946 0917                             l2938 0904  
                           l3498 11D7                             l2778 1D3F                             l2890 1011  
                           l2882 1001                             l2866 1F1E                             l2858 1F0E  
                           l2874 1F37                             l4298 0771                             l4378 14B4  
                           l3940 12F5                             l3924 12D3                             l3916 12BD  
                           l2796 1E01                             l2788 1DEF                             l3908 08E9  
                           l3860 0843                             l3852 0821                             l3844 0809  
                           l3780 17C0                             l3772 1793                             l3764 177E  
                           l3748 1751                             l3756 1761                             l3692 1698  
                           l3684 1685                             l3668 1660                             l3676 1670  
                           l3836 1154                             l3828 112D                             l3588 1C71  
                           l2980 0965                             l2964 093B                             l2972 094B  
                           l2956 092D                             l2948 0919                             l3596 103D  
                           l2892 1015                             l2884 1003                             l2876 1F3C  
                           l2868 1F28                             l3950 131A                             l3942 12F9  
                           l3926 12DC                             l3918 12C0                             l2798 1E06  
                           l3870 0866                             l3862 084A                             l3854 0834  
                           l3846 0815                             l3790 17F0                             l3782 17DB  
                           l3774 1797                             l3758 1765                             l3694 1699  
                           l3686 1686                             l3678 1678                             l3838 1155  
                           l2990 0979                             l2982 0969                             l2974 0959  
                           l2966 0940                             l2958 0931                             l3598 1049  
                           l2894 1019                             l2886 1009                             l2878 1F41  
                           l3960 1324                             l3952 1320                             l3944 12FC  
                           l3936 12EB                             l3928 12E5                             l3880 087A  
                           l3872 086A                             l3864 084E                             l3856 083B  
                           l3848 0819                             l3792 17F2                             l3784 17DE  
                           l3776 17AF                             l3768 1786                             l3688 168B  
                           l3696 169B                             l2992 097D                             l2984 096D  
                           l2976 095D                             l2968 0948                             l2896 1028  
                           l2888 100C                             l3970 1349                             l3962 132B  
                           l3946 1311                             l3938 12F2                             l3890 08A6  
                           l3882 087E                             l3874 086E                             l3866 0852  
                           l3858 083F                             l3786 17E6                             l3778 17B3  
                           l3698 16AB                             l2994 0981                             l2986 0971  
                           l2978 0961                             l2898 102C                             l3964 132F  
                           l3948 1315                             l3972 134D                             l3892 08AA  
                           l3884 0882                             l3876 0872                             l3868 0856  
                           l3788 17EC                             l2996 0985                             l2988 0975  
                           l3974 1358                             l3966 1334                             l3958 1321  
                           l3982 1D73                             l3894 08B5                             l3886 089E  
                           l3878 0876                             l3798 10B3                             l2998 0989  
                           l3976 1376                             l3968 1339                             l3896 08B9  
                           l3888 08A2                             l3978 138A                             l3994 1D76  
                           l3898 08BD                             l3996 1D7E                             l3988 1D75  
                           l3998 1D85                             STR_1 20AE                             STR_2 209F  
                           STR_3 20C4                             STR_4 2028                             STR_5 20CD  
                           STR_6 20B9                             STR_7 20CB                             u3000 1FC2  
                           u3001 1FC1                             u3020 1FD2                             u3100 1F0E  
                           u3021 1FD1                             u3101 1F0D                             _LATA 010C  
                           _LATB 010D                             u3015 1FC6                             u4000 1CE6  
                           u3040 1FE1                             u3120 1F1E                             u4001 1CE5  
                           u3041 1FE0                             u3121 1F1D                             u3210 1028  
                           u4010 14CC                             u3130 1F28                             u3211 1027  
                           u4011 14CB                             u3035 1FD3                             u3131 1F27  
                           u3115 1F12                             u3300 0903                             u4100 121F  
                           u4020 159B                             u3060 1FF1                             u3301 0902  
                           u4101 121E                             u3205 101A                             u4021 159A  
                           u3061 1FF0                             u3045 1FDD                             u3310 0909  
                           u4110 1239                             u3230 1038                             u3070 1FF6  
                           u3150 1F37                             u4030 0D8A                             u3311 0908  
                           u4111 1238                             u3231 1037                             u3215 1024  
                           u3071 1FF5                             u3055 1FE7                             u3151 1F36  
                           u3135 1F24                             u4031 0D89                             u5000 17F0  
                           u3400 09BF                             u3320 090E                             u4200 12A5  
                           u3240 1DA6                             u3160 1F3C                             u3080 1EF8  
                           u4040 0D93                             u5001 17EF                             u3401 09BD  
                           u3321 090D                             u4201 12A4                             u3225 102E  
                           u3241 1DA5                             u3161 1F3B                             u3145 1F2D  
                           u3081 1EF7                             u4041 0D92                             u5010 10B8  
                           u3410 09C0                             u3330 092C                             u4130 1270  
                           u3170 1009                             u3090 1F03                             u4050 0E46  
                           u5011 10B7                             u3331 092B                             u4131 126F  
                           u3171 1008                             u3091 1F02                             u4051 0E45  
                           u5100 1129                             u5020 10BC                             u3500 0A22  
                           u3420 09D4                             u3340 0935                             u4300 11DE  
                           u4220 12B4                             u3260 1DB6                             u4060 0ECD  
                           u5101 1128                             u5021 10BB                             u3501 0A21  
                           u3421 09D3                             u3341 0934                             u4301 11DD  
                           u4221 12B3                             u4125 125C                             u3261 1DB5  
                           u4061 0ECC                             u5110 112D                             u5030 10DC  
                           u3430 09E0                             u3350 093B                             u4230 116A  
                           u4150 1283                             u3190 1019                             u3270 1DC0  
                           u4070 0F80                             u5111 112C                             u5031 10DB  
                           u3431 09DF                             u3351 093A                             u4231 1169  
                           u4215 12A7                             u4151 1282                             u4135 126C  
                           u3191 1018                             u3271 1DBF                             u3255 1DAA  
                           u4071 0F7F                             u4400 1F56                             u5200 1358  
                           u5120 1141                             u3600 0ABC                             u3520 0A46  
                           u3360 0940                             u4320 11EE                             u4240 117E  
                           u4160 1287                             u4080 1CC0                             u4401 1F55  
                           u5201 1357                             u3601 0ABB                             u3521 0A45  
                           u3361 093F                             u4321 11ED                             u4241 117D  
                           u4161 1286                             u4145 1278                             u3185 100D  
                           u4081 1CBF                             u5210 1D90                             u5130 1150  
                           u5050 10FB                             u3610 0AC1                             u3530 0A75  
                           u3450 09F4                             u3370 0959                             u4330 11F5  
                           u4170 128E                             u3290 1DCF                             u4090 1CC6  
                           u5211 1D8F                             u5131 114F                             u5051 10FA  
                           u3611 0AC0                             u3531 0A74                             u3523 0A42  
                           u3515 0A25                             u3451 09F3                             u3371 0958  
                           u4331 11F4                             u4315 11E0                             u4171 128D  
                           u3291 1DCE                             u3275 1DBC                             u4091 1CC5  
                           u4420 1F68                             u2900 1C70                             u5220 1D9A  
                           u5140 1154                             u4500 002C                             u3700 0B18  
                           u3620 0AC7                             u3540 0A8E                             u3460 09F8  
                           u3380 095D                             u4260 11BD                             u5300 01A5  
                           u4421 1F67                             u5205 1354                             u2901 1C6F  
                           u5221 1D99                             u5141 1153                             u5125 113D  
                           u5045 10EF                             u4501 002B                             u3701 0B17  
                           u3621 0AC6                             u3541 0A8D                             u3461 09F7  
                           u3445 09E3                             u3381 095C                             u4261 11BC  
                           u3285 1DC5                             u5301 01A4                             u5150 12DC  
                           u2910 0808                             u5070 1115                             u4510 0048  
                           u3710 0B1D                             u3630 0ACE                             u3550 0A93  
                           u3470 09FD                             u3390 09B5                             u4350 1204  
                           u4190 129E                             u5310 01D8                             u5230 00AE  
                           u4415 1F5A                             u5151 12DB                             u2911 0807  
                           u5071 1114                             u4511 0047                             u3711 0B1C  
                           u3631 0ACD                             u3551 0A92                             u3471 09FC  
                           u3391 09B4                             u4351 1203                             u4255 11A5  
                           u4191 129D                             u5311 01D7                             u5231 00AD  
                           u4440 1F81                             u5160 12E5                             u2920 1C9E  
                           u4520 0054                             u3720 0B2B                             u3640 0AD4  
                           u3480 0A12                             u4360 1CED                             u4280 11D3  
                           u3800 0B8C                             u5400 0336                             u5320 020A  
                           u5240 00C9                             u4441 1F80                             u5161 12E4  
                           u2921 1C9D                             u5065 1109                             u4521 0053  
                           u3721 0B2A                             u3641 0AD3                             u3481 0A11  
                           u4361 1CEC                             u4345 11F7                             u4281 11D2  
                           u4265 11B9                             u4185 1290                             u3801 0B8B  
                           u5401 0335                             u5321 0209                             u5241 00C8  
                           u2930 1CA2                             u5090 1123                             u4530 0070  
                           u3650 0AE0                             u3570 0AA7                             u3490 0A16  
                           u4610 108B                             u4290 11D7                             u3730 0B3B  
                           u5410 0400                             u5330 026C                             u5250 00FC  
                           u4435 1F69                             u2931 1CA1                             u5091 1122  
                           u4531 006F                             u3651 0ADF                             u3571 0AA6  
                           u3491 0A15                             u3395 09B1                             u4611 108A  
                           u4291 11D6                             u4275 11C7                             u3731 0B3A  
                           u5411 03FF                             u5331 026B                             u5251 00FB  
                           u4460 1F97                             u5180 1320                             u4540 009E  
                           u3660 0AEE                             u3580 0AAC                             u4620 1092  
                           u2940 1D34                             u3900 0CE8                             u3740 0B41  
                           u5500 0510                             u5420 040B                             u5340 028A  
                           u5260 0107                             u4461 1F96                             u4445 1F7D  
                           u5181 131F                             u5085 1119                             u4541 009D  
                           u3581 0AAB                             u3565 0A9D                             u4621 1091  
                           u4605 107D                             u2941 1D33                             u3901 0CE7  
                           u3741 0B40                             u5501 050F                             u5421 040A  
                           u5341 0289                             u5261 0106                             u5190 1339  
                           u4470 1EB9                             u4550 1C79                             u3670 0AFD  
                           u3590 0AB6                             u4710 1E4E                             u4390 1D01  
                           u3910 0CFC                             u3830 0C94                             u3750 0B46  
                           u5510 060F                             u5430 0422                             u5350 029D  
                           u5270 013F                             u4455 1F8B                             u5191 1338  
                           u5175 12EC                             u4471 1EB8                             u4551 1C78  
                           u3671 0AFC                             u3591 0AB5                             u4711 1E4D  
                           u4391 1D00                             u4375 1CF2                             u3911 0CFB  
                           u3815 0C0B                             u3751 0B45                             u5511 060E  
                           u5431 0421                             u5415 03FC                             u5351 029C  
                           u5271 013E                             u2880 1C83                             u4800 1701  
                           u4720 165A                             u4480 1ED5                             u3680 0B06  
                           u4640 10A1                             u4560 1049                             u2960 1D44  
                           u3920 0D03                             u3840 0CAB                             u3760 0B65  
                           u5600 06D0                             u5520 0624                             u5440 0432  
                           u5360 02DC                             u5280 0177                             u2881 1C82  
                           u4801 1700                             u4721 1659                             u4481 1ED4  
                           u4545 009A                             u3681 0B05                             u3665 0AEA  
                           u4641 10A0                             u4561 1048                             u4705 1E42  
                           u4385 1CF7                             u2961 1D43                             u3921 0D02  
                           u3825 0C3A                             u3761 0B64                             u5601 06CF  
                           u5521 0623                             u5441 0431                             u5361 02DB  
                           u5281 0176                             u2890 1C87                             u4730 1660  
                           u4490 1EEF                             u3690 0B0B                             u4650 10A6  
                           u4570 105F                             u3930 0D09                             u3770 0B6B  
                           u5610 06DB                             u5530 0629                             u5450 0450  
                           u5370 02F4                             u5290 017B                             u2891 1C86  
                           u4731 165F                             u4491 1EEE                             u3691 0B0A  
                           u4651 10A5                             u4635 1094                             u2955 1D39  
                           u3931 0D08                             u3835 0C90                             u3771 0B6A  
                           u5611 06DA                             u5531 0628                             u5451 044F  
                           u5371 02F3                             u5355 0299                             u5291 017A  
                           u4740 1665                             u4580 1074                             u4660 1E15  
                           u3940 0D15                             u3780 0B70                             u2980 1FA6  
                           u5700 0766                             u5620 06EF                             u5540 062D  
                           u5460 045D                             u5380 0310                             u4741 1664  
                           u4581 1073                             u4661 1E14                             u3941 0D14  
                           u3845 0CA7                             u3781 0B6F                             u2981 1FA5  
                           u5701 0765                             u5621 06EE                             u5541 062C  
                           u5461 045C                             u5381 030F                             u5365 02D8  
                           u4910 1765                             u4830 1713                             u4750 1685  
                           u4590 107B                             u3950 0D23                             u3870 0CD3  
                           u3790 0B87                             u2990 1FB1                             u5710 07C0  
                           u5630 06FE                             u5550 0655                             u5470 04CE  
                           u5390 031E                             u2975 1DE0                             u4911 1764  
                           u4831 1712                             u4815 1702                             u4751 1684  
                           u4495 1EEB                             u4591 107A                             u4575 105B  
                           u3871 0CD2                             u3855 0CB6                             u3791 0B86  
                           u2991 1FB0                             u5711 07BF                             u5631 06FD  
                           u5615 06D7                             u5551 0654                             u5471 04CD  
                           u5455 044C                             u5391 031D                             u4920 176A  
                           u4760 168B                             u4680 1E27                             u3960 0D3E  
                           u5720 07D4                             u5640 070A                             u5560 0669  
                           u5480 04EB                             u4921 1769                             u4905 1757  
                           u4825 1709                             u4761 168A                             u4681 1E26  
                           u3961 0D3D                             u3865 0CC9                             u5721 07D3  
                           u5641 0709                             u5625 06EB                             u5561 0668  
                           u5481 04EA                             u4930 177E                             u4850 172D  
                           u4770 1690                             u4690 1E39                             u3970 0D56  
                           u3890 0CE3                             u5650 0712                             u5570 0690  
                           u5490 04F9                             u4931 177D                             u4851 172C  
                           u4771 168F                             u4691 1E38                             u4675 1E19  
                           u3971 0D55                             u3955 0D1F                             u3891 0CE2  
                           u5651 0711                             u5571 068F                             u5491 04F8  
                           u5395 031A                             u4940 1785                             u4860 1740  
                           u4780 16AB                             u3980 0D72                             u5660 0720  
                           u5580 0698                             u4941 1784                             u4861 173F  
                           u4845 1715                             u4781 16AA                             u3981 0D71  
                           u3965 0D3A                             u3885 0CD5                             u5661 071F  
                           u5581 0697                             u5485 04E7                             u3990 1D61  
                           u4950 178B                             u4870 1748                             u4790 16C9  
                           u5670 0734                             u5590 06C5                             u3991 1D60  
                           u5807 0824                             u4951 178A                             u4871 1747  
                           u4855 1729                             u4791 16C8                             u4695 1E35  
                           u3975 0D52                             u5671 0733                             u5591 06C4  
                           u5495 04F5                             u4960 1797                             u5680 0746  
                           u5817 0837                             u4961 1796                             u5681 0745  
                           u5665 071C                             u4970 17A5                             u4890 1755  
                           u5690 075A                             u5907 08F0                             u5827 0848  
                           u4891 1754                             u5691 0759                             u5675 0730  
                           u5595 06C1                             u4980 17C0                             u5917 1DFA  
                           u5837 0857                             u4981 17BF                             u4885 174B  
                           u5757 13CB                             u4990 17DB                             u5927 1C92  
                           u5847 0867                             u4991 17DA                             u4975 17A1  
                           u5767 140E                             u5937 0014                             u5857 0883  
                           u4985 17BC                             u5777 1435                             u5947 12E6  
                           u5867 089F                             u4995 17D7                             u5787 14BA  
                           u5957 12F6                             u5877 08B1                             u5797 080E  
                           u5967 1312                             u5887 08C2                             u5977 1325  
                           u5897 08DE                             u5987 132C                             _WPUB 020D  
                ??_lcd_backlight 0072                             _main 1393                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           start 0002                  ___fldiv@new_exp 0025                     _sprintf$1082 00AE  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 1C53                    ___fltol@sign1 005C  
                __end_of___fladd 0B2D                            ?_main 0070                  __end_of___fldiv 1800  
                __end_of___awdiv 2000                  __end_of___flneg 1C7C                  __end_of___awmod 1F46  
                __end_of___flmul 0D84                  __end_of___flsub 1D26                  __end_of___fltol 10B2  
                __end_of___lldiv 1FA0                  ___awdiv@divisor 0077                  __end_of___llmod 1E57  
                __end_of___lwdiv 103D                  __end_of___lwmod 1DD4                  ___awdiv@counter 0020  
                          _TRISA 008C                            _TRISB 008D           scale_convert_gram@temp 0035  
                   lcd_print@cmd 007B                     lcd_print@str 0078                  __end_of_lcd_cmd 0018  
                __end_of_command 1E0C                  __end_of_dpowers 2028                   _WDT_Initialize 1C38  
                          _scale 0D84                  __end_of_isdigit 1CCA                            status 0003  
             _scale_convert_gram 1E57                            wtemp0 007E                  __end_of_sprintf 07DA  
     __size_of_set_CELL_CLK_HIGH 0003                  ??_get_scale_val 0024                  __initialization 07DA  
            ?_scale_convert_gram 002D                     __end_of_main 14C4                    command@lownib 0077  
               __end_of_i2c_wait 1C88                 __end_of_i2c_stop 0809                           ??_main 006D  
           __size_of__tdiv_to_l_ 00B0           __end_of_WDT_Initialize 1C3C             ??_scale_convert_gram 0031  
               ___llmod@dividend 0024                           ?_scale 003E                 ___awdiv@dividend 0079  
                         _ANSELA 018C                           _ANSELB 018D                           _BORCON 0116  
                         _OSCCON 0099                           _WDTCON 0097                           _SSPADD 0212  
                         _SSPBUF 0211               __size_of_i2c_start 000A                 __end_of___xxtofl 115E  
             __size_of_i2c_write 0010          scale_convert_gram@count 002D         __end_of_get_CELL_DAT_VAL 1C67  
               __end_of__powers_ 206B                 __end_of_lcd_init 08F5                           ___flge 0018  
                         ___fleq 1EA5                        ??___fladd 0059                           ___wmul 1CE7  
                      ??___fldiv 0078                        ??___awdiv 007B                        ??___flneg 0074  
                      ??___awmod 0074                        ??___flmul 002C                        ??___flsub 007E  
                      ??___fltol 0057                        ??___lldiv 0078                        ??___llmod 0028  
                      ??___lwdiv 007A                        ??___lwmod 0074                           _fround 14C4  
               ___awdiv@quotient 0022                  ___awmod@divisor 0070                           _valstr 00D4  
                ___awmod@counter 0075                        ??_lcd_cmd 0071                        ??_command 0073  
                      ??_isdigit 0070               __size_of__Umul8_16 0023                  ?_WDT_Initialize 0070  
                      ??_sprintf 00A8                       ___flge@ff1 0070                       ___flge@ff2 0074  
                   ___xxtofl@arg 007A                     ___xxtofl@exp 0079                _SYSTEM_Initialize 1C53  
                   ___xxtofl@val 0070                       ___fleq@ff1 0070                       ___fleq@ff2 0074  
        __end_of__initialization 07FD                       ___flneg@f1 0070               ?_SYSTEM_Initialize 0070  
                     ___fltol@f1 0053        __size_of_set_CELL_CLK_LOW 0006                   command@highnib 0076  
                 __pcstackCOMMON 0070                     __pidataBANK1 1C3C              ??_SYSTEM_Initialize 0070  
                  __end_of_scale 1000                   get_scale_val@i 0031                   get_scale_val@j 002C  
                 get_scale_val@n 0020                __end_of_i2c_start 1C71                 ??_lcd_set_cursor 0079  
              __end_of_i2c_write 1CA6                       __div_to_l_ 115E                   _OPTION_REGbits 0095  
             __size_of_lcd_clear 002D               __size_of_lcd_print 001D                  __div_to_l_@exp1 0025  
                __div_to_l_@cntr 0024                          ??_scale 0042        __end_of_SYSTEM_Initialize 1C5D  
                __div_to_l_@quot 0020                     sprintf@width 00B3                       __pbssBANK0 006F  
                     __pbssBANK1 00CC                       __pbssBANK2 0120                        ?_i2c_wait 0070  
                      ?_i2c_stop 0070                    __div_to_l_@f1 0070                    __div_to_l_@f2 0074  
              __end_of__Umul8_16 1D49                       __pmaintext 1393                          ?___flge 0070  
                        ?___fleq 0070                          ?___wmul 0070                          ?_fround 003E  
                      ?___xxtofl 0070                          _OSCTUNE 0098                          _SSPCON1 0215  
                        _SSPCON2 0216                        ?_lcd_init 0070                          _SSPSTAT 0214  
                     ??_i2c_wait 0070                       ??_i2c_stop 0070            __end_of_lcd_backlight 1C96  
              __end_of__npowers_ 209F                       _scale$1081 004E                __end_of_lcd_clear 1DA0  
                __size_of___flge 008A                  __size_of___fleq 004E                __end_of_lcd_print 1CE7  
                        ___fladd 08F5                          ___fldiv 164C                          ___awdiv 1FA0  
                        ___flneg 1C71                          ___awmod 1EF3                          ___flmul 0B2D  
                        ___flsub 1D06                          ___fltol 103D                          ___lldiv 1F46  
                __size_of___wmul 001F                          ___llmod 1E0C                          ___lwdiv 1001  
                        ___lwmod 1DA0                  __size_of_fround 0188                          __ptext1 00A2  
                        __ptext2 0D84                          __ptext3 1EF3                          __ptext4 1FA0  
                        __ptext5 1CB8                          __ptext6 14C4                          __ptext7 1DA0  
                        __ptext8 1001                          __ptext9 0B2D                          _lcd_cmd 0004  
                        _command 1DD4                      ?__div_to_l_ 0070                          _dpowers 2000  
                        _gramstr 0120            _OSCILLATOR_Initialize 1C4C                          _isdigit 1CB8  
                     ??___xxtofl 0074                 ___awmod@dividend 0072         ??_PIN_MANAGER_Initialize 0070  
     __size_of_SYSTEM_Initialize 000A                          _sprintf 00A2                          clrloop0 1C47  
                     ??_lcd_init 0072             end_of_initialization 07FD                  ___lldiv@divisor 0070  
                ___lldiv@counter 007D            __end_of_get_scale_val 1393                 _set_CELL_CLK_LOW 1C40  
              ?_get_CELL_DAT_VAL 0070               ??_get_CELL_DAT_VAL 0072                   __tdiv_to_l_@f1 0070  
                 __tdiv_to_l_@f2 0074                    ??__tdiv_to_l_ 0078                 ??_WDT_Initialize 0070  
                      _PORTAbits 000C                       _weight_dat 00D0                      ___fladd@grs 0064  
                  i2c_write@data 0070        lcd_set_cursor@row_offsets 0020                    ___xxtofl@sign 0078  
                     lcd_cmd@cmd 0071      __size_of_scale_convert_gram 004E                      ___fldiv@grs 0027  
                    ___fldiv@rem 0020                      ___flmul@grs 0032                       command@val 0075  
            __size_of__div_to_l_ 00AF                   __end_of___flge 00A2                   __end_of___fleq 1EF3  
                 __end_of___wmul 1D06           ?_OSCILLATOR_Initialize 0070                   __end_of_fround 164C  
            start_initialization 07DA  __size_of_PIN_MANAGER_Initialize 0012              __end_of__tdiv_to_l_ 12BD  
                      _i2c_start 1C67                        _i2c_write 1C96                  ___llmod@divisor 0020  
                ___llmod@counter 0029                __size_of_i2c_wait 000C                __size_of_i2c_stop 0007  
                       ??___flge 0078                         ??___fleq 0078                         ??___wmul 0074  
                      __Umul8_16 1D26          get_scale_val@weight_add 0028                      __pdataBANK1 00E4  
                       ??_fround 0042                    sprintf@tmpval 00B5                        ___fladd@a 0055  
                      ___fladd@b 0051                       fround@prec 0050                        ___fldiv@a 0070  
                      ___fldiv@b 0074              lcd_set_cursor@F2624 00E4                        ___flmul@a 0028  
                      ___flmul@b 0024                        ___flsub@a 0065                        ___flsub@b 0069  
                      ___latbits 0003                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
                     ?_i2c_start 0070                       ?_i2c_write 0070                __size_of___xxtofl 00AC  
              __size_of_lcd_init 00EC                      sprintf@flag 00B9                      sprintf@eexp 00BB  
                    sprintf@fval 00C1                      sprintf@prec 00C5                 ___lwdiv@dividend 0078  
         _PIN_MANAGER_Initialize 1CA6                         ?___fladd 0051                         ?___fldiv 0070  
                       ?___awdiv 0077                         ?___flneg 0070                         ?___awmod 0070  
                       ?___flmul 0024                         ?___flsub 0065                         ?___fltol 0053  
                       ?___lldiv 0070                         ?___llmod 0020                        __npowers_ 206B  
                     ?__Umul8_16 0070                         ?___lwdiv 0076                         ?___lwmod 0070  
                      _lcd_clear 1D73                      __tdiv_to_l_ 120D                        _lcd_print 1CCA  
                       ?_lcd_cmd 0070                         ?_command 0072                     ??__div_to_l_ 0078  
                       ?_isdigit 0070         __end_of_set_CELL_CLK_LOW 1C46                 ___lwdiv@quotient 007B  
                       ?_sprintf 00A0                   __size_of_scale 027C          __size_of_lcd_set_cursor 002A  
                 ___wmul@product 0074                        clear_ram0 1C46               __end_of__div_to_l_ 120D  
                     ?_lcd_clear 0070                       ?_lcd_print 0078                ___wmul@multiplier 0070  
      __size_of_get_CELL_DAT_VAL 000A           __size_of_lcd_backlight 000E                      ??_i2c_start 0070  
                    ??_i2c_write 0070                         _i2c_wait 1C7C                         _i2c_stop 0802  
        ??_OSCILLATOR_Initialize 0070                      ??__Umul8_16 0072                 __size_of___fladd 0238  
               __size_of___fldiv 01B4                 __size_of___awdiv 0060                 __size_of___flneg 000B  
               __size_of___awmod 0053                 __size_of___flmul 0257                 __size_of___flsub 0020  
               __size_of___fltol 0075                 __size_of___lldiv 005A                 __size_of___llmod 004B  
               __size_of___lwdiv 003C                 __size_of___lwmod 0034                      _fround$1080 0048  
                    _fround$1079 004C                      _isdigit$886 0070                 __size_of_lcd_cmd 0014  
               __size_of_command 0038       __end_of_scale_convert_gram 1EA5                       sprintf@val 00BD  
                       ___xxtofl 10B2                 __size_of_isdigit 0012                  ___lwdiv@divisor 0076  
                ___lwdiv@counter 007D           __size_of_get_scale_val 00D6                         __ptext10 1D26  
                       __ptext11 120D                         __ptext20 1EA5                         __ptext12 115E  
                       __ptext21 1E57                         __ptext13 1CE7                         __ptext30 0004  
                       __ptext22 10B2                         __ptext14 1E0C                         __ptext31 1C96  
                       __ptext23 164C                         __ptext15 103D                         __ptext40 1C53  
                       __ptext32 0802                         __ptext24 0809                         __ptext16 1D06  
                       __ptext41 1C38                         __ptext33 1C67                         __ptext25 1D73  
                       __ptext17 08F5                         __ptext42 1CA6                         __ptext34 1C7C  
                       __ptext26 1D49                         __ptext18 1C71                         __ptext43 1C4C  
                       __ptext35 12BD                         __ptext27 1CCA                         __ptext19 0018  
                       __ptext36 1C40                         __ptext28 1DD4                         __ptext37 1C35  
                       __ptext29 1C88                         __ptext38 1C5D                         __ptext39 1F46  
                       __powers_ 2037                         _lcd_init 0809                 __size_of_sprintf 0738  
                  __size_of_main 0131                    _lcd_backlight 1C88                      ??_lcd_clear 007C  
                    ??_lcd_print 007A                         isdigit@c 0071                  main@weight_gram 00C8  
                       scale@scl 0052          __size_of_WDT_Initialize 0004                   _lcd_set_cursor 1D49  
              lcd_set_cursor@cmd 0025                lcd_set_cursor@col 0024                        sprintf@ap 00B2  
               __tdiv_to_l_@exp1 0025                 __tdiv_to_l_@cntr 0024                        sprintf@sp 00A0  
              lcd_set_cursor@row 0078                 __tdiv_to_l_@quot 0020                 ___lwmod@dividend 0072  
               ___lldiv@dividend 0074          ?_PIN_MANAGER_Initialize 0070                   ?_lcd_backlight 0070  
              _set_CELL_CLK_HIGH 1C35                    _get_scale_val 12BD               ?_set_CELL_CLK_HIGH 0070  
                   ?__tdiv_to_l_ 0070                    __pstringtext1 2037                    __pstringtext2 206B  
                  __pstringtext3 2000                    __pstringtext4 209F                    __pstringtext5 20AE  
                  __pstringtext6 20B9                    __pstringtext7 20C4                    __pstringtext8 20CD  
                  __pstringtext9 0000              ??_set_CELL_CLK_HIGH 0070           __Umul8_16@multiplicand 0070  
                       sprintf@c 00C7                         sprintf@f 00A2                 ___lldiv@quotient 0079  
                ___lwmod@divisor 0070                  ___lwmod@counter 0075                 _get_CELL_DAT_VAL 1C5D  
                    _SSPCON1bits 0215                      _SSPCON2bits 0216                ?_set_CELL_CLK_LOW 0070  
         __end_of_lcd_set_cursor 1D73                      _weight_zero 00CC                    ___fladd@signs 0061  
             ??_set_CELL_CLK_LOW 0070   __end_of_PIN_MANAGER_Initialize 1CB8                     ___fladd@aexp 0062  
                   ___fladd@bexp 0063        __end_of_set_CELL_CLK_HIGH 1C38             __Umul8_16@multiplier 0078  
                 ?_get_scale_val 0020                __Umul8_16@product 0074                    __backlightval 006F  

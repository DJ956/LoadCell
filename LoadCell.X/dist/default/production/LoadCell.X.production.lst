

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Oct 30 22:57:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F1827 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0113                     	;# 
   129  0114                     	;# 
   130  0115                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  0118                     	;# 
   134  0119                     	;# 
   135  011A                     	;# 
   136  011B                     	;# 
   137  011D                     	;# 
   138  011E                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019C                     	;# 
   157  019C                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019F                     	;# 
   161  020C                     	;# 
   162  020D                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  0219                     	;# 
   179  021A                     	;# 
   180  021B                     	;# 
   181  021C                     	;# 
   182  021D                     	;# 
   183  021E                     	;# 
   184  021F                     	;# 
   185  0291                     	;# 
   186  0291                     	;# 
   187  0292                     	;# 
   188  0293                     	;# 
   189  0294                     	;# 
   190  0295                     	;# 
   191  0295                     	;# 
   192  0296                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  029B                     	;# 
   198  029C                     	;# 
   199  029C                     	;# 
   200  029D                     	;# 
   201  029E                     	;# 
   202  029E                     	;# 
   203  0311                     	;# 
   204  0311                     	;# 
   205  0312                     	;# 
   206  0313                     	;# 
   207  0318                     	;# 
   208  0318                     	;# 
   209  0319                     	;# 
   210  031A                     	;# 
   211  0394                     	;# 
   212  0395                     	;# 
   213  0396                     	;# 
   214  039A                     	;# 
   215  039C                     	;# 
   216  039D                     	;# 
   217  039E                     	;# 
   218  039F                     	;# 
   219  0415                     	;# 
   220  0416                     	;# 
   221  0417                     	;# 
   222  041C                     	;# 
   223  041D                     	;# 
   224  041E                     	;# 
   225  0FE4                     	;# 
   226  0FE5                     	;# 
   227  0FE6                     	;# 
   228  0FE7                     	;# 
   229  0FE8                     	;# 
   230  0FE9                     	;# 
   231  0FEA                     	;# 
   232  0FEB                     	;# 
   233  0FED                     	;# 
   234  0FEE                     	;# 
   235  0FEF                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  0111                     	;# 
   285  0112                     	;# 
   286  0113                     	;# 
   287  0114                     	;# 
   288  0115                     	;# 
   289  0116                     	;# 
   290  0117                     	;# 
   291  0118                     	;# 
   292  0119                     	;# 
   293  011A                     	;# 
   294  011B                     	;# 
   295  011D                     	;# 
   296  011E                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0191                     	;# 
   300  0191                     	;# 
   301  0192                     	;# 
   302  0193                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0194                     	;# 
   306  0195                     	;# 
   307  0196                     	;# 
   308  0199                     	;# 
   309  019A                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019B                     	;# 
   314  019C                     	;# 
   315  019C                     	;# 
   316  019D                     	;# 
   317  019E                     	;# 
   318  019F                     	;# 
   319  020C                     	;# 
   320  020D                     	;# 
   321  0211                     	;# 
   322  0211                     	;# 
   323  0212                     	;# 
   324  0212                     	;# 
   325  0213                     	;# 
   326  0213                     	;# 
   327  0214                     	;# 
   328  0214                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0216                     	;# 
   333  0216                     	;# 
   334  0217                     	;# 
   335  0217                     	;# 
   336  0219                     	;# 
   337  021A                     	;# 
   338  021B                     	;# 
   339  021C                     	;# 
   340  021D                     	;# 
   341  021E                     	;# 
   342  021F                     	;# 
   343  0291                     	;# 
   344  0291                     	;# 
   345  0292                     	;# 
   346  0293                     	;# 
   347  0294                     	;# 
   348  0295                     	;# 
   349  0295                     	;# 
   350  0296                     	;# 
   351  0298                     	;# 
   352  0298                     	;# 
   353  0299                     	;# 
   354  029A                     	;# 
   355  029B                     	;# 
   356  029C                     	;# 
   357  029C                     	;# 
   358  029D                     	;# 
   359  029E                     	;# 
   360  029E                     	;# 
   361  0311                     	;# 
   362  0311                     	;# 
   363  0312                     	;# 
   364  0313                     	;# 
   365  0318                     	;# 
   366  0318                     	;# 
   367  0319                     	;# 
   368  031A                     	;# 
   369  0394                     	;# 
   370  0395                     	;# 
   371  0396                     	;# 
   372  039A                     	;# 
   373  039C                     	;# 
   374  039D                     	;# 
   375  039E                     	;# 
   376  039F                     	;# 
   377  0415                     	;# 
   378  0416                     	;# 
   379  0417                     	;# 
   380  041C                     	;# 
   381  041D                     	;# 
   382  041E                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394  0000                     	;# 
   395  0001                     	;# 
   396  0002                     	;# 
   397  0003                     	;# 
   398  0004                     	;# 
   399  0005                     	;# 
   400  0006                     	;# 
   401  0007                     	;# 
   402  0008                     	;# 
   403  0009                     	;# 
   404  000A                     	;# 
   405  000B                     	;# 
   406  000C                     	;# 
   407  000D                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0013                     	;# 
   411  0014                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001E                     	;# 
   422  001F                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  0111                     	;# 
   443  0112                     	;# 
   444  0113                     	;# 
   445  0114                     	;# 
   446  0115                     	;# 
   447  0116                     	;# 
   448  0117                     	;# 
   449  0118                     	;# 
   450  0119                     	;# 
   451  011A                     	;# 
   452  011B                     	;# 
   453  011D                     	;# 
   454  011E                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0191                     	;# 
   458  0191                     	;# 
   459  0192                     	;# 
   460  0193                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0194                     	;# 
   464  0195                     	;# 
   465  0196                     	;# 
   466  0199                     	;# 
   467  019A                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019C                     	;# 
   473  019C                     	;# 
   474  019D                     	;# 
   475  019E                     	;# 
   476  019F                     	;# 
   477  020C                     	;# 
   478  020D                     	;# 
   479  0211                     	;# 
   480  0211                     	;# 
   481  0212                     	;# 
   482  0212                     	;# 
   483  0213                     	;# 
   484  0213                     	;# 
   485  0214                     	;# 
   486  0214                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0216                     	;# 
   491  0216                     	;# 
   492  0217                     	;# 
   493  0217                     	;# 
   494  0219                     	;# 
   495  021A                     	;# 
   496  021B                     	;# 
   497  021C                     	;# 
   498  021D                     	;# 
   499  021E                     	;# 
   500  021F                     	;# 
   501  0291                     	;# 
   502  0291                     	;# 
   503  0292                     	;# 
   504  0293                     	;# 
   505  0294                     	;# 
   506  0295                     	;# 
   507  0295                     	;# 
   508  0296                     	;# 
   509  0298                     	;# 
   510  0298                     	;# 
   511  0299                     	;# 
   512  029A                     	;# 
   513  029B                     	;# 
   514  029C                     	;# 
   515  029C                     	;# 
   516  029D                     	;# 
   517  029E                     	;# 
   518  029E                     	;# 
   519  0311                     	;# 
   520  0311                     	;# 
   521  0312                     	;# 
   522  0313                     	;# 
   523  0318                     	;# 
   524  0318                     	;# 
   525  0319                     	;# 
   526  031A                     	;# 
   527  0394                     	;# 
   528  0395                     	;# 
   529  0396                     	;# 
   530  039A                     	;# 
   531  039C                     	;# 
   532  039D                     	;# 
   533  039E                     	;# 
   534  039F                     	;# 
   535  0415                     	;# 
   536  0416                     	;# 
   537  0417                     	;# 
   538  041C                     	;# 
   539  041D                     	;# 
   540  041E                     	;# 
   541  0FE4                     	;# 
   542  0FE5                     	;# 
   543  0FE6                     	;# 
   544  0FE7                     	;# 
   545  0FE8                     	;# 
   546  0FE9                     	;# 
   547  0FEA                     	;# 
   548  0FEB                     	;# 
   549  0FED                     	;# 
   550  0FEE                     	;# 
   551  0FEF                     	;# 
   552  0000                     	;# 
   553  0001                     	;# 
   554  0002                     	;# 
   555  0003                     	;# 
   556  0004                     	;# 
   557  0005                     	;# 
   558  0006                     	;# 
   559  0007                     	;# 
   560  0008                     	;# 
   561  0009                     	;# 
   562  000A                     	;# 
   563  000B                     	;# 
   564  000C                     	;# 
   565  000D                     	;# 
   566  0011                     	;# 
   567  0012                     	;# 
   568  0013                     	;# 
   569  0014                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0016                     	;# 
   573  0017                     	;# 
   574  0018                     	;# 
   575  0019                     	;# 
   576  001A                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  001E                     	;# 
   580  001F                     	;# 
   581  008C                     	;# 
   582  008D                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0094                     	;# 
   587  0095                     	;# 
   588  0096                     	;# 
   589  0097                     	;# 
   590  0098                     	;# 
   591  0099                     	;# 
   592  009A                     	;# 
   593  009B                     	;# 
   594  009B                     	;# 
   595  009C                     	;# 
   596  009D                     	;# 
   597  009E                     	;# 
   598  010C                     	;# 
   599  010D                     	;# 
   600  0111                     	;# 
   601  0112                     	;# 
   602  0113                     	;# 
   603  0114                     	;# 
   604  0115                     	;# 
   605  0116                     	;# 
   606  0117                     	;# 
   607  0118                     	;# 
   608  0119                     	;# 
   609  011A                     	;# 
   610  011B                     	;# 
   611  011D                     	;# 
   612  011E                     	;# 
   613  018C                     	;# 
   614  018D                     	;# 
   615  0191                     	;# 
   616  0191                     	;# 
   617  0192                     	;# 
   618  0193                     	;# 
   619  0193                     	;# 
   620  0193                     	;# 
   621  0194                     	;# 
   622  0195                     	;# 
   623  0196                     	;# 
   624  0199                     	;# 
   625  019A                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019C                     	;# 
   631  019C                     	;# 
   632  019D                     	;# 
   633  019E                     	;# 
   634  019F                     	;# 
   635  020C                     	;# 
   636  020D                     	;# 
   637  0211                     	;# 
   638  0211                     	;# 
   639  0212                     	;# 
   640  0212                     	;# 
   641  0213                     	;# 
   642  0213                     	;# 
   643  0214                     	;# 
   644  0214                     	;# 
   645  0215                     	;# 
   646  0215                     	;# 
   647  0215                     	;# 
   648  0216                     	;# 
   649  0216                     	;# 
   650  0217                     	;# 
   651  0217                     	;# 
   652  0219                     	;# 
   653  021A                     	;# 
   654  021B                     	;# 
   655  021C                     	;# 
   656  021D                     	;# 
   657  021E                     	;# 
   658  021F                     	;# 
   659  0291                     	;# 
   660  0291                     	;# 
   661  0292                     	;# 
   662  0293                     	;# 
   663  0294                     	;# 
   664  0295                     	;# 
   665  0295                     	;# 
   666  0296                     	;# 
   667  0298                     	;# 
   668  0298                     	;# 
   669  0299                     	;# 
   670  029A                     	;# 
   671  029B                     	;# 
   672  029C                     	;# 
   673  029C                     	;# 
   674  029D                     	;# 
   675  029E                     	;# 
   676  029E                     	;# 
   677  0311                     	;# 
   678  0311                     	;# 
   679  0312                     	;# 
   680  0313                     	;# 
   681  0318                     	;# 
   682  0318                     	;# 
   683  0319                     	;# 
   684  031A                     	;# 
   685  0394                     	;# 
   686  0395                     	;# 
   687  0396                     	;# 
   688  039A                     	;# 
   689  039C                     	;# 
   690  039D                     	;# 
   691  039E                     	;# 
   692  039F                     	;# 
   693  0415                     	;# 
   694  0416                     	;# 
   695  0417                     	;# 
   696  041C                     	;# 
   697  041D                     	;# 
   698  041E                     	;# 
   699  0FE4                     	;# 
   700  0FE5                     	;# 
   701  0FE6                     	;# 
   702  0FE7                     	;# 
   703  0FE8                     	;# 
   704  0FE9                     	;# 
   705  0FEA                     	;# 
   706  0FEB                     	;# 
   707  0FED                     	;# 
   708  0FEE                     	;# 
   709  0FEF                     	;# 
   710  0000                     	;# 
   711  0001                     	;# 
   712  0002                     	;# 
   713  0003                     	;# 
   714  0004                     	;# 
   715  0005                     	;# 
   716  0006                     	;# 
   717  0007                     	;# 
   718  0008                     	;# 
   719  0009                     	;# 
   720  000A                     	;# 
   721  000B                     	;# 
   722  000C                     	;# 
   723  000D                     	;# 
   724  0011                     	;# 
   725  0012                     	;# 
   726  0013                     	;# 
   727  0014                     	;# 
   728  0015                     	;# 
   729  0016                     	;# 
   730  0016                     	;# 
   731  0017                     	;# 
   732  0018                     	;# 
   733  0019                     	;# 
   734  001A                     	;# 
   735  001B                     	;# 
   736  001C                     	;# 
   737  001E                     	;# 
   738  001F                     	;# 
   739  008C                     	;# 
   740  008D                     	;# 
   741  0091                     	;# 
   742  0092                     	;# 
   743  0093                     	;# 
   744  0094                     	;# 
   745  0095                     	;# 
   746  0096                     	;# 
   747  0097                     	;# 
   748  0098                     	;# 
   749  0099                     	;# 
   750  009A                     	;# 
   751  009B                     	;# 
   752  009B                     	;# 
   753  009C                     	;# 
   754  009D                     	;# 
   755  009E                     	;# 
   756  010C                     	;# 
   757  010D                     	;# 
   758  0111                     	;# 
   759  0112                     	;# 
   760  0113                     	;# 
   761  0114                     	;# 
   762  0115                     	;# 
   763  0116                     	;# 
   764  0117                     	;# 
   765  0118                     	;# 
   766  0119                     	;# 
   767  011A                     	;# 
   768  011B                     	;# 
   769  011D                     	;# 
   770  011E                     	;# 
   771  018C                     	;# 
   772  018D                     	;# 
   773  0191                     	;# 
   774  0191                     	;# 
   775  0192                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0193                     	;# 
   779  0194                     	;# 
   780  0195                     	;# 
   781  0196                     	;# 
   782  0199                     	;# 
   783  019A                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019C                     	;# 
   789  019C                     	;# 
   790  019D                     	;# 
   791  019E                     	;# 
   792  019F                     	;# 
   793  020C                     	;# 
   794  020D                     	;# 
   795  0211                     	;# 
   796  0211                     	;# 
   797  0212                     	;# 
   798  0212                     	;# 
   799  0213                     	;# 
   800  0213                     	;# 
   801  0214                     	;# 
   802  0214                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0215                     	;# 
   806  0216                     	;# 
   807  0216                     	;# 
   808  0217                     	;# 
   809  0217                     	;# 
   810  0219                     	;# 
   811  021A                     	;# 
   812  021B                     	;# 
   813  021C                     	;# 
   814  021D                     	;# 
   815  021E                     	;# 
   816  021F                     	;# 
   817  0291                     	;# 
   818  0291                     	;# 
   819  0292                     	;# 
   820  0293                     	;# 
   821  0294                     	;# 
   822  0295                     	;# 
   823  0295                     	;# 
   824  0296                     	;# 
   825  0298                     	;# 
   826  0298                     	;# 
   827  0299                     	;# 
   828  029A                     	;# 
   829  029B                     	;# 
   830  029C                     	;# 
   831  029C                     	;# 
   832  029D                     	;# 
   833  029E                     	;# 
   834  029E                     	;# 
   835  0311                     	;# 
   836  0311                     	;# 
   837  0312                     	;# 
   838  0313                     	;# 
   839  0318                     	;# 
   840  0318                     	;# 
   841  0319                     	;# 
   842  031A                     	;# 
   843  0394                     	;# 
   844  0395                     	;# 
   845  0396                     	;# 
   846  039A                     	;# 
   847  039C                     	;# 
   848  039D                     	;# 
   849  039E                     	;# 
   850  039F                     	;# 
   851  0415                     	;# 
   852  0416                     	;# 
   853  0417                     	;# 
   854  041C                     	;# 
   855  041D                     	;# 
   856  041E                     	;# 
   857  0FE4                     	;# 
   858  0FE5                     	;# 
   859  0FE6                     	;# 
   860  0FE7                     	;# 
   861  0FE8                     	;# 
   862  0FE9                     	;# 
   863  0FEA                     	;# 
   864  0FEB                     	;# 
   865  0FED                     	;# 
   866  0FEE                     	;# 
   867  0FEF                     	;# 
   868  0000                     	;# 
   869  0001                     	;# 
   870  0002                     	;# 
   871  0003                     	;# 
   872  0004                     	;# 
   873  0005                     	;# 
   874  0006                     	;# 
   875  0007                     	;# 
   876  0008                     	;# 
   877  0009                     	;# 
   878  000A                     	;# 
   879  000B                     	;# 
   880  000C                     	;# 
   881  000D                     	;# 
   882  0011                     	;# 
   883  0012                     	;# 
   884  0013                     	;# 
   885  0014                     	;# 
   886  0015                     	;# 
   887  0016                     	;# 
   888  0016                     	;# 
   889  0017                     	;# 
   890  0018                     	;# 
   891  0019                     	;# 
   892  001A                     	;# 
   893  001B                     	;# 
   894  001C                     	;# 
   895  001E                     	;# 
   896  001F                     	;# 
   897  008C                     	;# 
   898  008D                     	;# 
   899  0091                     	;# 
   900  0092                     	;# 
   901  0093                     	;# 
   902  0094                     	;# 
   903  0095                     	;# 
   904  0096                     	;# 
   905  0097                     	;# 
   906  0098                     	;# 
   907  0099                     	;# 
   908  009A                     	;# 
   909  009B                     	;# 
   910  009B                     	;# 
   911  009C                     	;# 
   912  009D                     	;# 
   913  009E                     	;# 
   914  010C                     	;# 
   915  010D                     	;# 
   916  0111                     	;# 
   917  0112                     	;# 
   918  0113                     	;# 
   919  0114                     	;# 
   920  0115                     	;# 
   921  0116                     	;# 
   922  0117                     	;# 
   923  0118                     	;# 
   924  0119                     	;# 
   925  011A                     	;# 
   926  011B                     	;# 
   927  011D                     	;# 
   928  011E                     	;# 
   929  018C                     	;# 
   930  018D                     	;# 
   931  0191                     	;# 
   932  0191                     	;# 
   933  0192                     	;# 
   934  0193                     	;# 
   935  0193                     	;# 
   936  0193                     	;# 
   937  0194                     	;# 
   938  0195                     	;# 
   939  0196                     	;# 
   940  0199                     	;# 
   941  019A                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019C                     	;# 
   947  019C                     	;# 
   948  019D                     	;# 
   949  019E                     	;# 
   950  019F                     	;# 
   951  020C                     	;# 
   952  020D                     	;# 
   953  0211                     	;# 
   954  0211                     	;# 
   955  0212                     	;# 
   956  0212                     	;# 
   957  0213                     	;# 
   958  0213                     	;# 
   959  0214                     	;# 
   960  0214                     	;# 
   961  0215                     	;# 
   962  0215                     	;# 
   963  0215                     	;# 
   964  0216                     	;# 
   965  0216                     	;# 
   966  0217                     	;# 
   967  0217                     	;# 
   968  0219                     	;# 
   969  021A                     	;# 
   970  021B                     	;# 
   971  021C                     	;# 
   972  021D                     	;# 
   973  021E                     	;# 
   974  021F                     	;# 
   975  0291                     	;# 
   976  0291                     	;# 
   977  0292                     	;# 
   978  0293                     	;# 
   979  0294                     	;# 
   980  0295                     	;# 
   981  0295                     	;# 
   982  0296                     	;# 
   983  0298                     	;# 
   984  0298                     	;# 
   985  0299                     	;# 
   986  029A                     	;# 
   987  029B                     	;# 
   988  029C                     	;# 
   989  029C                     	;# 
   990  029D                     	;# 
   991  029E                     	;# 
   992  029E                     	;# 
   993  0311                     	;# 
   994  0311                     	;# 
   995  0312                     	;# 
   996  0313                     	;# 
   997  0318                     	;# 
   998  0318                     	;# 
   999  0319                     	;# 
  1000  031A                     	;# 
  1001  0394                     	;# 
  1002  0395                     	;# 
  1003  0396                     	;# 
  1004  039A                     	;# 
  1005  039C                     	;# 
  1006  039D                     	;# 
  1007  039E                     	;# 
  1008  039F                     	;# 
  1009  0415                     	;# 
  1010  0416                     	;# 
  1011  0417                     	;# 
  1012  041C                     	;# 
  1013  041D                     	;# 
  1014  041E                     	;# 
  1015  0FE4                     	;# 
  1016  0FE5                     	;# 
  1017  0FE6                     	;# 
  1018  0FE7                     	;# 
  1019  0FE8                     	;# 
  1020  0FE9                     	;# 
  1021  0FEA                     	;# 
  1022  0FEB                     	;# 
  1023  0FED                     	;# 
  1024  0FEE                     	;# 
  1025  0FEF                     	;# 
  1026  0000                     	;# 
  1027  0001                     	;# 
  1028  0002                     	;# 
  1029  0003                     	;# 
  1030  0004                     	;# 
  1031  0005                     	;# 
  1032  0006                     	;# 
  1033  0007                     	;# 
  1034  0008                     	;# 
  1035  0009                     	;# 
  1036  000A                     	;# 
  1037  000B                     	;# 
  1038  000C                     	;# 
  1039  000D                     	;# 
  1040  0011                     	;# 
  1041  0012                     	;# 
  1042  0013                     	;# 
  1043  0014                     	;# 
  1044  0015                     	;# 
  1045  0016                     	;# 
  1046  0016                     	;# 
  1047  0017                     	;# 
  1048  0018                     	;# 
  1049  0019                     	;# 
  1050  001A                     	;# 
  1051  001B                     	;# 
  1052  001C                     	;# 
  1053  001E                     	;# 
  1054  001F                     	;# 
  1055  008C                     	;# 
  1056  008D                     	;# 
  1057  0091                     	;# 
  1058  0092                     	;# 
  1059  0093                     	;# 
  1060  0094                     	;# 
  1061  0095                     	;# 
  1062  0096                     	;# 
  1063  0097                     	;# 
  1064  0098                     	;# 
  1065  0099                     	;# 
  1066  009A                     	;# 
  1067  009B                     	;# 
  1068  009B                     	;# 
  1069  009C                     	;# 
  1070  009D                     	;# 
  1071  009E                     	;# 
  1072  010C                     	;# 
  1073  010D                     	;# 
  1074  0111                     	;# 
  1075  0112                     	;# 
  1076  0113                     	;# 
  1077  0114                     	;# 
  1078  0115                     	;# 
  1079  0116                     	;# 
  1080  0117                     	;# 
  1081  0118                     	;# 
  1082  0119                     	;# 
  1083  011A                     	;# 
  1084  011B                     	;# 
  1085  011D                     	;# 
  1086  011E                     	;# 
  1087  018C                     	;# 
  1088  018D                     	;# 
  1089  0191                     	;# 
  1090  0191                     	;# 
  1091  0192                     	;# 
  1092  0193                     	;# 
  1093  0193                     	;# 
  1094  0193                     	;# 
  1095  0194                     	;# 
  1096  0195                     	;# 
  1097  0196                     	;# 
  1098  0199                     	;# 
  1099  019A                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019B                     	;# 
  1103  019B                     	;# 
  1104  019C                     	;# 
  1105  019C                     	;# 
  1106  019D                     	;# 
  1107  019E                     	;# 
  1108  019F                     	;# 
  1109  020C                     	;# 
  1110  020D                     	;# 
  1111  0211                     	;# 
  1112  0211                     	;# 
  1113  0212                     	;# 
  1114  0212                     	;# 
  1115  0213                     	;# 
  1116  0213                     	;# 
  1117  0214                     	;# 
  1118  0214                     	;# 
  1119  0215                     	;# 
  1120  0215                     	;# 
  1121  0215                     	;# 
  1122  0216                     	;# 
  1123  0216                     	;# 
  1124  0217                     	;# 
  1125  0217                     	;# 
  1126  0219                     	;# 
  1127  021A                     	;# 
  1128  021B                     	;# 
  1129  021C                     	;# 
  1130  021D                     	;# 
  1131  021E                     	;# 
  1132  021F                     	;# 
  1133  0291                     	;# 
  1134  0291                     	;# 
  1135  0292                     	;# 
  1136  0293                     	;# 
  1137  0294                     	;# 
  1138  0295                     	;# 
  1139  0295                     	;# 
  1140  0296                     	;# 
  1141  0298                     	;# 
  1142  0298                     	;# 
  1143  0299                     	;# 
  1144  029A                     	;# 
  1145  029B                     	;# 
  1146  029C                     	;# 
  1147  029C                     	;# 
  1148  029D                     	;# 
  1149  029E                     	;# 
  1150  029E                     	;# 
  1151  0311                     	;# 
  1152  0311                     	;# 
  1153  0312                     	;# 
  1154  0313                     	;# 
  1155  0318                     	;# 
  1156  0318                     	;# 
  1157  0319                     	;# 
  1158  031A                     	;# 
  1159  0394                     	;# 
  1160  0395                     	;# 
  1161  0396                     	;# 
  1162  039A                     	;# 
  1163  039C                     	;# 
  1164  039D                     	;# 
  1165  039E                     	;# 
  1166  039F                     	;# 
  1167  0415                     	;# 
  1168  0416                     	;# 
  1169  0417                     	;# 
  1170  041C                     	;# 
  1171  041D                     	;# 
  1172  041E                     	;# 
  1173  0FE4                     	;# 
  1174  0FE5                     	;# 
  1175  0FE6                     	;# 
  1176  0FE7                     	;# 
  1177  0FE8                     	;# 
  1178  0FE9                     	;# 
  1179  0FEA                     	;# 
  1180  0FEB                     	;# 
  1181  0FED                     	;# 
  1182  0FEE                     	;# 
  1183  0FEF                     	;# 
  1184                           
  1185                           	psect	idataBANK0
  1186  0036                     __pidataBANK0:
  1187                           
  1188                           ;initializer for lcd_set_cursor@F2395
  1189  0036  3400               	retlw	0
  1190  0037  3440               	retlw	64
  1191  0038  3414               	retlw	20
  1192  0039  3454               	retlw	84
  1193                           
  1194                           	psect	stringtext1
  1195  0800                     __pstringtext1:
  1196  0800                     _dpowers:
  1197  0800  3401               	retlw	1
  1198  0801  3400               	retlw	0
  1199  0802  340A               	retlw	10
  1200  0803  3400               	retlw	0
  1201  0804  3464               	retlw	100
  1202  0805  3400               	retlw	0
  1203  0806  34E8               	retlw	232
  1204  0807  3403               	retlw	3
  1205  0808  3410               	retlw	16
  1206  0809  3427               	retlw	39
  1207  080A                     __end_of_dpowers:
  1208  000C                     _PORTAbits	set	12
  1209  008D                     _TRISB	set	141
  1210  0097                     _WDTCON	set	151
  1211  0098                     _OSCTUNE	set	152
  1212  0099                     _OSCCON	set	153
  1213  008C                     _TRISA	set	140
  1214  0095                     _OPTION_REGbits	set	149
  1215  011E                     _APFCON1	set	286
  1216  011D                     _APFCON0	set	285
  1217  0116                     _BORCON	set	278
  1218  010D                     _LATB	set	269
  1219  010C                     _LATA	set	268
  1220  018D                     _ANSELB	set	397
  1221  018C                     _ANSELA	set	396
  1222  021D                     _SSP2CON1bits	set	541
  1223  021C                     _SSP2STATbits	set	540
  1224  0219                     _SSP2BUF	set	537
  1225  021E                     _SSP2CON2bits	set	542
  1226  020C                     _WPUA	set	524
  1227  021C                     _SSP2STAT	set	540
  1228  021E                     _SSP2CON2	set	542
  1229  021D                     _SSP2CON1	set	541
  1230  021A                     _SSP2ADD	set	538
  1231  020D                     _WPUB	set	525
  1232  080A                     STR_2:
  1233  080A  3431               	retlw	49	;'1'
  1234  080B  3432               	retlw	50	;'2'
  1235  080C  343A               	retlw	58	;':'
  1236  080D  3430               	retlw	48	;'0'
  1237  080E  3430               	retlw	48	;'0'
  1238  080F  3400               	retlw	0
  1239                           
  1240                           	psect	stringtext2
  1241  0810                     __pstringtext2:
  1242  0810                     STR_3:
  1243  0810  3425               	retlw	37	;'%'
  1244  0811  3464               	retlw	100	;'d'
  1245  0812  3420               	retlw	32	;' '
  1246  0813  3467               	retlw	103	;'g'
  1247  0814  3400               	retlw	0
  1248                           
  1249                           	psect	stringtext3
  1250  0815                     __pstringtext3:
  1251  0815                     STR_1:
  1252  0815  3448               	retlw	72	;'H'
  1253  0816  3449               	retlw	73	;'I'
  1254  0817  345A               	retlw	90	;'Z'
  1255  0818  3400               	retlw	0
  1256                           
  1257                           	psect	stringtext4
  1258  0819                     __pstringtext4:
  1259  0819                     STR_4:
  1260  0819  3420               	retlw	32	;' '
  1261  081A  3400               	retlw	0
  1262                           
  1263                           	psect	stringtext5
  1264  0000                     __pstringtext5:
  1265                           
  1266                           	psect	cinit
  1267  07E4                     start_initialization:	
  1268                           ; #config settings
  1269                           
  1270  07E4                     __initialization:
  1271                           
  1272                           ; Initialize objects allocated to BANK0
  1273  07E4  3180  2036  3187   	fcall	__pidataBANK0	;fetch initializer
  1274  07E7  00D8               	movwf	__pdataBANK0& (0+127)
  1275  07E8  3180  2037  3187   	fcall	__pidataBANK0+1	;fetch initializer
  1276  07EB  00D9               	movwf	(__pdataBANK0+1)& (0+127)
  1277  07EC  3180  2038  3187   	fcall	__pidataBANK0+2	;fetch initializer
  1278  07EF  00DA               	movwf	(__pdataBANK0+2)& (0+127)
  1279  07F0  3180  2039  3187   	fcall	__pidataBANK0+3	;fetch initializer
  1280  07F3  00DB               	movwf	(__pdataBANK0+3)& (0+127)
  1281                           
  1282                           ; Clear objects allocated to BANK0
  1283  07F4  01CF               	clrf	__pbssBANK0& (0+127)
  1284  07F5  01D0               	clrf	(__pbssBANK0+1)& (0+127)
  1285  07F6  01D1               	clrf	(__pbssBANK0+2)& (0+127)
  1286  07F7  01D2               	clrf	(__pbssBANK0+3)& (0+127)
  1287  07F8  01D3               	clrf	(__pbssBANK0+4)& (0+127)
  1288  07F9  01D4               	clrf	(__pbssBANK0+5)& (0+127)
  1289  07FA  01D5               	clrf	(__pbssBANK0+6)& (0+127)
  1290  07FB  01D6               	clrf	(__pbssBANK0+7)& (0+127)
  1291  07FC  01D7               	clrf	(__pbssBANK0+8)& (0+127)
  1292  07FD                     end_of_initialization:	
  1293                           ;End of C runtime variable initialization code
  1294                           
  1295  07FD                     __end_of__initialization:
  1296  07FD  0020               	movlb	0
  1297  07FE  3181  29E9         	ljmp	_main	;jump to C main() function
  1298                           
  1299                           	psect	bssBANK0
  1300  004F                     __pbssBANK0:
  1301  004F                     _weight_zero:
  1302  004F                     	ds	4
  1303  0053                     _weight_dat:
  1304  0053                     	ds	4
  1305  0057                     __backlightval:
  1306  0057                     	ds	1
  1307                           
  1308                           	psect	dataBANK0
  1309  0058                     __pdataBANK0:
  1310  0058                     lcd_set_cursor@F2395:
  1311  0058                     	ds	4
  1312                           
  1313                           	psect	cstackCOMMON
  1314  0070                     __pcstackCOMMON:
  1315  0070                     ?_SYSTEM_Initialize:
  1316  0070                     ??_SYSTEM_Initialize:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ?_lcd_init:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ?_lcd_backlight:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     ?_PIN_MANAGER_Initialize:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0070                     ??_PIN_MANAGER_Initialize:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0070                     ?_OSCILLATOR_Initialize:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0070                     ??_OSCILLATOR_Initialize:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0070                     ?_WDT_Initialize:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  0070                     ??_WDT_Initialize:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0070                     ?_main:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346  0070                     ?_set_CELL_CLK_LOW:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0070                     ??_set_CELL_CLK_LOW:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ?_set_CELL_CLK_HIGH:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ??_set_CELL_CLK_HIGH:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     ?_get_CELL_DAT_VAL:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0070                     ??_get_CELL_DAT_VAL:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0070                     ?_i2c_wait:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ??_i2c_wait:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     ?_i2c_start:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0070                     ??_i2c_start:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0070                     ?_i2c_stop:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ??_i2c_stop:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     ?_i2c_write:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ??_i2c_write:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ?_lcd_cmd:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0070                     ?___lwdiv:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0070                     ?___aldiv:	
  1395                           ; 2 bytes @ 0x0
  1396                           
  1397  0070                     ?___fldiv:	
  1398                           ; 4 bytes @ 0x0
  1399                           
  1400  0070                     ?___xxtofl:	
  1401                           ; 4 bytes @ 0x0
  1402                           
  1403  0070                     i2c_write@data:	
  1404                           ; 4 bytes @ 0x0
  1405                           
  1406  0070                     ___lwdiv@divisor:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409  0070                     ___aldiv@divisor:	
  1410                           ; 2 bytes @ 0x0
  1411                           
  1412  0070                     ___fldiv@a:	
  1413                           ; 4 bytes @ 0x0
  1414                           
  1415  0070                     ___xxtofl@val:	
  1416                           ; 4 bytes @ 0x0
  1417                           
  1418                           
  1419                           ; 4 bytes @ 0x0
  1420  0070                     	ds	1
  1421  0071                     ??_lcd_cmd:
  1422  0071                     lcd_cmd@cmd:	
  1423                           ; 1 bytes @ 0x1
  1424                           
  1425                           
  1426                           ; 1 bytes @ 0x1
  1427  0071                     	ds	1
  1428  0072                     ??_lcd_init:
  1429  0072                     ??_lcd_backlight:	
  1430                           ; 1 bytes @ 0x2
  1431                           
  1432  0072                     ?_command:	
  1433                           ; 1 bytes @ 0x2
  1434                           
  1435  0072                     command@mode:	
  1436                           ; 1 bytes @ 0x2
  1437                           
  1438  0072                     ___lwdiv@dividend:	
  1439                           ; 1 bytes @ 0x2
  1440                           
  1441                           
  1442                           ; 2 bytes @ 0x2
  1443  0072                     	ds	1
  1444  0073                     ??_command:
  1445                           
  1446                           ; 1 bytes @ 0x3
  1447  0073                     	ds	1
  1448  0074                     ??___lwdiv:
  1449  0074                     ??___xxtofl:	
  1450                           ; 1 bytes @ 0x4
  1451                           
  1452  0074                     ___aldiv@dividend:	
  1453                           ; 1 bytes @ 0x4
  1454                           
  1455  0074                     ___fldiv@b:	
  1456                           ; 4 bytes @ 0x4
  1457                           
  1458                           
  1459                           ; 4 bytes @ 0x4
  1460  0074                     	ds	1
  1461  0075                     command@val:
  1462  0075                     ___lwdiv@quotient:	
  1463                           ; 1 bytes @ 0x5
  1464                           
  1465                           
  1466                           ; 2 bytes @ 0x5
  1467  0075                     	ds	1
  1468  0076                     command@highnib:
  1469                           
  1470                           ; 1 bytes @ 0x6
  1471  0076                     	ds	1
  1472  0077                     command@lownib:
  1473  0077                     ___lwdiv@counter:	
  1474                           ; 1 bytes @ 0x7
  1475                           
  1476                           
  1477                           ; 1 bytes @ 0x7
  1478  0077                     	ds	1
  1479  0078                     ?_lcd_set_cursor:
  1480  0078                     ?_lcd_print:	
  1481                           ; 1 bytes @ 0x8
  1482                           
  1483  0078                     ??___aldiv:	
  1484                           ; 1 bytes @ 0x8
  1485                           
  1486  0078                     ??___fldiv:	
  1487                           ; 1 bytes @ 0x8
  1488                           
  1489  0078                     ?___lwmod:	
  1490                           ; 1 bytes @ 0x8
  1491                           
  1492  0078                     lcd_set_cursor@row:	
  1493                           ; 2 bytes @ 0x8
  1494                           
  1495  0078                     ___xxtofl@sign:	
  1496                           ; 1 bytes @ 0x8
  1497                           
  1498  0078                     lcd_print@str:	
  1499                           ; 1 bytes @ 0x8
  1500                           
  1501  0078                     ___lwmod@divisor:	
  1502                           ; 2 bytes @ 0x8
  1503                           
  1504                           
  1505                           ; 2 bytes @ 0x8
  1506  0078                     	ds	1
  1507  0079                     ??_lcd_set_cursor:
  1508  0079                     ??_get_scale_val:	
  1509                           ; 1 bytes @ 0x9
  1510                           
  1511  0079                     ___xxtofl@exp:	
  1512                           ; 1 bytes @ 0x9
  1513                           
  1514                           
  1515                           ; 1 bytes @ 0x9
  1516  0079                     	ds	1
  1517  007A                     ??_lcd_print:
  1518  007A                     ___lwmod@dividend:	
  1519                           ; 1 bytes @ 0xA
  1520                           
  1521  007A                     ___xxtofl@arg:	
  1522                           ; 2 bytes @ 0xA
  1523                           
  1524                           
  1525                           ; 4 bytes @ 0xA
  1526  007A                     	ds	1
  1527  007B                     lcd_print@cmd:
  1528                           
  1529                           ; 1 bytes @ 0xB
  1530  007B                     	ds	1
  1531  007C                     ??___lwmod:
  1532                           
  1533                           ; 1 bytes @ 0xC
  1534  007C                     	ds	1
  1535  007D                     ___lwmod@counter:
  1536                           
  1537                           ; 1 bytes @ 0xD
  1538  007D                     	ds	1
  1539                           
  1540                           	psect	cstackBANK0
  1541  0020                     __pcstackBANK0:
  1542  0020                     ?_sprintf:
  1543  0020                     ___aldiv@counter:	
  1544                           ; 2 bytes @ 0x0
  1545                           
  1546  0020                     sprintf@f:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0020                     lcd_set_cursor@row_offsets:	
  1550                           ; 2 bytes @ 0x0
  1551                           
  1552  0020                     ___fldiv@rem:	
  1553                           ; 4 bytes @ 0x0
  1554                           
  1555                           
  1556                           ; 4 bytes @ 0x0
  1557  0020                     	ds	1
  1558  0021                     ___aldiv@sign:
  1559                           
  1560                           ; 1 bytes @ 0x1
  1561  0021                     	ds	1
  1562  0022                     ___aldiv@quotient:
  1563                           
  1564                           ; 4 bytes @ 0x2
  1565  0022                     	ds	2
  1566  0024                     lcd_set_cursor@col:
  1567  0024                     ___fldiv@sign:	
  1568                           ; 1 bytes @ 0x4
  1569                           
  1570                           
  1571                           ; 1 bytes @ 0x4
  1572  0024                     	ds	1
  1573  0025                     lcd_set_cursor@cmd:
  1574  0025                     ___fldiv@new_exp:	
  1575                           ; 1 bytes @ 0x5
  1576                           
  1577                           
  1578                           ; 2 bytes @ 0x5
  1579  0025                     	ds	1
  1580  0026                     ??_sprintf:
  1581  0026                     ?_get_scale_val:	
  1582                           ; 1 bytes @ 0x6
  1583                           
  1584                           
  1585                           ; 4 bytes @ 0x6
  1586  0026                     	ds	1
  1587  0027                     ___fldiv@grs:
  1588                           
  1589                           ; 4 bytes @ 0x7
  1590  0027                     	ds	3
  1591  002A                     sprintf@ap:
  1592  002A                     get_scale_val@weight_add:	
  1593                           ; 1 bytes @ 0xA
  1594                           
  1595                           
  1596                           ; 4 bytes @ 0xA
  1597  002A                     	ds	1
  1598  002B                     sprintf@flag:
  1599  002B                     ___fldiv@bexp:	
  1600                           ; 1 bytes @ 0xB
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0xB
  1604  002B                     	ds	1
  1605  002C                     sprintf@prec:
  1606  002C                     ___fldiv@aexp:	
  1607                           ; 1 bytes @ 0xC
  1608                           
  1609                           
  1610                           ; 1 bytes @ 0xC
  1611  002C                     	ds	1
  1612  002D                     ?_scale_convert_gram:
  1613  002D                     sprintf@val:	
  1614                           ; 4 bytes @ 0xD
  1615                           
  1616  002D                     scale_convert_gram@count:	
  1617                           ; 2 bytes @ 0xD
  1618                           
  1619                           
  1620                           ; 4 bytes @ 0xD
  1621  002D                     	ds	1
  1622  002E                     get_scale_val@j:
  1623                           
  1624                           ; 1 bytes @ 0xE
  1625  002E                     	ds	1
  1626  002F                     get_scale_val@n:
  1627  002F                     sprintf@sp:	
  1628                           ; 1 bytes @ 0xF
  1629                           
  1630                           
  1631                           ; 1 bytes @ 0xF
  1632  002F                     	ds	1
  1633  0030                     sprintf@c:
  1634  0030                     get_scale_val@weight_count:	
  1635                           ; 1 bytes @ 0x10
  1636                           
  1637                           
  1638                           ; 4 bytes @ 0x10
  1639  0030                     	ds	1
  1640  0031                     ??_scale_convert_gram:
  1641                           
  1642                           ; 1 bytes @ 0x11
  1643  0031                     	ds	3
  1644  0034                     get_scale_val@i:
  1645                           
  1646                           ; 1 bytes @ 0x14
  1647  0034                     	ds	1
  1648  0035                     scale_convert_gram@temp:
  1649                           
  1650                           ; 4 bytes @ 0x15
  1651  0035                     	ds	4
  1652  0039                     ??_main:
  1653                           
  1654                           ; 1 bytes @ 0x19
  1655  0039                     	ds	2
  1656  003B                     main@str:
  1657                           
  1658                           ; 16 bytes @ 0x1B
  1659  003B                     	ds	16
  1660  004B                     main@weight_gram:
  1661                           
  1662                           ; 4 bytes @ 0x2B
  1663  004B                     	ds	4
  1664                           
  1665                           	psect	maintext
  1666  01E9                     __pmaintext:	
  1667 ;;
  1668 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1669 ;;
  1670 ;; *************** function _main *****************
  1671 ;; Defined at:
  1672 ;;		line 6 in file "main.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  weight_gram     4   43[BANK0 ] float 
  1677 ;;  str            16   27[BANK0 ] unsigned char [16]
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : B1F/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1687 ;;      Params:         0       0       0       0       0       0
  1688 ;;      Locals:         0      20       0       0       0       0
  1689 ;;      Temps:          0       2       0       0       0       0
  1690 ;;      Totals:         0      22       0       0       0       0
  1691 ;;Total ram usage:       22 bytes
  1692 ;; Hardware stack levels required when called: 5
  1693 ;; This function calls:
  1694 ;;		_SYSTEM_Initialize
  1695 ;;		_get_scale_val
  1696 ;;		_lcd_backlight
  1697 ;;		_lcd_init
  1698 ;;		_lcd_print
  1699 ;;		_lcd_set_cursor
  1700 ;;		_scale_convert_gram
  1701 ;;		_sprintf
  1702 ;; This function is called by:
  1703 ;;		Startup code after reset
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _main
  1709  01E9                     _main:
  1710  01E9                     l2197:	
  1711                           ;incstack = 0
  1712                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1713                           
  1714                           
  1715                           ;main.c: 8: SYSTEM_Initialize();
  1716  01E9  3180  2053  3181   	fcall	_SYSTEM_Initialize
  1717  01EC                     l2199:
  1718                           
  1719                           ;main.c: 11: WPUB = 0x24;
  1720  01EC  3024               	movlw	36
  1721  01ED  0024               	movlb	4	; select bank4
  1722  01EE  008D               	movwf	13	;volatile
  1723  01EF                     l2201:
  1724                           
  1725                           ;main.c: 12: OPTION_REGbits.nWPUEN = 0;
  1726  01EF  0021               	movlb	1	; select bank1
  1727  01F0  1395               	bcf	21,7	;volatile
  1728  01F1                     l2203:
  1729                           
  1730                           ;main.c: 15: ANSELA = 0x00;
  1731  01F1  0023               	movlb	3	; select bank3
  1732  01F2  018C               	clrf	12	;volatile
  1733  01F3                     l2205:
  1734                           
  1735                           ;main.c: 16: ANSELB = 0x00;
  1736  01F3  018D               	clrf	13	;volatile
  1737  01F4                     l2207:
  1738                           
  1739                           ;main.c: 20: TRISA = 0x04;
  1740  01F4  3004               	movlw	4
  1741  01F5  0021               	movlb	1	; select bank1
  1742  01F6  008C               	movwf	12	;volatile
  1743  01F7                     l2209:
  1744                           
  1745                           ;main.c: 22: LATA = 0x00;
  1746  01F7  0022               	movlb	2	; select bank2
  1747  01F8  018C               	clrf	12	;volatile
  1748  01F9                     l2211:
  1749                           
  1750                           ;main.c: 23: LATB = 0x00;
  1751  01F9  018D               	clrf	13	;volatile
  1752  01FA                     l2213:
  1753                           
  1754                           ;main.c: 27: SSP2ADD = 0x13;
  1755  01FA  3013               	movlw	19
  1756  01FB  0024               	movlb	4	; select bank4
  1757  01FC  009A               	movwf	26	;volatile
  1758  01FD                     l2215:
  1759                           
  1760                           ;main.c: 28: SSP2CON1 = 0x28;
  1761  01FD  3028               	movlw	40
  1762  01FE  009D               	movwf	29	;volatile
  1763  01FF                     l2217:
  1764                           
  1765                           ;main.c: 29: SSP2CON2 = 0x0;
  1766  01FF  019E               	clrf	30	;volatile
  1767  0200                     l2219:
  1768                           
  1769                           ;main.c: 30: SSP2STAT = 0;
  1770  0200  019C               	clrf	28	;volatile
  1771                           
  1772                           ;main.c: 32: lcd_init();
  1773  0201  3185  2544  3181   	fcall	_lcd_init
  1774                           
  1775                           ;main.c: 33: lcd_backlight();
  1776  0204  3180  2073  3181   	fcall	_lcd_backlight
  1777  0207                     l2221:
  1778                           
  1779                           ;main.c: 34: lcd_set_cursor(0, 0);
  1780  0207  01F8               	clrf	lcd_set_cursor@row
  1781  0208  3000               	movlw	0
  1782  0209  3180  20D8  3181   	fcall	_lcd_set_cursor
  1783  020C                     l2223:
  1784                           
  1785                           ;main.c: 36: lcd_print("HIZ");
  1786  020C  3015               	movlw	low (STR_1| (0+32768))
  1787  020D  00F8               	movwf	lcd_print@str
  1788  020E  3088               	movlw	high (STR_1| (0+32768))
  1789  020F  00F9               	movwf	lcd_print@str+1
  1790  0210  3180  20BB  3181   	fcall	_lcd_print
  1791  0213                     l2225:
  1792                           
  1793                           ;main.c: 38: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1794  0213  300B               	movlw	11
  1795  0214  0020               	movlb	0	; select bank0
  1796  0215  00BA               	movwf	??_main+1
  1797  0216  3026               	movlw	38
  1798  0217  00B9               	movwf	??_main
  1799  0218  305D               	movlw	93
  1800  0219                     u1857:
  1801  0219  0B89               	decfsz	9,f
  1802  021A  2A19               	goto	u1857
  1803  021B  0BB9               	decfsz	??_main,f
  1804  021C  2A19               	goto	u1857
  1805  021D  0BBA               	decfsz	??_main+1,f
  1806  021E  2A19               	goto	u1857
  1807  021F  3200               	nop2
  1808  0220                     l2227:
  1809                           
  1810                           ;main.c: 40: lcd_set_cursor(3, 0);
  1811  0220  01F8               	clrf	lcd_set_cursor@row
  1812  0221  3003               	movlw	3
  1813  0222  3180  20D8  3181   	fcall	_lcd_set_cursor
  1814  0225                     l2229:
  1815                           
  1816                           ;main.c: 41: lcd_print("12:00");
  1817  0225  300A               	movlw	low (STR_2| (0+32768))
  1818  0226  00F8               	movwf	lcd_print@str
  1819  0227  3088               	movlw	high (STR_2| (0+32768))
  1820  0228  00F9               	movwf	lcd_print@str+1
  1821  0229  3180  20BB  3181   	fcall	_lcd_print
  1822  022C                     l2231:
  1823                           
  1824                           ;main.c: 43: weight_zero = get_scale_val(50);
  1825  022C  3032               	movlw	50
  1826  022D  3183  23B0  3181   	fcall	_get_scale_val
  1827  0230  0020               	movlb	0	; select bank0
  1828  0231  0829               	movf	?_get_scale_val+3,w
  1829  0232  00D2               	movwf	_weight_zero+3
  1830  0233  0828               	movf	?_get_scale_val+2,w
  1831  0234  00D1               	movwf	_weight_zero+2
  1832  0235  0827               	movf	?_get_scale_val+1,w
  1833  0236  00D0               	movwf	_weight_zero+1
  1834  0237  0826               	movf	?_get_scale_val,w
  1835  0238  00CF               	movwf	_weight_zero
  1836  0239                     l2233:
  1837                           
  1838                           ;main.c: 47: {;main.c: 48: weight_dat = get_scale_val(8);
  1839  0239  3008               	movlw	8
  1840  023A  3183  23B0  3181   	fcall	_get_scale_val
  1841  023D  0020               	movlb	0	; select bank0
  1842  023E  0829               	movf	?_get_scale_val+3,w
  1843  023F  00D6               	movwf	_weight_dat+3
  1844  0240  0828               	movf	?_get_scale_val+2,w
  1845  0241  00D5               	movwf	_weight_dat+2
  1846  0242  0827               	movf	?_get_scale_val+1,w
  1847  0243  00D4               	movwf	_weight_dat+1
  1848  0244  0826               	movf	?_get_scale_val,w
  1849  0245  00D3               	movwf	_weight_dat
  1850  0246                     l2235:
  1851                           
  1852                           ;main.c: 49: float weight_gram = scale_convert_gram(weight_dat);
  1853  0246  0856               	movf	_weight_dat+3,w
  1854  0247  00B0               	movwf	scale_convert_gram@count+3
  1855  0248  0855               	movf	_weight_dat+2,w
  1856  0249  00AF               	movwf	scale_convert_gram@count+2
  1857  024A  0854               	movf	_weight_dat+1,w
  1858  024B  00AE               	movwf	scale_convert_gram@count+1
  1859  024C  0853               	movf	_weight_dat,w
  1860  024D  00AD               	movwf	scale_convert_gram@count
  1861  024E  3181  21A2  3181   	fcall	_scale_convert_gram
  1862  0251  0020               	movlb	0	; select bank0
  1863  0252  0830               	movf	?_scale_convert_gram+3,w
  1864  0253  00CE               	movwf	main@weight_gram+3
  1865  0254  082F               	movf	?_scale_convert_gram+2,w
  1866  0255  00CD               	movwf	main@weight_gram+2
  1867  0256  082E               	movf	?_scale_convert_gram+1,w
  1868  0257  00CC               	movwf	main@weight_gram+1
  1869  0258  082D               	movf	?_scale_convert_gram,w
  1870  0259  00CB               	movwf	main@weight_gram
  1871  025A                     l2237:
  1872                           
  1873                           ;main.c: 51: sprintf(str, "%d g", weight_gram);
  1874  025A  3010               	movlw	low (STR_3| (0+32768))
  1875  025B  00A0               	movwf	sprintf@f
  1876  025C  3088               	movlw	high (STR_3| (0+32768))
  1877  025D  00A1               	movwf	sprintf@f+1
  1878  025E  084E               	movf	main@weight_gram+3,w
  1879  025F  00A5               	movwf	?_sprintf+5
  1880  0260  084D               	movf	main@weight_gram+2,w
  1881  0261  00A4               	movwf	?_sprintf+4
  1882  0262  084C               	movf	main@weight_gram+1,w
  1883  0263  00A3               	movwf	?_sprintf+3
  1884  0264  084B               	movf	main@weight_gram,w
  1885  0265  00A2               	movwf	?_sprintf+2
  1886  0266  303B               	movlw	(low (main@str| 0))& (0+255)
  1887  0267  3184  246B  3181   	fcall	_sprintf
  1888  026A                     l2239:
  1889                           
  1890                           ;main.c: 52: lcd_print(str);
  1891  026A  303B               	movlw	low main@str
  1892  026B  00F8               	movwf	lcd_print@str
  1893  026C  3000               	movlw	high main@str
  1894  026D  00F9               	movwf	lcd_print@str+1
  1895  026E  3180  20BB  3181   	fcall	_lcd_print
  1896  0271  2A39               	goto	l2233
  1897  0272  3180  2802         	ljmp	start
  1898  0274                     __end_of_main:
  1899                           
  1900                           	psect	text1
  1901  046B                     __ptext1:	
  1902 ;; *************** function _sprintf *****************
  1903 ;; Defined at:
  1904 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  sp              1    wreg     PTR unsigned char 
  1907 ;;		 -> main@str(16), 
  1908 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  1909 ;;		 -> STR_3(5), 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1912 ;;		 -> main@str(16), 
  1913 ;;  tmpval          4    0        struct .
  1914 ;;  val             2   13[BANK0 ] unsigned int 
  1915 ;;  cp              2    0        PTR const unsigned char 
  1916 ;;  len             2    0        unsigned int 
  1917 ;;  c               1   16[BANK0 ] unsigned char 
  1918 ;;  prec            1   12[BANK0 ] char 
  1919 ;;  flag            1   11[BANK0 ] unsigned char 
  1920 ;;  ap              1   10[BANK0 ] PTR void [1]
  1921 ;;		 -> ?_sprintf(2), 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  2    0[BANK0 ] int 
  1924 ;; Registers used:
  1925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1931 ;;      Params:         0       6       0       0       0       0
  1932 ;;      Locals:         0       7       0       0       0       0
  1933 ;;      Temps:          0       4       0       0       0       0
  1934 ;;      Totals:         0      17       0       0       0       0
  1935 ;;Total ram usage:       17 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 1
  1938 ;; This function calls:
  1939 ;;		___lwdiv
  1940 ;;		___lwmod
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           
  1947                           ;psect for function _sprintf
  1948  046B                     _sprintf:
  1949                           
  1950                           ;incstack = 0
  1951                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1952                           ;sprintf@sp stored from wreg
  1953  046B  0020               	movlb	0	; select bank0
  1954  046C  00AF               	movwf	sprintf@sp
  1955  046D                     l2139:
  1956                           
  1957                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  1958  046D  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1959  046E  00A6               	movwf	??_sprintf
  1960  046F  0826               	movf	??_sprintf,w
  1961  0470  00AA               	movwf	sprintf@ap
  1962                           
  1963                           ;doprnt.c: 553: while((c = *f++)) {
  1964  0471  2D2B               	goto	l2191
  1965  0472                     l2141:
  1966                           
  1967                           ;doprnt.c: 555: if(c != '%')
  1968  0472  3025               	movlw	37
  1969  0473  0630               	xorwf	sprintf@c,w
  1970  0474  1903               	btfsc	3,2
  1971  0475  2C77               	goto	u1741
  1972  0476  2C78               	goto	u1740
  1973  0477                     u1741:
  1974  0477  2C84               	goto	l2147
  1975  0478                     u1740:
  1976  0478                     l2143:
  1977                           
  1978                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1979  0478  0830               	movf	sprintf@c,w
  1980  0479  00A6               	movwf	??_sprintf
  1981  047A  082F               	movf	sprintf@sp,w
  1982  047B  0086               	movwf	6
  1983  047C  0187               	clrf	7
  1984  047D  0826               	movf	??_sprintf,w
  1985  047E  0081               	movwf	1
  1986  047F                     l2145:
  1987  047F  3001               	movlw	1
  1988  0480  00A6               	movwf	??_sprintf
  1989  0481  0826               	movf	??_sprintf,w
  1990  0482  07AF               	addwf	sprintf@sp,f
  1991                           
  1992                           ;doprnt.c: 559: continue;
  1993  0483  2D2B               	goto	l2191
  1994  0484                     l2147:
  1995                           
  1996                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1997  0484  01AB               	clrf	sprintf@flag
  1998  0485                     l2151:	
  1999                           ;doprnt.c: 661: switch(c = *f++) {
  2000                           
  2001  0485  0821               	movf	sprintf@f+1,w
  2002  0486  00A7               	movwf	??_sprintf+1
  2003  0487  0820               	movf	sprintf@f,w
  2004  0488  00A6               	movwf	??_sprintf
  2005  0489  0AA0               	incf	sprintf@f,f
  2006  048A  1903               	skipnz
  2007  048B  0AA1               	incf	sprintf@f+1,f
  2008  048C  0826               	movf	??_sprintf,w
  2009  048D  0084               	movwf	4
  2010  048E  0827               	movf	??_sprintf+1,w
  2011  048F  0085               	movwf	5
  2012  0490  0800               	movf	0,w	;code access
  2013  0491  00B0               	movwf	sprintf@c
  2014                           
  2015                           ; Switch size 1, requested type "simple"
  2016                           ; Number of cases is 3, Range of values is 0 to 105
  2017                           ; switch strategies available:
  2018                           ; Name         Instructions Cycles
  2019                           ; simple_byte           10     6 (average)
  2020                           ; direct_byte          218     6 (fixed)
  2021                           ; jumptable            260     6 (fixed)
  2022                           ;	Chosen strategy is simple_byte
  2023  0492  3A00               	xorlw	0	; case 0
  2024  0493  1903               	skipnz
  2025  0494  2D3F               	goto	l2193
  2026  0495  3A64               	xorlw	100	; case 100
  2027  0496  1903               	skipnz
  2028  0497  2C9C               	goto	l2153
  2029  0498  3A0D               	xorlw	13	; case 105
  2030  0499  1903               	skipnz
  2031  049A  2C9C               	goto	l2153
  2032  049B  2D2B               	goto	l2191
  2033  049C                     l2153:
  2034                           
  2035                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  2036  049C  082A               	movf	sprintf@ap,w
  2037  049D  0086               	movwf	6
  2038  049E  0187               	clrf	7
  2039  049F  3F40               	moviw [0]fsr1
  2040  04A0  00AD               	movwf	sprintf@val
  2041  04A1  3F41               	moviw [1]fsr1
  2042  04A2  00AE               	movwf	sprintf@val+1
  2043  04A3                     l2155:
  2044  04A3  3002               	movlw	2
  2045  04A4  00A6               	movwf	??_sprintf
  2046  04A5  0826               	movf	??_sprintf,w
  2047  04A6  07AA               	addwf	sprintf@ap,f
  2048  04A7                     l2157:
  2049                           
  2050                           ;doprnt.c: 1287: if((int)val < 0) {
  2051  04A7  1FAE               	btfss	sprintf@val+1,7
  2052  04A8  2CAA               	goto	u1751
  2053  04A9  2CAB               	goto	u1750
  2054  04AA                     u1751:
  2055  04AA  2CB4               	goto	l2163
  2056  04AB                     u1750:
  2057  04AB                     l2159:
  2058                           
  2059                           ;doprnt.c: 1288: flag |= 0x03;
  2060  04AB  3003               	movlw	3
  2061  04AC  00A6               	movwf	??_sprintf
  2062  04AD  0826               	movf	??_sprintf,w
  2063  04AE  04AB               	iorwf	sprintf@flag,f
  2064  04AF                     l2161:
  2065                           
  2066                           ;doprnt.c: 1289: val = -val;
  2067  04AF  09AD               	comf	sprintf@val,f
  2068  04B0  09AE               	comf	sprintf@val+1,f
  2069  04B1  0AAD               	incf	sprintf@val,f
  2070  04B2  1903               	skipnz
  2071  04B3  0AAE               	incf	sprintf@val+1,f
  2072  04B4                     l2163:
  2073                           
  2074                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  2075  04B4  01B0               	clrf	sprintf@c
  2076  04B5  0AB0               	incf	sprintf@c,f
  2077  04B6                     l2169:
  2078                           
  2079                           ;doprnt.c: 1332: if(val < dpowers[c])
  2080  04B6  0830               	movf	sprintf@c,w
  2081  04B7  00A6               	movwf	??_sprintf
  2082  04B8  01A7               	clrf	??_sprintf+1
  2083  04B9  35A6               	lslf	??_sprintf,f
  2084  04BA  0DA7               	rlf	??_sprintf+1,f
  2085  04BB  3000               	movlw	low (_dpowers| (0+32768))
  2086  04BC  0726               	addwf	??_sprintf,w
  2087  04BD  0084               	movwf	4
  2088  04BE  3088               	movlw	high (_dpowers| (0+32768))
  2089  04BF  3D27               	addwfc	??_sprintf+1,w
  2090  04C0  0085               	movwf	5
  2091  04C1  3F00               	moviw [0]fsr0
  2092  04C2  00A8               	movwf	??_sprintf+2
  2093  04C3  3F01               	moviw [1]fsr0
  2094  04C4  00A9               	movwf	??_sprintf+3
  2095  04C5  0829               	movf	??_sprintf+3,w
  2096  04C6  022E               	subwf	sprintf@val+1,w
  2097  04C7  1D03               	skipz
  2098  04C8  2CCB               	goto	u1765
  2099  04C9  0828               	movf	??_sprintf+2,w
  2100  04CA  022D               	subwf	sprintf@val,w
  2101  04CB                     u1765:
  2102  04CB  1803               	skipnc
  2103  04CC  2CCE               	goto	u1761
  2104  04CD  2CCF               	goto	u1760
  2105  04CE                     u1761:
  2106  04CE  2CD0               	goto	l2173
  2107  04CF                     u1760:
  2108  04CF  2CDA               	goto	l2175
  2109  04D0                     l2173:
  2110  04D0  3001               	movlw	1
  2111  04D1  00A6               	movwf	??_sprintf
  2112  04D2  0826               	movf	??_sprintf,w
  2113  04D3  07B0               	addwf	sprintf@c,f
  2114  04D4  3005               	movlw	5
  2115  04D5  0630               	xorwf	sprintf@c,w
  2116  04D6  1D03               	btfss	3,2
  2117  04D7  2CD9               	goto	u1771
  2118  04D8  2CDA               	goto	u1770
  2119  04D9                     u1771:
  2120  04D9  2CB6               	goto	l2169
  2121  04DA                     u1770:
  2122  04DA                     l2175:
  2123                           
  2124                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2125  04DA  082B               	movf	sprintf@flag,w
  2126  04DB  3903               	andlw	3
  2127  04DC  1903               	btfsc	3,2
  2128  04DD  2CDF               	goto	u1781
  2129  04DE  2CE0               	goto	u1780
  2130  04DF                     u1781:
  2131  04DF  2CEB               	goto	l2181
  2132  04E0                     u1780:
  2133  04E0                     l2177:
  2134                           
  2135                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2136  04E0  302D               	movlw	45
  2137  04E1  00A6               	movwf	??_sprintf
  2138  04E2  082F               	movf	sprintf@sp,w
  2139  04E3  0086               	movwf	6
  2140  04E4  0187               	clrf	7
  2141  04E5  0826               	movf	??_sprintf,w
  2142  04E6  0081               	movwf	1
  2143  04E7                     l2179:
  2144  04E7  3001               	movlw	1
  2145  04E8  00A6               	movwf	??_sprintf
  2146  04E9  0826               	movf	??_sprintf,w
  2147  04EA  07AF               	addwf	sprintf@sp,f
  2148  04EB                     l2181:
  2149                           
  2150                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2151  04EB  0830               	movf	sprintf@c,w
  2152  04EC  00A6               	movwf	??_sprintf
  2153  04ED  0826               	movf	??_sprintf,w
  2154  04EE  00AC               	movwf	sprintf@prec
  2155                           
  2156                           ;doprnt.c: 1500: while(prec--) {
  2157  04EF  2D22               	goto	l2189
  2158  04F0                     l2183:
  2159                           
  2160                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2161  04F0  300A               	movlw	10
  2162  04F1  00F8               	movwf	___lwmod@divisor
  2163  04F2  3000               	movlw	0
  2164  04F3  00F9               	movwf	___lwmod@divisor+1
  2165  04F4  082C               	movf	sprintf@prec,w
  2166  04F5  00A6               	movwf	??_sprintf
  2167  04F6  01A7               	clrf	??_sprintf+1
  2168  04F7  35A6               	lslf	??_sprintf,f
  2169  04F8  0DA7               	rlf	??_sprintf+1,f
  2170  04F9  3000               	movlw	low (_dpowers| (0+32768))
  2171  04FA  0726               	addwf	??_sprintf,w
  2172  04FB  0084               	movwf	4
  2173  04FC  3088               	movlw	high (_dpowers| (0+32768))
  2174  04FD  3D27               	addwfc	??_sprintf+1,w
  2175  04FE  0085               	movwf	5
  2176  04FF  3F00               	moviw [0]fsr0
  2177  0500  00F0               	movwf	___lwdiv@divisor
  2178  0501  3F01               	moviw [1]fsr0
  2179  0502  00F1               	movwf	___lwdiv@divisor+1
  2180  0503  082E               	movf	sprintf@val+1,w
  2181  0504  00F3               	movwf	___lwdiv@dividend+1
  2182  0505  082D               	movf	sprintf@val,w
  2183  0506  00F2               	movwf	___lwdiv@dividend
  2184  0507  3181  2166  3184   	fcall	___lwdiv
  2185  050A  0871               	movf	?___lwdiv+1,w
  2186  050B  00FB               	movwf	___lwmod@dividend+1
  2187  050C  0870               	movf	?___lwdiv,w
  2188  050D  00FA               	movwf	___lwmod@dividend
  2189  050E  3180  20FA  3184   	fcall	___lwmod
  2190  0511  0878               	movf	?___lwmod,w
  2191  0512  3E30               	addlw	48
  2192  0513  0020               	movlb	0	; select bank0
  2193  0514  00A8               	movwf	??_sprintf+2
  2194  0515  0828               	movf	??_sprintf+2,w
  2195  0516  00B0               	movwf	sprintf@c
  2196  0517                     l2185:
  2197                           
  2198                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2199  0517  0830               	movf	sprintf@c,w
  2200  0518  00A6               	movwf	??_sprintf
  2201  0519  082F               	movf	sprintf@sp,w
  2202  051A  0086               	movwf	6
  2203  051B  0187               	clrf	7
  2204  051C  0826               	movf	??_sprintf,w
  2205  051D  0081               	movwf	1
  2206  051E                     l2187:
  2207  051E  3001               	movlw	1
  2208  051F  00A6               	movwf	??_sprintf
  2209  0520  0826               	movf	??_sprintf,w
  2210  0521  07AF               	addwf	sprintf@sp,f
  2211  0522                     l2189:
  2212  0522  30FF               	movlw	255
  2213  0523  00A6               	movwf	??_sprintf
  2214  0524  0826               	movf	??_sprintf,w
  2215  0525  07AC               	addwf	sprintf@prec,f
  2216  0526  0A2C               	incf	sprintf@prec,w
  2217  0527  1D03               	btfss	3,2
  2218  0528  2D2A               	goto	u1791
  2219  0529  2D2B               	goto	u1790
  2220  052A                     u1791:
  2221  052A  2CF0               	goto	l2183
  2222  052B                     u1790:
  2223  052B                     l2191:
  2224  052B  0821               	movf	sprintf@f+1,w
  2225  052C  00A7               	movwf	??_sprintf+1
  2226  052D  0820               	movf	sprintf@f,w
  2227  052E  00A6               	movwf	??_sprintf
  2228  052F  0AA0               	incf	sprintf@f,f
  2229  0530  1903               	skipnz
  2230  0531  0AA1               	incf	sprintf@f+1,f
  2231  0532  0826               	movf	??_sprintf,w
  2232  0533  0084               	movwf	4
  2233  0534  0827               	movf	??_sprintf+1,w
  2234  0535  0085               	movwf	5
  2235  0536  0800               	movf	0,w	;code access
  2236  0537  00A8               	movwf	??_sprintf+2
  2237  0538  0828               	movf	??_sprintf+2,w
  2238  0539  00B0               	movwf	sprintf@c
  2239  053A  0830               	movf	sprintf@c,w
  2240  053B  1D03               	btfss	3,2
  2241  053C  2D3E               	goto	u1801
  2242  053D  2D3F               	goto	u1800
  2243  053E                     u1801:
  2244  053E  2C72               	goto	l2141
  2245  053F                     u1800:
  2246  053F                     l2193:
  2247                           
  2248                           ;doprnt.c: 1564: *sp = 0;
  2249  053F  082F               	movf	sprintf@sp,w
  2250  0540  0086               	movwf	6
  2251  0541  0187               	clrf	7
  2252  0542  0181               	clrf	1
  2253  0543                     l421:
  2254  0543  0008               	return
  2255  0544                     __end_of_sprintf:
  2256                           
  2257                           	psect	text2
  2258  00FA                     __ptext2:	
  2259 ;; *************** function ___lwmod *****************
  2260 ;; Defined at:
  2261 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  divisor         2    8[COMMON] unsigned int 
  2264 ;;  dividend        2   10[COMMON] unsigned int 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  counter         1   13[COMMON] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  2    8[COMMON] unsigned int 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2276 ;;      Params:         4       0       0       0       0       0
  2277 ;;      Locals:         1       0       0       0       0       0
  2278 ;;      Temps:          1       0       0       0       0       0
  2279 ;;      Totals:         6       0       0       0       0       0
  2280 ;;Total ram usage:        6 bytes
  2281 ;; Hardware stack levels used: 1
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_sprintf
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function ___lwmod
  2291  00FA                     ___lwmod:
  2292  00FA                     l1771:	
  2293                           ;incstack = 0
  2294                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2295                           
  2296  00FA  0878               	movf	___lwmod@divisor,w
  2297  00FB  0479               	iorwf	___lwmod@divisor+1,w
  2298  00FC  1903               	btfsc	3,2
  2299  00FD  28FF               	goto	u1171
  2300  00FE  2900               	goto	u1170
  2301  00FF                     u1171:
  2302  00FF  2929               	goto	l1789
  2303  0100                     u1170:
  2304  0100                     l1773:
  2305  0100  01FD               	clrf	___lwmod@counter
  2306  0101  0AFD               	incf	___lwmod@counter,f
  2307  0102  290C               	goto	l1779
  2308  0103                     l1775:
  2309  0103  3001               	movlw	1
  2310  0104                     u1185:
  2311  0104  35F8               	lslf	___lwmod@divisor,f
  2312  0105  0DF9               	rlf	___lwmod@divisor+1,f
  2313  0106  0B89               	decfsz	9,f
  2314  0107  2904               	goto	u1185
  2315  0108                     l1777:
  2316  0108  3001               	movlw	1
  2317  0109  00FC               	movwf	??___lwmod
  2318  010A  087C               	movf	??___lwmod,w
  2319  010B  07FD               	addwf	___lwmod@counter,f
  2320  010C                     l1779:
  2321  010C  1FF9               	btfss	___lwmod@divisor+1,7
  2322  010D  290F               	goto	u1191
  2323  010E  2910               	goto	u1190
  2324  010F                     u1191:
  2325  010F  2903               	goto	l1775
  2326  0110                     u1190:
  2327  0110                     l1781:
  2328  0110  0879               	movf	___lwmod@divisor+1,w
  2329  0111  027B               	subwf	___lwmod@dividend+1,w
  2330  0112  1D03               	skipz
  2331  0113  2916               	goto	u1205
  2332  0114  0878               	movf	___lwmod@divisor,w
  2333  0115  027A               	subwf	___lwmod@dividend,w
  2334  0116                     u1205:
  2335  0116  1C03               	skipc
  2336  0117  2919               	goto	u1201
  2337  0118  291A               	goto	u1200
  2338  0119                     u1201:
  2339  0119  291E               	goto	l1785
  2340  011A                     u1200:
  2341  011A                     l1783:
  2342  011A  0878               	movf	___lwmod@divisor,w
  2343  011B  02FA               	subwf	___lwmod@dividend,f
  2344  011C  0879               	movf	___lwmod@divisor+1,w
  2345  011D  3BFB               	subwfb	___lwmod@dividend+1,f
  2346  011E                     l1785:
  2347  011E  3001               	movlw	1
  2348  011F                     u1215:
  2349  011F  36F9               	lsrf	___lwmod@divisor+1,f
  2350  0120  0CF8               	rrf	___lwmod@divisor,f
  2351  0121  0B89               	decfsz	9,f
  2352  0122  291F               	goto	u1215
  2353  0123                     l1787:
  2354  0123  3001               	movlw	1
  2355  0124  02FD               	subwf	___lwmod@counter,f
  2356  0125  1D03               	btfss	3,2
  2357  0126  2928               	goto	u1221
  2358  0127  2929               	goto	u1220
  2359  0128                     u1221:
  2360  0128  2910               	goto	l1781
  2361  0129                     u1220:
  2362  0129                     l1789:
  2363  0129  087B               	movf	___lwmod@dividend+1,w
  2364  012A  00F9               	movwf	?___lwmod+1
  2365  012B  087A               	movf	___lwmod@dividend,w
  2366  012C  00F8               	movwf	?___lwmod
  2367  012D                     l707:
  2368  012D  0008               	return
  2369  012E                     __end_of___lwmod:
  2370                           
  2371                           	psect	text3
  2372  0166                     __ptext3:	
  2373 ;; *************** function ___lwdiv *****************
  2374 ;; Defined at:
  2375 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  divisor         2    0[COMMON] unsigned int 
  2378 ;;  dividend        2    2[COMMON] unsigned int 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  quotient        2    5[COMMON] unsigned int 
  2381 ;;  counter         1    7[COMMON] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  2    0[COMMON] unsigned int 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2391 ;;      Params:         4       0       0       0       0       0
  2392 ;;      Locals:         3       0       0       0       0       0
  2393 ;;      Temps:          1       0       0       0       0       0
  2394 ;;      Totals:         8       0       0       0       0       0
  2395 ;;Total ram usage:        8 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_sprintf
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           
  2405                           ;psect for function ___lwdiv
  2406  0166                     ___lwdiv:
  2407  0166                     l1745:	
  2408                           ;incstack = 0
  2409                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2410                           
  2411  0166  01F5               	clrf	___lwdiv@quotient
  2412  0167  01F6               	clrf	___lwdiv@quotient+1
  2413  0168                     l1747:
  2414  0168  0870               	movf	___lwdiv@divisor,w
  2415  0169  0471               	iorwf	___lwdiv@divisor+1,w
  2416  016A  1903               	btfsc	3,2
  2417  016B  296D               	goto	u1101
  2418  016C  296E               	goto	u1100
  2419  016D                     u1101:
  2420  016D  299D               	goto	l1767
  2421  016E                     u1100:
  2422  016E                     l1749:
  2423  016E  01F7               	clrf	___lwdiv@counter
  2424  016F  0AF7               	incf	___lwdiv@counter,f
  2425  0170  297A               	goto	l1755
  2426  0171                     l1751:
  2427  0171  3001               	movlw	1
  2428  0172                     u1115:
  2429  0172  35F0               	lslf	___lwdiv@divisor,f
  2430  0173  0DF1               	rlf	___lwdiv@divisor+1,f
  2431  0174  0B89               	decfsz	9,f
  2432  0175  2972               	goto	u1115
  2433  0176                     l1753:
  2434  0176  3001               	movlw	1
  2435  0177  00F4               	movwf	??___lwdiv
  2436  0178  0874               	movf	??___lwdiv,w
  2437  0179  07F7               	addwf	___lwdiv@counter,f
  2438  017A                     l1755:
  2439  017A  1FF1               	btfss	___lwdiv@divisor+1,7
  2440  017B  297D               	goto	u1121
  2441  017C  297E               	goto	u1120
  2442  017D                     u1121:
  2443  017D  2971               	goto	l1751
  2444  017E                     u1120:
  2445  017E                     l1757:
  2446  017E  3001               	movlw	1
  2447  017F                     u1135:
  2448  017F  35F5               	lslf	___lwdiv@quotient,f
  2449  0180  0DF6               	rlf	___lwdiv@quotient+1,f
  2450  0181  0B89               	decfsz	9,f
  2451  0182  297F               	goto	u1135
  2452  0183  0871               	movf	___lwdiv@divisor+1,w
  2453  0184  0273               	subwf	___lwdiv@dividend+1,w
  2454  0185  1D03               	skipz
  2455  0186  2989               	goto	u1145
  2456  0187  0870               	movf	___lwdiv@divisor,w
  2457  0188  0272               	subwf	___lwdiv@dividend,w
  2458  0189                     u1145:
  2459  0189  1C03               	skipc
  2460  018A  298C               	goto	u1141
  2461  018B  298D               	goto	u1140
  2462  018C                     u1141:
  2463  018C  2992               	goto	l1763
  2464  018D                     u1140:
  2465  018D                     l1759:
  2466  018D  0870               	movf	___lwdiv@divisor,w
  2467  018E  02F2               	subwf	___lwdiv@dividend,f
  2468  018F  0871               	movf	___lwdiv@divisor+1,w
  2469  0190  3BF3               	subwfb	___lwdiv@dividend+1,f
  2470  0191                     l1761:
  2471  0191  1475               	bsf	___lwdiv@quotient,0
  2472  0192                     l1763:
  2473  0192  3001               	movlw	1
  2474  0193                     u1155:
  2475  0193  36F1               	lsrf	___lwdiv@divisor+1,f
  2476  0194  0CF0               	rrf	___lwdiv@divisor,f
  2477  0195  0B89               	decfsz	9,f
  2478  0196  2993               	goto	u1155
  2479  0197                     l1765:
  2480  0197  3001               	movlw	1
  2481  0198  02F7               	subwf	___lwdiv@counter,f
  2482  0199  1D03               	btfss	3,2
  2483  019A  299C               	goto	u1161
  2484  019B  299D               	goto	u1160
  2485  019C                     u1161:
  2486  019C  297E               	goto	l1757
  2487  019D                     u1160:
  2488  019D                     l1767:
  2489  019D  0876               	movf	___lwdiv@quotient+1,w
  2490  019E  00F1               	movwf	?___lwdiv+1
  2491  019F  0875               	movf	___lwdiv@quotient,w
  2492  01A0  00F0               	movwf	?___lwdiv
  2493  01A1                     l697:
  2494  01A1  0008               	return
  2495  01A2                     __end_of___lwdiv:
  2496                           
  2497                           	psect	text4
  2498  01A2                     __ptext4:	
  2499 ;; *************** function _scale_convert_gram *****************
  2500 ;; Defined at:
  2501 ;;		line 66 in file "loadcell.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  count           4   13[BANK0 ] long 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  temp            4   21[BANK0 ] float 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  4   13[BANK0 ] float 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, pclath, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2515 ;;      Params:         0       4       0       0       0       0
  2516 ;;      Locals:         0       4       0       0       0       0
  2517 ;;      Temps:          0       4       0       0       0       0
  2518 ;;      Totals:         0      12       0       0       0       0
  2519 ;;Total ram usage:       12 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 1
  2522 ;; This function calls:
  2523 ;;		___fldiv
  2524 ;;		___xxtofl
  2525 ;; This function is called by:
  2526 ;;		_main
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           
  2531                           ;psect for function _scale_convert_gram
  2532  01A2                     _scale_convert_gram:
  2533  01A2                     l2133:	
  2534                           ;incstack = 0
  2535                           ; Regs used in _scale_convert_gram: [wreg+status,2+status,0+pclath+cstack]
  2536                           
  2537                           
  2538                           ;loadcell.c: 68: float temp = count - weight_zero;
  2539  01A2  0020               	movlb	0	; select bank0
  2540  01A3  084F               	movf	_weight_zero,w
  2541  01A4  022D               	subwf	scale_convert_gram@count,w
  2542  01A5  00B1               	movwf	??_scale_convert_gram
  2543  01A6  0850               	movf	_weight_zero+1,w
  2544  01A7  3B2E               	subwfb	scale_convert_gram@count+1,w
  2545  01A8  00B2               	movwf	??_scale_convert_gram+1
  2546  01A9  0851               	movf	_weight_zero+2,w
  2547  01AA  3B2F               	subwfb	scale_convert_gram@count+2,w
  2548  01AB  00B3               	movwf	??_scale_convert_gram+2
  2549  01AC  0852               	movf	_weight_zero+3,w
  2550  01AD  3B30               	subwfb	scale_convert_gram@count+3,w
  2551  01AE  00B4               	movwf	??_scale_convert_gram+3
  2552  01AF  0834               	movf	??_scale_convert_gram+3,w
  2553  01B0  00F3               	movwf	___xxtofl@val+3
  2554  01B1  0833               	movf	??_scale_convert_gram+2,w
  2555  01B2  00F2               	movwf	___xxtofl@val+2
  2556  01B3  0832               	movf	??_scale_convert_gram+1,w
  2557  01B4  00F1               	movwf	___xxtofl@val+1
  2558  01B5  0831               	movf	??_scale_convert_gram,w
  2559  01B6  00F0               	movwf	___xxtofl@val
  2560  01B7  3001               	movlw	1
  2561  01B8  3183  2304  3181   	fcall	___xxtofl
  2562  01BB  0873               	movf	?___xxtofl+3,w
  2563  01BC  0020               	movlb	0	; select bank0
  2564  01BD  00B8               	movwf	scale_convert_gram@temp+3
  2565  01BE  0872               	movf	?___xxtofl+2,w
  2566  01BF  00B7               	movwf	scale_convert_gram@temp+2
  2567  01C0  0871               	movf	?___xxtofl+1,w
  2568  01C1  00B6               	movwf	scale_convert_gram@temp+1
  2569  01C2  0870               	movf	?___xxtofl,w
  2570  01C3  00B5               	movwf	scale_convert_gram@temp
  2571                           
  2572                           ;loadcell.c: 69: temp = temp / 3035;
  2573  01C4  3045               	movlw	69
  2574  01C5  00F3               	movwf	___fldiv@a+3
  2575  01C6  303D               	movlw	61
  2576  01C7  00F2               	movwf	___fldiv@a+2
  2577  01C8  30B0               	movlw	176
  2578  01C9  00F1               	movwf	___fldiv@a+1
  2579  01CA  3000               	movlw	0
  2580  01CB  00F0               	movwf	___fldiv@a
  2581  01CC  0838               	movf	scale_convert_gram@temp+3,w
  2582  01CD  00F7               	movwf	___fldiv@b+3
  2583  01CE  0837               	movf	scale_convert_gram@temp+2,w
  2584  01CF  00F6               	movwf	___fldiv@b+2
  2585  01D0  0836               	movf	scale_convert_gram@temp+1,w
  2586  01D1  00F5               	movwf	___fldiv@b+1
  2587  01D2  0835               	movf	scale_convert_gram@temp,w
  2588  01D3  00F4               	movwf	___fldiv@b
  2589  01D4  3186  2630  3181   	fcall	___fldiv
  2590  01D7  0873               	movf	?___fldiv+3,w
  2591  01D8  0020               	movlb	0	; select bank0
  2592  01D9  00B8               	movwf	scale_convert_gram@temp+3
  2593  01DA  0872               	movf	?___fldiv+2,w
  2594  01DB  00B7               	movwf	scale_convert_gram@temp+2
  2595  01DC  0871               	movf	?___fldiv+1,w
  2596  01DD  00B6               	movwf	scale_convert_gram@temp+1
  2597  01DE  0870               	movf	?___fldiv,w
  2598  01DF  00B5               	movwf	scale_convert_gram@temp
  2599  01E0                     l2135:
  2600                           
  2601                           ;loadcell.c: 70: return temp;
  2602  01E0  0838               	movf	scale_convert_gram@temp+3,w
  2603  01E1  00B0               	movwf	?_scale_convert_gram+3
  2604  01E2  0837               	movf	scale_convert_gram@temp+2,w
  2605  01E3  00AF               	movwf	?_scale_convert_gram+2
  2606  01E4  0836               	movf	scale_convert_gram@temp+1,w
  2607  01E5  00AE               	movwf	?_scale_convert_gram+1
  2608  01E6  0835               	movf	scale_convert_gram@temp,w
  2609  01E7  00AD               	movwf	?_scale_convert_gram
  2610  01E8                     l98:
  2611  01E8  0008               	return
  2612  01E9                     __end_of_scale_convert_gram:
  2613                           
  2614                           	psect	text5
  2615  0304                     __ptext5:	
  2616 ;; *************** function ___xxtofl *****************
  2617 ;; Defined at:
  2618 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  sign            1    wreg     unsigned char 
  2621 ;;  val             4    0[COMMON] long 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  sign            1    8[COMMON] unsigned char 
  2624 ;;  arg             4   10[COMMON] unsigned long 
  2625 ;;  exp             1    9[COMMON] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  4    0[COMMON] unsigned char 
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2635 ;;      Params:         4       0       0       0       0       0
  2636 ;;      Locals:         6       0       0       0       0       0
  2637 ;;      Temps:          4       0       0       0       0       0
  2638 ;;      Totals:        14       0       0       0       0       0
  2639 ;;Total ram usage:       14 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_scale_convert_gram
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           
  2649                           ;psect for function ___xxtofl
  2650  0304                     ___xxtofl:
  2651                           
  2652                           ;incstack = 0
  2653                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2654                           ;___xxtofl@sign stored from wreg
  2655  0304  00F8               	movwf	___xxtofl@sign
  2656  0305                     l1933:
  2657  0305  0878               	movf	___xxtofl@sign,w
  2658  0306  1903               	btfsc	3,2
  2659  0307  2B09               	goto	u1521
  2660  0308  2B0A               	goto	u1520
  2661  0309                     u1521:
  2662  0309  2B1E               	goto	l1939
  2663  030A                     u1520:
  2664  030A                     l1935:
  2665  030A  1FF3               	btfss	___xxtofl@val+3,7
  2666  030B  2B0D               	goto	u1531
  2667  030C  2B0E               	goto	u1530
  2668  030D                     u1531:
  2669  030D  2B1E               	goto	l1939
  2670  030E                     u1530:
  2671  030E                     l1937:
  2672  030E  0970               	comf	___xxtofl@val,w
  2673  030F  00FA               	movwf	___xxtofl@arg
  2674  0310  0971               	comf	___xxtofl@val+1,w
  2675  0311  00FB               	movwf	___xxtofl@arg+1
  2676  0312  0972               	comf	___xxtofl@val+2,w
  2677  0313  00FC               	movwf	___xxtofl@arg+2
  2678  0314  0973               	comf	___xxtofl@val+3,w
  2679  0315  00FD               	movwf	___xxtofl@arg+3
  2680  0316  0AFA               	incf	___xxtofl@arg,f
  2681  0317  1903               	skipnz
  2682  0318  0AFB               	incf	___xxtofl@arg+1,f
  2683  0319  1903               	skipnz
  2684  031A  0AFC               	incf	___xxtofl@arg+2,f
  2685  031B  1903               	skipnz
  2686  031C  0AFD               	incf	___xxtofl@arg+3,f
  2687  031D  2B26               	goto	l858
  2688  031E                     l1939:
  2689  031E  0873               	movf	___xxtofl@val+3,w
  2690  031F  00FD               	movwf	___xxtofl@arg+3
  2691  0320  0872               	movf	___xxtofl@val+2,w
  2692  0321  00FC               	movwf	___xxtofl@arg+2
  2693  0322  0871               	movf	___xxtofl@val+1,w
  2694  0323  00FB               	movwf	___xxtofl@arg+1
  2695  0324  0870               	movf	___xxtofl@val,w
  2696  0325  00FA               	movwf	___xxtofl@arg
  2697  0326                     l858:
  2698  0326  0873               	movf	___xxtofl@val+3,w
  2699  0327  0472               	iorwf	___xxtofl@val+2,w
  2700  0328  0471               	iorwf	___xxtofl@val+1,w
  2701  0329  0470               	iorwf	___xxtofl@val,w
  2702  032A  1D03               	skipz
  2703  032B  2B2D               	goto	u1541
  2704  032C  2B2E               	goto	u1540
  2705  032D                     u1541:
  2706  032D  2B37               	goto	l1945
  2707  032E                     u1540:
  2708  032E                     l1941:
  2709  032E  3000               	movlw	0
  2710  032F  00F3               	movwf	?___xxtofl+3
  2711  0330  3000               	movlw	0
  2712  0331  00F2               	movwf	?___xxtofl+2
  2713  0332  3000               	movlw	0
  2714  0333  00F1               	movwf	?___xxtofl+1
  2715  0334  3000               	movlw	0
  2716  0335  00F0               	movwf	?___xxtofl
  2717  0336  2BAF               	goto	l860
  2718  0337                     l1945:
  2719  0337  3096               	movlw	150
  2720  0338  00F4               	movwf	??___xxtofl
  2721  0339  0874               	movf	??___xxtofl,w
  2722  033A  00F9               	movwf	___xxtofl@exp
  2723  033B  2B47               	goto	l1949
  2724  033C                     l1947:
  2725  033C  3001               	movlw	1
  2726  033D  00F4               	movwf	??___xxtofl
  2727  033E  0874               	movf	??___xxtofl,w
  2728  033F  07F9               	addwf	___xxtofl@exp,f
  2729  0340  3001               	movlw	1
  2730  0341                     u1555:
  2731  0341  36FD               	lsrf	___xxtofl@arg+3,f
  2732  0342  0CFC               	rrf	___xxtofl@arg+2,f
  2733  0343  0CFB               	rrf	___xxtofl@arg+1,f
  2734  0344  0CFA               	rrf	___xxtofl@arg,f
  2735  0345  0B89               	decfsz	9,f
  2736  0346  2B41               	goto	u1555
  2737  0347                     l1949:
  2738  0347  30FE               	movlw	254
  2739  0348  057D               	andwf	___xxtofl@arg+3,w
  2740  0349  1D03               	btfss	3,2
  2741  034A  2B4C               	goto	u1561
  2742  034B  2B4D               	goto	u1560
  2743  034C                     u1561:
  2744  034C  2B3C               	goto	l1947
  2745  034D                     u1560:
  2746  034D  2B61               	goto	l864
  2747  034E                     l1951:
  2748  034E  3001               	movlw	1
  2749  034F  00F4               	movwf	??___xxtofl
  2750  0350  0874               	movf	??___xxtofl,w
  2751  0351  07F9               	addwf	___xxtofl@exp,f
  2752  0352                     l1953:
  2753  0352  3001               	movlw	1
  2754  0353  07FA               	addwf	___xxtofl@arg,f
  2755  0354  3000               	movlw	0
  2756  0355  3DFB               	addwfc	___xxtofl@arg+1,f
  2757  0356  3000               	movlw	0
  2758  0357  3DFC               	addwfc	___xxtofl@arg+2,f
  2759  0358  3000               	movlw	0
  2760  0359  3DFD               	addwfc	___xxtofl@arg+3,f
  2761  035A                     l1955:
  2762  035A  3001               	movlw	1
  2763  035B                     u1575:
  2764  035B  36FD               	lsrf	___xxtofl@arg+3,f
  2765  035C  0CFC               	rrf	___xxtofl@arg+2,f
  2766  035D  0CFB               	rrf	___xxtofl@arg+1,f
  2767  035E  0CFA               	rrf	___xxtofl@arg,f
  2768  035F  0B89               	decfsz	9,f
  2769  0360  2B5B               	goto	u1575
  2770  0361                     l864:
  2771  0361  30FF               	movlw	255
  2772  0362  057D               	andwf	___xxtofl@arg+3,w
  2773  0363  1D03               	btfss	3,2
  2774  0364  2B66               	goto	u1581
  2775  0365  2B67               	goto	u1580
  2776  0366                     u1581:
  2777  0366  2B4E               	goto	l1951
  2778  0367                     u1580:
  2779  0367  2B71               	goto	l1959
  2780  0368                     l1957:
  2781  0368  3001               	movlw	1
  2782  0369  02F9               	subwf	___xxtofl@exp,f
  2783  036A  3001               	movlw	1
  2784  036B                     u1595:
  2785  036B  35FA               	lslf	___xxtofl@arg,f
  2786  036C  0DFB               	rlf	___xxtofl@arg+1,f
  2787  036D  0DFC               	rlf	___xxtofl@arg+2,f
  2788  036E  0DFD               	rlf	___xxtofl@arg+3,f
  2789  036F  0B89               	decfsz	9,f
  2790  0370  2B6B               	goto	u1595
  2791  0371                     l1959:
  2792  0371  1BFC               	btfsc	___xxtofl@arg+2,7
  2793  0372  2B74               	goto	u1601
  2794  0373  2B75               	goto	u1600
  2795  0374                     u1601:
  2796  0374  2B7B               	goto	l871
  2797  0375                     u1600:
  2798  0375                     l1961:
  2799  0375  3002               	movlw	2
  2800  0376  0279               	subwf	___xxtofl@exp,w
  2801  0377  1803               	skipnc
  2802  0378  2B7A               	goto	u1611
  2803  0379  2B7B               	goto	u1610
  2804  037A                     u1611:
  2805  037A  2B68               	goto	l1957
  2806  037B                     u1610:
  2807  037B                     l871:
  2808  037B  1879               	btfsc	___xxtofl@exp,0
  2809  037C  2B7E               	goto	u1621
  2810  037D  2B7F               	goto	u1620
  2811  037E                     u1621:
  2812  037E  2B87               	goto	l872
  2813  037F                     u1620:
  2814  037F                     l1963:
  2815  037F  30FF               	movlw	255
  2816  0380  05FA               	andwf	___xxtofl@arg,f
  2817  0381  30FF               	movlw	255
  2818  0382  05FB               	andwf	___xxtofl@arg+1,f
  2819  0383  307F               	movlw	127
  2820  0384  05FC               	andwf	___xxtofl@arg+2,f
  2821  0385  30FF               	movlw	255
  2822  0386  05FD               	andwf	___xxtofl@arg+3,f
  2823  0387                     l872:
  2824  0387  1003               	clrc
  2825  0388  0CF9               	rrf	___xxtofl@exp,f
  2826  0389                     l1965:
  2827  0389  0879               	movf	___xxtofl@exp,w
  2828  038A  00F4               	movwf	??___xxtofl
  2829  038B  01F5               	clrf	??___xxtofl+1
  2830  038C  01F6               	clrf	??___xxtofl+2
  2831  038D  01F7               	clrf	??___xxtofl+3
  2832  038E  3018               	movlw	24
  2833  038F                     u1635:
  2834  038F  35F4               	lslf	??___xxtofl,f
  2835  0390  0DF5               	rlf	??___xxtofl+1,f
  2836  0391  0DF6               	rlf	??___xxtofl+2,f
  2837  0392  0DF7               	rlf	??___xxtofl+3,f
  2838  0393                     u1630:
  2839  0393  0B89               	decfsz	9,f
  2840  0394  2B8F               	goto	u1635
  2841  0395  0874               	movf	??___xxtofl,w
  2842  0396  04FA               	iorwf	___xxtofl@arg,f
  2843  0397  0875               	movf	??___xxtofl+1,w
  2844  0398  04FB               	iorwf	___xxtofl@arg+1,f
  2845  0399  0876               	movf	??___xxtofl+2,w
  2846  039A  04FC               	iorwf	___xxtofl@arg+2,f
  2847  039B  0877               	movf	??___xxtofl+3,w
  2848  039C  04FD               	iorwf	___xxtofl@arg+3,f
  2849  039D                     l1967:
  2850  039D  0878               	movf	___xxtofl@sign,w
  2851  039E  1903               	btfsc	3,2
  2852  039F  2BA1               	goto	u1641
  2853  03A0  2BA2               	goto	u1640
  2854  03A1                     u1641:
  2855  03A1  2BA7               	goto	l1973
  2856  03A2                     u1640:
  2857  03A2                     l1969:
  2858  03A2  1FF3               	btfss	___xxtofl@val+3,7
  2859  03A3  2BA5               	goto	u1651
  2860  03A4  2BA6               	goto	u1650
  2861  03A5                     u1651:
  2862  03A5  2BA7               	goto	l1973
  2863  03A6                     u1650:
  2864  03A6                     l1971:
  2865  03A6  17FD               	bsf	___xxtofl@arg+3,7
  2866  03A7                     l1973:
  2867  03A7  087D               	movf	___xxtofl@arg+3,w
  2868  03A8  00F3               	movwf	?___xxtofl+3
  2869  03A9  087C               	movf	___xxtofl@arg+2,w
  2870  03AA  00F2               	movwf	?___xxtofl+2
  2871  03AB  087B               	movf	___xxtofl@arg+1,w
  2872  03AC  00F1               	movwf	?___xxtofl+1
  2873  03AD  087A               	movf	___xxtofl@arg,w
  2874  03AE  00F0               	movwf	?___xxtofl
  2875  03AF                     l860:
  2876  03AF  0008               	return
  2877  03B0                     __end_of___xxtofl:
  2878                           
  2879                           	psect	text6
  2880  0630                     __ptext6:	
  2881 ;; *************** function ___fldiv *****************
  2882 ;; Defined at:
  2883 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  a               4    0[COMMON] unsigned char 
  2886 ;;  b               4    4[COMMON] unsigned char 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  grs             4    7[BANK0 ] unsigned long 
  2889 ;;  rem             4    0[BANK0 ] unsigned long 
  2890 ;;  new_exp         2    5[BANK0 ] int 
  2891 ;;  aexp            1   12[BANK0 ] unsigned char 
  2892 ;;  bexp            1   11[BANK0 ] unsigned char 
  2893 ;;  sign            1    4[BANK0 ] unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  4    0[COMMON] unsigned char 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2903 ;;      Params:         8       0       0       0       0       0
  2904 ;;      Locals:         0      13       0       0       0       0
  2905 ;;      Temps:          5       0       0       0       0       0
  2906 ;;      Totals:        13      13       0       0       0       0
  2907 ;;Total ram usage:       26 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_scale_convert_gram
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           
  2917                           ;psect for function ___fldiv
  2918  0630                     ___fldiv:
  2919  0630                     l1793:	
  2920                           ;incstack = 0
  2921                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  2922                           
  2923  0630  0877               	movf	___fldiv@b+3,w
  2924  0631  3980               	andlw	128
  2925  0632  00F8               	movwf	??___fldiv
  2926  0633  0878               	movf	??___fldiv,w
  2927  0634  0020               	movlb	0	; select bank0
  2928  0635  00A4               	movwf	___fldiv@sign
  2929  0636                     l1795:
  2930  0636  3577               	lslf	___fldiv@b+3,w
  2931  0637  00F8               	movwf	??___fldiv
  2932  0638  0878               	movf	??___fldiv,w
  2933  0639  00AB               	movwf	___fldiv@bexp
  2934  063A                     l1797:
  2935  063A  1FF6               	btfss	___fldiv@b+2,7
  2936  063B  2E3D               	goto	u1231
  2937  063C  2E3E               	goto	u1230
  2938  063D                     u1231:
  2939  063D  2E3F               	goto	l1801
  2940  063E                     u1230:
  2941  063E                     l1799:
  2942  063E  142B               	bsf	___fldiv@bexp,0
  2943  063F                     l1801:
  2944  063F  082B               	movf	___fldiv@bexp,w
  2945  0640  1903               	btfsc	3,2
  2946  0641  2E43               	goto	u1241
  2947  0642  2E44               	goto	u1240
  2948  0643                     u1241:
  2949  0643  2E54               	goto	l1811
  2950  0644                     u1240:
  2951  0644                     l1803:
  2952  0644  0A2B               	incf	___fldiv@bexp,w
  2953  0645  1D03               	btfss	3,2
  2954  0646  2E48               	goto	u1251
  2955  0647  2E49               	goto	u1250
  2956  0648                     u1251:
  2957  0648  2E51               	goto	l1807
  2958  0649                     u1250:
  2959  0649                     l1805:
  2960  0649  3000               	movlw	0
  2961  064A  00F7               	movwf	___fldiv@b+3
  2962  064B  3000               	movlw	0
  2963  064C  00F6               	movwf	___fldiv@b+2
  2964  064D  3000               	movlw	0
  2965  064E  00F5               	movwf	___fldiv@b+1
  2966  064F  3000               	movlw	0
  2967  0650  00F4               	movwf	___fldiv@b
  2968  0651                     l1807:
  2969  0651  17F6               	bsf	___fldiv@b+2,7
  2970  0652                     l1809:
  2971  0652  01F7               	clrf	___fldiv@b+3
  2972  0653  2E5C               	goto	l1813
  2973  0654                     l1811:
  2974  0654  3000               	movlw	0
  2975  0655  00F7               	movwf	___fldiv@b+3
  2976  0656  3000               	movlw	0
  2977  0657  00F6               	movwf	___fldiv@b+2
  2978  0658  3000               	movlw	0
  2979  0659  00F5               	movwf	___fldiv@b+1
  2980  065A  3000               	movlw	0
  2981  065B  00F4               	movwf	___fldiv@b
  2982  065C                     l1813:
  2983  065C  0873               	movf	___fldiv@a+3,w
  2984  065D  3980               	andlw	128
  2985  065E  00F8               	movwf	??___fldiv
  2986  065F  0878               	movf	??___fldiv,w
  2987  0660  06A4               	xorwf	___fldiv@sign,f
  2988  0661                     l1815:
  2989  0661  3573               	lslf	___fldiv@a+3,w
  2990  0662  00F8               	movwf	??___fldiv
  2991  0663  0878               	movf	??___fldiv,w
  2992  0664  00AC               	movwf	___fldiv@aexp
  2993  0665                     l1817:
  2994  0665  1FF2               	btfss	___fldiv@a+2,7
  2995  0666  2E68               	goto	u1261
  2996  0667  2E69               	goto	u1260
  2997  0668                     u1261:
  2998  0668  2E6A               	goto	l1821
  2999  0669                     u1260:
  3000  0669                     l1819:
  3001  0669  142C               	bsf	___fldiv@aexp,0
  3002  066A                     l1821:
  3003  066A  082C               	movf	___fldiv@aexp,w
  3004  066B  1903               	btfsc	3,2
  3005  066C  2E6E               	goto	u1271
  3006  066D  2E6F               	goto	u1270
  3007  066E                     u1271:
  3008  066E  2E7F               	goto	l1831
  3009  066F                     u1270:
  3010  066F                     l1823:
  3011  066F  0A2C               	incf	___fldiv@aexp,w
  3012  0670  1D03               	btfss	3,2
  3013  0671  2E73               	goto	u1281
  3014  0672  2E74               	goto	u1280
  3015  0673                     u1281:
  3016  0673  2E7C               	goto	l1827
  3017  0674                     u1280:
  3018  0674                     l1825:
  3019  0674  3000               	movlw	0
  3020  0675  00F3               	movwf	___fldiv@a+3
  3021  0676  3000               	movlw	0
  3022  0677  00F2               	movwf	___fldiv@a+2
  3023  0678  3000               	movlw	0
  3024  0679  00F1               	movwf	___fldiv@a+1
  3025  067A  3000               	movlw	0
  3026  067B  00F0               	movwf	___fldiv@a
  3027  067C                     l1827:
  3028  067C  17F2               	bsf	___fldiv@a+2,7
  3029  067D                     l1829:
  3030  067D  01F3               	clrf	___fldiv@a+3
  3031  067E  2E87               	goto	l774
  3032  067F                     l1831:
  3033  067F  3000               	movlw	0
  3034  0680  00F3               	movwf	___fldiv@a+3
  3035  0681  3000               	movlw	0
  3036  0682  00F2               	movwf	___fldiv@a+2
  3037  0683  3000               	movlw	0
  3038  0684  00F1               	movwf	___fldiv@a+1
  3039  0685  3000               	movlw	0
  3040  0686  00F0               	movwf	___fldiv@a
  3041  0687                     l774:
  3042  0687  0873               	movf	___fldiv@a+3,w
  3043  0688  0472               	iorwf	___fldiv@a+2,w
  3044  0689  0471               	iorwf	___fldiv@a+1,w
  3045  068A  0470               	iorwf	___fldiv@a,w
  3046  068B  1D03               	skipz
  3047  068C  2E8E               	goto	u1291
  3048  068D  2E8F               	goto	u1290
  3049  068E                     u1291:
  3050  068E  2EA8               	goto	l1841
  3051  068F                     u1290:
  3052  068F                     l1833:
  3053  068F  3000               	movlw	0
  3054  0690  00F7               	movwf	___fldiv@b+3
  3055  0691  3000               	movlw	0
  3056  0692  00F6               	movwf	___fldiv@b+2
  3057  0693  3000               	movlw	0
  3058  0694  00F5               	movwf	___fldiv@b+1
  3059  0695  3000               	movlw	0
  3060  0696  00F4               	movwf	___fldiv@b
  3061  0697  3080               	movlw	128
  3062  0698  04F6               	iorwf	___fldiv@b+2,f
  3063  0699  307F               	movlw	127
  3064  069A  04F7               	iorwf	___fldiv@b+3,f
  3065  069B                     l1835:
  3066  069B  0824               	movf	___fldiv@sign,w
  3067  069C  00F8               	movwf	??___fldiv
  3068  069D  0878               	movf	??___fldiv,w
  3069  069E  04F7               	iorwf	___fldiv@b+3,f
  3070  069F                     l1837:
  3071  069F  0877               	movf	___fldiv@b+3,w
  3072  06A0  00F3               	movwf	?___fldiv+3
  3073  06A1  0876               	movf	___fldiv@b+2,w
  3074  06A2  00F2               	movwf	?___fldiv+2
  3075  06A3  0875               	movf	___fldiv@b+1,w
  3076  06A4  00F1               	movwf	?___fldiv+1
  3077  06A5  0874               	movf	___fldiv@b,w
  3078  06A6  00F0               	movwf	?___fldiv
  3079  06A7  2FE3               	goto	l776
  3080  06A8                     l1841:
  3081  06A8  082B               	movf	___fldiv@bexp,w
  3082  06A9  1D03               	btfss	3,2
  3083  06AA  2EAC               	goto	u1301
  3084  06AB  2EAD               	goto	u1300
  3085  06AC                     u1301:
  3086  06AC  2EB6               	goto	l1847
  3087  06AD                     u1300:
  3088  06AD                     l1843:
  3089  06AD  3000               	movlw	0
  3090  06AE  00F3               	movwf	?___fldiv+3
  3091  06AF  3000               	movlw	0
  3092  06B0  00F2               	movwf	?___fldiv+2
  3093  06B1  3000               	movlw	0
  3094  06B2  00F1               	movwf	?___fldiv+1
  3095  06B3  3000               	movlw	0
  3096  06B4  00F0               	movwf	?___fldiv
  3097  06B5  2FE3               	goto	l776
  3098  06B6                     l1847:
  3099  06B6  082B               	movf	___fldiv@bexp,w
  3100  06B7  00F8               	movwf	??___fldiv
  3101  06B8  01F9               	clrf	??___fldiv+1
  3102  06B9  0879               	movf	??___fldiv+1,w
  3103  06BA  00FB               	movwf	??___fldiv+3
  3104  06BB  082C               	movf	___fldiv@aexp,w
  3105  06BC  0278               	subwf	??___fldiv,w
  3106  06BD  00FA               	movwf	??___fldiv+2
  3107  06BE  1C03               	skipc
  3108  06BF  03FB               	decf	??___fldiv+3,f
  3109  06C0  087A               	movf	??___fldiv+2,w
  3110  06C1  3E7F               	addlw	127
  3111  06C2  00A5               	movwf	___fldiv@new_exp
  3112  06C3  3000               	movlw	0
  3113  06C4  3D7B               	addwfc	??___fldiv+3,w
  3114  06C5  00A6               	movwf	___fldiv@new_exp+1
  3115  06C6                     l1849:
  3116  06C6  0877               	movf	___fldiv@b+3,w
  3117  06C7  00A3               	movwf	___fldiv@rem+3
  3118  06C8  0876               	movf	___fldiv@b+2,w
  3119  06C9  00A2               	movwf	___fldiv@rem+2
  3120  06CA  0875               	movf	___fldiv@b+1,w
  3121  06CB  00A1               	movwf	___fldiv@rem+1
  3122  06CC  0874               	movf	___fldiv@b,w
  3123  06CD  00A0               	movwf	___fldiv@rem
  3124  06CE                     l1851:
  3125  06CE  3000               	movlw	0
  3126  06CF  00F7               	movwf	___fldiv@b+3
  3127  06D0  3000               	movlw	0
  3128  06D1  00F6               	movwf	___fldiv@b+2
  3129  06D2  3000               	movlw	0
  3130  06D3  00F5               	movwf	___fldiv@b+1
  3131  06D4  3000               	movlw	0
  3132  06D5  00F4               	movwf	___fldiv@b
  3133  06D6                     l1853:
  3134  06D6  3000               	movlw	0
  3135  06D7  00AA               	movwf	___fldiv@grs+3
  3136  06D8  3000               	movlw	0
  3137  06D9  00A9               	movwf	___fldiv@grs+2
  3138  06DA  3000               	movlw	0
  3139  06DB  00A8               	movwf	___fldiv@grs+1
  3140  06DC  3000               	movlw	0
  3141  06DD  00A7               	movwf	___fldiv@grs
  3142  06DE                     l1855:
  3143  06DE  01AC               	clrf	___fldiv@aexp
  3144  06DF  2F1E               	goto	l1875
  3145  06E0                     l1857:
  3146  06E0  082C               	movf	___fldiv@aexp,w
  3147  06E1  1903               	btfsc	3,2
  3148  06E2  2EE4               	goto	u1311
  3149  06E3  2EE5               	goto	u1310
  3150  06E4                     u1311:
  3151  06E4  2EFF               	goto	l1867
  3152  06E5                     u1310:
  3153  06E5                     l1859:
  3154  06E5  3001               	movlw	1
  3155  06E6                     u1325:
  3156  06E6  35A0               	lslf	___fldiv@rem,f
  3157  06E7  0DA1               	rlf	___fldiv@rem+1,f
  3158  06E8  0DA2               	rlf	___fldiv@rem+2,f
  3159  06E9  0DA3               	rlf	___fldiv@rem+3,f
  3160  06EA  0B89               	decfsz	9,f
  3161  06EB  2EE6               	goto	u1325
  3162  06EC  3001               	movlw	1
  3163  06ED                     u1335:
  3164  06ED  35F4               	lslf	___fldiv@b,f
  3165  06EE  0DF5               	rlf	___fldiv@b+1,f
  3166  06EF  0DF6               	rlf	___fldiv@b+2,f
  3167  06F0  0DF7               	rlf	___fldiv@b+3,f
  3168  06F1  0B89               	decfsz	9,f
  3169  06F2  2EED               	goto	u1335
  3170  06F3                     l1861:
  3171  06F3  1FAA               	btfss	___fldiv@grs+3,7
  3172  06F4  2EF6               	goto	u1341
  3173  06F5  2EF7               	goto	u1340
  3174  06F6                     u1341:
  3175  06F6  2EF8               	goto	l1865
  3176  06F7                     u1340:
  3177  06F7                     l1863:
  3178  06F7  1474               	bsf	___fldiv@b,0
  3179  06F8                     l1865:
  3180  06F8  3001               	movlw	1
  3181  06F9                     u1355:
  3182  06F9  35A7               	lslf	___fldiv@grs,f
  3183  06FA  0DA8               	rlf	___fldiv@grs+1,f
  3184  06FB  0DA9               	rlf	___fldiv@grs+2,f
  3185  06FC  0DAA               	rlf	___fldiv@grs+3,f
  3186  06FD  0B89               	decfsz	9,f
  3187  06FE  2EF9               	goto	u1355
  3188  06FF                     l1867:
  3189  06FF  0873               	movf	___fldiv@a+3,w
  3190  0700  0223               	subwf	___fldiv@rem+3,w
  3191  0701  1D03               	skipz
  3192  0702  2F0D               	goto	u1365
  3193  0703  0872               	movf	___fldiv@a+2,w
  3194  0704  0222               	subwf	___fldiv@rem+2,w
  3195  0705  1D03               	skipz
  3196  0706  2F0D               	goto	u1365
  3197  0707  0871               	movf	___fldiv@a+1,w
  3198  0708  0221               	subwf	___fldiv@rem+1,w
  3199  0709  1D03               	skipz
  3200  070A  2F0D               	goto	u1365
  3201  070B  0870               	movf	___fldiv@a,w
  3202  070C  0220               	subwf	___fldiv@rem,w
  3203  070D                     u1365:
  3204  070D  1C03               	skipc
  3205  070E  2F10               	goto	u1361
  3206  070F  2F11               	goto	u1360
  3207  0710                     u1361:
  3208  0710  2F1A               	goto	l1873
  3209  0711                     u1360:
  3210  0711                     l1869:
  3211  0711  172A               	bsf	___fldiv@grs+3,6
  3212  0712                     l1871:
  3213  0712  0870               	movf	___fldiv@a,w
  3214  0713  02A0               	subwf	___fldiv@rem,f
  3215  0714  0871               	movf	___fldiv@a+1,w
  3216  0715  3BA1               	subwfb	___fldiv@rem+1,f
  3217  0716  0872               	movf	___fldiv@a+2,w
  3218  0717  3BA2               	subwfb	___fldiv@rem+2,f
  3219  0718  0873               	movf	___fldiv@a+3,w
  3220  0719  3BA3               	subwfb	___fldiv@rem+3,f
  3221  071A                     l1873:
  3222  071A  3001               	movlw	1
  3223  071B  00F8               	movwf	??___fldiv
  3224  071C  0878               	movf	??___fldiv,w
  3225  071D  07AC               	addwf	___fldiv@aexp,f
  3226  071E                     l1875:
  3227  071E  301A               	movlw	26
  3228  071F  022C               	subwf	___fldiv@aexp,w
  3229  0720  1C03               	skipc
  3230  0721  2F23               	goto	u1371
  3231  0722  2F24               	goto	u1370
  3232  0723                     u1371:
  3233  0723  2EE0               	goto	l1857
  3234  0724                     u1370:
  3235  0724                     l1877:
  3236  0724  0823               	movf	___fldiv@rem+3,w
  3237  0725  0422               	iorwf	___fldiv@rem+2,w
  3238  0726  0421               	iorwf	___fldiv@rem+1,w
  3239  0727  0420               	iorwf	___fldiv@rem,w
  3240  0728  1903               	skipnz
  3241  0729  2F2B               	goto	u1381
  3242  072A  2F2C               	goto	u1380
  3243  072B                     u1381:
  3244  072B  2F45               	goto	l1891
  3245  072C                     u1380:
  3246  072C                     l1879:
  3247  072C  1427               	bsf	___fldiv@grs,0
  3248  072D  2F45               	goto	l1891
  3249  072E                     l1881:
  3250  072E  3001               	movlw	1
  3251  072F                     u1395:
  3252  072F  35F4               	lslf	___fldiv@b,f
  3253  0730  0DF5               	rlf	___fldiv@b+1,f
  3254  0731  0DF6               	rlf	___fldiv@b+2,f
  3255  0732  0DF7               	rlf	___fldiv@b+3,f
  3256  0733  0B89               	decfsz	9,f
  3257  0734  2F2F               	goto	u1395
  3258  0735                     l1883:
  3259  0735  1FAA               	btfss	___fldiv@grs+3,7
  3260  0736  2F38               	goto	u1401
  3261  0737  2F39               	goto	u1400
  3262  0738                     u1401:
  3263  0738  2F3A               	goto	l1887
  3264  0739                     u1400:
  3265  0739                     l1885:
  3266  0739  1474               	bsf	___fldiv@b,0
  3267  073A                     l1887:
  3268  073A  3001               	movlw	1
  3269  073B                     u1415:
  3270  073B  35A7               	lslf	___fldiv@grs,f
  3271  073C  0DA8               	rlf	___fldiv@grs+1,f
  3272  073D  0DA9               	rlf	___fldiv@grs+2,f
  3273  073E  0DAA               	rlf	___fldiv@grs+3,f
  3274  073F  0B89               	decfsz	9,f
  3275  0740  2F3B               	goto	u1415
  3276  0741                     l1889:
  3277  0741  30FF               	movlw	255
  3278  0742  07A5               	addwf	___fldiv@new_exp,f
  3279  0743  30FF               	movlw	255
  3280  0744  3DA6               	addwfc	___fldiv@new_exp+1,f
  3281  0745                     l1891:
  3282  0745  1FF6               	btfss	___fldiv@b+2,7
  3283  0746  2F48               	goto	u1421
  3284  0747  2F49               	goto	u1420
  3285  0748                     u1421:
  3286  0748  2F2E               	goto	l1881
  3287  0749                     u1420:
  3288  0749                     l1893:
  3289  0749  01AC               	clrf	___fldiv@aexp
  3290  074A                     l1895:
  3291  074A  1FAA               	btfss	___fldiv@grs+3,7
  3292  074B  2F4D               	goto	u1431
  3293  074C  2F4E               	goto	u1430
  3294  074D                     u1431:
  3295  074D  2F6A               	goto	l1903
  3296  074E                     u1430:
  3297  074E                     l1897:
  3298  074E  30FF               	movlw	255
  3299  074F  0527               	andwf	___fldiv@grs,w
  3300  0750  00F8               	movwf	??___fldiv
  3301  0751  30FF               	movlw	255
  3302  0752  0528               	andwf	___fldiv@grs+1,w
  3303  0753  00F9               	movwf	??___fldiv+1
  3304  0754  30FF               	movlw	255
  3305  0755  0529               	andwf	___fldiv@grs+2,w
  3306  0756  00FA               	movwf	??___fldiv+2
  3307  0757  307F               	movlw	127
  3308  0758  052A               	andwf	___fldiv@grs+3,w
  3309  0759  00FB               	movwf	??___fldiv+3
  3310  075A  087B               	movf	??___fldiv+3,w
  3311  075B  047A               	iorwf	??___fldiv+2,w
  3312  075C  0479               	iorwf	??___fldiv+1,w
  3313  075D  0478               	iorwf	??___fldiv,w
  3314  075E  1903               	skipnz
  3315  075F  2F61               	goto	u1441
  3316  0760  2F62               	goto	u1440
  3317  0761                     u1441:
  3318  0761  2F65               	goto	l790
  3319  0762                     u1440:
  3320  0762                     l1899:
  3321  0762  01AC               	clrf	___fldiv@aexp
  3322  0763  0AAC               	incf	___fldiv@aexp,f
  3323  0764  2F6A               	goto	l1903
  3324  0765                     l790:
  3325  0765  1C74               	btfss	___fldiv@b,0
  3326  0766  2F68               	goto	u1451
  3327  0767  2F69               	goto	u1450
  3328  0768                     u1451:
  3329  0768  2F6A               	goto	l1903
  3330  0769                     u1450:
  3331  0769  2F62               	goto	l1899
  3332  076A                     l1903:
  3333  076A  082C               	movf	___fldiv@aexp,w
  3334  076B  1903               	btfsc	3,2
  3335  076C  2F6E               	goto	u1461
  3336  076D  2F6F               	goto	u1460
  3337  076E                     u1461:
  3338  076E  2F97               	goto	l1913
  3339  076F                     u1460:
  3340  076F                     l1905:
  3341  076F  3001               	movlw	1
  3342  0770  07F4               	addwf	___fldiv@b,f
  3343  0771  3000               	movlw	0
  3344  0772  3DF5               	addwfc	___fldiv@b+1,f
  3345  0773  3000               	movlw	0
  3346  0774  3DF6               	addwfc	___fldiv@b+2,f
  3347  0775  3000               	movlw	0
  3348  0776  3DF7               	addwfc	___fldiv@b+3,f
  3349  0777                     l1907:
  3350  0777  1C77               	btfss	___fldiv@b+3,0
  3351  0778  2F7A               	goto	u1471
  3352  0779  2F7B               	goto	u1470
  3353  077A                     u1471:
  3354  077A  2F97               	goto	l1913
  3355  077B                     u1470:
  3356  077B                     l1909:
  3357  077B  0874               	movf	___fldiv@b,w
  3358  077C  00F8               	movwf	??___fldiv
  3359  077D  0875               	movf	___fldiv@b+1,w
  3360  077E  00F9               	movwf	??___fldiv+1
  3361  077F  0876               	movf	___fldiv@b+2,w
  3362  0780  00FA               	movwf	??___fldiv+2
  3363  0781  0877               	movf	___fldiv@b+3,w
  3364  0782  00FB               	movwf	??___fldiv+3
  3365  0783  3001               	movlw	1
  3366  0784  00FC               	movwf	??___fldiv+4
  3367  0785                     u1485:
  3368  0785  37FB               	asrf	??___fldiv+3,f
  3369  0786  0CFA               	rrf	??___fldiv+2,f
  3370  0787  0CF9               	rrf	??___fldiv+1,f
  3371  0788  0CF8               	rrf	??___fldiv,f
  3372  0789                     u1480:
  3373  0789  0BFC               	decfsz	??___fldiv+4,f
  3374  078A  2F85               	goto	u1485
  3375  078B  087B               	movf	??___fldiv+3,w
  3376  078C  00F7               	movwf	___fldiv@b+3
  3377  078D  087A               	movf	??___fldiv+2,w
  3378  078E  00F6               	movwf	___fldiv@b+2
  3379  078F  0879               	movf	??___fldiv+1,w
  3380  0790  00F5               	movwf	___fldiv@b+1
  3381  0791  0878               	movf	??___fldiv,w
  3382  0792  00F4               	movwf	___fldiv@b
  3383  0793                     l1911:
  3384  0793  3001               	movlw	1
  3385  0794  07A5               	addwf	___fldiv@new_exp,f
  3386  0795  3000               	movlw	0
  3387  0796  3DA6               	addwfc	___fldiv@new_exp+1,f
  3388  0797                     l1913:
  3389  0797  0826               	movf	___fldiv@new_exp+1,w
  3390  0798  3A80               	xorlw	128
  3391  0799  00F8               	movwf	??___fldiv
  3392  079A  3080               	movlw	128
  3393  079B  0278               	subwf	??___fldiv,w
  3394  079C  1D03               	skipz
  3395  079D  2FA0               	goto	u1495
  3396  079E  30FF               	movlw	255
  3397  079F  0225               	subwf	___fldiv@new_exp,w
  3398  07A0                     u1495:
  3399  07A0  1C03               	skipc
  3400  07A1  2FA3               	goto	u1491
  3401  07A2  2FA4               	goto	u1490
  3402  07A3                     u1491:
  3403  07A3  2FB1               	goto	l795
  3404  07A4                     u1490:
  3405  07A4                     l1915:
  3406  07A4  30FF               	movlw	255
  3407  07A5  0020               	movlb	0	; select bank0
  3408  07A6  00A5               	movwf	___fldiv@new_exp
  3409  07A7  3000               	movlw	0
  3410  07A8  00A6               	movwf	___fldiv@new_exp+1
  3411  07A9  3000               	movlw	0
  3412  07AA  00F7               	movwf	___fldiv@b+3
  3413  07AB  3000               	movlw	0
  3414  07AC  00F6               	movwf	___fldiv@b+2
  3415  07AD  3000               	movlw	0
  3416  07AE  00F5               	movwf	___fldiv@b+1
  3417  07AF  3000               	movlw	0
  3418  07B0  00F4               	movwf	___fldiv@b
  3419  07B1                     l795:
  3420  07B1  0020               	movlb	0	; select bank0
  3421  07B2  0826               	movf	___fldiv@new_exp+1,w
  3422  07B3  3A80               	xorlw	128
  3423  07B4  00F8               	movwf	??___fldiv
  3424  07B5  3080               	movlw	128
  3425  07B6  0278               	subwf	??___fldiv,w
  3426  07B7  1D03               	skipz
  3427  07B8  2FBB               	goto	u1505
  3428  07B9  3001               	movlw	1
  3429  07BA  0225               	subwf	___fldiv@new_exp,w
  3430  07BB                     u1505:
  3431  07BB  1803               	skipnc
  3432  07BC  2FBE               	goto	u1501
  3433  07BD  2FBF               	goto	u1500
  3434  07BE                     u1501:
  3435  07BE  2FCB               	goto	l796
  3436  07BF                     u1500:
  3437  07BF                     l1917:
  3438  07BF  0020               	movlb	0	; select bank0
  3439  07C0  01A5               	clrf	___fldiv@new_exp
  3440  07C1  01A6               	clrf	___fldiv@new_exp+1
  3441  07C2                     l1919:
  3442  07C2  3000               	movlw	0
  3443  07C3  00F7               	movwf	___fldiv@b+3
  3444  07C4  3000               	movlw	0
  3445  07C5  00F6               	movwf	___fldiv@b+2
  3446  07C6  3000               	movlw	0
  3447  07C7  00F5               	movwf	___fldiv@b+1
  3448  07C8  3000               	movlw	0
  3449  07C9  00F4               	movwf	___fldiv@b
  3450  07CA                     l1921:
  3451  07CA  01A4               	clrf	___fldiv@sign
  3452  07CB                     l796:
  3453  07CB  0020               	movlb	0	; select bank0
  3454  07CC  0825               	movf	___fldiv@new_exp,w
  3455  07CD  00F8               	movwf	??___fldiv
  3456  07CE  0878               	movf	??___fldiv,w
  3457  07CF  00AB               	movwf	___fldiv@bexp
  3458  07D0                     l1923:
  3459  07D0  1C2B               	btfss	___fldiv@bexp,0
  3460  07D1  2FD3               	goto	u1511
  3461  07D2  2FD4               	goto	u1510
  3462  07D3                     u1511:
  3463  07D3  2FD6               	goto	l1927
  3464  07D4                     u1510:
  3465  07D4                     l1925:
  3466  07D4  17F6               	bsf	___fldiv@b+2,7
  3467  07D5  2FDA               	goto	l798
  3468  07D6                     l1927:
  3469  07D6  307F               	movlw	127
  3470  07D7  00F8               	movwf	??___fldiv
  3471  07D8  0878               	movf	??___fldiv,w
  3472  07D9  05F6               	andwf	___fldiv@b+2,f
  3473  07DA                     l798:
  3474  07DA  362B               	lsrf	___fldiv@bexp,w
  3475  07DB  00F8               	movwf	??___fldiv
  3476  07DC  0878               	movf	??___fldiv,w
  3477  07DD  00F7               	movwf	___fldiv@b+3
  3478  07DE  0824               	movf	___fldiv@sign,w
  3479  07DF  00F8               	movwf	??___fldiv
  3480  07E0  0878               	movf	??___fldiv,w
  3481  07E1  04F7               	iorwf	___fldiv@b+3,f
  3482  07E2  2E9F               	goto	l1837
  3483  07E3                     l776:
  3484  07E3  0008               	return
  3485  07E4                     __end_of___fldiv:
  3486                           
  3487                           	psect	text7
  3488  00D8                     __ptext7:	
  3489 ;; *************** function _lcd_set_cursor *****************
  3490 ;; Defined at:
  3491 ;;		line 120 in file "lcd_lib.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  col             1    wreg     unsigned char 
  3494 ;;  row             1    8[COMMON] unsigned char 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  col             1    4[BANK0 ] unsigned char 
  3497 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
  3498 ;;  cmd             1    5[BANK0 ] unsigned char 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      void 
  3501 ;; Registers used:
  3502 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3508 ;;      Params:         1       0       0       0       0       0
  3509 ;;      Locals:         0       6       0       0       0       0
  3510 ;;      Temps:          1       0       0       0       0       0
  3511 ;;      Totals:         2       6       0       0       0       0
  3512 ;;Total ram usage:        8 bytes
  3513 ;; Hardware stack levels used: 1
  3514 ;; Hardware stack levels required when called: 4
  3515 ;; This function calls:
  3516 ;;		_command
  3517 ;; This function is called by:
  3518 ;;		_main
  3519 ;;		_lcd_clear
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           
  3524                           ;psect for function _lcd_set_cursor
  3525  00D8                     _lcd_set_cursor:
  3526                           
  3527                           ;incstack = 0
  3528                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3529                           ;lcd_set_cursor@col stored from wreg
  3530  00D8  0020               	movlb	0	; select bank0
  3531  00D9  00A4               	movwf	lcd_set_cursor@col
  3532  00DA                     l2051:
  3533                           
  3534                           ;lcd_lib.c: 121: uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  3535  00DA  085B               	movf	lcd_set_cursor@F2395+3,w
  3536  00DB  00A3               	movwf	lcd_set_cursor@row_offsets+3
  3537  00DC  085A               	movf	lcd_set_cursor@F2395+2,w
  3538  00DD  00A2               	movwf	lcd_set_cursor@row_offsets+2
  3539  00DE  0859               	movf	lcd_set_cursor@F2395+1,w
  3540  00DF  00A1               	movwf	lcd_set_cursor@row_offsets+1
  3541  00E0  0858               	movf	lcd_set_cursor@F2395,w
  3542  00E1  00A0               	movwf	lcd_set_cursor@row_offsets
  3543                           
  3544                           ;lcd_lib.c: 122: if(row > 2){
  3545  00E2  3003               	movlw	3
  3546  00E3  0278               	subwf	lcd_set_cursor@row,w
  3547  00E4  1C03               	skipc
  3548  00E5  28E7               	goto	u1661
  3549  00E6  28E8               	goto	u1660
  3550  00E7                     u1661:
  3551  00E7  28EA               	goto	l2055
  3552  00E8                     u1660:
  3553  00E8                     l2053:
  3554                           
  3555                           ;lcd_lib.c: 123: row = 2 - 1;
  3556  00E8  01F8               	clrf	lcd_set_cursor@row
  3557  00E9  0AF8               	incf	lcd_set_cursor@row,f
  3558  00EA                     l2055:
  3559                           
  3560                           ;lcd_lib.c: 124: };lcd_lib.c: 125: uint8_t cmd = 0x80 | (col + row_offsets[row]);
  3561  00EA  0878               	movf	lcd_set_cursor@row,w
  3562  00EB  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
  3563  00EC  0086               	movwf	6
  3564  00ED  0187               	clrf	7
  3565  00EE  0801               	movf	1,w
  3566  00EF  0724               	addwf	lcd_set_cursor@col,w
  3567  00F0  3880               	iorlw	128
  3568  00F1  00F9               	movwf	??_lcd_set_cursor
  3569  00F2  0879               	movf	??_lcd_set_cursor,w
  3570  00F3  00A5               	movwf	lcd_set_cursor@cmd
  3571  00F4                     l2057:
  3572                           
  3573                           ;lcd_lib.c: 126: command(cmd, 0);
  3574  00F4  01F2               	clrf	command@mode
  3575  00F5  0825               	movf	lcd_set_cursor@cmd,w
  3576  00F6  3181  212E  3180   	fcall	_command
  3577  00F9                     l238:
  3578  00F9  0008               	return
  3579  00FA                     __end_of_lcd_set_cursor:
  3580                           
  3581                           	psect	text8
  3582  00BB                     __ptext8:	
  3583 ;; *************** function _lcd_print *****************
  3584 ;; Defined at:
  3585 ;;		line 129 in file "lcd_lib.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  str             2    8[COMMON] PTR unsigned char 
  3588 ;;		 -> STR_4(2), main@str(16), STR_2(6), STR_1(4), 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;  cmd             1   11[COMMON] unsigned char 
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3600 ;;      Params:         2       0       0       0       0       0
  3601 ;;      Locals:         1       0       0       0       0       0
  3602 ;;      Temps:          1       0       0       0       0       0
  3603 ;;      Totals:         4       0       0       0       0       0
  3604 ;;Total ram usage:        4 bytes
  3605 ;; Hardware stack levels used: 1
  3606 ;; Hardware stack levels required when called: 4
  3607 ;; This function calls:
  3608 ;;		_command
  3609 ;; This function is called by:
  3610 ;;		_main
  3611 ;;		_lcd_clear
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           
  3616                           ;psect for function _lcd_print
  3617  00BB                     _lcd_print:
  3618  00BB                     l2059:	
  3619                           ;incstack = 0
  3620                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3621                           
  3622                           
  3623                           ;lcd_lib.c: 130: while (*str) {
  3624  00BB  28CE               	goto	l2067
  3625  00BC                     l2061:
  3626                           
  3627                           ;lcd_lib.c: 131: uint8_t cmd = *str++;
  3628  00BC  0878               	movf	lcd_print@str,w
  3629  00BD  0084               	movwf	4
  3630  00BE  0879               	movf	lcd_print@str+1,w
  3631  00BF  0085               	movwf	5
  3632  00C0  0800               	movf	0,w	;code access
  3633  00C1  00FA               	movwf	??_lcd_print
  3634  00C2  087A               	movf	??_lcd_print,w
  3635  00C3  00FB               	movwf	lcd_print@cmd
  3636  00C4                     l2063:
  3637  00C4  3001               	movlw	1
  3638  00C5  07F8               	addwf	lcd_print@str,f
  3639  00C6  3000               	movlw	0
  3640  00C7  3DF9               	addwfc	lcd_print@str+1,f
  3641  00C8                     l2065:
  3642                           
  3643                           ;lcd_lib.c: 132: command(cmd, 0b00000001);
  3644  00C8  01F2               	clrf	command@mode
  3645  00C9  0AF2               	incf	command@mode,f
  3646  00CA  087B               	movf	lcd_print@cmd,w
  3647  00CB  3181  212E  3180   	fcall	_command
  3648  00CE                     l2067:
  3649  00CE  0878               	movf	lcd_print@str,w
  3650  00CF  0084               	movwf	4
  3651  00D0  0879               	movf	lcd_print@str+1,w
  3652  00D1  0085               	movwf	5
  3653  00D2  0012               	moviw fsr0++
  3654  00D3  1D03               	btfss	3,2
  3655  00D4  28D6               	goto	u1671
  3656  00D5  28D7               	goto	u1670
  3657  00D6                     u1671:
  3658  00D6  28BC               	goto	l2061
  3659  00D7                     u1670:
  3660  00D7                     l244:
  3661  00D7  0008               	return
  3662  00D8                     __end_of_lcd_print:
  3663                           
  3664                           	psect	text9
  3665  012E                     __ptext9:	
  3666 ;; *************** function _command *****************
  3667 ;; Defined at:
  3668 ;;		line 136 in file "lcd_lib.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  val             1    wreg     unsigned char 
  3671 ;;  mode            1    2[COMMON] unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  val             1    5[COMMON] unsigned char 
  3674 ;;  lownib          1    7[COMMON] unsigned char 
  3675 ;;  highnib         1    6[COMMON] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0, pclath, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3685 ;;      Params:         1       0       0       0       0       0
  3686 ;;      Locals:         3       0       0       0       0       0
  3687 ;;      Temps:          2       0       0       0       0       0
  3688 ;;      Totals:         6       0       0       0       0       0
  3689 ;;Total ram usage:        6 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 3
  3692 ;; This function calls:
  3693 ;;		_lcd_cmd
  3694 ;; This function is called by:
  3695 ;;		_lcd_set_cursor
  3696 ;;		_lcd_print
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           
  3701                           ;psect for function _command
  3702  012E                     _command:
  3703                           
  3704                           ;incstack = 0
  3705                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
  3706                           ;command@val stored from wreg
  3707  012E  00F5               	movwf	command@val
  3708  012F                     l1689:
  3709                           
  3710                           ;lcd_lib.c: 137: uint8_t highnib = (val & 0xf0) | _backlightval | mode;
  3711  012F  0875               	movf	command@val,w
  3712  0130  39F0               	andlw	240
  3713  0131  0020               	movlb	0	; select bank0
  3714  0132  0457               	iorwf	__backlightval,w
  3715  0133  0472               	iorwf	command@mode,w
  3716  0134  00F3               	movwf	??_command
  3717  0135  0873               	movf	??_command,w
  3718  0136  00F6               	movwf	command@highnib
  3719                           
  3720                           ;lcd_lib.c: 138: uint8_t lownib = ((val << 4) & 0xf0) | _backlightval | mode;
  3721  0137  0875               	movf	command@val,w
  3722  0138  00F3               	movwf	??_command
  3723  0139  3003               	movlw	3
  3724  013A                     u995:
  3725  013A  35F3               	lslf	??_command,f
  3726  013B  3EFF               	addlw	-1
  3727  013C  1D03               	skipz
  3728  013D  293A               	goto	u995
  3729  013E  3573               	lslf	??_command,w
  3730  013F  39F0               	andlw	240
  3731  0140  0457               	iorwf	__backlightval,w
  3732  0141  0472               	iorwf	command@mode,w
  3733  0142  00F4               	movwf	??_command+1
  3734  0143  0874               	movf	??_command+1,w
  3735  0144  00F7               	movwf	command@lownib
  3736  0145                     l1691:
  3737                           
  3738                           ;lcd_lib.c: 140: lcd_cmd(highnib);
  3739  0145  0876               	movf	command@highnib,w
  3740  0146  3180  2091  3181   	fcall	_lcd_cmd
  3741  0149                     l1693:
  3742                           
  3743                           ;lcd_lib.c: 141: lcd_cmd(highnib | 0b00000100);
  3744  0149  0876               	movf	command@highnib,w
  3745  014A  3804               	iorlw	4
  3746  014B  3180  2091  3181   	fcall	_lcd_cmd
  3747  014E                     l1695:
  3748                           
  3749                           ;lcd_lib.c: 142: lcd_cmd(highnib & ~0b00000100);
  3750  014E  0876               	movf	command@highnib,w
  3751  014F  39FB               	andlw	251
  3752  0150  3180  2091  3181   	fcall	_lcd_cmd
  3753  0153                     l1697:
  3754                           
  3755                           ;lcd_lib.c: 144: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3756  0153  3042               	movlw	66
  3757  0154                     u1867:
  3758  0154  0B89               	decfsz	9,f
  3759  0155  2954               	goto	u1867
  3760  0156  3200               	nop2
  3761  0157                     l1699:
  3762                           
  3763                           ;lcd_lib.c: 146: lcd_cmd(lownib);
  3764  0157  0877               	movf	command@lownib,w
  3765  0158  3180  2091  3181   	fcall	_lcd_cmd
  3766  015B                     l1701:
  3767                           
  3768                           ;lcd_lib.c: 147: lcd_cmd(lownib | 0b00000100);
  3769  015B  0877               	movf	command@lownib,w
  3770  015C  3804               	iorlw	4
  3771  015D  3180  2091  3181   	fcall	_lcd_cmd
  3772  0160                     l1703:
  3773                           
  3774                           ;lcd_lib.c: 148: lcd_cmd(lownib & ~0b00000100);
  3775  0160  0877               	movf	command@lownib,w
  3776  0161  39FB               	andlw	251
  3777  0162  3180  2091  3181   	fcall	_lcd_cmd
  3778  0165                     l247:
  3779  0165  0008               	return
  3780  0166                     __end_of_command:
  3781                           
  3782                           	psect	text10
  3783  0544                     __ptext10:	
  3784 ;; *************** function _lcd_init *****************
  3785 ;; Defined at:
  3786 ;;		line 19 in file "lcd_lib.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;		None
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1    wreg      void 
  3793 ;; Registers used:
  3794 ;;		wreg, status,2, status,0, pclath, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3800 ;;      Params:         0       0       0       0       0       0
  3801 ;;      Locals:         0       0       0       0       0       0
  3802 ;;      Temps:          2       0       0       0       0       0
  3803 ;;      Totals:         2       0       0       0       0       0
  3804 ;;Total ram usage:        2 bytes
  3805 ;; Hardware stack levels used: 1
  3806 ;; Hardware stack levels required when called: 3
  3807 ;; This function calls:
  3808 ;;		_lcd_cmd
  3809 ;; This function is called by:
  3810 ;;		_main
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           
  3815                           ;psect for function _lcd_init
  3816  0544                     _lcd_init:
  3817  0544                     l1979:	
  3818                           ;incstack = 0
  3819                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3820                           
  3821                           
  3822                           ;lcd_lib.c: 20: _delay((unsigned long)((400)*(8000000/4000.0)));
  3823  0544  3005               	movlw	5
  3824  0545  00F3               	movwf	??_lcd_init+1
  3825  0546  300F               	movlw	15
  3826  0547  00F2               	movwf	??_lcd_init
  3827  0548  30F1               	movlw	241
  3828  0549                     u1877:
  3829  0549  0B89               	decfsz	9,f
  3830  054A  2D49               	goto	u1877
  3831  054B  0BF2               	decfsz	??_lcd_init,f
  3832  054C  2D49               	goto	u1877
  3833  054D  0BF3               	decfsz	??_lcd_init+1,f
  3834  054E  2D49               	goto	u1877
  3835  054F  0000               	nop
  3836  0550                     l1981:
  3837                           
  3838                           ;lcd_lib.c: 22: lcd_cmd(0x30);
  3839  0550  3030               	movlw	48
  3840  0551  3180  2091  3185   	fcall	_lcd_cmd
  3841  0554                     l1983:
  3842                           
  3843                           ;lcd_lib.c: 23: lcd_cmd(0x34);
  3844  0554  3034               	movlw	52
  3845  0555  3180  2091  3185   	fcall	_lcd_cmd
  3846  0558                     l1985:
  3847                           
  3848                           ;lcd_lib.c: 24: lcd_cmd(0x30);
  3849  0558  3030               	movlw	48
  3850  0559  3180  2091  3185   	fcall	_lcd_cmd
  3851  055C                     l1987:
  3852                           
  3853                           ;lcd_lib.c: 25: _delay((unsigned long)((5)*(8000000/4000.0)));
  3854  055C  300D               	movlw	13
  3855  055D  00F2               	movwf	??_lcd_init
  3856  055E  30FC               	movlw	252
  3857  055F                     u1887:
  3858  055F  0B89               	decfsz	9,f
  3859  0560  2D5F               	goto	u1887
  3860  0561  0BF2               	decfsz	??_lcd_init,f
  3861  0562  2D5F               	goto	u1887
  3862                           
  3863                           ;lcd_lib.c: 27: lcd_cmd(0x30);
  3864  0563  3030               	movlw	48
  3865  0564  3180  2091  3185   	fcall	_lcd_cmd
  3866                           
  3867                           ;lcd_lib.c: 28: lcd_cmd(0x34);
  3868  0567  3034               	movlw	52
  3869  0568  3180  2091  3185   	fcall	_lcd_cmd
  3870                           
  3871                           ;lcd_lib.c: 29: lcd_cmd(0x30);
  3872  056B  3030               	movlw	48
  3873  056C  3180  2091  3185   	fcall	_lcd_cmd
  3874  056F                     l1989:
  3875                           
  3876                           ;lcd_lib.c: 30: _delay((unsigned long)((5)*(8000000/4000.0)));
  3877  056F  300D               	movlw	13
  3878  0570  00F2               	movwf	??_lcd_init
  3879  0571  30FC               	movlw	252
  3880  0572                     u1897:
  3881  0572  0B89               	decfsz	9,f
  3882  0573  2D72               	goto	u1897
  3883  0574  0BF2               	decfsz	??_lcd_init,f
  3884  0575  2D72               	goto	u1897
  3885  0576                     l1991:
  3886                           
  3887                           ;lcd_lib.c: 32: lcd_cmd(0x30);
  3888  0576  3030               	movlw	48
  3889  0577  3180  2091  3185   	fcall	_lcd_cmd
  3890  057A                     l1993:
  3891                           
  3892                           ;lcd_lib.c: 33: lcd_cmd(0x34);
  3893  057A  3034               	movlw	52
  3894  057B  3180  2091  3185   	fcall	_lcd_cmd
  3895  057E                     l1995:
  3896                           
  3897                           ;lcd_lib.c: 34: lcd_cmd(0x30);
  3898  057E  3030               	movlw	48
  3899  057F  3180  2091  3185   	fcall	_lcd_cmd
  3900                           
  3901                           ;lcd_lib.c: 35: _delay((unsigned long)((300)*(8000000/4000000.0)));
  3902  0582  30C8               	movlw	200
  3903  0583                     u1907:
  3904  0583  0B89               	decfsz	9,f
  3905  0584  2D83               	goto	u1907
  3906  0585                     l1997:
  3907                           
  3908                           ;lcd_lib.c: 37: lcd_cmd(0x20);
  3909  0585  3020               	movlw	32
  3910  0586  3180  2091  3185   	fcall	_lcd_cmd
  3911  0589                     l1999:
  3912                           
  3913                           ;lcd_lib.c: 38: lcd_cmd(0x24);
  3914  0589  3024               	movlw	36
  3915  058A  3180  2091  3185   	fcall	_lcd_cmd
  3916  058D                     l2001:
  3917                           
  3918                           ;lcd_lib.c: 39: lcd_cmd(0x20);
  3919  058D  3020               	movlw	32
  3920  058E  3180  2091  3185   	fcall	_lcd_cmd
  3921  0591                     l2003:
  3922                           
  3923                           ;lcd_lib.c: 40: _delay((unsigned long)((10)*(8000000/4000000.0)));
  3924  0591  3006               	movlw	6
  3925  0592                     u1917:
  3926  0592  0B89               	decfsz	9,f
  3927  0593  2D92               	goto	u1917
  3928  0594  3200               	nop2
  3929                           
  3930                           ;lcd_lib.c: 43: lcd_cmd(0x20);
  3931  0595  3020               	movlw	32
  3932  0596  3180  2091  3185   	fcall	_lcd_cmd
  3933                           
  3934                           ;lcd_lib.c: 44: lcd_cmd(0x24);
  3935  0599  3024               	movlw	36
  3936  059A  3180  2091  3185   	fcall	_lcd_cmd
  3937                           
  3938                           ;lcd_lib.c: 45: lcd_cmd(0x20);
  3939  059D  3020               	movlw	32
  3940  059E  3180  2091  3185   	fcall	_lcd_cmd
  3941  05A1                     l2005:
  3942                           
  3943                           ;lcd_lib.c: 47: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3944  05A1  3042               	movlw	66
  3945  05A2                     u1927:
  3946  05A2  0B89               	decfsz	9,f
  3947  05A3  2DA2               	goto	u1927
  3948  05A4  3200               	nop2
  3949  05A5                     l2007:
  3950                           
  3951                           ;lcd_lib.c: 49: lcd_cmd(0x80);
  3952  05A5  3080               	movlw	128
  3953  05A6  3180  2091  3185   	fcall	_lcd_cmd
  3954  05A9                     l2009:
  3955                           
  3956                           ;lcd_lib.c: 50: lcd_cmd(0x84);
  3957  05A9  3084               	movlw	132
  3958  05AA  3180  2091  3185   	fcall	_lcd_cmd
  3959  05AD                     l2011:
  3960                           
  3961                           ;lcd_lib.c: 51: lcd_cmd(0x80);
  3962  05AD  3080               	movlw	128
  3963  05AE  3180  2091  3185   	fcall	_lcd_cmd
  3964  05B1                     l2013:
  3965                           
  3966                           ;lcd_lib.c: 55: lcd_cmd(0x00);
  3967  05B1  3000               	movlw	0
  3968  05B2  3180  2091  3185   	fcall	_lcd_cmd
  3969  05B5                     l2015:
  3970                           
  3971                           ;lcd_lib.c: 56: lcd_cmd(0x04);
  3972  05B5  3004               	movlw	4
  3973  05B6  3180  2091  3185   	fcall	_lcd_cmd
  3974  05B9                     l2017:
  3975                           
  3976                           ;lcd_lib.c: 57: lcd_cmd(0x00);
  3977  05B9  3000               	movlw	0
  3978  05BA  3180  2091  3185   	fcall	_lcd_cmd
  3979  05BD                     l2019:
  3980                           
  3981                           ;lcd_lib.c: 59: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3982  05BD  3042               	movlw	66
  3983  05BE                     u1937:
  3984  05BE  0B89               	decfsz	9,f
  3985  05BF  2DBE               	goto	u1937
  3986  05C0  3200               	nop2
  3987                           
  3988                           ;lcd_lib.c: 61: lcd_cmd(0xC0);
  3989  05C1  30C0               	movlw	192
  3990  05C2  3180  2091  3185   	fcall	_lcd_cmd
  3991                           
  3992                           ;lcd_lib.c: 62: lcd_cmd(0xC4);
  3993  05C5  30C4               	movlw	196
  3994  05C6  3180  2091  3185   	fcall	_lcd_cmd
  3995                           
  3996                           ;lcd_lib.c: 63: lcd_cmd(0xC0);
  3997  05C9  30C0               	movlw	192
  3998  05CA  3180  2091  3185   	fcall	_lcd_cmd
  3999                           
  4000                           ;lcd_lib.c: 67: lcd_cmd(0x00);
  4001  05CD  3000               	movlw	0
  4002  05CE  3180  2091  3185   	fcall	_lcd_cmd
  4003                           
  4004                           ;lcd_lib.c: 68: lcd_cmd(0x04);
  4005  05D1  3004               	movlw	4
  4006  05D2  3180  2091  3185   	fcall	_lcd_cmd
  4007                           
  4008                           ;lcd_lib.c: 69: lcd_cmd(0x00);
  4009  05D5  3000               	movlw	0
  4010  05D6  3180  2091  3185   	fcall	_lcd_cmd
  4011  05D9                     l2021:
  4012                           
  4013                           ;lcd_lib.c: 71: _delay((unsigned long)((100)*(8000000/4000000.0)));
  4014  05D9  3042               	movlw	66
  4015  05DA                     u1947:
  4016  05DA  0B89               	decfsz	9,f
  4017  05DB  2DDA               	goto	u1947
  4018  05DC  3200               	nop2
  4019  05DD                     l2023:
  4020                           
  4021                           ;lcd_lib.c: 73: lcd_cmd(0x10);
  4022  05DD  3010               	movlw	16
  4023  05DE  3180  2091  3185   	fcall	_lcd_cmd
  4024  05E1                     l2025:
  4025                           
  4026                           ;lcd_lib.c: 74: lcd_cmd(0x14);
  4027  05E1  3014               	movlw	20
  4028  05E2  3180  2091  3185   	fcall	_lcd_cmd
  4029  05E5                     l2027:
  4030                           
  4031                           ;lcd_lib.c: 75: lcd_cmd(0x10);
  4032  05E5  3010               	movlw	16
  4033  05E6  3180  2091  3185   	fcall	_lcd_cmd
  4034                           
  4035                           ;lcd_lib.c: 77: _delay((unsigned long)((5)*(8000000/4000.0)));
  4036  05E9  300D               	movlw	13
  4037  05EA  00F2               	movwf	??_lcd_init
  4038  05EB  30FC               	movlw	252
  4039  05EC                     u1957:
  4040  05EC  0B89               	decfsz	9,f
  4041  05ED  2DEC               	goto	u1957
  4042  05EE  0BF2               	decfsz	??_lcd_init,f
  4043  05EF  2DEC               	goto	u1957
  4044  05F0                     l2029:
  4045                           
  4046                           ;lcd_lib.c: 80: lcd_cmd(0x00);
  4047  05F0  3000               	movlw	0
  4048  05F1  3180  2091  3185   	fcall	_lcd_cmd
  4049  05F4                     l2031:
  4050                           
  4051                           ;lcd_lib.c: 81: lcd_cmd(0x04);
  4052  05F4  3004               	movlw	4
  4053  05F5  3180  2091  3185   	fcall	_lcd_cmd
  4054  05F8                     l2033:
  4055                           
  4056                           ;lcd_lib.c: 82: lcd_cmd(0x00);
  4057  05F8  3000               	movlw	0
  4058  05F9  3180  2091  3185   	fcall	_lcd_cmd
  4059  05FC                     l2035:
  4060                           
  4061                           ;lcd_lib.c: 84: _delay((unsigned long)((100)*(8000000/4000000.0)));
  4062  05FC  3042               	movlw	66
  4063  05FD                     u1967:
  4064  05FD  0B89               	decfsz	9,f
  4065  05FE  2DFD               	goto	u1967
  4066  05FF  3200               	nop2
  4067                           
  4068                           ;lcd_lib.c: 86: lcd_cmd(0x60);
  4069  0600  3060               	movlw	96
  4070  0601  3180  2091  3185   	fcall	_lcd_cmd
  4071                           
  4072                           ;lcd_lib.c: 87: lcd_cmd(0x64);
  4073  0604  3064               	movlw	100
  4074  0605  3180  2091  3185   	fcall	_lcd_cmd
  4075                           
  4076                           ;lcd_lib.c: 88: lcd_cmd(0x60);
  4077  0608  3060               	movlw	96
  4078  0609  3180  2091  3185   	fcall	_lcd_cmd
  4079                           
  4080                           ;lcd_lib.c: 92: lcd_cmd(0x00);
  4081  060C  3000               	movlw	0
  4082  060D  3180  2091  3185   	fcall	_lcd_cmd
  4083                           
  4084                           ;lcd_lib.c: 93: lcd_cmd(0x04);
  4085  0610  3004               	movlw	4
  4086  0611  3180  2091  3185   	fcall	_lcd_cmd
  4087                           
  4088                           ;lcd_lib.c: 94: lcd_cmd(0x00);
  4089  0614  3000               	movlw	0
  4090  0615  3180  2091  3185   	fcall	_lcd_cmd
  4091  0618                     l2037:
  4092                           
  4093                           ;lcd_lib.c: 96: _delay((unsigned long)((100)*(8000000/4000000.0)));
  4094  0618  3042               	movlw	66
  4095  0619                     u1977:
  4096  0619  0B89               	decfsz	9,f
  4097  061A  2E19               	goto	u1977
  4098  061B  3200               	nop2
  4099  061C                     l2039:
  4100                           
  4101                           ;lcd_lib.c: 98: lcd_cmd(0x20);
  4102  061C  3020               	movlw	32
  4103  061D  3180  2091  3185   	fcall	_lcd_cmd
  4104  0620                     l2041:
  4105                           
  4106                           ;lcd_lib.c: 99: lcd_cmd(0x24);
  4107  0620  3024               	movlw	36
  4108  0621  3180  2091  3185   	fcall	_lcd_cmd
  4109  0624                     l2043:
  4110                           
  4111                           ;lcd_lib.c: 100: lcd_cmd(0x20);
  4112  0624  3020               	movlw	32
  4113  0625  3180  2091  3185   	fcall	_lcd_cmd
  4114                           
  4115                           ;lcd_lib.c: 102: _delay((unsigned long)((3)*(8000000/4000.0)));
  4116  0628  3008               	movlw	8
  4117  0629  00F2               	movwf	??_lcd_init
  4118  062A  30CA               	movlw	202
  4119  062B                     u1987:
  4120  062B  0B89               	decfsz	9,f
  4121  062C  2E2B               	goto	u1987
  4122  062D  0BF2               	decfsz	??_lcd_init,f
  4123  062E  2E2B               	goto	u1987
  4124  062F                     l222:
  4125  062F  0008               	return
  4126  0630                     __end_of_lcd_init:
  4127                           
  4128                           	psect	text11
  4129  0073                     __ptext11:	
  4130 ;; *************** function _lcd_backlight *****************
  4131 ;; Defined at:
  4132 ;;		line 105 in file "lcd_lib.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;		None
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;		None
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, status,2, status,0, pclath, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4146 ;;      Params:         0       0       0       0       0       0
  4147 ;;      Locals:         0       0       0       0       0       0
  4148 ;;      Temps:          1       0       0       0       0       0
  4149 ;;      Totals:         1       0       0       0       0       0
  4150 ;;Total ram usage:        1 bytes
  4151 ;; Hardware stack levels used: 1
  4152 ;; Hardware stack levels required when called: 3
  4153 ;; This function calls:
  4154 ;;		_lcd_cmd
  4155 ;; This function is called by:
  4156 ;;		_main
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           
  4161                           ;psect for function _lcd_backlight
  4162  0073                     _lcd_backlight:
  4163  0073                     l2045:	
  4164                           ;incstack = 0
  4165                           ; Regs used in _lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
  4166                           
  4167                           
  4168                           ;lcd_lib.c: 106: lcd_cmd(0x08);
  4169  0073  3008               	movlw	8
  4170  0074  3180  2091  3180   	fcall	_lcd_cmd
  4171  0077                     l2047:
  4172                           
  4173                           ;lcd_lib.c: 107: _backlightval = 0x08;
  4174  0077  3008               	movlw	8
  4175  0078  00F2               	movwf	??_lcd_backlight
  4176  0079  0872               	movf	??_lcd_backlight,w
  4177  007A  0020               	movlb	0	; select bank0
  4178  007B  00D7               	movwf	__backlightval
  4179  007C                     l2049:
  4180                           
  4181                           ;lcd_lib.c: 108: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4182  007C  3006               	movlw	6
  4183  007D                     u1997:
  4184  007D  0B89               	decfsz	9,f
  4185  007E  287D               	goto	u1997
  4186  007F  3200               	nop2
  4187  0080                     l225:
  4188  0080  0008               	return
  4189  0081                     __end_of_lcd_backlight:
  4190                           
  4191                           	psect	text12
  4192  0091                     __ptext12:	
  4193 ;; *************** function _lcd_cmd *****************
  4194 ;; Defined at:
  4195 ;;		line 11 in file "lcd_lib.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  cmd             1    wreg     unsigned char 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  cmd             1    1[COMMON] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0, pclath, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4209 ;;      Params:         0       0       0       0       0       0
  4210 ;;      Locals:         1       0       0       0       0       0
  4211 ;;      Temps:          0       0       0       0       0       0
  4212 ;;      Totals:         1       0       0       0       0       0
  4213 ;;Total ram usage:        1 bytes
  4214 ;; Hardware stack levels used: 1
  4215 ;; Hardware stack levels required when called: 2
  4216 ;; This function calls:
  4217 ;;		_i2c_start
  4218 ;;		_i2c_stop
  4219 ;;		_i2c_write
  4220 ;; This function is called by:
  4221 ;;		_lcd_init
  4222 ;;		_lcd_backlight
  4223 ;;		_command
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           
  4228                           ;psect for function _lcd_cmd
  4229  0091                     _lcd_cmd:
  4230                           
  4231                           ;incstack = 0
  4232                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  4233                           ;lcd_cmd@cmd stored from wreg
  4234  0091  00F1               	movwf	lcd_cmd@cmd
  4235  0092                     l1623:
  4236                           
  4237                           ;lcd_lib.c: 12: i2c_start();
  4238  0092  3180  205D  3180   	fcall	_i2c_start
  4239                           
  4240                           ;lcd_lib.c: 13: i2c_write(0x3F << 1);
  4241  0095  307E               	movlw	126
  4242  0096  3180  2081  3180   	fcall	_i2c_write
  4243                           
  4244                           ;lcd_lib.c: 14: i2c_write(cmd);
  4245  0099  0871               	movf	lcd_cmd@cmd,w
  4246  009A  3180  2081  3180   	fcall	_i2c_write
  4247  009D                     l1625:
  4248                           
  4249                           ;lcd_lib.c: 15: i2c_stop();
  4250  009D  3180  204C  3180   	fcall	_i2c_stop
  4251                           
  4252                           ;lcd_lib.c: 16: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4253  00A0  3006               	movlw	6
  4254  00A1                     u2007:
  4255  00A1  0B89               	decfsz	9,f
  4256  00A2  28A1               	goto	u2007
  4257  00A3  3200               	nop2
  4258  00A4                     l219:
  4259  00A4  0008               	return
  4260  00A5                     __end_of_lcd_cmd:
  4261                           
  4262                           	psect	text13
  4263  0081                     __ptext13:	
  4264 ;; *************** function _i2c_write *****************
  4265 ;; Defined at:
  4266 ;;		line 25 in file "i2c.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  data            1    wreg     unsigned char 
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  data            1    0[COMMON] unsigned char 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, status,0, pclath, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4280 ;;      Params:         0       0       0       0       0       0
  4281 ;;      Locals:         1       0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0
  4283 ;;      Totals:         1       0       0       0       0       0
  4284 ;;Total ram usage:        1 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; Hardware stack levels required when called: 1
  4287 ;; This function calls:
  4288 ;;		_i2c_wait
  4289 ;; This function is called by:
  4290 ;;		_lcd_cmd
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           
  4295                           ;psect for function _i2c_write
  4296  0081                     _i2c_write:
  4297                           
  4298                           ;incstack = 0
  4299                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  4300                           ;i2c_write@data stored from wreg
  4301  0081  00F0               	movwf	i2c_write@data
  4302  0082                     l1619:
  4303                           
  4304                           ;i2c.c: 26: SSP2BUF = data;
  4305  0082  0870               	movf	i2c_write@data,w
  4306  0083  0024               	movlb	4	; select bank4
  4307  0084  0099               	movwf	25	;volatile
  4308  0085                     l188:	
  4309                           ;i2c.c: 27: while(SSP2STATbits.BF);
  4310                           
  4311  0085  181C               	btfsc	28,0	;volatile
  4312  0086  2888               	goto	u971
  4313  0087  2889               	goto	u970
  4314  0088                     u971:
  4315  0088  2885               	goto	l188
  4316  0089                     u970:
  4317  0089                     l191:
  4318  0089  1B1E               	btfsc	30,6	;volatile
  4319  008A  288C               	goto	u981
  4320  008B  288D               	goto	u980
  4321  008C                     u981:
  4322  008C  2889               	goto	l191
  4323  008D                     u980:
  4324  008D                     l1621:
  4325                           
  4326                           ;i2c.c: 29: i2c_wait();
  4327  008D  3180  2067  3180   	fcall	_i2c_wait
  4328  0090                     l194:
  4329  0090  0008               	return
  4330  0091                     __end_of_i2c_write:
  4331                           
  4332                           	psect	text14
  4333  004C                     __ptext14:	
  4334 ;; *************** function _i2c_stop *****************
  4335 ;; Defined at:
  4336 ;;		line 14 in file "i2c.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		None
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4350 ;;      Params:         0       0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0
  4353 ;;      Totals:         0       0       0       0       0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used: 1
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_lcd_cmd
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           
  4364                           ;psect for function _i2c_stop
  4365  004C                     _i2c_stop:
  4366  004C                     l1617:	
  4367                           ;incstack = 0
  4368                           ; Regs used in _i2c_stop: []
  4369                           
  4370                           
  4371                           ;i2c.c: 15: SSP2CON2bits.PEN = 1;
  4372  004C  0024               	movlb	4	; select bank4
  4373  004D  151E               	bsf	30,2	;volatile
  4374  004E                     l176:	
  4375                           ;i2c.c: 16: while(SSP2CON2bits.PEN);
  4376                           
  4377  004E  191E               	btfsc	30,2	;volatile
  4378  004F  2851               	goto	u961
  4379  0050  2852               	goto	u960
  4380  0051                     u961:
  4381  0051  284E               	goto	l176
  4382  0052                     u960:
  4383  0052                     l179:
  4384  0052  0008               	return
  4385  0053                     __end_of_i2c_stop:
  4386                           
  4387                           	psect	text15
  4388  005D                     __ptext15:	
  4389 ;; *************** function _i2c_start *****************
  4390 ;; Defined at:
  4391 ;;		line 8 in file "i2c.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;		None
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      void 
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0, pclath, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4405 ;;      Params:         0       0       0       0       0       0
  4406 ;;      Locals:         0       0       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0
  4408 ;;      Totals:         0       0       0       0       0       0
  4409 ;;Total ram usage:        0 bytes
  4410 ;; Hardware stack levels used: 1
  4411 ;; Hardware stack levels required when called: 1
  4412 ;; This function calls:
  4413 ;;		_i2c_wait
  4414 ;; This function is called by:
  4415 ;;		_lcd_cmd
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           
  4420                           ;psect for function _i2c_start
  4421  005D                     _i2c_start:
  4422  005D                     l1613:	
  4423                           ;incstack = 0
  4424                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  4425                           
  4426                           
  4427                           ;i2c.c: 9: i2c_wait();
  4428  005D  3180  2067  3180   	fcall	_i2c_wait
  4429  0060                     l1615:
  4430                           
  4431                           ;i2c.c: 10: SSP2CON2bits.SEN = 1;
  4432  0060  0024               	movlb	4	; select bank4
  4433  0061  141E               	bsf	30,0	;volatile
  4434  0062                     l170:	
  4435                           ;i2c.c: 11: while(SSP2CON2bits.SEN);
  4436                           
  4437  0062  181E               	btfsc	30,0	;volatile
  4438  0063  2865               	goto	u951
  4439  0064  2866               	goto	u950
  4440  0065                     u951:
  4441  0065  2862               	goto	l170
  4442  0066                     u950:
  4443  0066                     l173:
  4444  0066  0008               	return
  4445  0067                     __end_of_i2c_start:
  4446                           
  4447                           	psect	text16
  4448  0067                     __ptext16:	
  4449 ;; *************** function _i2c_wait *****************
  4450 ;; Defined at:
  4451 ;;		line 4 in file "i2c.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4465 ;;      Params:         0       0       0       0       0       0
  4466 ;;      Locals:         0       0       0       0       0       0
  4467 ;;      Temps:          0       0       0       0       0       0
  4468 ;;      Totals:         0       0       0       0       0       0
  4469 ;;Total ram usage:        0 bytes
  4470 ;; Hardware stack levels used: 1
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		_i2c_start
  4475 ;;		_i2c_write
  4476 ;;		_i2c_repeated_start
  4477 ;;		_i2c_read
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           
  4482                           ;psect for function _i2c_wait
  4483  0067                     _i2c_wait:
  4484  0067                     l1607:	
  4485                           ;incstack = 0
  4486                           ; Regs used in _i2c_wait: [wreg+status,2]
  4487                           
  4488  0067                     l1609:	
  4489                           ;i2c.c: 5: while((SSP2CON2 & 0x1F) || (SSP2STAT & 0x04));
  4490                           
  4491  0067  0024               	movlb	4	; select bank4
  4492  0068  081E               	movf	30,w	;volatile
  4493  0069  391F               	andlw	31
  4494  006A  1D03               	btfss	3,2
  4495  006B  286D               	goto	u931
  4496  006C  286E               	goto	u930
  4497  006D                     u931:
  4498  006D  2867               	goto	l1609
  4499  006E                     u930:
  4500  006E                     l1611:
  4501  006E  191C               	btfsc	28,2	;volatile
  4502  006F  2871               	goto	u941
  4503  0070  2872               	goto	u940
  4504  0071                     u941:
  4505  0071  2867               	goto	l1609
  4506  0072                     u940:
  4507  0072                     l167:
  4508  0072  0008               	return
  4509  0073                     __end_of_i2c_wait:
  4510                           
  4511                           	psect	text17
  4512  03B0                     __ptext17:	
  4513 ;; *************** function _get_scale_val *****************
  4514 ;; Defined at:
  4515 ;;		line 28 in file "loadcell.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  n               1    wreg     unsigned char 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  n               1   15[BANK0 ] unsigned char 
  4520 ;;  i               1   20[BANK0 ] unsigned char 
  4521 ;;  j               1   14[BANK0 ] unsigned char 
  4522 ;;  weight_count    4   16[BANK0 ] long 
  4523 ;;  weight_add      4   10[BANK0 ] long 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  4    6[BANK0 ] long 
  4526 ;; Registers used:
  4527 ;;		wreg, status,2, status,0, pclath, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4533 ;;      Params:         0       4       0       0       0       0
  4534 ;;      Locals:         0      11       0       0       0       0
  4535 ;;      Temps:          4       0       0       0       0       0
  4536 ;;      Totals:         4      15       0       0       0       0
  4537 ;;Total ram usage:       19 bytes
  4538 ;; Hardware stack levels used: 1
  4539 ;; Hardware stack levels required when called: 1
  4540 ;; This function calls:
  4541 ;;		___aldiv
  4542 ;;		_get_CELL_DAT_VAL
  4543 ;;		_set_CELL_CLK_HIGH
  4544 ;;		_set_CELL_CLK_LOW
  4545 ;; This function is called by:
  4546 ;;		_main
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550                           
  4551                           ;psect for function _get_scale_val
  4552  03B0                     _get_scale_val:
  4553                           
  4554                           ;incstack = 0
  4555                           ; Regs used in _get_scale_val: [wreg+status,2+status,0+pclath+cstack]
  4556                           ;get_scale_val@n stored from wreg
  4557  03B0  0020               	movlb	0	; select bank0
  4558  03B1  00AF               	movwf	get_scale_val@n
  4559  03B2                     l2069:
  4560                           
  4561                           ;loadcell.c: 30: set_CELL_CLK_LOW();
  4562  03B2  3180  203F  3183   	fcall	_set_CELL_CLK_LOW
  4563  03B5                     l2071:
  4564                           
  4565                           ;loadcell.c: 32: long weight_count = 0;
  4566  03B5  3000               	movlw	0
  4567  03B6  0020               	movlb	0	; select bank0
  4568  03B7  00B3               	movwf	get_scale_val@weight_count+3
  4569  03B8  3000               	movlw	0
  4570  03B9  00B2               	movwf	get_scale_val@weight_count+2
  4571  03BA  3000               	movlw	0
  4572  03BB  00B1               	movwf	get_scale_val@weight_count+1
  4573  03BC  3000               	movlw	0
  4574  03BD  00B0               	movwf	get_scale_val@weight_count
  4575  03BE                     l2073:
  4576                           
  4577                           ;loadcell.c: 33: long weight_add = 0;
  4578  03BE  3000               	movlw	0
  4579  03BF  00AD               	movwf	get_scale_val@weight_add+3
  4580  03C0  3000               	movlw	0
  4581  03C1  00AC               	movwf	get_scale_val@weight_add+2
  4582  03C2  3000               	movlw	0
  4583  03C3  00AB               	movwf	get_scale_val@weight_add+1
  4584  03C4  3000               	movlw	0
  4585  03C5  00AA               	movwf	get_scale_val@weight_add
  4586  03C6                     l2075:
  4587                           
  4588                           ;loadcell.c: 34: for (uint8_t j = 0; j < n; j++)
  4589  03C6  01AE               	clrf	get_scale_val@j
  4590  03C7  2C3B               	goto	l2125
  4591  03C8                     l2077:
  4592  03C8  3180  203A  3183   	fcall	_get_CELL_DAT_VAL
  4593  03CB  3A00               	xorlw	0
  4594  03CC  1903               	skipnz
  4595  03CD  2BCF               	goto	u1681
  4596  03CE  2BD0               	goto	u1680
  4597  03CF                     u1681:
  4598  03CF  2BC8               	goto	l2077
  4599  03D0                     u1680:
  4600  03D0                     l2079:
  4601  03D0  3180  203A  3183   	fcall	_get_CELL_DAT_VAL
  4602  03D3  3A01               	xorlw	1
  4603  03D4  1903               	skipnz
  4604  03D5  2BD7               	goto	u1691
  4605  03D6  2BD8               	goto	u1690
  4606  03D7                     u1691:
  4607  03D7  2BD0               	goto	l2079
  4608  03D8                     u1690:
  4609  03D8                     l2081:
  4610                           
  4611                           ;loadcell.c: 40: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4612  03D8  3006               	movlw	6
  4613  03D9                     u2017:
  4614  03D9  0B89               	decfsz	9,f
  4615  03DA  2BD9               	goto	u2017
  4616  03DB  3200               	nop2
  4617  03DC                     l2083:
  4618                           
  4619                           ;loadcell.c: 42: uint8_t i;;loadcell.c: 43: for (i = 0; i < 24; i++){
  4620  03DC  0020               	movlb	0	; select bank0
  4621  03DD  01B4               	clrf	get_scale_val@i
  4622  03DE                     l2089:
  4623                           
  4624                           ;loadcell.c: 44: weight_count <<= 1;
  4625  03DE  3001               	movlw	1
  4626  03DF                     u1705:
  4627  03DF  35B0               	lslf	get_scale_val@weight_count,f
  4628  03E0  0DB1               	rlf	get_scale_val@weight_count+1,f
  4629  03E1  0DB2               	rlf	get_scale_val@weight_count+2,f
  4630  03E2  0DB3               	rlf	get_scale_val@weight_count+3,f
  4631  03E3  0B89               	decfsz	9,f
  4632  03E4  2BDF               	goto	u1705
  4633  03E5                     l2091:
  4634                           
  4635                           ;loadcell.c: 45: set_CELL_CLK_HIGH();
  4636  03E5  3180  202F  3183   	fcall	_set_CELL_CLK_HIGH
  4637  03E8                     l2093:
  4638                           
  4639                           ;loadcell.c: 46: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4640  03E8  3006               	movlw	6
  4641  03E9                     u2027:
  4642  03E9  0B89               	decfsz	9,f
  4643  03EA  2BE9               	goto	u2027
  4644  03EB  3200               	nop2
  4645  03EC                     l2095:
  4646                           
  4647                           ;loadcell.c: 47: set_CELL_CLK_LOW();
  4648  03EC  3180  203F  3183   	fcall	_set_CELL_CLK_LOW
  4649  03EF                     l2097:
  4650                           
  4651                           ;loadcell.c: 48: weight_count += get_CELL_DAT_VAL();
  4652  03EF  3180  203A  3183   	fcall	_get_CELL_DAT_VAL
  4653  03F2  00F9               	movwf	??_get_scale_val
  4654  03F3  01FA               	clrf	??_get_scale_val+1
  4655  03F4  01FB               	clrf	??_get_scale_val+2
  4656  03F5  01FC               	clrf	??_get_scale_val+3
  4657  03F6  0879               	movf	??_get_scale_val,w
  4658  03F7  0020               	movlb	0	; select bank0
  4659  03F8  07B0               	addwf	get_scale_val@weight_count,f
  4660  03F9  087A               	movf	??_get_scale_val+1,w
  4661  03FA  3DB1               	addwfc	get_scale_val@weight_count+1,f
  4662  03FB  087B               	movf	??_get_scale_val+2,w
  4663  03FC  3DB2               	addwfc	get_scale_val@weight_count+2,f
  4664  03FD  087C               	movf	??_get_scale_val+3,w
  4665  03FE  3DB3               	addwfc	get_scale_val@weight_count+3,f
  4666  03FF                     l2099:
  4667                           
  4668                           ;loadcell.c: 49: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4669  03FF  3006               	movlw	6
  4670  0400                     u2037:
  4671  0400  0B89               	decfsz	9,f
  4672  0401  2C00               	goto	u2037
  4673  0402  3200               	nop2
  4674  0403                     l2101:
  4675  0403  3001               	movlw	1
  4676  0404  00F9               	movwf	??_get_scale_val
  4677  0405  0879               	movf	??_get_scale_val,w
  4678  0406  0020               	movlb	0	; select bank0
  4679  0407  07B4               	addwf	get_scale_val@i,f
  4680  0408                     l2103:
  4681  0408  3018               	movlw	24
  4682  0409  0234               	subwf	get_scale_val@i,w
  4683  040A  1C03               	skipc
  4684  040B  2C0D               	goto	u1711
  4685  040C  2C0E               	goto	u1710
  4686  040D                     u1711:
  4687  040D  2BDE               	goto	l2089
  4688  040E                     u1710:
  4689  040E                     l2105:
  4690                           
  4691                           ;loadcell.c: 50: };loadcell.c: 52: for (i = 0; i < 1; i++){
  4692  040E  01B4               	clrf	get_scale_val@i
  4693  040F                     l2111:
  4694                           
  4695                           ;loadcell.c: 53: set_CELL_CLK_HIGH();
  4696  040F  3180  202F  3183   	fcall	_set_CELL_CLK_HIGH
  4697  0412                     l2113:
  4698                           
  4699                           ;loadcell.c: 54: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4700  0412  3006               	movlw	6
  4701  0413                     u2047:
  4702  0413  0B89               	decfsz	9,f
  4703  0414  2C13               	goto	u2047
  4704  0415  3200               	nop2
  4705                           
  4706                           ;loadcell.c: 55: set_CELL_CLK_LOW();
  4707  0416  3180  203F  3183   	fcall	_set_CELL_CLK_LOW
  4708  0419                     l2115:
  4709                           
  4710                           ;loadcell.c: 56: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4711  0419  3006               	movlw	6
  4712  041A                     u2057:
  4713  041A  0B89               	decfsz	9,f
  4714  041B  2C1A               	goto	u2057
  4715  041C  3200               	nop2
  4716  041D                     l2117:
  4717  041D  3001               	movlw	1
  4718  041E  00F9               	movwf	??_get_scale_val
  4719  041F  0879               	movf	??_get_scale_val,w
  4720  0420  0020               	movlb	0	; select bank0
  4721  0421  07B4               	addwf	get_scale_val@i,f
  4722  0422                     l2119:
  4723  0422  0834               	movf	get_scale_val@i,w
  4724  0423  1903               	btfsc	3,2
  4725  0424  2C26               	goto	u1721
  4726  0425  2C27               	goto	u1720
  4727  0426                     u1721:
  4728  0426  2C0F               	goto	l2111
  4729  0427                     u1720:
  4730  0427                     l2121:
  4731                           
  4732                           ;loadcell.c: 57: };loadcell.c: 59: weight_add += weight_count;
  4733  0427  0830               	movf	get_scale_val@weight_count,w
  4734  0428  07AA               	addwf	get_scale_val@weight_add,f
  4735  0429  0831               	movf	get_scale_val@weight_count+1,w
  4736  042A  3DAB               	addwfc	get_scale_val@weight_add+1,f
  4737  042B  0832               	movf	get_scale_val@weight_count+2,w
  4738  042C  3DAC               	addwfc	get_scale_val@weight_add+2,f
  4739  042D  0833               	movf	get_scale_val@weight_count+3,w
  4740  042E  3DAD               	addwfc	get_scale_val@weight_add+3,f
  4741                           
  4742                           ;loadcell.c: 60: weight_count = 0;
  4743  042F  3000               	movlw	0
  4744  0430  00B3               	movwf	get_scale_val@weight_count+3
  4745  0431  3000               	movlw	0
  4746  0432  00B2               	movwf	get_scale_val@weight_count+2
  4747  0433  3000               	movlw	0
  4748  0434  00B1               	movwf	get_scale_val@weight_count+1
  4749  0435  3000               	movlw	0
  4750  0436  00B0               	movwf	get_scale_val@weight_count
  4751  0437                     l2123:
  4752  0437  3001               	movlw	1
  4753  0438  00F9               	movwf	??_get_scale_val
  4754  0439  0879               	movf	??_get_scale_val,w
  4755  043A  07AE               	addwf	get_scale_val@j,f
  4756  043B                     l2125:
  4757  043B  082F               	movf	get_scale_val@n,w
  4758  043C  022E               	subwf	get_scale_val@j,w
  4759  043D  1C03               	skipc
  4760  043E  2C40               	goto	u1731
  4761  043F  2C41               	goto	u1730
  4762  0440                     u1731:
  4763  0440  2BC8               	goto	l2077
  4764  0441                     u1730:
  4765  0441                     l2127:
  4766                           
  4767                           ;loadcell.c: 61: };loadcell.c: 62: weight_count = weight_add / n;
  4768  0441  082F               	movf	get_scale_val@n,w
  4769  0442  00F9               	movwf	??_get_scale_val
  4770  0443  01FA               	clrf	??_get_scale_val+1
  4771  0444  01FB               	clrf	??_get_scale_val+2
  4772  0445  01FC               	clrf	??_get_scale_val+3
  4773  0446  087C               	movf	??_get_scale_val+3,w
  4774  0447  00F3               	movwf	___aldiv@divisor+3
  4775  0448  087B               	movf	??_get_scale_val+2,w
  4776  0449  00F2               	movwf	___aldiv@divisor+2
  4777  044A  087A               	movf	??_get_scale_val+1,w
  4778  044B  00F1               	movwf	___aldiv@divisor+1
  4779  044C  0879               	movf	??_get_scale_val,w
  4780  044D  00F0               	movwf	___aldiv@divisor
  4781  044E  082D               	movf	get_scale_val@weight_add+3,w
  4782  044F  00F7               	movwf	___aldiv@dividend+3
  4783  0450  082C               	movf	get_scale_val@weight_add+2,w
  4784  0451  00F6               	movwf	___aldiv@dividend+2
  4785  0452  082B               	movf	get_scale_val@weight_add+1,w
  4786  0453  00F5               	movwf	___aldiv@dividend+1
  4787  0454  082A               	movf	get_scale_val@weight_add,w
  4788  0455  00F4               	movwf	___aldiv@dividend
  4789  0456  3182  2274  3183   	fcall	___aldiv
  4790  0459  0873               	movf	?___aldiv+3,w
  4791  045A  0020               	movlb	0	; select bank0
  4792  045B  00B3               	movwf	get_scale_val@weight_count+3
  4793  045C  0872               	movf	?___aldiv+2,w
  4794  045D  00B2               	movwf	get_scale_val@weight_count+2
  4795  045E  0871               	movf	?___aldiv+1,w
  4796  045F  00B1               	movwf	get_scale_val@weight_count+1
  4797  0460  0870               	movf	?___aldiv,w
  4798  0461  00B0               	movwf	get_scale_val@weight_count
  4799  0462                     l2129:
  4800                           
  4801                           ;loadcell.c: 63: return weight_count;
  4802  0462  0833               	movf	get_scale_val@weight_count+3,w
  4803  0463  00A9               	movwf	?_get_scale_val+3
  4804  0464  0832               	movf	get_scale_val@weight_count+2,w
  4805  0465  00A8               	movwf	?_get_scale_val+2
  4806  0466  0831               	movf	get_scale_val@weight_count+1,w
  4807  0467  00A7               	movwf	?_get_scale_val+1
  4808  0468  0830               	movf	get_scale_val@weight_count,w
  4809  0469  00A6               	movwf	?_get_scale_val
  4810  046A                     l95:
  4811  046A  0008               	return
  4812  046B                     __end_of_get_scale_val:
  4813                           
  4814                           	psect	text18
  4815  003F                     __ptext18:	
  4816 ;; *************** function _set_CELL_CLK_LOW *****************
  4817 ;; Defined at:
  4818 ;;		line 7 in file "loadcell.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;		None
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4832 ;;      Params:         0       0       0       0       0       0
  4833 ;;      Locals:         0       0       0       0       0       0
  4834 ;;      Temps:          1       0       0       0       0       0
  4835 ;;      Totals:         1       0       0       0       0       0
  4836 ;;Total ram usage:        1 bytes
  4837 ;; Hardware stack levels used: 1
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		_get_scale_val
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           
  4846                           ;psect for function _set_CELL_CLK_LOW
  4847  003F                     _set_CELL_CLK_LOW:
  4848  003F                     l1627:	
  4849                           ;incstack = 0
  4850                           ; Regs used in _set_CELL_CLK_LOW: [wreg+status,2+status,0]
  4851                           
  4852  003F  30FE               	movlw	254
  4853  0040  00F0               	movwf	??_set_CELL_CLK_LOW
  4854  0041  0870               	movf	??_set_CELL_CLK_LOW,w
  4855  0042  0022               	movlb	2	; select bank2
  4856  0043  058C               	andwf	12,f	;volatile
  4857  0044                     l65:
  4858  0044  0008               	return
  4859  0045                     __end_of_set_CELL_CLK_LOW:
  4860                           
  4861                           	psect	text19
  4862  002F                     __ptext19:	
  4863 ;; *************** function _set_CELL_CLK_HIGH *****************
  4864 ;; Defined at:
  4865 ;;		line 12 in file "loadcell.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		None
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4879 ;;      Params:         0       0       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0
  4881 ;;      Temps:          0       0       0       0       0       0
  4882 ;;      Totals:         0       0       0       0       0       0
  4883 ;;Total ram usage:        0 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_get_scale_val
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           
  4893                           ;psect for function _set_CELL_CLK_HIGH
  4894  002F                     _set_CELL_CLK_HIGH:
  4895  002F                     l1629:	
  4896                           ;incstack = 0
  4897                           ; Regs used in _set_CELL_CLK_HIGH: []
  4898                           
  4899  002F  0022               	movlb	2	; select bank2
  4900  0030  140C               	bsf	12,0	;volatile
  4901  0031                     l68:
  4902  0031  0008               	return
  4903  0032                     __end_of_set_CELL_CLK_HIGH:
  4904                           
  4905                           	psect	text20
  4906  003A                     __ptext20:	
  4907 ;; *************** function _get_CELL_DAT_VAL *****************
  4908 ;; Defined at:
  4909 ;;		line 15 in file "loadcell.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;		None
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      unsigned char 
  4916 ;; Registers used:
  4917 ;;		wreg, status,2, status,0
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4923 ;;      Params:         0       0       0       0       0       0
  4924 ;;      Locals:         0       0       0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0       0
  4926 ;;      Totals:         0       0       0       0       0       0
  4927 ;;Total ram usage:        0 bytes
  4928 ;; Hardware stack levels used: 1
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_get_scale_val
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           
  4937                           ;psect for function _get_CELL_DAT_VAL
  4938  003A                     _get_CELL_DAT_VAL:
  4939  003A                     l1631:	
  4940                           ;incstack = 0
  4941                           ; Regs used in _get_CELL_DAT_VAL: [wreg+status,2+status,0]
  4942                           
  4943  003A                     l1641:	
  4944                           ;loadcell.c: 16: if(0x04 == 0x01){ return PORTAbits.RA0; }
  4945                           
  4946  003A  0020               	movlb	0	; select bank0
  4947  003B  0C0C               	rrf	12,w	;volatile
  4948  003C  0C89               	rrf	9,f
  4949  003D  3901               	andlw	1
  4950  003E                     l72:
  4951  003E  0008               	return
  4952  003F                     __end_of_get_CELL_DAT_VAL:
  4953                           
  4954                           	psect	text21
  4955  0274                     __ptext21:	
  4956 ;; *************** function ___aldiv *****************
  4957 ;; Defined at:
  4958 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;  divisor         4    0[COMMON] long 
  4961 ;;  dividend        4    4[COMMON] long 
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;  quotient        4    2[BANK0 ] long 
  4964 ;;  sign            1    1[BANK0 ] unsigned char 
  4965 ;;  counter         1    0[BANK0 ] unsigned char 
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  4    0[COMMON] long 
  4968 ;; Registers used:
  4969 ;;		wreg, status,2, status,0
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4975 ;;      Params:         8       0       0       0       0       0
  4976 ;;      Locals:         0       6       0       0       0       0
  4977 ;;      Temps:          1       0       0       0       0       0
  4978 ;;      Totals:         9       6       0       0       0       0
  4979 ;;Total ram usage:       15 bytes
  4980 ;; Hardware stack levels used: 1
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_get_scale_val
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           
  4989                           ;psect for function ___aldiv
  4990  0274                     ___aldiv:
  4991  0274                     l1705:	
  4992                           ;incstack = 0
  4993                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4994                           
  4995  0274  0020               	movlb	0	; select bank0
  4996  0275  01A1               	clrf	___aldiv@sign
  4997  0276                     l1707:
  4998  0276  1FF3               	btfss	___aldiv@divisor+3,7
  4999  0277  2A79               	goto	u1001
  5000  0278  2A7A               	goto	u1000
  5001  0279                     u1001:
  5002  0279  2A87               	goto	l490
  5003  027A                     u1000:
  5004  027A                     l1709:
  5005  027A  09F0               	comf	___aldiv@divisor,f
  5006  027B  09F1               	comf	___aldiv@divisor+1,f
  5007  027C  09F2               	comf	___aldiv@divisor+2,f
  5008  027D  09F3               	comf	___aldiv@divisor+3,f
  5009  027E  0AF0               	incf	___aldiv@divisor,f
  5010  027F  1903               	skipnz
  5011  0280  0AF1               	incf	___aldiv@divisor+1,f
  5012  0281  1903               	skipnz
  5013  0282  0AF2               	incf	___aldiv@divisor+2,f
  5014  0283  1903               	skipnz
  5015  0284  0AF3               	incf	___aldiv@divisor+3,f
  5016  0285  01A1               	clrf	___aldiv@sign
  5017  0286  0AA1               	incf	___aldiv@sign,f
  5018  0287                     l490:
  5019  0287  1FF7               	btfss	___aldiv@dividend+3,7
  5020  0288  2A8A               	goto	u1011
  5021  0289  2A8B               	goto	u1010
  5022  028A                     u1011:
  5023  028A  2A9A               	goto	l1715
  5024  028B                     u1010:
  5025  028B                     l1711:
  5026  028B  09F4               	comf	___aldiv@dividend,f
  5027  028C  09F5               	comf	___aldiv@dividend+1,f
  5028  028D  09F6               	comf	___aldiv@dividend+2,f
  5029  028E  09F7               	comf	___aldiv@dividend+3,f
  5030  028F  0AF4               	incf	___aldiv@dividend,f
  5031  0290  1903               	skipnz
  5032  0291  0AF5               	incf	___aldiv@dividend+1,f
  5033  0292  1903               	skipnz
  5034  0293  0AF6               	incf	___aldiv@dividend+2,f
  5035  0294  1903               	skipnz
  5036  0295  0AF7               	incf	___aldiv@dividend+3,f
  5037  0296                     l1713:
  5038  0296  3001               	movlw	1
  5039  0297  00F8               	movwf	??___aldiv
  5040  0298  0878               	movf	??___aldiv,w
  5041  0299  06A1               	xorwf	___aldiv@sign,f
  5042  029A                     l1715:
  5043  029A  3000               	movlw	0
  5044  029B  00A5               	movwf	___aldiv@quotient+3
  5045  029C  3000               	movlw	0
  5046  029D  00A4               	movwf	___aldiv@quotient+2
  5047  029E  3000               	movlw	0
  5048  029F  00A3               	movwf	___aldiv@quotient+1
  5049  02A0  3000               	movlw	0
  5050  02A1  00A2               	movwf	___aldiv@quotient
  5051  02A2                     l1717:
  5052  02A2  0873               	movf	___aldiv@divisor+3,w
  5053  02A3  0472               	iorwf	___aldiv@divisor+2,w
  5054  02A4  0471               	iorwf	___aldiv@divisor+1,w
  5055  02A5  0470               	iorwf	___aldiv@divisor,w
  5056  02A6  1903               	skipnz
  5057  02A7  2AA9               	goto	u1021
  5058  02A8  2AAA               	goto	u1020
  5059  02A9                     u1021:
  5060  02A9  2AEB               	goto	l1737
  5061  02AA                     u1020:
  5062  02AA                     l1719:
  5063  02AA  01A0               	clrf	___aldiv@counter
  5064  02AB  0AA0               	incf	___aldiv@counter,f
  5065  02AC  2AB8               	goto	l1723
  5066  02AD                     l1721:
  5067  02AD  3001               	movlw	1
  5068  02AE                     u1035:
  5069  02AE  35F0               	lslf	___aldiv@divisor,f
  5070  02AF  0DF1               	rlf	___aldiv@divisor+1,f
  5071  02B0  0DF2               	rlf	___aldiv@divisor+2,f
  5072  02B1  0DF3               	rlf	___aldiv@divisor+3,f
  5073  02B2  0B89               	decfsz	9,f
  5074  02B3  2AAE               	goto	u1035
  5075  02B4  3001               	movlw	1
  5076  02B5  00F8               	movwf	??___aldiv
  5077  02B6  0878               	movf	??___aldiv,w
  5078  02B7  07A0               	addwf	___aldiv@counter,f
  5079  02B8                     l1723:
  5080  02B8  1FF3               	btfss	___aldiv@divisor+3,7
  5081  02B9  2ABB               	goto	u1041
  5082  02BA  2ABC               	goto	u1040
  5083  02BB                     u1041:
  5084  02BB  2AAD               	goto	l1721
  5085  02BC                     u1040:
  5086  02BC                     l1725:
  5087  02BC  3001               	movlw	1
  5088  02BD                     u1055:
  5089  02BD  35A2               	lslf	___aldiv@quotient,f
  5090  02BE  0DA3               	rlf	___aldiv@quotient+1,f
  5091  02BF  0DA4               	rlf	___aldiv@quotient+2,f
  5092  02C0  0DA5               	rlf	___aldiv@quotient+3,f
  5093  02C1  0B89               	decfsz	9,f
  5094  02C2  2ABD               	goto	u1055
  5095  02C3                     l1727:
  5096  02C3  0873               	movf	___aldiv@divisor+3,w
  5097  02C4  0277               	subwf	___aldiv@dividend+3,w
  5098  02C5  1D03               	skipz
  5099  02C6  2AD1               	goto	u1065
  5100  02C7  0872               	movf	___aldiv@divisor+2,w
  5101  02C8  0276               	subwf	___aldiv@dividend+2,w
  5102  02C9  1D03               	skipz
  5103  02CA  2AD1               	goto	u1065
  5104  02CB  0871               	movf	___aldiv@divisor+1,w
  5105  02CC  0275               	subwf	___aldiv@dividend+1,w
  5106  02CD  1D03               	skipz
  5107  02CE  2AD1               	goto	u1065
  5108  02CF  0870               	movf	___aldiv@divisor,w
  5109  02D0  0274               	subwf	___aldiv@dividend,w
  5110  02D1                     u1065:
  5111  02D1  1C03               	skipc
  5112  02D2  2AD4               	goto	u1061
  5113  02D3  2AD5               	goto	u1060
  5114  02D4                     u1061:
  5115  02D4  2ADE               	goto	l1733
  5116  02D5                     u1060:
  5117  02D5                     l1729:
  5118  02D5  0870               	movf	___aldiv@divisor,w
  5119  02D6  02F4               	subwf	___aldiv@dividend,f
  5120  02D7  0871               	movf	___aldiv@divisor+1,w
  5121  02D8  3BF5               	subwfb	___aldiv@dividend+1,f
  5122  02D9  0872               	movf	___aldiv@divisor+2,w
  5123  02DA  3BF6               	subwfb	___aldiv@dividend+2,f
  5124  02DB  0873               	movf	___aldiv@divisor+3,w
  5125  02DC  3BF7               	subwfb	___aldiv@dividend+3,f
  5126  02DD                     l1731:
  5127  02DD  1422               	bsf	___aldiv@quotient,0
  5128  02DE                     l1733:
  5129  02DE  3001               	movlw	1
  5130  02DF                     u1075:
  5131  02DF  36F3               	lsrf	___aldiv@divisor+3,f
  5132  02E0  0CF2               	rrf	___aldiv@divisor+2,f
  5133  02E1  0CF1               	rrf	___aldiv@divisor+1,f
  5134  02E2  0CF0               	rrf	___aldiv@divisor,f
  5135  02E3  0B89               	decfsz	9,f
  5136  02E4  2ADF               	goto	u1075
  5137  02E5                     l1735:
  5138  02E5  3001               	movlw	1
  5139  02E6  02A0               	subwf	___aldiv@counter,f
  5140  02E7  1D03               	btfss	3,2
  5141  02E8  2AEA               	goto	u1081
  5142  02E9  2AEB               	goto	u1080
  5143  02EA                     u1081:
  5144  02EA  2ABC               	goto	l1725
  5145  02EB                     u1080:
  5146  02EB                     l1737:
  5147  02EB  0821               	movf	___aldiv@sign,w
  5148  02EC  1903               	btfsc	3,2
  5149  02ED  2AEF               	goto	u1091
  5150  02EE  2AF0               	goto	u1090
  5151  02EF                     u1091:
  5152  02EF  2AFB               	goto	l1741
  5153  02F0                     u1090:
  5154  02F0                     l1739:
  5155  02F0  09A2               	comf	___aldiv@quotient,f
  5156  02F1  09A3               	comf	___aldiv@quotient+1,f
  5157  02F2  09A4               	comf	___aldiv@quotient+2,f
  5158  02F3  09A5               	comf	___aldiv@quotient+3,f
  5159  02F4  0AA2               	incf	___aldiv@quotient,f
  5160  02F5  1903               	skipnz
  5161  02F6  0AA3               	incf	___aldiv@quotient+1,f
  5162  02F7  1903               	skipnz
  5163  02F8  0AA4               	incf	___aldiv@quotient+2,f
  5164  02F9  1903               	skipnz
  5165  02FA  0AA5               	incf	___aldiv@quotient+3,f
  5166  02FB                     l1741:
  5167  02FB  0825               	movf	___aldiv@quotient+3,w
  5168  02FC  00F3               	movwf	?___aldiv+3
  5169  02FD  0824               	movf	___aldiv@quotient+2,w
  5170  02FE  00F2               	movwf	?___aldiv+2
  5171  02FF  0823               	movf	___aldiv@quotient+1,w
  5172  0300  00F1               	movwf	?___aldiv+1
  5173  0301  0822               	movf	___aldiv@quotient,w
  5174  0302  00F0               	movwf	?___aldiv
  5175  0303                     l500:
  5176  0303  0008               	return
  5177  0304                     __end_of___aldiv:
  5178                           
  5179                           	psect	text22
  5180  0053                     __ptext22:	
  5181 ;; *************** function _SYSTEM_Initialize *****************
  5182 ;; Defined at:
  5183 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      void 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2, status,0, pclath, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5197 ;;      Params:         0       0       0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0
  5200 ;;      Totals:         0       0       0       0       0       0
  5201 ;;Total ram usage:        0 bytes
  5202 ;; Hardware stack levels used: 1
  5203 ;; Hardware stack levels required when called: 1
  5204 ;; This function calls:
  5205 ;;		_OSCILLATOR_Initialize
  5206 ;;		_PIN_MANAGER_Initialize
  5207 ;;		_WDT_Initialize
  5208 ;; This function is called by:
  5209 ;;		_main
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function _SYSTEM_Initialize
  5215  0053                     _SYSTEM_Initialize:
  5216  0053                     l1977:	
  5217                           ;incstack = 0
  5218                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5219                           
  5220                           
  5221                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  5222  0053  3180  20A5  3180   	fcall	_PIN_MANAGER_Initialize
  5223                           
  5224                           ;mcc.c: 54: OSCILLATOR_Initialize();
  5225  0056  3180  2045  3180   	fcall	_OSCILLATOR_Initialize
  5226                           
  5227                           ;mcc.c: 55: WDT_Initialize();
  5228  0059  3180  2032  3180   	fcall	_WDT_Initialize
  5229  005C                     l115:
  5230  005C  0008               	return
  5231  005D                     __end_of_SYSTEM_Initialize:
  5232                           
  5233                           	psect	text23
  5234  0032                     __ptext23:	
  5235 ;; *************** function _WDT_Initialize *****************
  5236 ;; Defined at:
  5237 ;;		line 68 in file "mcc_generated_files/mcc.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;		None
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;		None
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      void 
  5244 ;; Registers used:
  5245 ;;		wreg
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5251 ;;      Params:         0       0       0       0       0       0
  5252 ;;      Locals:         0       0       0       0       0       0
  5253 ;;      Temps:          0       0       0       0       0       0
  5254 ;;      Totals:         0       0       0       0       0       0
  5255 ;;Total ram usage:        0 bytes
  5256 ;; Hardware stack levels used: 1
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_SYSTEM_Initialize
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           
  5265                           ;psect for function _WDT_Initialize
  5266  0032                     _WDT_Initialize:
  5267  0032                     l1687:	
  5268                           ;incstack = 0
  5269                           ; Regs used in _WDT_Initialize: [wreg]
  5270                           
  5271                           
  5272                           ;mcc.c: 71: WDTCON = 0x16;
  5273  0032  3016               	movlw	22
  5274  0033  0021               	movlb	1	; select bank1
  5275  0034  0097               	movwf	23	;volatile
  5276  0035                     l121:
  5277  0035  0008               	return
  5278  0036                     __end_of_WDT_Initialize:
  5279                           
  5280                           	psect	text24
  5281  00A5                     __ptext24:	
  5282 ;; *************** function _PIN_MANAGER_Initialize *****************
  5283 ;; Defined at:
  5284 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;		None
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5298 ;;      Params:         0       0       0       0       0       0
  5299 ;;      Locals:         0       0       0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0       0
  5301 ;;      Totals:         0       0       0       0       0       0
  5302 ;;Total ram usage:        0 bytes
  5303 ;; Hardware stack levels used: 1
  5304 ;; This function calls:
  5305 ;;		Nothing
  5306 ;; This function is called by:
  5307 ;;		_SYSTEM_Initialize
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           
  5312                           ;psect for function _PIN_MANAGER_Initialize
  5313  00A5                     _PIN_MANAGER_Initialize:
  5314  00A5                     l1669:	
  5315                           ;incstack = 0
  5316                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5317                           
  5318                           
  5319                           ;pin_manager.c: 60: LATA = 0x00;
  5320  00A5  0022               	movlb	2	; select bank2
  5321  00A6  018C               	clrf	12	;volatile
  5322                           
  5323                           ;pin_manager.c: 61: LATB = 0x00;
  5324  00A7  018D               	clrf	13	;volatile
  5325  00A8                     l1671:
  5326                           
  5327                           ;pin_manager.c: 66: TRISA = 0xFF;
  5328  00A8  30FF               	movlw	255
  5329  00A9  0021               	movlb	1	; select bank1
  5330  00AA  008C               	movwf	12	;volatile
  5331  00AB                     l1673:
  5332                           
  5333                           ;pin_manager.c: 67: TRISB = 0xFF;
  5334  00AB  30FF               	movlw	255
  5335  00AC  008D               	movwf	13	;volatile
  5336  00AD                     l1675:
  5337                           
  5338                           ;pin_manager.c: 72: ANSELB = 0xFE;
  5339  00AD  30FE               	movlw	254
  5340  00AE  0023               	movlb	3	; select bank3
  5341  00AF  008D               	movwf	13	;volatile
  5342  00B0                     l1677:
  5343                           
  5344                           ;pin_manager.c: 73: ANSELA = 0x1F;
  5345  00B0  301F               	movlw	31
  5346  00B1  008C               	movwf	12	;volatile
  5347                           
  5348                           ;pin_manager.c: 78: WPUB = 0x00;
  5349  00B2  0024               	movlb	4	; select bank4
  5350  00B3  018D               	clrf	13	;volatile
  5351                           
  5352                           ;pin_manager.c: 79: WPUA = 0x00;
  5353  00B4  018C               	clrf	12	;volatile
  5354  00B5                     l1679:
  5355                           
  5356                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  5357  00B5  0021               	movlb	1	; select bank1
  5358  00B6  1795               	bsf	21,7	;volatile
  5359                           
  5360                           ;pin_manager.c: 86: APFCON0 = 0x00;
  5361  00B7  0022               	movlb	2	; select bank2
  5362  00B8  019D               	clrf	29	;volatile
  5363                           
  5364                           ;pin_manager.c: 87: APFCON1 = 0x00;
  5365  00B9  019E               	clrf	30	;volatile
  5366  00BA                     l146:
  5367  00BA  0008               	return
  5368  00BB                     __end_of_PIN_MANAGER_Initialize:
  5369                           
  5370                           	psect	text25
  5371  0045                     __ptext25:	
  5372 ;; *************** function _OSCILLATOR_Initialize *****************
  5373 ;; Defined at:
  5374 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;		None
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;		None
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5388 ;;      Params:         0       0       0       0       0       0
  5389 ;;      Locals:         0       0       0       0       0       0
  5390 ;;      Temps:          0       0       0       0       0       0
  5391 ;;      Totals:         0       0       0       0       0       0
  5392 ;;Total ram usage:        0 bytes
  5393 ;; Hardware stack levels used: 1
  5394 ;; This function calls:
  5395 ;;		Nothing
  5396 ;; This function is called by:
  5397 ;;		_SYSTEM_Initialize
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           
  5402                           ;psect for function _OSCILLATOR_Initialize
  5403  0045                     _OSCILLATOR_Initialize:
  5404  0045                     l1681:	
  5405                           ;incstack = 0
  5406                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5407                           
  5408                           
  5409                           ;mcc.c: 61: OSCCON = 0x70;
  5410  0045  3070               	movlw	112
  5411  0046  0021               	movlb	1	; select bank1
  5412  0047  0099               	movwf	25	;volatile
  5413  0048                     l1683:
  5414                           
  5415                           ;mcc.c: 63: OSCTUNE = 0x00;
  5416  0048  0198               	clrf	24	;volatile
  5417  0049                     l1685:
  5418                           
  5419                           ;mcc.c: 65: BORCON = 0x00;
  5420  0049  0022               	movlb	2	; select bank2
  5421  004A  0196               	clrf	22	;volatile
  5422  004B                     l118:
  5423  004B  0008               	return
  5424  004C                     __end_of_OSCILLATOR_Initialize:
  5425  007E                     btemp	set	126	;btemp
  5426  007E                     wtemp0	set	126
  5427                           
  5428                           	psect	config
  5429                           
  5430                           ;Config register CONFIG1 @ 0x8007
  5431                           ;	Oscillator Selection
  5432                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5433                           ;	Watchdog Timer Enable
  5434                           ;	WDTE = OFF, WDT disabled
  5435                           ;	Power-up Timer Enable
  5436                           ;	PWRTE = OFF, PWRT disabled
  5437                           ;	MCLR Pin Function Select
  5438                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5439                           ;	Flash Program Memory Code Protection
  5440                           ;	CP = OFF, Program memory code protection is disabled
  5441                           ;	Data Memory Code Protection
  5442                           ;	CPD = OFF, Data memory code protection is disabled
  5443                           ;	Brown-out Reset Enable
  5444                           ;	BOREN = ON, Brown-out Reset enabled
  5445                           ;	Clock Out Enable
  5446                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5447                           ;	Internal/External Switchover
  5448                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5449                           ;	Fail-Safe Clock Monitor Enable
  5450                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5451  8007                     	org	32775
  5452  8007  3FE4               	dw	16356
  5453                           
  5454                           ;Config register CONFIG2 @ 0x8008
  5455                           ;	Flash Memory Self-Write Protection
  5456                           ;	WRT = OFF, Write protection off
  5457                           ;	PLL Enable
  5458                           ;	PLLEN = OFF, 4x PLL disabled
  5459                           ;	Stack Overflow/Underflow Reset Enable
  5460                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5461                           ;	Brown-out Reset Voltage Selection
  5462                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5463                           ;	Low-Voltage Programming Enable
  5464                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5465  8008                     	org	32776
  5466  8008  1EFF               	dw	7935

Data Sizes:
    Strings     17
    Constant    10
    Data        4
    BSS         9
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     47      60
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@str(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[2]), main@str(BANK0[16]), STR_2(CODE[6]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _scale_convert_gram->___xxtofl
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _get_scale_val->___aldiv

Critical Paths under _main in BANK0

    _main->_scale_convert_gram
    _scale_convert_gram->___fldiv
    _get_scale_val->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    5426
                                             25 BANK0     22    22      0
                  _SYSTEM_Initialize
                      _get_scale_val
                      _lcd_backlight
                           _lcd_init
                          _lcd_print
                     _lcd_set_cursor
                 _scale_convert_gram
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    19      6    1211
                                              0 BANK0     17    11      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _scale_convert_gram                                  12     8      4    1815
                                             13 BANK0     12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       8     7      1     760
                                              8 COMMON     2     1      1
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            4     2      2     790
                                              8 COMMON     4     2      2
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              6     5      1     418
                                              2 COMMON     6     5      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      44
                                              2 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_backlight                                        1     1      0      44
                                              2 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_scale_val                                       19    15      4     685
                                              9 COMMON     4     4      0
                                              6 BANK0     15    11      4
                            ___aldiv
                   _get_CELL_DAT_VAL
                  _set_CELL_CLK_HIGH
                   _set_CELL_CLK_LOW
 ---------------------------------------------------------------------------------
 (2) _set_CELL_CLK_LOW                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_CELL_CLK_HIGH                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_CELL_DAT_VAL                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _get_scale_val
     ___aldiv
     _get_CELL_DAT_VAL
     _set_CELL_CLK_HIGH
     _set_CELL_CLK_LOW
   _lcd_backlight
     _lcd_cmd
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _lcd_init
     _lcd_cmd
   _lcd_print
     _command
       _lcd_cmd
   _lcd_set_cursor
     _command
   _scale_convert_gram
     ___fldiv
     ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2F      3C       6       75.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      4A      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Oct 30 22:57:49 2021

                   ___fldiv@aexp 002C                     ___fldiv@bexp 002B                     ___fldiv@sign 0024  
                             l72 003E                               l65 0044                               l68 0031  
                             l95 046A                               l98 01E8                              l121 0035  
                            l115 005C                              l118 004B                              l222 062F  
                            l225 0080                              l146 00BA                              l170 0062  
                            l219 00A4                              l500 0303                              l244 00D7  
                            l173 0066                              l421 0543                              l238 00F9  
                            l167 0072                              l191 0089                              l247 0165  
                            l176 004E                              l194 0090                              l179 0052  
                            l188 0085                              l490 0287                              l707 012D  
                            l860 03AF                              l790 0765                              l774 0687  
                            l871 037B                              l776 07E3                              l872 0387  
                            l864 0361                              l697 01A1                              l858 0326  
                            l795 07B1                              l796 07CB                              l798 07DA  
                            u930 006E                              u931 006D                              u940 0072  
                            u941 0071                              u950 0066                              u951 0065  
                            u960 0052                              u961 0051                              u970 0089  
                            u971 0088                              u980 008D                              u981 008C  
                            u995 013A                              wreg 0009                      command@mode 0072  
      get_scale_val@weight_count 0030                  ?_lcd_set_cursor 0078                             l2001 058D  
                           l2011 05AD                             l2003 0591                             l2101 0403  
                           l2021 05D9                             l2013 05B1                             l2005 05A1  
                           l2111 040F                             l2103 0408                             l2031 05F4  
                           l2023 05DD                             l2015 05B5                             l2007 05A5  
                           l2121 0427                             l2113 0412                             l2105 040E  
                           l2041 0620                             l2033 05F8                             l2025 05E1  
                           l2017 05B9                             l2009 05A9                             l2201 01EF  
                           l2123 0437                             l2115 0419                             l2043 0624  
                           l2035 05FC                             l2027 05E5                             l2019 05BD  
                           l2051 00DA                             l2211 01F9                             l2203 01F1  
                           l2117 041D                             l2125 043B                             l2045 0073  
                           l2037 0618                             l2029 05F0                             l2061 00BC  
                           l2053 00E8                             l2133 01A2                             l2141 0472  
                           l2221 0207                             l2213 01FA                             l2205 01F3  
                           l2127 0441                             l2119 0422                             l2071 03B5  
                           l2047 0077                             l2039 061C                             l2063 00C4  
                           l2055 00EA                             l2135 01E0                             l2151 0485  
                           l2143 0478                             l2231 022C                             l2223 020C  
                           l2215 01FD                             l2207 01F4                             l2129 0462  
                           l2081 03D8                             l2073 03BE                             l2049 007C  
                           l2065 00C8                             l2057 00F4                             l2161 04AF  
                           l2153 049C                             l2145 047F                             l2233 0239  
                           l2225 0213                             l2217 01FF                             l2209 01F7  
                           l2091 03E5                             l2083 03DC                             l2075 03C6  
                           l1611 006E                             l2067 00CE                             l2059 00BB  
                           l2163 04B4                             l2155 04A3                             l2147 0484  
                           l2139 046D                             l2235 0246                             l2227 0220  
                           l2219 0200                             l2093 03E8                             l2077 03C8  
                           l2069 03B2                             l1613 005D                             l1621 008D  
                           l1701 015B                             l2181 04EB                             l2173 04D0  
                           l2157 04A7                             l2237 025A                             l2229 0225  
                           l1711 028B                             l1631 003A                             l2095 03EC  
                           l2079 03D0                             l1607 0067                             l1615 0060  
                           l1623 0092                             l1703 0160                             l2183 04F0  
                           l2175 04DA                             l2159 04AB                             l2191 052B  
                           l2239 026A                             l1721 02AD                             l1713 0296  
                           l1705 0274                             l1641 003A                             l2097 03EF  
                           l2089 03DE                             l1609 0067                             l1617 004C  
                           l1625 009D                             l1801 063F                             l2185 0517  
                           l2177 04E0                             l2169 04B6                             l2193 053F  
                           l1731 02DD                             l1723 02B8                             l1715 029A  
                           l1707 0276                             l1627 003F                             l2099 03FF  
                           l1619 0082                             l1803 0644                             l1811 0654  
                           l2187 051E                             l2179 04E7                             l1741 02FB  
                           l1733 02DE                             l1725 02BC                             l1717 02A2  
                           l1709 027A                             l1629 002F                             l1821 066A  
                           l1813 065C                             l1805 0649                             l2189 0522  
                           l2197 01E9                             l1671 00A8                             l1735 02E5  
                           l1727 02C3                             l1719 02AA                             l1911 0793  
                           l1903 076A                             l1823 066F                             l1831 067F  
                           l1815 0661                             l1807 0651                             l1751 0171  
                           l2199 01EC                             l1681 0045                             l1673 00AB  
                           l1729 02D5                             l1737 02EB                             l1921 07CA  
                           l1905 076F                             l1913 0797                             l1833 068F  
                           l1841 06A8                             l1825 0674                             l1817 0665  
                           l1809 0652                             l1761 0191                             l1753 0176  
                           l1745 0166                             l1683 0048                             l1675 00AD  
                           l1739 02F0                             l1691 0145                             l1923 07D0  
                           l1915 07A4                             l1907 0777                             l1851 06CE  
                           l1843 06AD                             l1835 069B                             l1827 067C  
                           l1819 0669                             l1763 0192                             l1755 017A  
                           l1747 0168                             l1771 00FA                             l1685 0049  
                           l1677 00B0                             l1669 00A5                             l1693 0149  
                           l1925 07D4                             l1917 07BF                             l1909 077B  
                           l1861 06F3                             l1853 06D6                             l1837 069F  
                           l1829 067D                             l1941 032E                             l1933 0305  
                           l1765 0197                             l1757 017E                             l1749 016E  
                           l1781 0110                             l1773 0100                             l1679 00B5  
                           l1687 0032                             l1695 014E                             l1927 07D6  
                           l1919 07C2                             l1871 0712                             l1863 06F7  
                           l1855 06DE                             l1847 06B6                             l1951 034E  
                           l1935 030A                             l1759 018D                             l1767 019D  
                           l1783 011A                             l1775 0103                             l1697 0153  
                           l1689 012F                             l1881 072E                             l1873 071A  
                           l1865 06F8                             l1857 06E0                             l1849 06C6  
                           l1793 0630                             l1961 0375                             l1953 0352  
                           l1945 0337                             l1937 030E                             l1785 011E  
                           l1777 0108                             l1699 0157                             l1883 0735  
                           l1891 0745                             l1859 06E5                             l1867 06FF  
                           l1875 071E                             l1795 0636                             l1971 03A6  
                           l1963 037F                             l1955 035A                             l1947 033C  
                           l1939 031E                             l1787 0123                             l1779 010C  
                           l1981 0550                             l1893 0749                             l1885 0739  
                           l1877 0724                             l1869 0711                             l1797 063A  
                           l1973 03A7                             l1965 0389                             l1957 0368  
                           l1949 0347                             l1789 0129                             l1991 0576  
                           l1983 0554                             l1895 074A                             l1887 073A  
                           l1879 072C                             l1799 063E                             l1967 039D  
                           l1959 0371                             l1977 0053                             l1993 057A  
                           l1985 0558                             l1897 074E                             l1889 0741  
                           l1969 03A2                             l1995 057E                             l1987 055C  
                           l1979 0544                             l1899 0762                             l1997 0585  
                           l1989 056F                             l1999 0589                             STR_1 0815  
                           STR_2 080A                             STR_3 0810                             STR_4 0819  
                           u1000 027A                             u1001 0279                             u1010 028B  
                           u1011 028A                             u1020 02AA                             u1100 016E  
                           u1021 02A9                             u1101 016D                             u1040 02BC  
                           u1120 017E                             u1200 011A                             u1041 02BB  
                           u1121 017D                             u1201 0119                             u1035 02AE  
                           u1115 0172                             u1060 02D5                             u1300 06AD  
                           u1140 018D                             u1220 0129                             u1061 02D4  
                           u1301 06AC                             u1141 018C                             u1221 0128  
                           u1205 0116                             u1310 06E5                             u1230 063E  
                           u1055 02BD                             u2007 00A1                             u1311 06E4  
                           u1231 063D                             u1135 017F                             u1215 011F  
                           u1080 02EB                             u1400 0739                             u1240 0644  
                           u1160 019D                             u1081 02EA                             u1065 02D1  
                           u2017 03D9                             u1401 0738                             u1241 0643  
                           u1161 019C                             u1145 0189                             u1090 02F0  
                           u1250 0649                             u1170 0100                             u1091 02EF  
                           u1075 02DF                             u2027 03E9                             u1251 0648  
                           u1155 0193                             u1171 00FF                             u1500 07BF  
                           u1420 0749                             u1340 06F7                             u1260 0669  
                           u2037 0400                             u1501 07BE                             u1421 0748  
                           u1341 06F6                             u1325 06E6                             u1261 0668  
                           _LATA 010C                             u1510 07D4                             u1430 074E  
                           u1270 066F                             u1190 0110                             _LATB 010D  
                           u2047 0413                             u1511 07D3                             u1431 074D  
                           u1415 073B                             u1335 06ED                             u1271 066E  
                           u1191 010F                             u1440 0762                             u1360 0711  
                           u1280 0674                             u1600 0375                             u1520 030A  
                           u2057 041A                             u1505 07BB                             u1441 0761  
                           u1361 0710                             u1281 0673                             u1601 0374  
                           u1521 0309                             u1185 0104                             u1450 0769  
                           u1370 0724                             u1290 068F                             u1610 037B  
                           u1530 030E                             u1451 0768                             u1371 0723  
                           u1355 06F9                             u1291 068E                             u1611 037A  
                           u1531 030D                             u1460 076F                             u1380 072C  
                           u1620 037F                             u1540 032E                             u1461 076E  
                           u1381 072B                             u1365 070D                             u1621 037E  
                           u1541 032D                             u1710 040E                             u1470 077B  
                           u1630 0393                             u1711 040D                             u1471 077A  
                           u1720 0427                             u1480 0789                             u1640 03A2  
                           u1560 034D                             u1800 053F                             u1721 0426  
                           u1705 03DF                             u1641 03A1                             u1561 034C  
                           u1801 053E                             u1730 0441                             u1490 07A4  
                           u1650 03A6                             u1731 0440                             u1491 07A3  
                           u1395 072F                             u1651 03A5                             u1635 038F  
                           u1555 0341                             u1660 00E8                             u1580 0367  
                           u1740 0478                             u1661 00E7                             u1485 0785  
                           u1581 0366                             u1741 0477                             u1670 00D7  
                           u1750 04AB                             u1671 00D6                             u1495 07A0  
                           u1575 035B                             u1751 04AA                             u1680 03D0  
                           u1760 04CF                             u1681 03CF                             u1761 04CE  
                           u1690 03D8                             u1770 04DA                             u1691 03D7  
                           u1907 0583                             u1595 036B                             u1771 04D9  
                           u1780 04E0                             u1917 0592                             u1781 04DF  
                           u1765 04CB                             u1790 052B                             u1927 05A2  
                           u1791 052A                             u1937 05BE                             u1857 0219  
                           u1947 05DA                             u1867 0154                             u1957 05EC  
                           u1877 0549                             u1967 05FD                             u1887 055F  
                           u1977 0619                             u1897 0572                             u1987 062B  
                           u1997 007D                             _WPUA 020C                             _WPUB 020D  
                ??_lcd_backlight 0072                             _main 01E9                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           start 0002                  ___fldiv@new_exp 0025   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 004C                  __end_of___aldiv 0304                            ?_main 0070  
                __end_of___fldiv 07E4                  __end_of___lwdiv 01A2                  __end_of___lwmod 012E  
                          _TRISA 008C                            _TRISB 008D           scale_convert_gram@temp 0035  
                   lcd_print@cmd 007B                     lcd_print@str 0078                  __end_of_lcd_cmd 00A5  
                __end_of_command 0166                  __end_of_dpowers 080A                   _WDT_Initialize 0032  
                          status 0003               _scale_convert_gram 01A2                            wtemp0 007E  
                __end_of_sprintf 0544       __size_of_set_CELL_CLK_HIGH 0003                  ??_get_scale_val 0079  
                __initialization 07E4              ?_scale_convert_gram 002D                     __end_of_main 0274  
                  command@lownib 0077                 __end_of_i2c_wait 0073                 __end_of_i2c_stop 0053  
                         ??_main 0039           __end_of_WDT_Initialize 0036             ??_scale_convert_gram 0031  
                         _ANSELA 018C                           _ANSELB 018D                           _BORCON 0116  
                         _OSCCON 0099                           _WDTCON 0097               __size_of_i2c_start 000A  
               __end_of___xxtofl 03B0               __size_of_i2c_write 0010          scale_convert_gram@count 002D  
       __end_of_get_CELL_DAT_VAL 003F                 __end_of_lcd_init 0630                        ??___aldiv 0078  
                      ??___fldiv 0078                        ??___lwdiv 0074                        ??___lwmod 007C  
                      ??_lcd_cmd 0071                        ??_command 0073                  ?_WDT_Initialize 0070  
                      ??_sprintf 0026                     ___xxtofl@arg 007A                     ___xxtofl@exp 0079  
              _SYSTEM_Initialize 0053                     ___xxtofl@val 0070          __end_of__initialization 07FD  
             ?_SYSTEM_Initialize 0070        __size_of_set_CELL_CLK_LOW 0006                   command@highnib 0076  
                 __pcstackCOMMON 0070                     __pidataBANK0 0036              ??_SYSTEM_Initialize 0070  
                 get_scale_val@i 0034                   get_scale_val@j 002E                   get_scale_val@n 002F  
              __end_of_i2c_start 0067                 ??_lcd_set_cursor 0079                __end_of_i2c_write 0091  
                 _OPTION_REGbits 0095               __size_of_lcd_print 001D        __end_of_SYSTEM_Initialize 005D  
                     __pbssBANK0 004F                        ?_i2c_wait 0070                        ?_i2c_stop 0070  
                     __pmaintext 01E9                          _APFCON0 011D                          _APFCON1 011E  
                      ?___xxtofl 0070                          _OSCTUNE 0098                          _SSP2ADD 021A  
                        _SSP2BUF 0219                        ?_lcd_init 0070                       ??_i2c_wait 0070  
                     ??_i2c_stop 0070            __end_of_lcd_backlight 0081                          ___aldiv 0274  
              __end_of_lcd_print 00D8                          ___fldiv 0630                          ___lwdiv 0166  
                        ___lwmod 00FA                          __ptext1 046B                          __ptext2 00FA  
                        __ptext3 0166                          __ptext4 01A2                          __ptext5 0304  
                        __ptext6 0630                          __ptext7 00D8                          __ptext8 00BB  
                        __ptext9 012E                          _lcd_cmd 0091                          _command 012E  
                        _dpowers 0800            _OSCILLATOR_Initialize 0045                       ??___xxtofl 0074  
               ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070       __size_of_SYSTEM_Initialize 000A  
                        _sprintf 046B                       ??_lcd_init 0072                          main@str 003B  
           end_of_initialization 07FD            __end_of_get_scale_val 046B                 _set_CELL_CLK_LOW 003F  
              ?_get_CELL_DAT_VAL 0070                 ___aldiv@quotient 0022               ??_get_CELL_DAT_VAL 0070  
               ??_WDT_Initialize 0070                        _PORTAbits 000C                       _weight_dat 0053  
                  i2c_write@data 0070        lcd_set_cursor@row_offsets 0020                    ___xxtofl@sign 0078  
                     lcd_cmd@cmd 0071      __size_of_scale_convert_gram 0047                      ___fldiv@grs 0027  
                    ___fldiv@rem 0020                       command@val 0075           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07E4  __size_of_PIN_MANAGER_Initialize 0016                        _i2c_start 005D  
                      _i2c_write 0081                __size_of_i2c_wait 000C                __size_of_i2c_stop 0007  
        get_scale_val@weight_add 002A                      __pdataBANK0 0058                        ___fldiv@a 0070  
                      ___fldiv@b 0074              lcd_set_cursor@F2395 0058                        ___latbits 0001  
                  __pcstackBANK0 0020                       ?_i2c_start 0070                       ?_i2c_write 0070  
              __size_of___xxtofl 00AC                __size_of_lcd_init 00EC                      sprintf@flag 002B  
                    sprintf@prec 002C                 ___lwdiv@dividend 0072           _PIN_MANAGER_Initialize 00A5  
                       ?___aldiv 0070                         ?___fldiv 0070                         ?___lwdiv 0070  
                       ?___lwmod 0078                        _lcd_print 00BB                         ?_lcd_cmd 0070  
                       ?_command 0072         __end_of_set_CELL_CLK_LOW 0045                 ___lwdiv@quotient 0075  
                       ?_sprintf 0020          __size_of_lcd_set_cursor 0022                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _SSP2CON1 021D                         _SSP2CON2 021E  
                       _SSP2STAT 021C                       ?_lcd_print 0078        __size_of_get_CELL_DAT_VAL 0005  
         __size_of_lcd_backlight 000E                      ??_i2c_start 0070                      ??_i2c_write 0070  
                       _i2c_wait 0067                         _i2c_stop 004C          ??_OSCILLATOR_Initialize 0070  
               __size_of___aldiv 0090                 __size_of___fldiv 01B4                 __size_of___lwdiv 003C  
               __size_of___lwmod 0034                 __size_of_lcd_cmd 0014                 __size_of_command 0038  
     __end_of_scale_convert_gram 01E9                       sprintf@val 002D                         ___xxtofl 0304  
                ___lwdiv@divisor 0070                  ___lwdiv@counter 0077           __size_of_get_scale_val 00BB  
                       __ptext10 0544                         __ptext11 0073                         __ptext20 003A  
                       __ptext12 0091                         __ptext21 0274                         __ptext13 0081  
                       __ptext22 0053                         __ptext14 004C                         __ptext23 0032  
                       __ptext15 005D                         __ptext24 00A5                         __ptext16 0067  
                       __ptext25 0045                         __ptext17 03B0                         __ptext18 003F  
                       __ptext19 002F                         _lcd_init 0544                     _SSP2CON1bits 021D  
                   _SSP2CON2bits 021E                 __size_of_sprintf 00D9                    __size_of_main 008B  
                  _lcd_backlight 0073                     _SSP2STATbits 021C                      ??_lcd_print 007A  
                main@weight_gram 004B          __size_of_WDT_Initialize 0004                   _lcd_set_cursor 00D8  
              lcd_set_cursor@cmd 0025                lcd_set_cursor@col 0024                        sprintf@ap 002A  
                      sprintf@sp 002F                lcd_set_cursor@row 0078                 ___lwmod@dividend 007A  
        ?_PIN_MANAGER_Initialize 0070                   ?_lcd_backlight 0070                _set_CELL_CLK_HIGH 002F  
                  _get_scale_val 03B0               ?_set_CELL_CLK_HIGH 0070                    __pstringtext1 0800  
                  __pstringtext2 0810                    __pstringtext3 0815                    __pstringtext4 0819  
                  __pstringtext5 0000              ??_set_CELL_CLK_HIGH 0070                         sprintf@c 0030  
                       sprintf@f 0020                  ___lwmod@divisor 0078                  ___lwmod@counter 007D  
               _get_CELL_DAT_VAL 003A                     ___aldiv@sign 0021                ?_set_CELL_CLK_LOW 0070  
         __end_of_lcd_set_cursor 00FA                      _weight_zero 004F               ??_set_CELL_CLK_LOW 0070  
 __end_of_PIN_MANAGER_Initialize 00BB        __end_of_set_CELL_CLK_HIGH 0032                   ?_get_scale_val 0026  
                  __backlightval 0057  



Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Oct 31 01:19:16 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F1827 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0115                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  0118                     	;# 
   135  0119                     	;# 
   136  011A                     	;# 
   137  011B                     	;# 
   138  011D                     	;# 
   139  011E                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0191                     	;# 
   143  0191                     	;# 
   144  0192                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0193                     	;# 
   148  0194                     	;# 
   149  0195                     	;# 
   150  0196                     	;# 
   151  0199                     	;# 
   152  019A                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019C                     	;# 
   158  019C                     	;# 
   159  019D                     	;# 
   160  019E                     	;# 
   161  019F                     	;# 
   162  020C                     	;# 
   163  020D                     	;# 
   164  0211                     	;# 
   165  0211                     	;# 
   166  0212                     	;# 
   167  0212                     	;# 
   168  0213                     	;# 
   169  0213                     	;# 
   170  0214                     	;# 
   171  0214                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0216                     	;# 
   176  0216                     	;# 
   177  0217                     	;# 
   178  0217                     	;# 
   179  0219                     	;# 
   180  021A                     	;# 
   181  021B                     	;# 
   182  021C                     	;# 
   183  021D                     	;# 
   184  021E                     	;# 
   185  021F                     	;# 
   186  0291                     	;# 
   187  0291                     	;# 
   188  0292                     	;# 
   189  0293                     	;# 
   190  0294                     	;# 
   191  0295                     	;# 
   192  0295                     	;# 
   193  0296                     	;# 
   194  0298                     	;# 
   195  0298                     	;# 
   196  0299                     	;# 
   197  029A                     	;# 
   198  029B                     	;# 
   199  029C                     	;# 
   200  029C                     	;# 
   201  029D                     	;# 
   202  029E                     	;# 
   203  029E                     	;# 
   204  0311                     	;# 
   205  0311                     	;# 
   206  0312                     	;# 
   207  0313                     	;# 
   208  0318                     	;# 
   209  0318                     	;# 
   210  0319                     	;# 
   211  031A                     	;# 
   212  0394                     	;# 
   213  0395                     	;# 
   214  0396                     	;# 
   215  039A                     	;# 
   216  039C                     	;# 
   217  039D                     	;# 
   218  039E                     	;# 
   219  039F                     	;# 
   220  0415                     	;# 
   221  0416                     	;# 
   222  0417                     	;# 
   223  041C                     	;# 
   224  041D                     	;# 
   225  041E                     	;# 
   226  0FE4                     	;# 
   227  0FE5                     	;# 
   228  0FE6                     	;# 
   229  0FE7                     	;# 
   230  0FE8                     	;# 
   231  0FE9                     	;# 
   232  0FEA                     	;# 
   233  0FEB                     	;# 
   234  0FED                     	;# 
   235  0FEE                     	;# 
   236  0FEF                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  0111                     	;# 
   286  0112                     	;# 
   287  0113                     	;# 
   288  0114                     	;# 
   289  0115                     	;# 
   290  0116                     	;# 
   291  0117                     	;# 
   292  0118                     	;# 
   293  0119                     	;# 
   294  011A                     	;# 
   295  011B                     	;# 
   296  011D                     	;# 
   297  011E                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0191                     	;# 
   301  0191                     	;# 
   302  0192                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0193                     	;# 
   306  0194                     	;# 
   307  0195                     	;# 
   308  0196                     	;# 
   309  0199                     	;# 
   310  019A                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019B                     	;# 
   314  019B                     	;# 
   315  019C                     	;# 
   316  019C                     	;# 
   317  019D                     	;# 
   318  019E                     	;# 
   319  019F                     	;# 
   320  020C                     	;# 
   321  020D                     	;# 
   322  0211                     	;# 
   323  0211                     	;# 
   324  0212                     	;# 
   325  0212                     	;# 
   326  0213                     	;# 
   327  0213                     	;# 
   328  0214                     	;# 
   329  0214                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0216                     	;# 
   334  0216                     	;# 
   335  0217                     	;# 
   336  0217                     	;# 
   337  0219                     	;# 
   338  021A                     	;# 
   339  021B                     	;# 
   340  021C                     	;# 
   341  021D                     	;# 
   342  021E                     	;# 
   343  021F                     	;# 
   344  0291                     	;# 
   345  0291                     	;# 
   346  0292                     	;# 
   347  0293                     	;# 
   348  0294                     	;# 
   349  0295                     	;# 
   350  0295                     	;# 
   351  0296                     	;# 
   352  0298                     	;# 
   353  0298                     	;# 
   354  0299                     	;# 
   355  029A                     	;# 
   356  029B                     	;# 
   357  029C                     	;# 
   358  029C                     	;# 
   359  029D                     	;# 
   360  029E                     	;# 
   361  029E                     	;# 
   362  0311                     	;# 
   363  0311                     	;# 
   364  0312                     	;# 
   365  0313                     	;# 
   366  0318                     	;# 
   367  0318                     	;# 
   368  0319                     	;# 
   369  031A                     	;# 
   370  0394                     	;# 
   371  0395                     	;# 
   372  0396                     	;# 
   373  039A                     	;# 
   374  039C                     	;# 
   375  039D                     	;# 
   376  039E                     	;# 
   377  039F                     	;# 
   378  0415                     	;# 
   379  0416                     	;# 
   380  0417                     	;# 
   381  041C                     	;# 
   382  041D                     	;# 
   383  041E                     	;# 
   384  0FE4                     	;# 
   385  0FE5                     	;# 
   386  0FE6                     	;# 
   387  0FE7                     	;# 
   388  0FE8                     	;# 
   389  0FE9                     	;# 
   390  0FEA                     	;# 
   391  0FEB                     	;# 
   392  0FED                     	;# 
   393  0FEE                     	;# 
   394  0FEF                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000D                     	;# 
   409  0011                     	;# 
   410  0012                     	;# 
   411  0013                     	;# 
   412  0014                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  010C                     	;# 
   442  010D                     	;# 
   443  0111                     	;# 
   444  0112                     	;# 
   445  0113                     	;# 
   446  0114                     	;# 
   447  0115                     	;# 
   448  0116                     	;# 
   449  0117                     	;# 
   450  0118                     	;# 
   451  0119                     	;# 
   452  011A                     	;# 
   453  011B                     	;# 
   454  011D                     	;# 
   455  011E                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  0191                     	;# 
   459  0191                     	;# 
   460  0192                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0194                     	;# 
   465  0195                     	;# 
   466  0196                     	;# 
   467  0199                     	;# 
   468  019A                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019C                     	;# 
   474  019C                     	;# 
   475  019D                     	;# 
   476  019E                     	;# 
   477  019F                     	;# 
   478  020C                     	;# 
   479  020D                     	;# 
   480  0211                     	;# 
   481  0211                     	;# 
   482  0212                     	;# 
   483  0212                     	;# 
   484  0213                     	;# 
   485  0213                     	;# 
   486  0214                     	;# 
   487  0214                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0216                     	;# 
   492  0216                     	;# 
   493  0217                     	;# 
   494  0217                     	;# 
   495  0219                     	;# 
   496  021A                     	;# 
   497  021B                     	;# 
   498  021C                     	;# 
   499  021D                     	;# 
   500  021E                     	;# 
   501  021F                     	;# 
   502  0291                     	;# 
   503  0291                     	;# 
   504  0292                     	;# 
   505  0293                     	;# 
   506  0294                     	;# 
   507  0295                     	;# 
   508  0295                     	;# 
   509  0296                     	;# 
   510  0298                     	;# 
   511  0298                     	;# 
   512  0299                     	;# 
   513  029A                     	;# 
   514  029B                     	;# 
   515  029C                     	;# 
   516  029C                     	;# 
   517  029D                     	;# 
   518  029E                     	;# 
   519  029E                     	;# 
   520  0311                     	;# 
   521  0311                     	;# 
   522  0312                     	;# 
   523  0313                     	;# 
   524  0318                     	;# 
   525  0318                     	;# 
   526  0319                     	;# 
   527  031A                     	;# 
   528  0394                     	;# 
   529  0395                     	;# 
   530  0396                     	;# 
   531  039A                     	;# 
   532  039C                     	;# 
   533  039D                     	;# 
   534  039E                     	;# 
   535  039F                     	;# 
   536  0415                     	;# 
   537  0416                     	;# 
   538  0417                     	;# 
   539  041C                     	;# 
   540  041D                     	;# 
   541  041E                     	;# 
   542  0FE4                     	;# 
   543  0FE5                     	;# 
   544  0FE6                     	;# 
   545  0FE7                     	;# 
   546  0FE8                     	;# 
   547  0FE9                     	;# 
   548  0FEA                     	;# 
   549  0FEB                     	;# 
   550  0FED                     	;# 
   551  0FEE                     	;# 
   552  0FEF                     	;# 
   553  0000                     	;# 
   554  0001                     	;# 
   555  0002                     	;# 
   556  0003                     	;# 
   557  0004                     	;# 
   558  0005                     	;# 
   559  0006                     	;# 
   560  0007                     	;# 
   561  0008                     	;# 
   562  0009                     	;# 
   563  000A                     	;# 
   564  000B                     	;# 
   565  000C                     	;# 
   566  000D                     	;# 
   567  0011                     	;# 
   568  0012                     	;# 
   569  0013                     	;# 
   570  0014                     	;# 
   571  0015                     	;# 
   572  0016                     	;# 
   573  0016                     	;# 
   574  0017                     	;# 
   575  0018                     	;# 
   576  0019                     	;# 
   577  001A                     	;# 
   578  001B                     	;# 
   579  001C                     	;# 
   580  001E                     	;# 
   581  001F                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  0091                     	;# 
   585  0092                     	;# 
   586  0093                     	;# 
   587  0094                     	;# 
   588  0095                     	;# 
   589  0096                     	;# 
   590  0097                     	;# 
   591  0098                     	;# 
   592  0099                     	;# 
   593  009A                     	;# 
   594  009B                     	;# 
   595  009B                     	;# 
   596  009C                     	;# 
   597  009D                     	;# 
   598  009E                     	;# 
   599  010C                     	;# 
   600  010D                     	;# 
   601  0111                     	;# 
   602  0112                     	;# 
   603  0113                     	;# 
   604  0114                     	;# 
   605  0115                     	;# 
   606  0116                     	;# 
   607  0117                     	;# 
   608  0118                     	;# 
   609  0119                     	;# 
   610  011A                     	;# 
   611  011B                     	;# 
   612  011D                     	;# 
   613  011E                     	;# 
   614  018C                     	;# 
   615  018D                     	;# 
   616  0191                     	;# 
   617  0191                     	;# 
   618  0192                     	;# 
   619  0193                     	;# 
   620  0193                     	;# 
   621  0193                     	;# 
   622  0194                     	;# 
   623  0195                     	;# 
   624  0196                     	;# 
   625  0199                     	;# 
   626  019A                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019C                     	;# 
   632  019C                     	;# 
   633  019D                     	;# 
   634  019E                     	;# 
   635  019F                     	;# 
   636  020C                     	;# 
   637  020D                     	;# 
   638  0211                     	;# 
   639  0211                     	;# 
   640  0212                     	;# 
   641  0212                     	;# 
   642  0213                     	;# 
   643  0213                     	;# 
   644  0214                     	;# 
   645  0214                     	;# 
   646  0215                     	;# 
   647  0215                     	;# 
   648  0215                     	;# 
   649  0216                     	;# 
   650  0216                     	;# 
   651  0217                     	;# 
   652  0217                     	;# 
   653  0219                     	;# 
   654  021A                     	;# 
   655  021B                     	;# 
   656  021C                     	;# 
   657  021D                     	;# 
   658  021E                     	;# 
   659  021F                     	;# 
   660  0291                     	;# 
   661  0291                     	;# 
   662  0292                     	;# 
   663  0293                     	;# 
   664  0294                     	;# 
   665  0295                     	;# 
   666  0295                     	;# 
   667  0296                     	;# 
   668  0298                     	;# 
   669  0298                     	;# 
   670  0299                     	;# 
   671  029A                     	;# 
   672  029B                     	;# 
   673  029C                     	;# 
   674  029C                     	;# 
   675  029D                     	;# 
   676  029E                     	;# 
   677  029E                     	;# 
   678  0311                     	;# 
   679  0311                     	;# 
   680  0312                     	;# 
   681  0313                     	;# 
   682  0318                     	;# 
   683  0318                     	;# 
   684  0319                     	;# 
   685  031A                     	;# 
   686  0394                     	;# 
   687  0395                     	;# 
   688  0396                     	;# 
   689  039A                     	;# 
   690  039C                     	;# 
   691  039D                     	;# 
   692  039E                     	;# 
   693  039F                     	;# 
   694  0415                     	;# 
   695  0416                     	;# 
   696  0417                     	;# 
   697  041C                     	;# 
   698  041D                     	;# 
   699  041E                     	;# 
   700  0FE4                     	;# 
   701  0FE5                     	;# 
   702  0FE6                     	;# 
   703  0FE7                     	;# 
   704  0FE8                     	;# 
   705  0FE9                     	;# 
   706  0FEA                     	;# 
   707  0FEB                     	;# 
   708  0FED                     	;# 
   709  0FEE                     	;# 
   710  0FEF                     	;# 
   711  0000                     	;# 
   712  0001                     	;# 
   713  0002                     	;# 
   714  0003                     	;# 
   715  0004                     	;# 
   716  0005                     	;# 
   717  0006                     	;# 
   718  0007                     	;# 
   719  0008                     	;# 
   720  0009                     	;# 
   721  000A                     	;# 
   722  000B                     	;# 
   723  000C                     	;# 
   724  000D                     	;# 
   725  0011                     	;# 
   726  0012                     	;# 
   727  0013                     	;# 
   728  0014                     	;# 
   729  0015                     	;# 
   730  0016                     	;# 
   731  0016                     	;# 
   732  0017                     	;# 
   733  0018                     	;# 
   734  0019                     	;# 
   735  001A                     	;# 
   736  001B                     	;# 
   737  001C                     	;# 
   738  001E                     	;# 
   739  001F                     	;# 
   740  008C                     	;# 
   741  008D                     	;# 
   742  0091                     	;# 
   743  0092                     	;# 
   744  0093                     	;# 
   745  0094                     	;# 
   746  0095                     	;# 
   747  0096                     	;# 
   748  0097                     	;# 
   749  0098                     	;# 
   750  0099                     	;# 
   751  009A                     	;# 
   752  009B                     	;# 
   753  009B                     	;# 
   754  009C                     	;# 
   755  009D                     	;# 
   756  009E                     	;# 
   757  010C                     	;# 
   758  010D                     	;# 
   759  0111                     	;# 
   760  0112                     	;# 
   761  0113                     	;# 
   762  0114                     	;# 
   763  0115                     	;# 
   764  0116                     	;# 
   765  0117                     	;# 
   766  0118                     	;# 
   767  0119                     	;# 
   768  011A                     	;# 
   769  011B                     	;# 
   770  011D                     	;# 
   771  011E                     	;# 
   772  018C                     	;# 
   773  018D                     	;# 
   774  0191                     	;# 
   775  0191                     	;# 
   776  0192                     	;# 
   777  0193                     	;# 
   778  0193                     	;# 
   779  0193                     	;# 
   780  0194                     	;# 
   781  0195                     	;# 
   782  0196                     	;# 
   783  0199                     	;# 
   784  019A                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019C                     	;# 
   790  019C                     	;# 
   791  019D                     	;# 
   792  019E                     	;# 
   793  019F                     	;# 
   794  020C                     	;# 
   795  020D                     	;# 
   796  0211                     	;# 
   797  0211                     	;# 
   798  0212                     	;# 
   799  0212                     	;# 
   800  0213                     	;# 
   801  0213                     	;# 
   802  0214                     	;# 
   803  0214                     	;# 
   804  0215                     	;# 
   805  0215                     	;# 
   806  0215                     	;# 
   807  0216                     	;# 
   808  0216                     	;# 
   809  0217                     	;# 
   810  0217                     	;# 
   811  0219                     	;# 
   812  021A                     	;# 
   813  021B                     	;# 
   814  021C                     	;# 
   815  021D                     	;# 
   816  021E                     	;# 
   817  021F                     	;# 
   818  0291                     	;# 
   819  0291                     	;# 
   820  0292                     	;# 
   821  0293                     	;# 
   822  0294                     	;# 
   823  0295                     	;# 
   824  0295                     	;# 
   825  0296                     	;# 
   826  0298                     	;# 
   827  0298                     	;# 
   828  0299                     	;# 
   829  029A                     	;# 
   830  029B                     	;# 
   831  029C                     	;# 
   832  029C                     	;# 
   833  029D                     	;# 
   834  029E                     	;# 
   835  029E                     	;# 
   836  0311                     	;# 
   837  0311                     	;# 
   838  0312                     	;# 
   839  0313                     	;# 
   840  0318                     	;# 
   841  0318                     	;# 
   842  0319                     	;# 
   843  031A                     	;# 
   844  0394                     	;# 
   845  0395                     	;# 
   846  0396                     	;# 
   847  039A                     	;# 
   848  039C                     	;# 
   849  039D                     	;# 
   850  039E                     	;# 
   851  039F                     	;# 
   852  0415                     	;# 
   853  0416                     	;# 
   854  0417                     	;# 
   855  041C                     	;# 
   856  041D                     	;# 
   857  041E                     	;# 
   858  0FE4                     	;# 
   859  0FE5                     	;# 
   860  0FE6                     	;# 
   861  0FE7                     	;# 
   862  0FE8                     	;# 
   863  0FE9                     	;# 
   864  0FEA                     	;# 
   865  0FEB                     	;# 
   866  0FED                     	;# 
   867  0FEE                     	;# 
   868  0FEF                     	;# 
   869  0000                     	;# 
   870  0001                     	;# 
   871  0002                     	;# 
   872  0003                     	;# 
   873  0004                     	;# 
   874  0005                     	;# 
   875  0006                     	;# 
   876  0007                     	;# 
   877  0008                     	;# 
   878  0009                     	;# 
   879  000A                     	;# 
   880  000B                     	;# 
   881  000C                     	;# 
   882  000D                     	;# 
   883  0011                     	;# 
   884  0012                     	;# 
   885  0013                     	;# 
   886  0014                     	;# 
   887  0015                     	;# 
   888  0016                     	;# 
   889  0016                     	;# 
   890  0017                     	;# 
   891  0018                     	;# 
   892  0019                     	;# 
   893  001A                     	;# 
   894  001B                     	;# 
   895  001C                     	;# 
   896  001E                     	;# 
   897  001F                     	;# 
   898  008C                     	;# 
   899  008D                     	;# 
   900  0091                     	;# 
   901  0092                     	;# 
   902  0093                     	;# 
   903  0094                     	;# 
   904  0095                     	;# 
   905  0096                     	;# 
   906  0097                     	;# 
   907  0098                     	;# 
   908  0099                     	;# 
   909  009A                     	;# 
   910  009B                     	;# 
   911  009B                     	;# 
   912  009C                     	;# 
   913  009D                     	;# 
   914  009E                     	;# 
   915  010C                     	;# 
   916  010D                     	;# 
   917  0111                     	;# 
   918  0112                     	;# 
   919  0113                     	;# 
   920  0114                     	;# 
   921  0115                     	;# 
   922  0116                     	;# 
   923  0117                     	;# 
   924  0118                     	;# 
   925  0119                     	;# 
   926  011A                     	;# 
   927  011B                     	;# 
   928  011D                     	;# 
   929  011E                     	;# 
   930  018C                     	;# 
   931  018D                     	;# 
   932  0191                     	;# 
   933  0191                     	;# 
   934  0192                     	;# 
   935  0193                     	;# 
   936  0193                     	;# 
   937  0193                     	;# 
   938  0194                     	;# 
   939  0195                     	;# 
   940  0196                     	;# 
   941  0199                     	;# 
   942  019A                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019D                     	;# 
   950  019E                     	;# 
   951  019F                     	;# 
   952  020C                     	;# 
   953  020D                     	;# 
   954  0211                     	;# 
   955  0211                     	;# 
   956  0212                     	;# 
   957  0212                     	;# 
   958  0213                     	;# 
   959  0213                     	;# 
   960  0214                     	;# 
   961  0214                     	;# 
   962  0215                     	;# 
   963  0215                     	;# 
   964  0215                     	;# 
   965  0216                     	;# 
   966  0216                     	;# 
   967  0217                     	;# 
   968  0217                     	;# 
   969  0219                     	;# 
   970  021A                     	;# 
   971  021B                     	;# 
   972  021C                     	;# 
   973  021D                     	;# 
   974  021E                     	;# 
   975  021F                     	;# 
   976  0291                     	;# 
   977  0291                     	;# 
   978  0292                     	;# 
   979  0293                     	;# 
   980  0294                     	;# 
   981  0295                     	;# 
   982  0295                     	;# 
   983  0296                     	;# 
   984  0298                     	;# 
   985  0298                     	;# 
   986  0299                     	;# 
   987  029A                     	;# 
   988  029B                     	;# 
   989  029C                     	;# 
   990  029C                     	;# 
   991  029D                     	;# 
   992  029E                     	;# 
   993  029E                     	;# 
   994  0311                     	;# 
   995  0311                     	;# 
   996  0312                     	;# 
   997  0313                     	;# 
   998  0318                     	;# 
   999  0318                     	;# 
  1000  0319                     	;# 
  1001  031A                     	;# 
  1002  0394                     	;# 
  1003  0395                     	;# 
  1004  0396                     	;# 
  1005  039A                     	;# 
  1006  039C                     	;# 
  1007  039D                     	;# 
  1008  039E                     	;# 
  1009  039F                     	;# 
  1010  0415                     	;# 
  1011  0416                     	;# 
  1012  0417                     	;# 
  1013  041C                     	;# 
  1014  041D                     	;# 
  1015  041E                     	;# 
  1016  0FE4                     	;# 
  1017  0FE5                     	;# 
  1018  0FE6                     	;# 
  1019  0FE7                     	;# 
  1020  0FE8                     	;# 
  1021  0FE9                     	;# 
  1022  0FEA                     	;# 
  1023  0FEB                     	;# 
  1024  0FED                     	;# 
  1025  0FEE                     	;# 
  1026  0FEF                     	;# 
  1027  0000                     	;# 
  1028  0001                     	;# 
  1029  0002                     	;# 
  1030  0003                     	;# 
  1031  0004                     	;# 
  1032  0005                     	;# 
  1033  0006                     	;# 
  1034  0007                     	;# 
  1035  0008                     	;# 
  1036  0009                     	;# 
  1037  000A                     	;# 
  1038  000B                     	;# 
  1039  000C                     	;# 
  1040  000D                     	;# 
  1041  0011                     	;# 
  1042  0012                     	;# 
  1043  0013                     	;# 
  1044  0014                     	;# 
  1045  0015                     	;# 
  1046  0016                     	;# 
  1047  0016                     	;# 
  1048  0017                     	;# 
  1049  0018                     	;# 
  1050  0019                     	;# 
  1051  001A                     	;# 
  1052  001B                     	;# 
  1053  001C                     	;# 
  1054  001E                     	;# 
  1055  001F                     	;# 
  1056  008C                     	;# 
  1057  008D                     	;# 
  1058  0091                     	;# 
  1059  0092                     	;# 
  1060  0093                     	;# 
  1061  0094                     	;# 
  1062  0095                     	;# 
  1063  0096                     	;# 
  1064  0097                     	;# 
  1065  0098                     	;# 
  1066  0099                     	;# 
  1067  009A                     	;# 
  1068  009B                     	;# 
  1069  009B                     	;# 
  1070  009C                     	;# 
  1071  009D                     	;# 
  1072  009E                     	;# 
  1073  010C                     	;# 
  1074  010D                     	;# 
  1075  0111                     	;# 
  1076  0112                     	;# 
  1077  0113                     	;# 
  1078  0114                     	;# 
  1079  0115                     	;# 
  1080  0116                     	;# 
  1081  0117                     	;# 
  1082  0118                     	;# 
  1083  0119                     	;# 
  1084  011A                     	;# 
  1085  011B                     	;# 
  1086  011D                     	;# 
  1087  011E                     	;# 
  1088  018C                     	;# 
  1089  018D                     	;# 
  1090  0191                     	;# 
  1091  0191                     	;# 
  1092  0192                     	;# 
  1093  0193                     	;# 
  1094  0193                     	;# 
  1095  0193                     	;# 
  1096  0194                     	;# 
  1097  0195                     	;# 
  1098  0196                     	;# 
  1099  0199                     	;# 
  1100  019A                     	;# 
  1101  019B                     	;# 
  1102  019B                     	;# 
  1103  019B                     	;# 
  1104  019B                     	;# 
  1105  019C                     	;# 
  1106  019C                     	;# 
  1107  019D                     	;# 
  1108  019E                     	;# 
  1109  019F                     	;# 
  1110  020C                     	;# 
  1111  020D                     	;# 
  1112  0211                     	;# 
  1113  0211                     	;# 
  1114  0212                     	;# 
  1115  0212                     	;# 
  1116  0213                     	;# 
  1117  0213                     	;# 
  1118  0214                     	;# 
  1119  0214                     	;# 
  1120  0215                     	;# 
  1121  0215                     	;# 
  1122  0215                     	;# 
  1123  0216                     	;# 
  1124  0216                     	;# 
  1125  0217                     	;# 
  1126  0217                     	;# 
  1127  0219                     	;# 
  1128  021A                     	;# 
  1129  021B                     	;# 
  1130  021C                     	;# 
  1131  021D                     	;# 
  1132  021E                     	;# 
  1133  021F                     	;# 
  1134  0291                     	;# 
  1135  0291                     	;# 
  1136  0292                     	;# 
  1137  0293                     	;# 
  1138  0294                     	;# 
  1139  0295                     	;# 
  1140  0295                     	;# 
  1141  0296                     	;# 
  1142  0298                     	;# 
  1143  0298                     	;# 
  1144  0299                     	;# 
  1145  029A                     	;# 
  1146  029B                     	;# 
  1147  029C                     	;# 
  1148  029C                     	;# 
  1149  029D                     	;# 
  1150  029E                     	;# 
  1151  029E                     	;# 
  1152  0311                     	;# 
  1153  0311                     	;# 
  1154  0312                     	;# 
  1155  0313                     	;# 
  1156  0318                     	;# 
  1157  0318                     	;# 
  1158  0319                     	;# 
  1159  031A                     	;# 
  1160  0394                     	;# 
  1161  0395                     	;# 
  1162  0396                     	;# 
  1163  039A                     	;# 
  1164  039C                     	;# 
  1165  039D                     	;# 
  1166  039E                     	;# 
  1167  039F                     	;# 
  1168  0415                     	;# 
  1169  0416                     	;# 
  1170  0417                     	;# 
  1171  041C                     	;# 
  1172  041D                     	;# 
  1173  041E                     	;# 
  1174  0FE4                     	;# 
  1175  0FE5                     	;# 
  1176  0FE6                     	;# 
  1177  0FE7                     	;# 
  1178  0FE8                     	;# 
  1179  0FE9                     	;# 
  1180  0FEA                     	;# 
  1181  0FEB                     	;# 
  1182  0FED                     	;# 
  1183  0FEE                     	;# 
  1184  0FEF                     	;# 
  1185                           
  1186                           	psect	idataBANK0
  1187  017C                     __pidataBANK0:
  1188                           
  1189                           ;initializer for lcd_set_cursor@F2395
  1190  017C  3400               	retlw	0
  1191  017D  3440               	retlw	64
  1192  017E  3414               	retlw	20
  1193  017F  3454               	retlw	84
  1194                           
  1195                           	psect	stringtext1
  1196  0800                     __pstringtext1:
  1197  0800                     _dpowers:
  1198  0800  3401               	retlw	1
  1199  0801  3400               	retlw	0
  1200  0802  3400               	retlw	0
  1201  0803  3400               	retlw	0
  1202  0804  340A               	retlw	10
  1203  0805  3400               	retlw	0
  1204  0806  3400               	retlw	0
  1205  0807  3400               	retlw	0
  1206  0808  3464               	retlw	100
  1207  0809  3400               	retlw	0
  1208  080A  3400               	retlw	0
  1209  080B  3400               	retlw	0
  1210  080C  34E8               	retlw	232
  1211  080D  3403               	retlw	3
  1212  080E  3400               	retlw	0
  1213  080F  3400               	retlw	0
  1214  0810  3410               	retlw	16
  1215  0811  3427               	retlw	39
  1216  0812  3400               	retlw	0
  1217  0813  3400               	retlw	0
  1218  0814  34A0               	retlw	160
  1219  0815  3486               	retlw	134
  1220  0816  3401               	retlw	1
  1221  0817  3400               	retlw	0
  1222  0818  3440               	retlw	64
  1223  0819  3442               	retlw	66
  1224  081A  340F               	retlw	15
  1225  081B  3400               	retlw	0
  1226  081C  3480               	retlw	128
  1227  081D  3496               	retlw	150
  1228  081E  3498               	retlw	152
  1229  081F  3400               	retlw	0
  1230  0820  3400               	retlw	0
  1231  0821  34E1               	retlw	225
  1232  0822  34F5               	retlw	245
  1233  0823  3405               	retlw	5
  1234  0824  3400               	retlw	0
  1235  0825  34CA               	retlw	202
  1236  0826  349A               	retlw	154
  1237  0827  343B               	retlw	59
  1238  0828                     __end_of_dpowers:
  1239  000C                     _PORTAbits	set	12
  1240  0095                     _OPTION_REGbits	set	149
  1241  008D                     _TRISB	set	141
  1242  008C                     _TRISA	set	140
  1243  0097                     _WDTCON	set	151
  1244  0098                     _OSCTUNE	set	152
  1245  0099                     _OSCCON	set	153
  1246  011E                     _APFCON1	set	286
  1247  011D                     _APFCON0	set	285
  1248  010D                     _LATB	set	269
  1249  010C                     _LATA	set	268
  1250  0116                     _BORCON	set	278
  1251  018C                     _ANSELA	set	396
  1252  018D                     _ANSELB	set	397
  1253  021D                     _SSP2CON1bits	set	541
  1254  021C                     _SSP2STATbits	set	540
  1255  0219                     _SSP2BUF	set	537
  1256  021E                     _SSP2CON2bits	set	542
  1257  021C                     _SSP2STAT	set	540
  1258  021E                     _SSP2CON2	set	542
  1259  021D                     _SSP2CON1	set	541
  1260  021A                     _SSP2ADD	set	538
  1261  020C                     _WPUA	set	524
  1262  020D                     _WPUB	set	525
  1263  0828                     STR_2:
  1264  0828  346C               	retlw	108	;'l'
  1265  0829  346F               	retlw	111	;'o'
  1266  082A  3461               	retlw	97	;'a'
  1267  082B  3464               	retlw	100	;'d'
  1268  082C  3420               	retlw	32	;' '
  1269  082D  3463               	retlw	99	;'c'
  1270  082E  3465               	retlw	101	;'e'
  1271  082F  346C               	retlw	108	;'l'
  1272  0830  346C               	retlw	108	;'l'
  1273  0831  3420               	retlw	32	;' '
  1274  0832  3473               	retlw	115	;'s'
  1275  0833  3465               	retlw	101	;'e'
  1276  0834  3474               	retlw	116	;'t'
  1277  0835  3420               	retlw	32	;' '
  1278  0836  3475               	retlw	117	;'u'
  1279  0837  3470               	retlw	112	;'p'
  1280  0838  3400               	retlw	0
  1281                           
  1282                           	psect	stringtext2
  1283  0839                     __pstringtext2:
  1284  0839                     STR_1:
  1285  0839  3449               	retlw	73	;'I'
  1286  083A  346E               	retlw	110	;'n'
  1287  083B  3469               	retlw	105	;'i'
  1288  083C  3474               	retlw	116	;'t'
  1289  083D  3469               	retlw	105	;'i'
  1290  083E  3461               	retlw	97	;'a'
  1291  083F  346C               	retlw	108	;'l'
  1292  0840  3469               	retlw	105	;'i'
  1293  0841  347A               	retlw	122	;'z'
  1294  0842  3465               	retlw	101	;'e'
  1295  0843  3400               	retlw	0
  1296                           
  1297                           	psect	stringtext3
  1298  0844                     __pstringtext3:
  1299  0844                     STR_3:
  1300  0844  3425               	retlw	37	;'%'
  1301  0845  346C               	retlw	108	;'l'
  1302  0846  3475               	retlw	117	;'u'
  1303  0847  3420               	retlw	32	;' '
  1304  0848  3467               	retlw	103	;'g'
  1305  0849  3400               	retlw	0
  1306                           
  1307                           	psect	stringtext4
  1308  084A                     __pstringtext4:
  1309  084A                     STR_5:
  1310  084A  3420               	retlw	32	;' '
  1311  084B  3400               	retlw	0
  1312                           
  1313                           	psect	stringtext5
  1314  0000                     __pstringtext5:
  1315  0844                     
  1316                           	psect	cinit
  1317  07E5                     start_initialization:	
  1318                           ; #config settings
  1319                           
  1320  07E5                     __initialization:
  1321                           
  1322                           ; Initialize objects allocated to BANK0
  1323  07E5  3181  217C  3187   	fcall	__pidataBANK0	;fetch initializer
  1324  07E8  00E1               	movwf	__pdataBANK0& (0+127)
  1325  07E9  3181  217D  3187   	fcall	__pidataBANK0+1	;fetch initializer
  1326  07EC  00E2               	movwf	(__pdataBANK0+1)& (0+127)
  1327  07ED  3181  217E  3187   	fcall	__pidataBANK0+2	;fetch initializer
  1328  07F0  00E3               	movwf	(__pdataBANK0+2)& (0+127)
  1329  07F1  3181  217F  3187   	fcall	__pidataBANK0+3	;fetch initializer
  1330  07F4  00E4               	movwf	(__pdataBANK0+3)& (0+127)
  1331                           
  1332                           ; Clear objects allocated to BANK0
  1333  07F5  304A               	movlw	low __pbssBANK0
  1334  07F6  0084               	movwf	4
  1335  07F7  3000               	movlw	high __pbssBANK0
  1336  07F8  0085               	movwf	5
  1337  07F9  3017               	movlw	23
  1338  07FA  3181  2186  3187   	fcall	clear_ram0
  1339  07FD                     end_of_initialization:	
  1340                           ;End of C runtime variable initialization code
  1341                           
  1342  07FD                     __end_of__initialization:
  1343  07FD  0020               	movlb	0
  1344  07FE  3185  2D1C         	ljmp	_main	;jump to C main() function
  1345                           
  1346                           	psect	bssBANK0
  1347  004A                     __pbssBANK0:
  1348  004A                     _weight_zero:
  1349  004A                     	ds	3
  1350  004D                     _weight_dat:
  1351  004D                     	ds	3
  1352  0050                     __backlightval:
  1353  0050                     	ds	1
  1354  0051                     _str:
  1355  0051                     	ds	16
  1356                           
  1357                           	psect	dataBANK0
  1358  0061                     __pdataBANK0:
  1359  0061                     lcd_set_cursor@F2395:
  1360  0061                     	ds	4
  1361                           
  1362                           	psect	clrtext
  1363  0186                     clear_ram0:	
  1364                           ;	Called with FSR0 containing the base address, and
  1365                           ;	WREG with the size to clear
  1366                           
  1367  0186  0064               	clrwdt	;clear the watchdog before getting into this loop
  1368  0187                     clrloop0:
  1369  0187  0180               	clrf	0	;clear RAM location pointed to by FSR
  1370  0188  3101               	addfsr 0,1
  1371  0189  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1372  018A  2987               	goto	clrloop0	;have we reached the end yet?
  1373  018B  3400               	retlw	0	;all done for this memory range, return
  1374                           
  1375                           	psect	cstackCOMMON
  1376  0070                     __pcstackCOMMON:
  1377  0070                     ?_PIN_MANAGER_Initialize:
  1378  0070                     ??_PIN_MANAGER_Initialize:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0070                     ?_OSCILLATOR_Initialize:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0070                     ??_OSCILLATOR_Initialize:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0070                     ?_WDT_Initialize:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0070                     ??_WDT_Initialize:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0070                     ?_lcd_init:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0070                     ?_lcd_backlight:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0070                     ?_lcd_clear:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0070                     ?_SYSTEM_Initialize:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0070                     ??_SYSTEM_Initialize:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0070                     ?_main:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     ?_set_CELL_CLK_LOW:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     ??_set_CELL_CLK_LOW:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ?_set_CELL_CLK_HIGH:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ??_set_CELL_CLK_HIGH:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ?_get_CELL_DAT_VAL:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ??_get_CELL_DAT_VAL:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     ?_i2c_wait:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     ??_i2c_wait:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0070                     ?_i2c_start:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0070                     ??_i2c_start:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0070                     ?_i2c_stop:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ??_i2c_stop:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0070                     ?_i2c_write:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0070                     ??_i2c_write:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0070                     ?_lcd_cmd:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0070                     ?___ltdiv:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0070                     ?___lldiv:	
  1460                           ; 3 bytes @ 0x0
  1461                           
  1462  0070                     ?___xxtofl:	
  1463                           ; 4 bytes @ 0x0
  1464                           
  1465  0070                     i2c_write@data:	
  1466                           ; 4 bytes @ 0x0
  1467                           
  1468  0070                     ___ltdiv@divisor:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471  0070                     ___lldiv@divisor:	
  1472                           ; 3 bytes @ 0x0
  1473                           
  1474  0070                     ___xxtofl@val:	
  1475                           ; 4 bytes @ 0x0
  1476                           
  1477                           
  1478                           ; 4 bytes @ 0x0
  1479  0070                     	ds	1
  1480  0071                     ??_lcd_cmd:
  1481  0071                     lcd_cmd@cmd:	
  1482                           ; 1 bytes @ 0x1
  1483                           
  1484                           
  1485                           ; 1 bytes @ 0x1
  1486  0071                     	ds	1
  1487  0072                     ??_lcd_init:
  1488  0072                     ??_lcd_backlight:	
  1489                           ; 1 bytes @ 0x2
  1490                           
  1491  0072                     ?_command:	
  1492                           ; 1 bytes @ 0x2
  1493                           
  1494  0072                     command@mode:	
  1495                           ; 1 bytes @ 0x2
  1496                           
  1497                           
  1498                           ; 1 bytes @ 0x2
  1499  0072                     	ds	1
  1500  0073                     ??_command:
  1501  0073                     ___ltdiv@dividend:	
  1502                           ; 1 bytes @ 0x3
  1503                           
  1504                           
  1505                           ; 3 bytes @ 0x3
  1506  0073                     	ds	1
  1507  0074                     ??___xxtofl:
  1508  0074                     ___lldiv@dividend:	
  1509                           ; 1 bytes @ 0x4
  1510                           
  1511                           
  1512                           ; 4 bytes @ 0x4
  1513  0074                     	ds	1
  1514  0075                     command@val:
  1515                           
  1516                           ; 1 bytes @ 0x5
  1517  0075                     	ds	1
  1518  0076                     ??___ltdiv:
  1519  0076                     command@highnib:	
  1520                           ; 1 bytes @ 0x6
  1521                           
  1522                           
  1523                           ; 1 bytes @ 0x6
  1524  0076                     	ds	1
  1525  0077                     command@lownib:
  1526  0077                     ___ltdiv@quotient:	
  1527                           ; 1 bytes @ 0x7
  1528                           
  1529                           
  1530                           ; 3 bytes @ 0x7
  1531  0077                     	ds	1
  1532  0078                     ?_lcd_set_cursor:
  1533  0078                     ?_lcd_print:	
  1534                           ; 1 bytes @ 0x8
  1535                           
  1536  0078                     ??___lldiv:	
  1537                           ; 1 bytes @ 0x8
  1538                           
  1539  0078                     lcd_set_cursor@row:	
  1540                           ; 1 bytes @ 0x8
  1541                           
  1542  0078                     ___xxtofl@sign:	
  1543                           ; 1 bytes @ 0x8
  1544                           
  1545  0078                     lcd_print@str:	
  1546                           ; 1 bytes @ 0x8
  1547                           
  1548                           
  1549                           ; 2 bytes @ 0x8
  1550  0078                     	ds	1
  1551  0079                     ??_lcd_set_cursor:
  1552  0079                     ___xxtofl@exp:	
  1553                           ; 1 bytes @ 0x9
  1554                           
  1555  0079                     ___lldiv@quotient:	
  1556                           ; 1 bytes @ 0x9
  1557                           
  1558                           
  1559                           ; 4 bytes @ 0x9
  1560  0079                     	ds	1
  1561  007A                     ??_lcd_print:
  1562  007A                     ___ltdiv@counter:	
  1563                           ; 1 bytes @ 0xA
  1564                           
  1565  007A                     ___xxtofl@arg:	
  1566                           ; 1 bytes @ 0xA
  1567                           
  1568                           
  1569                           ; 4 bytes @ 0xA
  1570  007A                     	ds	1
  1571  007B                     ?_get_scale_val:
  1572  007B                     lcd_print@cmd:	
  1573                           ; 3 bytes @ 0xB
  1574                           
  1575                           
  1576                           ; 1 bytes @ 0xB
  1577  007B                     	ds	1
  1578  007C                     ??_lcd_clear:
  1579                           
  1580                           ; 1 bytes @ 0xC
  1581  007C                     	ds	1
  1582  007D                     ___lldiv@counter:
  1583                           
  1584                           ; 1 bytes @ 0xD
  1585  007D                     	ds	1
  1586                           
  1587                           	psect	cstackBANK0
  1588  0020                     __pcstackBANK0:
  1589  0020                     ??_get_scale_val:
  1590  0020                     ?_scale_convert_gram:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0020                     ?___llmod:	
  1594                           ; 4 bytes @ 0x0
  1595                           
  1596  0020                     scale_convert_gram@count:	
  1597                           ; 4 bytes @ 0x0
  1598                           
  1599  0020                     lcd_set_cursor@row_offsets:	
  1600                           ; 3 bytes @ 0x0
  1601                           
  1602  0020                     ___llmod@divisor:	
  1603                           ; 4 bytes @ 0x0
  1604                           
  1605                           
  1606                           ; 4 bytes @ 0x0
  1607  0020                     	ds	3
  1608  0023                     get_scale_val@weight_add:
  1609                           
  1610                           ; 3 bytes @ 0x3
  1611  0023                     	ds	1
  1612  0024                     ??_scale_convert_gram:
  1613  0024                     lcd_set_cursor@col:	
  1614                           ; 1 bytes @ 0x4
  1615                           
  1616  0024                     ___llmod@dividend:	
  1617                           ; 1 bytes @ 0x4
  1618                           
  1619                           
  1620                           ; 4 bytes @ 0x4
  1621  0024                     	ds	1
  1622  0025                     lcd_set_cursor@cmd:
  1623                           
  1624                           ; 1 bytes @ 0x5
  1625  0025                     	ds	1
  1626  0026                     get_scale_val@j:
  1627  0026                     lcd_clear@row:	
  1628                           ; 1 bytes @ 0x6
  1629                           
  1630                           
  1631                           ; 1 bytes @ 0x6
  1632  0026                     	ds	1
  1633  0027                     get_scale_val@n:
  1634  0027                     lcd_clear@col:	
  1635                           ; 1 bytes @ 0x7
  1636                           
  1637  0027                     scale_convert_gram@temp:	
  1638                           ; 1 bytes @ 0x7
  1639                           
  1640                           
  1641                           ; 4 bytes @ 0x7
  1642  0027                     	ds	1
  1643  0028                     ??___llmod:
  1644  0028                     get_scale_val@weight_count:	
  1645                           ; 1 bytes @ 0x8
  1646                           
  1647                           
  1648                           ; 3 bytes @ 0x8
  1649  0028                     	ds	1
  1650  0029                     ___llmod@counter:
  1651                           
  1652                           ; 1 bytes @ 0x9
  1653  0029                     	ds	1
  1654  002A                     ?_sprintf:
  1655  002A                     sprintf@f:	
  1656                           ; 2 bytes @ 0xA
  1657                           
  1658                           
  1659                           ; 2 bytes @ 0xA
  1660  002A                     	ds	1
  1661  002B                     get_scale_val@i:
  1662                           
  1663                           ; 1 bytes @ 0xB
  1664  002B                     	ds	5
  1665  0030                     ??_sprintf:
  1666                           
  1667                           ; 1 bytes @ 0x10
  1668  0030                     	ds	6
  1669  0036                     sprintf@flag:
  1670                           
  1671                           ; 1 bytes @ 0x16
  1672  0036                     	ds	1
  1673  0037                     sprintf@prec:
  1674                           
  1675                           ; 2 bytes @ 0x17
  1676  0037                     	ds	2
  1677  0039                     sprintf@val:
  1678                           
  1679                           ; 4 bytes @ 0x19
  1680  0039                     	ds	4
  1681  003D                     sprintf@ap:
  1682                           
  1683                           ; 1 bytes @ 0x1D
  1684  003D                     	ds	1
  1685  003E                     sprintf@sp:
  1686                           
  1687                           ; 1 bytes @ 0x1E
  1688  003E                     	ds	1
  1689  003F                     sprintf@c:
  1690                           
  1691                           ; 1 bytes @ 0x1F
  1692  003F                     	ds	1
  1693  0040                     ??_main:
  1694                           
  1695                           ; 1 bytes @ 0x20
  1696  0040                     	ds	2
  1697  0042                     main@weight_gram:
  1698                           
  1699                           ; 4 bytes @ 0x22
  1700  0042                     	ds	4
  1701  0046                     main@weight_gram_180:
  1702                           
  1703                           ; 4 bytes @ 0x26
  1704  0046                     	ds	4
  1705                           
  1706                           	psect	maintext
  1707  051C                     __pmaintext:	
  1708 ;;
  1709 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1710 ;;
  1711 ;; *************** function _main *****************
  1712 ;; Defined at:
  1713 ;;		line 8 in file "main.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  weight_gram     4   38[BANK0 ] float 
  1718 ;;  weight_gram     4   34[BANK0 ] float 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : B1F/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1728 ;;      Params:         0       0       0       0       0       0
  1729 ;;      Locals:         0       8       0       0       0       0
  1730 ;;      Temps:          0       2       0       0       0       0
  1731 ;;      Totals:         0      10       0       0       0       0
  1732 ;;Total ram usage:       10 bytes
  1733 ;; Hardware stack levels required when called: 6
  1734 ;; This function calls:
  1735 ;;		_SYSTEM_Initialize
  1736 ;;		_get_scale_val
  1737 ;;		_lcd_backlight
  1738 ;;		_lcd_clear
  1739 ;;		_lcd_init
  1740 ;;		_lcd_print
  1741 ;;		_lcd_set_cursor
  1742 ;;		_scale_convert_gram
  1743 ;;		_sprintf
  1744 ;; This function is called by:
  1745 ;;		Startup code after reset
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           
  1750                           ;psect for function _main
  1751  051C                     _main:
  1752  051C                     l1908:	
  1753                           ;incstack = 0
  1754                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1755                           
  1756                           
  1757                           ;main.c: 10: SYSTEM_Initialize();
  1758  051C  3181  21A1  3185   	fcall	_SYSTEM_Initialize
  1759  051F                     l1910:
  1760                           
  1761                           ;main.c: 13: WPUB = 0x24;
  1762  051F  3024               	movlw	36
  1763  0520  0024               	movlb	4	; select bank4
  1764  0521  008D               	movwf	13	;volatile
  1765  0522                     l1912:
  1766                           
  1767                           ;main.c: 14: OPTION_REGbits.nWPUEN = 0;
  1768  0522  0021               	movlb	1	; select bank1
  1769  0523  1395               	bcf	21,7	;volatile
  1770  0524                     l1914:
  1771                           
  1772                           ;main.c: 17: ANSELA = 0x00;
  1773  0524  0023               	movlb	3	; select bank3
  1774  0525  018C               	clrf	12	;volatile
  1775  0526                     l1916:
  1776                           
  1777                           ;main.c: 18: ANSELB = 0x00;
  1778  0526  018D               	clrf	13	;volatile
  1779  0527                     l1918:
  1780                           
  1781                           ;main.c: 22: TRISA = 0x08;
  1782  0527  3008               	movlw	8
  1783  0528  0021               	movlb	1	; select bank1
  1784  0529  008C               	movwf	12	;volatile
  1785  052A                     l1920:
  1786                           
  1787                           ;main.c: 24: LATA = 0x00;
  1788  052A  0022               	movlb	2	; select bank2
  1789  052B  018C               	clrf	12	;volatile
  1790  052C                     l1922:
  1791                           
  1792                           ;main.c: 25: LATB = 0x00;
  1793  052C  018D               	clrf	13	;volatile
  1794  052D                     l1924:
  1795                           
  1796                           ;main.c: 29: SSP2ADD = 0x13;
  1797  052D  3013               	movlw	19
  1798  052E  0024               	movlb	4	; select bank4
  1799  052F  009A               	movwf	26	;volatile
  1800  0530                     l1926:
  1801                           
  1802                           ;main.c: 30: SSP2CON1 = 0x28;
  1803  0530  3028               	movlw	40
  1804  0531  009D               	movwf	29	;volatile
  1805  0532                     l1928:
  1806                           
  1807                           ;main.c: 31: SSP2CON2 = 0x0;
  1808  0532  019E               	clrf	30	;volatile
  1809  0533                     l1930:
  1810                           
  1811                           ;main.c: 32: SSP2STAT = 0;
  1812  0533  019C               	clrf	28	;volatile
  1813                           
  1814                           ;main.c: 34: lcd_init();
  1815  0534  3185  25F6  3185   	fcall	_lcd_init
  1816                           
  1817                           ;main.c: 35: lcd_backlight();
  1818  0537  3181  21C1  3185   	fcall	_lcd_backlight
  1819  053A                     l1932:
  1820                           
  1821                           ;main.c: 36: lcd_set_cursor(0, 0);
  1822  053A  01F8               	clrf	lcd_set_cursor@row
  1823  053B  3000               	movlw	0
  1824  053C  3182  2226  3185   	fcall	_lcd_set_cursor
  1825  053F                     l1934:
  1826                           
  1827                           ;main.c: 39: lcd_print("Initialize");
  1828  053F  3039               	movlw	low (STR_1| (0+32768))
  1829  0540  00F8               	movwf	lcd_print@str
  1830  0541  3088               	movlw	high (STR_1| (0+32768))
  1831  0542  00F9               	movwf	lcd_print@str+1
  1832  0543  3182  2209  3185   	fcall	_lcd_print
  1833  0546                     l1936:
  1834                           
  1835                           ;main.c: 41: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1836  0546  300B               	movlw	11
  1837  0547  0020               	movlb	0	; select bank0
  1838  0548  00C1               	movwf	??_main+1
  1839  0549  3026               	movlw	38
  1840  054A  00C0               	movwf	??_main
  1841  054B  305D               	movlw	93
  1842  054C                     u1217:
  1843  054C  0B89               	decfsz	9,f
  1844  054D  2D4C               	goto	u1217
  1845  054E  0BC0               	decfsz	??_main,f
  1846  054F  2D4C               	goto	u1217
  1847  0550  0BC1               	decfsz	??_main+1,f
  1848  0551  2D4C               	goto	u1217
  1849  0552  3200               	nop2
  1850  0553                     l1938:
  1851                           
  1852                           ;main.c: 43: weight_zero = get_scale_val(50);
  1853  0553  3032               	movlw	50
  1854  0554  3183  23CA  3185   	fcall	_get_scale_val
  1855  0557  087B               	movf	?_get_scale_val,w
  1856  0558  0020               	movlb	0	; select bank0
  1857  0559  00CA               	movwf	_weight_zero
  1858  055A  087C               	movf	?_get_scale_val+1,w
  1859  055B  00CB               	movwf	_weight_zero+1
  1860  055C  087D               	movf	?_get_scale_val+2,w
  1861  055D  00CC               	movwf	_weight_zero+2
  1862  055E                     l1940:
  1863                           
  1864                           ;main.c: 45: lcd_clear();
  1865  055E  3182  2248  3185   	fcall	_lcd_clear
  1866  0561                     l1942:
  1867                           
  1868                           ;main.c: 46: lcd_set_cursor(0, 0);
  1869  0561  01F8               	clrf	lcd_set_cursor@row
  1870  0562  3000               	movlw	0
  1871  0563  3182  2226  3185   	fcall	_lcd_set_cursor
  1872  0566                     l1944:
  1873                           
  1874                           ;main.c: 47: lcd_print("load cell set up");
  1875  0566  3028               	movlw	low (STR_2| (0+32768))
  1876  0567  00F8               	movwf	lcd_print@str
  1877  0568  3088               	movlw	high (STR_2| (0+32768))
  1878  0569  00F9               	movwf	lcd_print@str+1
  1879  056A  3182  2209  3185   	fcall	_lcd_print
  1880  056D                     l1946:
  1881                           
  1882                           ;main.c: 48: lcd_set_cursor(0, 1);
  1883  056D  01F8               	clrf	lcd_set_cursor@row
  1884  056E  0AF8               	incf	lcd_set_cursor@row,f
  1885  056F  3000               	movlw	0
  1886  0570  3182  2226  3185   	fcall	_lcd_set_cursor
  1887  0573                     l1948:
  1888                           
  1889                           ;main.c: 49: float weight_gram = scale_convert_gram(weight_dat);
  1890  0573  0020               	movlb	0	; select bank0
  1891  0574  084D               	movf	_weight_dat,w
  1892  0575  00A0               	movwf	scale_convert_gram@count
  1893  0576  084E               	movf	_weight_dat+1,w
  1894  0577  00A1               	movwf	scale_convert_gram@count+1
  1895  0578  084F               	movf	_weight_dat+2,w
  1896  0579  00A2               	movwf	scale_convert_gram@count+2
  1897  057A  3182  2270  3185   	fcall	_scale_convert_gram
  1898  057D  0020               	movlb	0	; select bank0
  1899  057E  0823               	movf	?_scale_convert_gram+3,w
  1900  057F  00C5               	movwf	main@weight_gram+3
  1901  0580  0822               	movf	?_scale_convert_gram+2,w
  1902  0581  00C4               	movwf	main@weight_gram+2
  1903  0582  0821               	movf	?_scale_convert_gram+1,w
  1904  0583  00C3               	movwf	main@weight_gram+1
  1905  0584  0820               	movf	?_scale_convert_gram,w
  1906  0585  00C2               	movwf	main@weight_gram
  1907  0586                     l1950:
  1908                           
  1909                           ;main.c: 51: sprintf(str, "%lu g", weight_gram);
  1910  0586  3044               	movlw	low (STR_3| (0+32768))
  1911  0587  00AA               	movwf	sprintf@f
  1912  0588  3088               	movlw	high (STR_3| (0+32768))
  1913  0589  00AB               	movwf	sprintf@f+1
  1914  058A  0845               	movf	main@weight_gram+3,w
  1915  058B  00AF               	movwf	?_sprintf+5
  1916  058C  0844               	movf	main@weight_gram+2,w
  1917  058D  00AE               	movwf	?_sprintf+4
  1918  058E  0843               	movf	main@weight_gram+1,w
  1919  058F  00AD               	movwf	?_sprintf+3
  1920  0590  0842               	movf	main@weight_gram,w
  1921  0591  00AC               	movwf	?_sprintf+2
  1922  0592  3051               	movlw	(low (_str| 0))& (0+255)
  1923  0593  3186  26E2  3185   	fcall	_sprintf
  1924  0596                     l1952:
  1925                           
  1926                           ;main.c: 53: lcd_print(str);
  1927  0596  3051               	movlw	low _str
  1928  0597  00F8               	movwf	lcd_print@str
  1929  0598  3000               	movlw	high _str
  1930  0599  00F9               	movwf	lcd_print@str+1
  1931  059A  3182  2209  3185   	fcall	_lcd_print
  1932  059D                     l1954:
  1933                           
  1934                           ;main.c: 55: _delay((unsigned long)((3000)*(8000000/4000.0)));
  1935  059D  301F               	movlw	31
  1936  059E  0020               	movlb	0	; select bank0
  1937  059F  00C1               	movwf	??_main+1
  1938  05A0  3071               	movlw	113
  1939  05A1  00C0               	movwf	??_main
  1940  05A2  301E               	movlw	30
  1941  05A3                     u1227:
  1942  05A3  0B89               	decfsz	9,f
  1943  05A4  2DA3               	goto	u1227
  1944  05A5  0BC0               	decfsz	??_main,f
  1945  05A6  2DA3               	goto	u1227
  1946  05A7  0BC1               	decfsz	??_main+1,f
  1947  05A8  2DA3               	goto	u1227
  1948  05A9  0000               	nop
  1949  05AA                     l1956:
  1950                           
  1951                           ;main.c: 58: {;main.c: 59: weight_dat = get_scale_val(8);
  1952  05AA  3008               	movlw	8
  1953  05AB  3183  23CA  3185   	fcall	_get_scale_val
  1954  05AE  087B               	movf	?_get_scale_val,w
  1955  05AF  0020               	movlb	0	; select bank0
  1956  05B0  00CD               	movwf	_weight_dat
  1957  05B1  087C               	movf	?_get_scale_val+1,w
  1958  05B2  00CE               	movwf	_weight_dat+1
  1959  05B3  087D               	movf	?_get_scale_val+2,w
  1960  05B4  00CF               	movwf	_weight_dat+2
  1961  05B5                     l1958:
  1962                           
  1963                           ;main.c: 60: float weight_gram = scale_convert_gram(weight_dat);
  1964  05B5  084D               	movf	_weight_dat,w
  1965  05B6  00A0               	movwf	scale_convert_gram@count
  1966  05B7  084E               	movf	_weight_dat+1,w
  1967  05B8  00A1               	movwf	scale_convert_gram@count+1
  1968  05B9  084F               	movf	_weight_dat+2,w
  1969  05BA  00A2               	movwf	scale_convert_gram@count+2
  1970  05BB  3182  2270  3185   	fcall	_scale_convert_gram
  1971  05BE  0020               	movlb	0	; select bank0
  1972  05BF  0823               	movf	?_scale_convert_gram+3,w
  1973  05C0  00C9               	movwf	main@weight_gram_180+3
  1974  05C1  0822               	movf	?_scale_convert_gram+2,w
  1975  05C2  00C8               	movwf	main@weight_gram_180+2
  1976  05C3  0821               	movf	?_scale_convert_gram+1,w
  1977  05C4  00C7               	movwf	main@weight_gram_180+1
  1978  05C5  0820               	movf	?_scale_convert_gram,w
  1979  05C6  00C6               	movwf	main@weight_gram_180
  1980                           
  1981                           ;main.c: 62: sprintf(str, "%lu g", weight_gram);
  1982  05C7  3044               	movlw	low (STR_3| (0+32768))
  1983  05C8  00AA               	movwf	sprintf@f
  1984  05C9  3088               	movlw	high (STR_3| (0+32768))
  1985  05CA  00AB               	movwf	sprintf@f+1
  1986  05CB  0849               	movf	main@weight_gram_180+3,w
  1987  05CC  00AF               	movwf	?_sprintf+5
  1988  05CD  0848               	movf	main@weight_gram_180+2,w
  1989  05CE  00AE               	movwf	?_sprintf+4
  1990  05CF  0847               	movf	main@weight_gram_180+1,w
  1991  05D0  00AD               	movwf	?_sprintf+3
  1992  05D1  0846               	movf	main@weight_gram_180,w
  1993  05D2  00AC               	movwf	?_sprintf+2
  1994  05D3  3051               	movlw	(low (_str| 0))& (0+255)
  1995  05D4  3186  26E2  3185   	fcall	_sprintf
  1996                           
  1997                           ;main.c: 64: lcd_clear();
  1998  05D7  3182  2248  3185   	fcall	_lcd_clear
  1999  05DA                     l1960:
  2000                           
  2001                           ;main.c: 65: lcd_set_cursor(0, 0);
  2002  05DA  01F8               	clrf	lcd_set_cursor@row
  2003  05DB  3000               	movlw	0
  2004  05DC  3182  2226  3185   	fcall	_lcd_set_cursor
  2005  05DF                     l1962:
  2006                           
  2007                           ;main.c: 66: lcd_print(str);
  2008  05DF  3051               	movlw	low _str
  2009  05E0  00F8               	movwf	lcd_print@str
  2010  05E1  3000               	movlw	high _str
  2011  05E2  00F9               	movwf	lcd_print@str+1
  2012  05E3  3182  2209  3185   	fcall	_lcd_print
  2013  05E6                     l1964:
  2014                           
  2015                           ;main.c: 68: _delay((unsigned long)((100)*(8000000/4000.0)));
  2016  05E6  3002               	movlw	2
  2017  05E7  0020               	movlb	0	; select bank0
  2018  05E8  00C1               	movwf	??_main+1
  2019  05E9  3004               	movlw	4
  2020  05EA  00C0               	movwf	??_main
  2021  05EB  30BA               	movlw	186
  2022  05EC                     u1237:
  2023  05EC  0B89               	decfsz	9,f
  2024  05ED  2DEC               	goto	u1237
  2025  05EE  0BC0               	decfsz	??_main,f
  2026  05EF  2DEC               	goto	u1237
  2027  05F0  0BC1               	decfsz	??_main+1,f
  2028  05F1  2DEC               	goto	u1237
  2029  05F2  0000               	nop
  2030  05F3  2DAA               	goto	l1956
  2031  05F4  3180  2802         	ljmp	start
  2032  05F6                     __end_of_main:
  2033                           
  2034                           	psect	text1
  2035  06E2                     __ptext1:	
  2036 ;; *************** function _sprintf *****************
  2037 ;; Defined at:
  2038 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  sp              1    wreg     PTR unsigned char 
  2041 ;;		 -> str(16), 
  2042 ;;  f               2   10[BANK0 ] PTR const unsigned char 
  2043 ;;		 -> STR_4(6), STR_3(6), 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  sp              1   30[BANK0 ] PTR unsigned char 
  2046 ;;		 -> str(16), 
  2047 ;;  val             4   25[BANK0 ] unsigned long 
  2048 ;;  tmpval          4    0        struct .
  2049 ;;  prec            2   23[BANK0 ] int 
  2050 ;;  cp              2    0        PTR const unsigned char 
  2051 ;;  len             2    0        unsigned int 
  2052 ;;  c               1   31[BANK0 ] unsigned char 
  2053 ;;  ap              1   29[BANK0 ] PTR void [1]
  2054 ;;		 -> ?_sprintf(2), 
  2055 ;;  flag            1   22[BANK0 ] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  2   10[BANK0 ] int 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2065 ;;      Params:         0       6       0       0       0       0
  2066 ;;      Locals:         0      10       0       0       0       0
  2067 ;;      Temps:          0       6       0       0       0       0
  2068 ;;      Totals:         0      22       0       0       0       0
  2069 ;;Total ram usage:       22 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 1
  2072 ;; This function calls:
  2073 ;;		___lldiv
  2074 ;;		___llmod
  2075 ;; This function is called by:
  2076 ;;		_main
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           
  2081                           ;psect for function _sprintf
  2082  06E2                     _sprintf:
  2083                           
  2084                           ;incstack = 0
  2085                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2086                           ;sprintf@sp stored from wreg
  2087  06E2  0020               	movlb	0	; select bank0
  2088  06E3  00BE               	movwf	sprintf@sp
  2089  06E4                     l1856:
  2090                           
  2091                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 517: int prec;;doprnt.c: 52
      +                          5: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;doprnt.c:
      +                           542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c:
      +                           546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_start();
  2092  06E4  302C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2093  06E5  00B0               	movwf	??_sprintf
  2094  06E6  0830               	movf	??_sprintf,w
  2095  06E7  00BD               	movwf	sprintf@ap
  2096                           
  2097                           ;doprnt.c: 553: while((c = *f++)) {
  2098  06E8  2FCC               	goto	l1902
  2099  06E9                     l1858:
  2100                           
  2101                           ;doprnt.c: 555: if(c != '%')
  2102  06E9  3025               	movlw	37
  2103  06EA  063F               	xorwf	sprintf@c,w
  2104  06EB  1903               	btfsc	3,2
  2105  06EC  2EEE               	goto	u1131
  2106  06ED  2EEF               	goto	u1130
  2107  06EE                     u1131:
  2108  06EE  2EFB               	goto	l1864
  2109  06EF                     u1130:
  2110  06EF                     l1860:
  2111                           
  2112                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2113  06EF  083F               	movf	sprintf@c,w
  2114  06F0  00B0               	movwf	??_sprintf
  2115  06F1  083E               	movf	sprintf@sp,w
  2116  06F2  0086               	movwf	6
  2117  06F3  0187               	clrf	7
  2118  06F4  0830               	movf	??_sprintf,w
  2119  06F5  0081               	movwf	1
  2120  06F6                     l1862:
  2121  06F6  3001               	movlw	1
  2122  06F7  00B0               	movwf	??_sprintf
  2123  06F8  0830               	movf	??_sprintf,w
  2124  06F9  07BE               	addwf	sprintf@sp,f
  2125                           
  2126                           ;doprnt.c: 559: continue;
  2127  06FA  2FCC               	goto	l1902
  2128  06FB                     l1864:
  2129                           
  2130                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  2131  06FB  01B6               	clrf	sprintf@flag
  2132  06FC  2F04               	goto	l1870
  2133  06FD                     l413:	
  2134                           ;doprnt.c: 667: case 'l':
  2135                           
  2136                           
  2137                           ;doprnt.c: 669: flag |= 0x10;
  2138  06FD  1636               	bsf	sprintf@flag,4
  2139                           
  2140                           ;doprnt.c: 670: goto loop;
  2141  06FE  2F04               	goto	l1870
  2142  06FF                     l1866:
  2143                           
  2144                           ;doprnt.c: 844: flag |= 0xC0;
  2145  06FF  30C0               	movlw	192
  2146  0700  00B0               	movwf	??_sprintf
  2147  0701  0830               	movf	??_sprintf,w
  2148  0702  04B6               	iorwf	sprintf@flag,f
  2149                           
  2150                           ;doprnt.c: 845: break;
  2151  0703  2F1B               	goto	l416
  2152  0704                     l1870:
  2153  0704  082B               	movf	sprintf@f+1,w
  2154  0705  00B1               	movwf	??_sprintf+1
  2155  0706  082A               	movf	sprintf@f,w
  2156  0707  00B0               	movwf	??_sprintf
  2157  0708  0AAA               	incf	sprintf@f,f
  2158  0709  1903               	skipnz
  2159  070A  0AAB               	incf	sprintf@f+1,f
  2160  070B  0830               	movf	??_sprintf,w
  2161  070C  0084               	movwf	4
  2162  070D  0831               	movf	??_sprintf+1,w
  2163  070E  0085               	movwf	5
  2164  070F  0800               	movf	0,w	;code access
  2165  0710  00BF               	movwf	sprintf@c
  2166                           
  2167                           ; Switch size 1, requested type "simple"
  2168                           ; Number of cases is 3, Range of values is 0 to 117
  2169                           ; switch strategies available:
  2170                           ; Name         Instructions Cycles
  2171                           ; simple_byte           10     6 (average)
  2172                           ; direct_byte          242     6 (fixed)
  2173                           ; jumptable            260     6 (fixed)
  2174                           ;	Chosen strategy is simple_byte
  2175  0711  3A00               	xorlw	0	; case 0
  2176  0712  1903               	skipnz
  2177  0713  2FE0               	goto	l1904
  2178  0714  3A6C               	xorlw	108	; case 108
  2179  0715  1903               	skipnz
  2180  0716  2EFD               	goto	l413
  2181  0717  3A19               	xorlw	25	; case 117
  2182  0718  1903               	skipnz
  2183  0719  2EFF               	goto	l1866
  2184  071A  2FCC               	goto	l1902
  2185  071B                     l416:
  2186                           
  2187                           ;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  2188  071B  1E36               	btfss	sprintf@flag,4
  2189  071C  2F1E               	goto	u1141
  2190  071D  2F1F               	goto	u1140
  2191  071E                     u1141:
  2192  071E  2F2F               	goto	l1876
  2193  071F                     u1140:
  2194  071F                     l1872:
  2195                           
  2196                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  2197  071F  083D               	movf	sprintf@ap,w
  2198  0720  0086               	movwf	6
  2199  0721  0187               	clrf	7
  2200  0722  3F40               	moviw [0]fsr1
  2201  0723  00B9               	movwf	sprintf@val
  2202  0724  3F41               	moviw [1]fsr1
  2203  0725  00BA               	movwf	sprintf@val+1
  2204  0726  3F42               	moviw [2]fsr1
  2205  0727  00BB               	movwf	sprintf@val+2
  2206  0728  3F43               	moviw [3]fsr1
  2207  0729  00BC               	movwf	sprintf@val+3
  2208  072A                     l1874:
  2209  072A  3004               	movlw	4
  2210  072B  00B0               	movwf	??_sprintf
  2211  072C  0830               	movf	??_sprintf,w
  2212  072D  07BD               	addwf	sprintf@ap,f
  2213  072E  2F40               	goto	l1880
  2214  072F                     l1876:
  2215                           
  2216                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  2217  072F  083D               	movf	sprintf@ap,w
  2218  0730  0086               	movwf	6
  2219  0731  0187               	clrf	7
  2220  0732  3F40               	moviw [0]fsr1
  2221  0733  00B0               	movwf	??_sprintf
  2222  0734  3F41               	moviw [1]fsr1
  2223  0735  00B1               	movwf	??_sprintf+1
  2224  0736  0830               	movf	??_sprintf,w
  2225  0737  00B9               	movwf	sprintf@val
  2226  0738  0831               	movf	??_sprintf+1,w
  2227  0739  00BA               	movwf	sprintf@val+1
  2228  073A  01BB               	clrf	sprintf@val+2
  2229  073B  01BC               	clrf	sprintf@val+3
  2230  073C                     l1878:
  2231  073C  3002               	movlw	2
  2232  073D  00B0               	movwf	??_sprintf
  2233  073E  0830               	movf	??_sprintf,w
  2234  073F  07BD               	addwf	sprintf@ap,f
  2235  0740                     l1880:
  2236                           
  2237                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  2238  0740  01BF               	clrf	sprintf@c
  2239  0741  0ABF               	incf	sprintf@c,f
  2240  0742                     l1886:
  2241                           
  2242                           ;doprnt.c: 1332: if(val < dpowers[c])
  2243  0742  083F               	movf	sprintf@c,w
  2244  0743  00B0               	movwf	??_sprintf
  2245  0744  01B1               	clrf	??_sprintf+1
  2246  0745  35B0               	lslf	??_sprintf,f
  2247  0746  0DB1               	rlf	??_sprintf+1,f
  2248  0747  35B0               	lslf	??_sprintf,f
  2249  0748  0DB1               	rlf	??_sprintf+1,f
  2250  0749  3000               	movlw	low (_dpowers| (0+32768))
  2251  074A  0730               	addwf	??_sprintf,w
  2252  074B  0084               	movwf	4
  2253  074C  3088               	movlw	high (_dpowers| (0+32768))
  2254  074D  3D31               	addwfc	??_sprintf+1,w
  2255  074E  0085               	movwf	5
  2256  074F  3F00               	moviw [0]fsr0
  2257  0750  00B2               	movwf	??_sprintf+2
  2258  0751  3F01               	moviw [1]fsr0
  2259  0752  00B3               	movwf	??_sprintf+3
  2260  0753  3F02               	moviw [2]fsr0
  2261  0754  00B4               	movwf	??_sprintf+4
  2262  0755  3F03               	moviw [3]fsr0
  2263  0756  00B5               	movwf	??_sprintf+5
  2264  0757  0835               	movf	??_sprintf+5,w
  2265  0758  023C               	subwf	sprintf@val+3,w
  2266  0759  1D03               	skipz
  2267  075A  2F65               	goto	u1155
  2268  075B  0834               	movf	??_sprintf+4,w
  2269  075C  023B               	subwf	sprintf@val+2,w
  2270  075D  1D03               	skipz
  2271  075E  2F65               	goto	u1155
  2272  075F  0833               	movf	??_sprintf+3,w
  2273  0760  023A               	subwf	sprintf@val+1,w
  2274  0761  1D03               	skipz
  2275  0762  2F65               	goto	u1155
  2276  0763  0832               	movf	??_sprintf+2,w
  2277  0764  0239               	subwf	sprintf@val,w
  2278  0765                     u1155:
  2279  0765  1803               	skipnc
  2280  0766  2F68               	goto	u1151
  2281  0767  2F69               	goto	u1150
  2282  0768                     u1151:
  2283  0768  2F6A               	goto	l1890
  2284  0769                     u1150:
  2285  0769  2F74               	goto	l1892
  2286  076A                     l1890:
  2287  076A  3001               	movlw	1
  2288  076B  00B0               	movwf	??_sprintf
  2289  076C  0830               	movf	??_sprintf,w
  2290  076D  07BF               	addwf	sprintf@c,f
  2291  076E  300A               	movlw	10
  2292  076F  063F               	xorwf	sprintf@c,w
  2293  0770  1D03               	btfss	3,2
  2294  0771  2F73               	goto	u1161
  2295  0772  2F74               	goto	u1160
  2296  0773                     u1161:
  2297  0773  2F42               	goto	l1886
  2298  0774                     u1160:
  2299  0774                     l1892:
  2300                           
  2301                           ;doprnt.c: 1448: {;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  2302  0774  083F               	movf	sprintf@c,w
  2303  0775  00B0               	movwf	??_sprintf
  2304  0776  01B1               	clrf	??_sprintf+1
  2305  0777  0830               	movf	??_sprintf,w
  2306  0778  00B7               	movwf	sprintf@prec
  2307  0779  0831               	movf	??_sprintf+1,w
  2308  077A  00B8               	movwf	sprintf@prec+1
  2309                           
  2310                           ;doprnt.c: 1500: while(prec--) {
  2311  077B  2FC0               	goto	l1900
  2312  077C                     l1894:
  2313                           
  2314                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  2315  077C  3000               	movlw	0
  2316  077D  00A3               	movwf	___llmod@divisor+3
  2317  077E  3000               	movlw	0
  2318  077F  00A2               	movwf	___llmod@divisor+2
  2319  0780  3000               	movlw	0
  2320  0781  00A1               	movwf	___llmod@divisor+1
  2321  0782  300A               	movlw	10
  2322  0783  00A0               	movwf	___llmod@divisor
  2323  0784  0838               	movf	sprintf@prec+1,w
  2324  0785  0085               	movwf	5
  2325  0786  0837               	movf	sprintf@prec,w
  2326  0787  0084               	movwf	4
  2327  0788  3584               	lslf	4,f
  2328  0789  0D85               	rlf	5,f
  2329  078A  3584               	lslf	4,f
  2330  078B  0D85               	rlf	5,f
  2331  078C  3000               	movlw	low (_dpowers| (0+32768))
  2332  078D  0784               	addwf	4,f
  2333  078E  3088               	movlw	high (_dpowers| (0+32768))
  2334  078F  3D85               	addwfc	5,f
  2335  0790  3F00               	moviw [0]fsr0
  2336  0791  00F0               	movwf	___lldiv@divisor
  2337  0792  3F01               	moviw [1]fsr0
  2338  0793  00F1               	movwf	___lldiv@divisor+1
  2339  0794  3F02               	moviw [2]fsr0
  2340  0795  00F2               	movwf	___lldiv@divisor+2
  2341  0796  3F03               	moviw [3]fsr0
  2342  0797  00F3               	movwf	___lldiv@divisor+3
  2343  0798  083C               	movf	sprintf@val+3,w
  2344  0799  00F7               	movwf	___lldiv@dividend+3
  2345  079A  083B               	movf	sprintf@val+2,w
  2346  079B  00F6               	movwf	___lldiv@dividend+2
  2347  079C  083A               	movf	sprintf@val+1,w
  2348  079D  00F5               	movwf	___lldiv@dividend+1
  2349  079E  0839               	movf	sprintf@val,w
  2350  079F  00F4               	movwf	___lldiv@dividend
  2351  07A0  3183  2370  3186   	fcall	___lldiv
  2352  07A3  0873               	movf	?___lldiv+3,w
  2353  07A4  0020               	movlb	0	; select bank0
  2354  07A5  00A7               	movwf	___llmod@dividend+3
  2355  07A6  0872               	movf	?___lldiv+2,w
  2356  07A7  00A6               	movwf	___llmod@dividend+2
  2357  07A8  0871               	movf	?___lldiv+1,w
  2358  07A9  00A5               	movwf	___llmod@dividend+1
  2359  07AA  0870               	movf	?___lldiv,w
  2360  07AB  00A4               	movwf	___llmod@dividend
  2361  07AC  3182  22D9  3186   	fcall	___llmod
  2362  07AF  0020               	movlb	0	; select bank0
  2363  07B0  0820               	movf	?___llmod,w
  2364  07B1  3E30               	addlw	48
  2365  07B2  00B0               	movwf	??_sprintf
  2366  07B3  0830               	movf	??_sprintf,w
  2367  07B4  00BF               	movwf	sprintf@c
  2368  07B5                     l1896:
  2369                           
  2370                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2371  07B5  083F               	movf	sprintf@c,w
  2372  07B6  00B0               	movwf	??_sprintf
  2373  07B7  083E               	movf	sprintf@sp,w
  2374  07B8  0086               	movwf	6
  2375  07B9  0187               	clrf	7
  2376  07BA  0830               	movf	??_sprintf,w
  2377  07BB  0081               	movwf	1
  2378  07BC                     l1898:
  2379  07BC  3001               	movlw	1
  2380  07BD  00B0               	movwf	??_sprintf
  2381  07BE  0830               	movf	??_sprintf,w
  2382  07BF  07BE               	addwf	sprintf@sp,f
  2383  07C0                     l1900:
  2384  07C0  30FF               	movlw	255
  2385  07C1  07B7               	addwf	sprintf@prec,f
  2386  07C2  30FF               	movlw	255
  2387  07C3  3DB8               	addwfc	sprintf@prec+1,f
  2388  07C4  0A37               	incf	sprintf@prec,w
  2389  07C5  1D03               	skipz
  2390  07C6  2FCB               	goto	u1171
  2391  07C7  0A38               	incf	sprintf@prec+1,w
  2392  07C8  1D03               	btfss	3,2
  2393  07C9  2FCB               	goto	u1171
  2394  07CA  2FCC               	goto	u1170
  2395  07CB                     u1171:
  2396  07CB  2F7C               	goto	l1894
  2397  07CC                     u1170:
  2398  07CC                     l1902:
  2399  07CC  082B               	movf	sprintf@f+1,w
  2400  07CD  00B1               	movwf	??_sprintf+1
  2401  07CE  082A               	movf	sprintf@f,w
  2402  07CF  00B0               	movwf	??_sprintf
  2403  07D0  0AAA               	incf	sprintf@f,f
  2404  07D1  1903               	skipnz
  2405  07D2  0AAB               	incf	sprintf@f+1,f
  2406  07D3  0830               	movf	??_sprintf,w
  2407  07D4  0084               	movwf	4
  2408  07D5  0831               	movf	??_sprintf+1,w
  2409  07D6  0085               	movwf	5
  2410  07D7  0800               	movf	0,w	;code access
  2411  07D8  00B2               	movwf	??_sprintf+2
  2412  07D9  0832               	movf	??_sprintf+2,w
  2413  07DA  00BF               	movwf	sprintf@c
  2414  07DB  083F               	movf	sprintf@c,w
  2415  07DC  1D03               	btfss	3,2
  2416  07DD  2FDF               	goto	u1181
  2417  07DE  2FE0               	goto	u1180
  2418  07DF                     u1181:
  2419  07DF  2EE9               	goto	l1858
  2420  07E0                     u1180:
  2421  07E0                     l1904:
  2422                           
  2423                           ;doprnt.c: 1564: *sp = 0;
  2424  07E0  083E               	movf	sprintf@sp,w
  2425  07E1  0086               	movwf	6
  2426  07E2  0187               	clrf	7
  2427  07E3  0181               	clrf	1
  2428  07E4                     l426:
  2429  07E4  0008               	return
  2430  07E5                     __end_of_sprintf:
  2431                           
  2432                           	psect	text2
  2433  02D9                     __ptext2:	
  2434 ;; *************** function ___llmod *****************
  2435 ;; Defined at:
  2436 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  divisor         4    0[BANK0 ] unsigned long 
  2439 ;;  dividend        4    4[BANK0 ] unsigned long 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  counter         1    9[BANK0 ] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  4    0[BANK0 ] unsigned long 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2451 ;;      Params:         0       8       0       0       0       0
  2452 ;;      Locals:         0       1       0       0       0       0
  2453 ;;      Temps:          0       1       0       0       0       0
  2454 ;;      Totals:         0      10       0       0       0       0
  2455 ;;Total ram usage:       10 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_sprintf
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function ___llmod
  2466  02D9                     ___llmod:
  2467  02D9                     l1600:	
  2468                           ;incstack = 0
  2469                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2470                           
  2471  02D9  0020               	movlb	0	; select bank0
  2472  02DA  0823               	movf	___llmod@divisor+3,w
  2473  02DB  0422               	iorwf	___llmod@divisor+2,w
  2474  02DC  0421               	iorwf	___llmod@divisor+1,w
  2475  02DD  0420               	iorwf	___llmod@divisor,w
  2476  02DE  1903               	skipnz
  2477  02DF  2AE1               	goto	u771
  2478  02E0  2AE2               	goto	u770
  2479  02E1                     u771:
  2480  02E1  2B1B               	goto	l1616
  2481  02E2                     u770:
  2482  02E2                     l1602:
  2483  02E2  01A9               	clrf	___llmod@counter
  2484  02E3  0AA9               	incf	___llmod@counter,f
  2485  02E4  2AF0               	goto	l1606
  2486  02E5                     l1604:
  2487  02E5  3001               	movlw	1
  2488  02E6                     u785:
  2489  02E6  35A0               	lslf	___llmod@divisor,f
  2490  02E7  0DA1               	rlf	___llmod@divisor+1,f
  2491  02E8  0DA2               	rlf	___llmod@divisor+2,f
  2492  02E9  0DA3               	rlf	___llmod@divisor+3,f
  2493  02EA  0B89               	decfsz	9,f
  2494  02EB  2AE6               	goto	u785
  2495  02EC  3001               	movlw	1
  2496  02ED  00A8               	movwf	??___llmod
  2497  02EE  0828               	movf	??___llmod,w
  2498  02EF  07A9               	addwf	___llmod@counter,f
  2499  02F0                     l1606:
  2500  02F0  1FA3               	btfss	___llmod@divisor+3,7
  2501  02F1  2AF3               	goto	u791
  2502  02F2  2AF4               	goto	u790
  2503  02F3                     u791:
  2504  02F3  2AE5               	goto	l1604
  2505  02F4                     u790:
  2506  02F4                     l1608:
  2507  02F4  0823               	movf	___llmod@divisor+3,w
  2508  02F5  0227               	subwf	___llmod@dividend+3,w
  2509  02F6  1D03               	skipz
  2510  02F7  2B02               	goto	u805
  2511  02F8  0822               	movf	___llmod@divisor+2,w
  2512  02F9  0226               	subwf	___llmod@dividend+2,w
  2513  02FA  1D03               	skipz
  2514  02FB  2B02               	goto	u805
  2515  02FC  0821               	movf	___llmod@divisor+1,w
  2516  02FD  0225               	subwf	___llmod@dividend+1,w
  2517  02FE  1D03               	skipz
  2518  02FF  2B02               	goto	u805
  2519  0300  0820               	movf	___llmod@divisor,w
  2520  0301  0224               	subwf	___llmod@dividend,w
  2521  0302                     u805:
  2522  0302  1C03               	skipc
  2523  0303  2B05               	goto	u801
  2524  0304  2B06               	goto	u800
  2525  0305                     u801:
  2526  0305  2B0E               	goto	l1612
  2527  0306                     u800:
  2528  0306                     l1610:
  2529  0306  0820               	movf	___llmod@divisor,w
  2530  0307  02A4               	subwf	___llmod@dividend,f
  2531  0308  0821               	movf	___llmod@divisor+1,w
  2532  0309  3BA5               	subwfb	___llmod@dividend+1,f
  2533  030A  0822               	movf	___llmod@divisor+2,w
  2534  030B  3BA6               	subwfb	___llmod@dividend+2,f
  2535  030C  0823               	movf	___llmod@divisor+3,w
  2536  030D  3BA7               	subwfb	___llmod@dividend+3,f
  2537  030E                     l1612:
  2538  030E  3001               	movlw	1
  2539  030F                     u815:
  2540  030F  36A3               	lsrf	___llmod@divisor+3,f
  2541  0310  0CA2               	rrf	___llmod@divisor+2,f
  2542  0311  0CA1               	rrf	___llmod@divisor+1,f
  2543  0312  0CA0               	rrf	___llmod@divisor,f
  2544  0313  0B89               	decfsz	9,f
  2545  0314  2B0F               	goto	u815
  2546  0315                     l1614:
  2547  0315  3001               	movlw	1
  2548  0316  02A9               	subwf	___llmod@counter,f
  2549  0317  1D03               	btfss	3,2
  2550  0318  2B1A               	goto	u821
  2551  0319  2B1B               	goto	u820
  2552  031A                     u821:
  2553  031A  2AF4               	goto	l1608
  2554  031B                     u820:
  2555  031B                     l1616:
  2556  031B  0827               	movf	___llmod@dividend+3,w
  2557  031C  00A3               	movwf	?___llmod+3
  2558  031D  0826               	movf	___llmod@dividend+2,w
  2559  031E  00A2               	movwf	?___llmod+2
  2560  031F  0825               	movf	___llmod@dividend+1,w
  2561  0320  00A1               	movwf	?___llmod+1
  2562  0321  0824               	movf	___llmod@dividend,w
  2563  0322  00A0               	movwf	?___llmod
  2564  0323                     l652:
  2565  0323  0008               	return
  2566  0324                     __end_of___llmod:
  2567                           
  2568                           	psect	text3
  2569  0370                     __ptext3:	
  2570 ;; *************** function ___lldiv *****************
  2571 ;; Defined at:
  2572 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  divisor         4    0[COMMON] unsigned long 
  2575 ;;  dividend        4    4[COMMON] unsigned long 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  quotient        4    9[COMMON] unsigned long 
  2578 ;;  counter         1   13[COMMON] unsigned char 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  4    0[COMMON] unsigned long 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, status,0
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2588 ;;      Params:         8       0       0       0       0       0
  2589 ;;      Locals:         5       0       0       0       0       0
  2590 ;;      Temps:          1       0       0       0       0       0
  2591 ;;      Totals:        14       0       0       0       0       0
  2592 ;;Total ram usage:       14 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_sprintf
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           
  2602                           ;psect for function ___lldiv
  2603  0370                     ___lldiv:
  2604  0370                     l1576:	
  2605                           ;incstack = 0
  2606                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2607                           
  2608  0370  3000               	movlw	0
  2609  0371  00FC               	movwf	___lldiv@quotient+3
  2610  0372  3000               	movlw	0
  2611  0373  00FB               	movwf	___lldiv@quotient+2
  2612  0374  3000               	movlw	0
  2613  0375  00FA               	movwf	___lldiv@quotient+1
  2614  0376  3000               	movlw	0
  2615  0377  00F9               	movwf	___lldiv@quotient
  2616  0378  0873               	movf	___lldiv@divisor+3,w
  2617  0379  0472               	iorwf	___lldiv@divisor+2,w
  2618  037A  0471               	iorwf	___lldiv@divisor+1,w
  2619  037B  0470               	iorwf	___lldiv@divisor,w
  2620  037C  1903               	skipnz
  2621  037D  2B7F               	goto	u701
  2622  037E  2B80               	goto	u700
  2623  037F                     u701:
  2624  037F  2BC1               	goto	l1596
  2625  0380                     u700:
  2626  0380                     l1578:
  2627  0380  01FD               	clrf	___lldiv@counter
  2628  0381  0AFD               	incf	___lldiv@counter,f
  2629  0382  2B8E               	goto	l1582
  2630  0383                     l1580:
  2631  0383  3001               	movlw	1
  2632  0384                     u715:
  2633  0384  35F0               	lslf	___lldiv@divisor,f
  2634  0385  0DF1               	rlf	___lldiv@divisor+1,f
  2635  0386  0DF2               	rlf	___lldiv@divisor+2,f
  2636  0387  0DF3               	rlf	___lldiv@divisor+3,f
  2637  0388  0B89               	decfsz	9,f
  2638  0389  2B84               	goto	u715
  2639  038A  3001               	movlw	1
  2640  038B  00F8               	movwf	??___lldiv
  2641  038C  0878               	movf	??___lldiv,w
  2642  038D  07FD               	addwf	___lldiv@counter,f
  2643  038E                     l1582:
  2644  038E  1FF3               	btfss	___lldiv@divisor+3,7
  2645  038F  2B91               	goto	u721
  2646  0390  2B92               	goto	u720
  2647  0391                     u721:
  2648  0391  2B83               	goto	l1580
  2649  0392                     u720:
  2650  0392                     l1584:
  2651  0392  3001               	movlw	1
  2652  0393                     u735:
  2653  0393  35F9               	lslf	___lldiv@quotient,f
  2654  0394  0DFA               	rlf	___lldiv@quotient+1,f
  2655  0395  0DFB               	rlf	___lldiv@quotient+2,f
  2656  0396  0DFC               	rlf	___lldiv@quotient+3,f
  2657  0397  0B89               	decfsz	9,f
  2658  0398  2B93               	goto	u735
  2659  0399                     l1586:
  2660  0399  0873               	movf	___lldiv@divisor+3,w
  2661  039A  0277               	subwf	___lldiv@dividend+3,w
  2662  039B  1D03               	skipz
  2663  039C  2BA7               	goto	u745
  2664  039D  0872               	movf	___lldiv@divisor+2,w
  2665  039E  0276               	subwf	___lldiv@dividend+2,w
  2666  039F  1D03               	skipz
  2667  03A0  2BA7               	goto	u745
  2668  03A1  0871               	movf	___lldiv@divisor+1,w
  2669  03A2  0275               	subwf	___lldiv@dividend+1,w
  2670  03A3  1D03               	skipz
  2671  03A4  2BA7               	goto	u745
  2672  03A5  0870               	movf	___lldiv@divisor,w
  2673  03A6  0274               	subwf	___lldiv@dividend,w
  2674  03A7                     u745:
  2675  03A7  1C03               	skipc
  2676  03A8  2BAA               	goto	u741
  2677  03A9  2BAB               	goto	u740
  2678  03AA                     u741:
  2679  03AA  2BB4               	goto	l1592
  2680  03AB                     u740:
  2681  03AB                     l1588:
  2682  03AB  0870               	movf	___lldiv@divisor,w
  2683  03AC  02F4               	subwf	___lldiv@dividend,f
  2684  03AD  0871               	movf	___lldiv@divisor+1,w
  2685  03AE  3BF5               	subwfb	___lldiv@dividend+1,f
  2686  03AF  0872               	movf	___lldiv@divisor+2,w
  2687  03B0  3BF6               	subwfb	___lldiv@dividend+2,f
  2688  03B1  0873               	movf	___lldiv@divisor+3,w
  2689  03B2  3BF7               	subwfb	___lldiv@dividend+3,f
  2690  03B3                     l1590:
  2691  03B3  1479               	bsf	___lldiv@quotient,0
  2692  03B4                     l1592:
  2693  03B4  3001               	movlw	1
  2694  03B5                     u755:
  2695  03B5  36F3               	lsrf	___lldiv@divisor+3,f
  2696  03B6  0CF2               	rrf	___lldiv@divisor+2,f
  2697  03B7  0CF1               	rrf	___lldiv@divisor+1,f
  2698  03B8  0CF0               	rrf	___lldiv@divisor,f
  2699  03B9  0B89               	decfsz	9,f
  2700  03BA  2BB5               	goto	u755
  2701  03BB                     l1594:
  2702  03BB  3001               	movlw	1
  2703  03BC  02FD               	subwf	___lldiv@counter,f
  2704  03BD  1D03               	btfss	3,2
  2705  03BE  2BC0               	goto	u761
  2706  03BF  2BC1               	goto	u760
  2707  03C0                     u761:
  2708  03C0  2B92               	goto	l1584
  2709  03C1                     u760:
  2710  03C1                     l1596:
  2711  03C1  087C               	movf	___lldiv@quotient+3,w
  2712  03C2  00F3               	movwf	?___lldiv+3
  2713  03C3  087B               	movf	___lldiv@quotient+2,w
  2714  03C4  00F2               	movwf	?___lldiv+2
  2715  03C5  087A               	movf	___lldiv@quotient+1,w
  2716  03C6  00F1               	movwf	?___lldiv+1
  2717  03C7  0879               	movf	___lldiv@quotient,w
  2718  03C8  00F0               	movwf	?___lldiv
  2719  03C9                     l466:
  2720  03C9  0008               	return
  2721  03CA                     __end_of___lldiv:
  2722                           
  2723                           	psect	text4
  2724  0270                     __ptext4:	
  2725 ;; *************** function _scale_convert_gram *****************
  2726 ;; Defined at:
  2727 ;;		line 64 in file "loadcell.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  count           3    0[BANK0 ] unsigned um
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  temp            4    7[BANK0 ] float 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  4    0[BANK0 ] float 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0, pclath, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2741 ;;      Params:         0       4       0       0       0       0
  2742 ;;      Locals:         0       4       0       0       0       0
  2743 ;;      Temps:          0       3       0       0       0       0
  2744 ;;      Totals:         0      11       0       0       0       0
  2745 ;;Total ram usage:       11 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; Hardware stack levels required when called: 1
  2748 ;; This function calls:
  2749 ;;		___xxtofl
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           
  2756                           ;psect for function _scale_convert_gram
  2757  0270                     _scale_convert_gram:
  2758  0270                     l1850:	
  2759                           ;incstack = 0
  2760                           ; Regs used in _scale_convert_gram: [wreg+status,2+status,0+pclath+cstack]
  2761                           
  2762                           
  2763                           ;loadcell.c: 66: float temp = count - weight_zero;
  2764  0270  0020               	movlb	0	; select bank0
  2765  0271  084A               	movf	_weight_zero,w
  2766  0272  0220               	subwf	scale_convert_gram@count,w
  2767  0273  00A4               	movwf	??_scale_convert_gram
  2768  0274  0821               	movf	scale_convert_gram@count+1,w
  2769  0275  00A5               	movwf	??_scale_convert_gram+1
  2770  0276  084B               	movf	_weight_zero+1,w
  2771  0277  1C03               	skipc
  2772  0278  0F4B               	incfsz	_weight_zero+1,w
  2773  0279  2A7B               	goto	u1121
  2774  027A  2A7C               	goto	u1122
  2775  027B                     u1121:
  2776  027B  02A5               	subwf	??_scale_convert_gram+1,f
  2777  027C                     u1122:
  2778  027C  0822               	movf	scale_convert_gram@count+2,w
  2779  027D  00A6               	movwf	??_scale_convert_gram+2
  2780  027E  084C               	movf	_weight_zero+2,w
  2781  027F  1C03               	skipc
  2782  0280  0F4C               	incfsz	_weight_zero+2,w
  2783  0281  2A83               	goto	u1123
  2784  0282  2A84               	goto	u1124
  2785  0283                     u1123:
  2786  0283  02A6               	subwf	??_scale_convert_gram+2,f
  2787  0284                     u1124:
  2788  0284  0824               	movf	??_scale_convert_gram,w
  2789  0285  00F0               	movwf	___xxtofl@val
  2790  0286  0825               	movf	??_scale_convert_gram+1,w
  2791  0287  00F1               	movwf	___xxtofl@val+1
  2792  0288  0826               	movf	??_scale_convert_gram+2,w
  2793  0289  00F2               	movwf	___xxtofl@val+2
  2794  028A  01F3               	clrf	___xxtofl@val+3
  2795  028B  3000               	movlw	0
  2796  028C  3184  2470  3182   	fcall	___xxtofl
  2797  028F  0873               	movf	?___xxtofl+3,w
  2798  0290  0020               	movlb	0	; select bank0
  2799  0291  00AA               	movwf	scale_convert_gram@temp+3
  2800  0292  0872               	movf	?___xxtofl+2,w
  2801  0293  00A9               	movwf	scale_convert_gram@temp+2
  2802  0294  0871               	movf	?___xxtofl+1,w
  2803  0295  00A8               	movwf	scale_convert_gram@temp+1
  2804  0296  0870               	movf	?___xxtofl,w
  2805  0297  00A7               	movwf	scale_convert_gram@temp
  2806  0298                     l1852:
  2807                           
  2808                           ;loadcell.c: 68: return temp;
  2809  0298  082A               	movf	scale_convert_gram@temp+3,w
  2810  0299  00A3               	movwf	?_scale_convert_gram+3
  2811  029A  0829               	movf	scale_convert_gram@temp+2,w
  2812  029B  00A2               	movwf	?_scale_convert_gram+2
  2813  029C  0828               	movf	scale_convert_gram@temp+1,w
  2814  029D  00A1               	movwf	?_scale_convert_gram+1
  2815  029E  0827               	movf	scale_convert_gram@temp,w
  2816  029F  00A0               	movwf	?_scale_convert_gram
  2817  02A0                     l153:
  2818  02A0  0008               	return
  2819  02A1                     __end_of_scale_convert_gram:
  2820                           
  2821                           	psect	text5
  2822  0470                     __ptext5:	
  2823 ;; *************** function ___xxtofl *****************
  2824 ;; Defined at:
  2825 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  sign            1    wreg     unsigned char 
  2828 ;;  val             4    0[COMMON] long 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  sign            1    8[COMMON] unsigned char 
  2831 ;;  arg             4   10[COMMON] unsigned long 
  2832 ;;  exp             1    9[COMMON] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  4    0[COMMON] unsigned char 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2842 ;;      Params:         4       0       0       0       0       0
  2843 ;;      Locals:         6       0       0       0       0       0
  2844 ;;      Temps:          4       0       0       0       0       0
  2845 ;;      Totals:        14       0       0       0       0       0
  2846 ;;Total ram usage:       14 bytes
  2847 ;; Hardware stack levels used: 1
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_scale_convert_gram
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function ___xxtofl
  2857  0470                     ___xxtofl:
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2861                           ;___xxtofl@sign stored from wreg
  2862  0470  00F8               	movwf	___xxtofl@sign
  2863  0471                     l1644:
  2864  0471  0878               	movf	___xxtofl@sign,w
  2865  0472  1903               	btfsc	3,2
  2866  0473  2C75               	goto	u901
  2867  0474  2C76               	goto	u900
  2868  0475                     u901:
  2869  0475  2C8A               	goto	l1650
  2870  0476                     u900:
  2871  0476                     l1646:
  2872  0476  1FF3               	btfss	___xxtofl@val+3,7
  2873  0477  2C79               	goto	u911
  2874  0478  2C7A               	goto	u910
  2875  0479                     u911:
  2876  0479  2C8A               	goto	l1650
  2877  047A                     u910:
  2878  047A                     l1648:
  2879  047A  0970               	comf	___xxtofl@val,w
  2880  047B  00FA               	movwf	___xxtofl@arg
  2881  047C  0971               	comf	___xxtofl@val+1,w
  2882  047D  00FB               	movwf	___xxtofl@arg+1
  2883  047E  0972               	comf	___xxtofl@val+2,w
  2884  047F  00FC               	movwf	___xxtofl@arg+2
  2885  0480  0973               	comf	___xxtofl@val+3,w
  2886  0481  00FD               	movwf	___xxtofl@arg+3
  2887  0482  0AFA               	incf	___xxtofl@arg,f
  2888  0483  1903               	skipnz
  2889  0484  0AFB               	incf	___xxtofl@arg+1,f
  2890  0485  1903               	skipnz
  2891  0486  0AFC               	incf	___xxtofl@arg+2,f
  2892  0487  1903               	skipnz
  2893  0488  0AFD               	incf	___xxtofl@arg+3,f
  2894  0489  2C92               	goto	l863
  2895  048A                     l1650:
  2896  048A  0873               	movf	___xxtofl@val+3,w
  2897  048B  00FD               	movwf	___xxtofl@arg+3
  2898  048C  0872               	movf	___xxtofl@val+2,w
  2899  048D  00FC               	movwf	___xxtofl@arg+2
  2900  048E  0871               	movf	___xxtofl@val+1,w
  2901  048F  00FB               	movwf	___xxtofl@arg+1
  2902  0490  0870               	movf	___xxtofl@val,w
  2903  0491  00FA               	movwf	___xxtofl@arg
  2904  0492                     l863:
  2905  0492  0873               	movf	___xxtofl@val+3,w
  2906  0493  0472               	iorwf	___xxtofl@val+2,w
  2907  0494  0471               	iorwf	___xxtofl@val+1,w
  2908  0495  0470               	iorwf	___xxtofl@val,w
  2909  0496  1D03               	skipz
  2910  0497  2C99               	goto	u921
  2911  0498  2C9A               	goto	u920
  2912  0499                     u921:
  2913  0499  2CA3               	goto	l1656
  2914  049A                     u920:
  2915  049A                     l1652:
  2916  049A  3000               	movlw	0
  2917  049B  00F3               	movwf	?___xxtofl+3
  2918  049C  3000               	movlw	0
  2919  049D  00F2               	movwf	?___xxtofl+2
  2920  049E  3000               	movlw	0
  2921  049F  00F1               	movwf	?___xxtofl+1
  2922  04A0  3000               	movlw	0
  2923  04A1  00F0               	movwf	?___xxtofl
  2924  04A2  2D1B               	goto	l865
  2925  04A3                     l1656:
  2926  04A3  3096               	movlw	150
  2927  04A4  00F4               	movwf	??___xxtofl
  2928  04A5  0874               	movf	??___xxtofl,w
  2929  04A6  00F9               	movwf	___xxtofl@exp
  2930  04A7  2CB3               	goto	l1660
  2931  04A8                     l1658:
  2932  04A8  3001               	movlw	1
  2933  04A9  00F4               	movwf	??___xxtofl
  2934  04AA  0874               	movf	??___xxtofl,w
  2935  04AB  07F9               	addwf	___xxtofl@exp,f
  2936  04AC  3001               	movlw	1
  2937  04AD                     u935:
  2938  04AD  36FD               	lsrf	___xxtofl@arg+3,f
  2939  04AE  0CFC               	rrf	___xxtofl@arg+2,f
  2940  04AF  0CFB               	rrf	___xxtofl@arg+1,f
  2941  04B0  0CFA               	rrf	___xxtofl@arg,f
  2942  04B1  0B89               	decfsz	9,f
  2943  04B2  2CAD               	goto	u935
  2944  04B3                     l1660:
  2945  04B3  30FE               	movlw	254
  2946  04B4  057D               	andwf	___xxtofl@arg+3,w
  2947  04B5  1D03               	btfss	3,2
  2948  04B6  2CB8               	goto	u941
  2949  04B7  2CB9               	goto	u940
  2950  04B8                     u941:
  2951  04B8  2CA8               	goto	l1658
  2952  04B9                     u940:
  2953  04B9  2CCD               	goto	l869
  2954  04BA                     l1662:
  2955  04BA  3001               	movlw	1
  2956  04BB  00F4               	movwf	??___xxtofl
  2957  04BC  0874               	movf	??___xxtofl,w
  2958  04BD  07F9               	addwf	___xxtofl@exp,f
  2959  04BE                     l1664:
  2960  04BE  3001               	movlw	1
  2961  04BF  07FA               	addwf	___xxtofl@arg,f
  2962  04C0  3000               	movlw	0
  2963  04C1  3DFB               	addwfc	___xxtofl@arg+1,f
  2964  04C2  3000               	movlw	0
  2965  04C3  3DFC               	addwfc	___xxtofl@arg+2,f
  2966  04C4  3000               	movlw	0
  2967  04C5  3DFD               	addwfc	___xxtofl@arg+3,f
  2968  04C6                     l1666:
  2969  04C6  3001               	movlw	1
  2970  04C7                     u955:
  2971  04C7  36FD               	lsrf	___xxtofl@arg+3,f
  2972  04C8  0CFC               	rrf	___xxtofl@arg+2,f
  2973  04C9  0CFB               	rrf	___xxtofl@arg+1,f
  2974  04CA  0CFA               	rrf	___xxtofl@arg,f
  2975  04CB  0B89               	decfsz	9,f
  2976  04CC  2CC7               	goto	u955
  2977  04CD                     l869:
  2978  04CD  30FF               	movlw	255
  2979  04CE  057D               	andwf	___xxtofl@arg+3,w
  2980  04CF  1D03               	btfss	3,2
  2981  04D0  2CD2               	goto	u961
  2982  04D1  2CD3               	goto	u960
  2983  04D2                     u961:
  2984  04D2  2CBA               	goto	l1662
  2985  04D3                     u960:
  2986  04D3  2CDD               	goto	l1670
  2987  04D4                     l1668:
  2988  04D4  3001               	movlw	1
  2989  04D5  02F9               	subwf	___xxtofl@exp,f
  2990  04D6  3001               	movlw	1
  2991  04D7                     u975:
  2992  04D7  35FA               	lslf	___xxtofl@arg,f
  2993  04D8  0DFB               	rlf	___xxtofl@arg+1,f
  2994  04D9  0DFC               	rlf	___xxtofl@arg+2,f
  2995  04DA  0DFD               	rlf	___xxtofl@arg+3,f
  2996  04DB  0B89               	decfsz	9,f
  2997  04DC  2CD7               	goto	u975
  2998  04DD                     l1670:
  2999  04DD  1BFC               	btfsc	___xxtofl@arg+2,7
  3000  04DE  2CE0               	goto	u981
  3001  04DF  2CE1               	goto	u980
  3002  04E0                     u981:
  3003  04E0  2CE7               	goto	l876
  3004  04E1                     u980:
  3005  04E1                     l1672:
  3006  04E1  3002               	movlw	2
  3007  04E2  0279               	subwf	___xxtofl@exp,w
  3008  04E3  1803               	skipnc
  3009  04E4  2CE6               	goto	u991
  3010  04E5  2CE7               	goto	u990
  3011  04E6                     u991:
  3012  04E6  2CD4               	goto	l1668
  3013  04E7                     u990:
  3014  04E7                     l876:
  3015  04E7  1879               	btfsc	___xxtofl@exp,0
  3016  04E8  2CEA               	goto	u1001
  3017  04E9  2CEB               	goto	u1000
  3018  04EA                     u1001:
  3019  04EA  2CF3               	goto	l877
  3020  04EB                     u1000:
  3021  04EB                     l1674:
  3022  04EB  30FF               	movlw	255
  3023  04EC  05FA               	andwf	___xxtofl@arg,f
  3024  04ED  30FF               	movlw	255
  3025  04EE  05FB               	andwf	___xxtofl@arg+1,f
  3026  04EF  307F               	movlw	127
  3027  04F0  05FC               	andwf	___xxtofl@arg+2,f
  3028  04F1  30FF               	movlw	255
  3029  04F2  05FD               	andwf	___xxtofl@arg+3,f
  3030  04F3                     l877:
  3031  04F3  1003               	clrc
  3032  04F4  0CF9               	rrf	___xxtofl@exp,f
  3033  04F5                     l1676:
  3034  04F5  0879               	movf	___xxtofl@exp,w
  3035  04F6  00F4               	movwf	??___xxtofl
  3036  04F7  01F5               	clrf	??___xxtofl+1
  3037  04F8  01F6               	clrf	??___xxtofl+2
  3038  04F9  01F7               	clrf	??___xxtofl+3
  3039  04FA  3018               	movlw	24
  3040  04FB                     u1015:
  3041  04FB  35F4               	lslf	??___xxtofl,f
  3042  04FC  0DF5               	rlf	??___xxtofl+1,f
  3043  04FD  0DF6               	rlf	??___xxtofl+2,f
  3044  04FE  0DF7               	rlf	??___xxtofl+3,f
  3045  04FF                     u1010:
  3046  04FF  0B89               	decfsz	9,f
  3047  0500  2CFB               	goto	u1015
  3048  0501  0874               	movf	??___xxtofl,w
  3049  0502  04FA               	iorwf	___xxtofl@arg,f
  3050  0503  0875               	movf	??___xxtofl+1,w
  3051  0504  04FB               	iorwf	___xxtofl@arg+1,f
  3052  0505  0876               	movf	??___xxtofl+2,w
  3053  0506  04FC               	iorwf	___xxtofl@arg+2,f
  3054  0507  0877               	movf	??___xxtofl+3,w
  3055  0508  04FD               	iorwf	___xxtofl@arg+3,f
  3056  0509                     l1678:
  3057  0509  0878               	movf	___xxtofl@sign,w
  3058  050A  1903               	btfsc	3,2
  3059  050B  2D0D               	goto	u1021
  3060  050C  2D0E               	goto	u1020
  3061  050D                     u1021:
  3062  050D  2D13               	goto	l1684
  3063  050E                     u1020:
  3064  050E                     l1680:
  3065  050E  1FF3               	btfss	___xxtofl@val+3,7
  3066  050F  2D11               	goto	u1031
  3067  0510  2D12               	goto	u1030
  3068  0511                     u1031:
  3069  0511  2D13               	goto	l1684
  3070  0512                     u1030:
  3071  0512                     l1682:
  3072  0512  17FD               	bsf	___xxtofl@arg+3,7
  3073  0513                     l1684:
  3074  0513  087D               	movf	___xxtofl@arg+3,w
  3075  0514  00F3               	movwf	?___xxtofl+3
  3076  0515  087C               	movf	___xxtofl@arg+2,w
  3077  0516  00F2               	movwf	?___xxtofl+2
  3078  0517  087B               	movf	___xxtofl@arg+1,w
  3079  0518  00F1               	movwf	?___xxtofl+1
  3080  0519  087A               	movf	___xxtofl@arg,w
  3081  051A  00F0               	movwf	?___xxtofl
  3082  051B                     l865:
  3083  051B  0008               	return
  3084  051C                     __end_of___xxtofl:
  3085                           
  3086                           	psect	text6
  3087  05F6                     __ptext6:	
  3088 ;; *************** function _lcd_init *****************
  3089 ;; Defined at:
  3090 ;;		line 19 in file "lcd_lib.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0, pclath, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3104 ;;      Params:         0       0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0
  3106 ;;      Temps:          2       0       0       0       0       0
  3107 ;;      Totals:         2       0       0       0       0       0
  3108 ;;Total ram usage:        2 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 3
  3111 ;; This function calls:
  3112 ;;		_lcd_cmd
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           
  3119                           ;psect for function _lcd_init
  3120  05F6                     _lcd_init:
  3121  05F6                     l1690:	
  3122                           ;incstack = 0
  3123                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3124                           
  3125                           
  3126                           ;lcd_lib.c: 20: _delay((unsigned long)((400)*(8000000/4000.0)));
  3127  05F6  3005               	movlw	5
  3128  05F7  00F3               	movwf	??_lcd_init+1
  3129  05F8  300F               	movlw	15
  3130  05F9  00F2               	movwf	??_lcd_init
  3131  05FA  30F1               	movlw	241
  3132  05FB                     u1247:
  3133  05FB  0B89               	decfsz	9,f
  3134  05FC  2DFB               	goto	u1247
  3135  05FD  0BF2               	decfsz	??_lcd_init,f
  3136  05FE  2DFB               	goto	u1247
  3137  05FF  0BF3               	decfsz	??_lcd_init+1,f
  3138  0600  2DFB               	goto	u1247
  3139  0601  0000               	nop
  3140  0602                     l1692:
  3141                           
  3142                           ;lcd_lib.c: 22: lcd_cmd(0x30);
  3143  0602  3030               	movlw	48
  3144  0603  3181  21DF  3185   	fcall	_lcd_cmd
  3145  0606                     l1694:
  3146                           
  3147                           ;lcd_lib.c: 23: lcd_cmd(0x34);
  3148  0606  3034               	movlw	52
  3149  0607  3181  21DF  3185   	fcall	_lcd_cmd
  3150  060A                     l1696:
  3151                           
  3152                           ;lcd_lib.c: 24: lcd_cmd(0x30);
  3153  060A  3030               	movlw	48
  3154  060B  3181  21DF  3185   	fcall	_lcd_cmd
  3155  060E                     l1698:
  3156                           
  3157                           ;lcd_lib.c: 25: _delay((unsigned long)((5)*(8000000/4000.0)));
  3158  060E  300D               	movlw	13
  3159  060F  00F2               	movwf	??_lcd_init
  3160  0610  30FC               	movlw	252
  3161  0611                     u1257:
  3162  0611  0B89               	decfsz	9,f
  3163  0612  2E11               	goto	u1257
  3164  0613  0BF2               	decfsz	??_lcd_init,f
  3165  0614  2E11               	goto	u1257
  3166                           
  3167                           ;lcd_lib.c: 27: lcd_cmd(0x30);
  3168  0615  3030               	movlw	48
  3169  0616  3181  21DF  3185   	fcall	_lcd_cmd
  3170                           
  3171                           ;lcd_lib.c: 28: lcd_cmd(0x34);
  3172  0619  3034               	movlw	52
  3173  061A  3181  21DF  3185   	fcall	_lcd_cmd
  3174                           
  3175                           ;lcd_lib.c: 29: lcd_cmd(0x30);
  3176  061D  3030               	movlw	48
  3177  061E  3181  21DF  3185   	fcall	_lcd_cmd
  3178  0621                     l1700:
  3179                           
  3180                           ;lcd_lib.c: 30: _delay((unsigned long)((5)*(8000000/4000.0)));
  3181  0621  300D               	movlw	13
  3182  0622  00F2               	movwf	??_lcd_init
  3183  0623  30FC               	movlw	252
  3184  0624                     u1267:
  3185  0624  0B89               	decfsz	9,f
  3186  0625  2E24               	goto	u1267
  3187  0626  0BF2               	decfsz	??_lcd_init,f
  3188  0627  2E24               	goto	u1267
  3189  0628                     l1702:
  3190                           
  3191                           ;lcd_lib.c: 32: lcd_cmd(0x30);
  3192  0628  3030               	movlw	48
  3193  0629  3181  21DF  3185   	fcall	_lcd_cmd
  3194  062C                     l1704:
  3195                           
  3196                           ;lcd_lib.c: 33: lcd_cmd(0x34);
  3197  062C  3034               	movlw	52
  3198  062D  3181  21DF  3185   	fcall	_lcd_cmd
  3199  0630                     l1706:
  3200                           
  3201                           ;lcd_lib.c: 34: lcd_cmd(0x30);
  3202  0630  3030               	movlw	48
  3203  0631  3181  21DF  3185   	fcall	_lcd_cmd
  3204                           
  3205                           ;lcd_lib.c: 35: _delay((unsigned long)((300)*(8000000/4000000.0)));
  3206  0634  30C8               	movlw	200
  3207  0635                     u1277:
  3208  0635  0B89               	decfsz	9,f
  3209  0636  2E35               	goto	u1277
  3210  0637                     l1708:
  3211                           
  3212                           ;lcd_lib.c: 37: lcd_cmd(0x20);
  3213  0637  3020               	movlw	32
  3214  0638  3181  21DF  3185   	fcall	_lcd_cmd
  3215  063B                     l1710:
  3216                           
  3217                           ;lcd_lib.c: 38: lcd_cmd(0x24);
  3218  063B  3024               	movlw	36
  3219  063C  3181  21DF  3185   	fcall	_lcd_cmd
  3220  063F                     l1712:
  3221                           
  3222                           ;lcd_lib.c: 39: lcd_cmd(0x20);
  3223  063F  3020               	movlw	32
  3224  0640  3181  21DF  3185   	fcall	_lcd_cmd
  3225  0643                     l1714:
  3226                           
  3227                           ;lcd_lib.c: 40: _delay((unsigned long)((10)*(8000000/4000000.0)));
  3228  0643  3006               	movlw	6
  3229  0644                     u1287:
  3230  0644  0B89               	decfsz	9,f
  3231  0645  2E44               	goto	u1287
  3232  0646  3200               	nop2
  3233                           
  3234                           ;lcd_lib.c: 43: lcd_cmd(0x20);
  3235  0647  3020               	movlw	32
  3236  0648  3181  21DF  3185   	fcall	_lcd_cmd
  3237                           
  3238                           ;lcd_lib.c: 44: lcd_cmd(0x24);
  3239  064B  3024               	movlw	36
  3240  064C  3181  21DF  3185   	fcall	_lcd_cmd
  3241                           
  3242                           ;lcd_lib.c: 45: lcd_cmd(0x20);
  3243  064F  3020               	movlw	32
  3244  0650  3181  21DF  3185   	fcall	_lcd_cmd
  3245  0653                     l1716:
  3246                           
  3247                           ;lcd_lib.c: 47: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3248  0653  3042               	movlw	66
  3249  0654                     u1297:
  3250  0654  0B89               	decfsz	9,f
  3251  0655  2E54               	goto	u1297
  3252  0656  3200               	nop2
  3253  0657                     l1718:
  3254                           
  3255                           ;lcd_lib.c: 49: lcd_cmd(0x80);
  3256  0657  3080               	movlw	128
  3257  0658  3181  21DF  3185   	fcall	_lcd_cmd
  3258  065B                     l1720:
  3259                           
  3260                           ;lcd_lib.c: 50: lcd_cmd(0x84);
  3261  065B  3084               	movlw	132
  3262  065C  3181  21DF  3185   	fcall	_lcd_cmd
  3263  065F                     l1722:
  3264                           
  3265                           ;lcd_lib.c: 51: lcd_cmd(0x80);
  3266  065F  3080               	movlw	128
  3267  0660  3181  21DF  3185   	fcall	_lcd_cmd
  3268  0663                     l1724:
  3269                           
  3270                           ;lcd_lib.c: 55: lcd_cmd(0x00);
  3271  0663  3000               	movlw	0
  3272  0664  3181  21DF  3185   	fcall	_lcd_cmd
  3273  0667                     l1726:
  3274                           
  3275                           ;lcd_lib.c: 56: lcd_cmd(0x04);
  3276  0667  3004               	movlw	4
  3277  0668  3181  21DF  3185   	fcall	_lcd_cmd
  3278  066B                     l1728:
  3279                           
  3280                           ;lcd_lib.c: 57: lcd_cmd(0x00);
  3281  066B  3000               	movlw	0
  3282  066C  3181  21DF  3185   	fcall	_lcd_cmd
  3283  066F                     l1730:
  3284                           
  3285                           ;lcd_lib.c: 59: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3286  066F  3042               	movlw	66
  3287  0670                     u1307:
  3288  0670  0B89               	decfsz	9,f
  3289  0671  2E70               	goto	u1307
  3290  0672  3200               	nop2
  3291                           
  3292                           ;lcd_lib.c: 61: lcd_cmd(0xC0);
  3293  0673  30C0               	movlw	192
  3294  0674  3181  21DF  3185   	fcall	_lcd_cmd
  3295                           
  3296                           ;lcd_lib.c: 62: lcd_cmd(0xC4);
  3297  0677  30C4               	movlw	196
  3298  0678  3181  21DF  3185   	fcall	_lcd_cmd
  3299                           
  3300                           ;lcd_lib.c: 63: lcd_cmd(0xC0);
  3301  067B  30C0               	movlw	192
  3302  067C  3181  21DF  3185   	fcall	_lcd_cmd
  3303                           
  3304                           ;lcd_lib.c: 67: lcd_cmd(0x00);
  3305  067F  3000               	movlw	0
  3306  0680  3181  21DF  3185   	fcall	_lcd_cmd
  3307                           
  3308                           ;lcd_lib.c: 68: lcd_cmd(0x04);
  3309  0683  3004               	movlw	4
  3310  0684  3181  21DF  3185   	fcall	_lcd_cmd
  3311                           
  3312                           ;lcd_lib.c: 69: lcd_cmd(0x00);
  3313  0687  3000               	movlw	0
  3314  0688  3181  21DF  3185   	fcall	_lcd_cmd
  3315  068B                     l1732:
  3316                           
  3317                           ;lcd_lib.c: 71: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3318  068B  3042               	movlw	66
  3319  068C                     u1317:
  3320  068C  0B89               	decfsz	9,f
  3321  068D  2E8C               	goto	u1317
  3322  068E  3200               	nop2
  3323  068F                     l1734:
  3324                           
  3325                           ;lcd_lib.c: 73: lcd_cmd(0x10);
  3326  068F  3010               	movlw	16
  3327  0690  3181  21DF  3185   	fcall	_lcd_cmd
  3328  0693                     l1736:
  3329                           
  3330                           ;lcd_lib.c: 74: lcd_cmd(0x14);
  3331  0693  3014               	movlw	20
  3332  0694  3181  21DF  3185   	fcall	_lcd_cmd
  3333  0697                     l1738:
  3334                           
  3335                           ;lcd_lib.c: 75: lcd_cmd(0x10);
  3336  0697  3010               	movlw	16
  3337  0698  3181  21DF  3185   	fcall	_lcd_cmd
  3338                           
  3339                           ;lcd_lib.c: 77: _delay((unsigned long)((5)*(8000000/4000.0)));
  3340  069B  300D               	movlw	13
  3341  069C  00F2               	movwf	??_lcd_init
  3342  069D  30FC               	movlw	252
  3343  069E                     u1327:
  3344  069E  0B89               	decfsz	9,f
  3345  069F  2E9E               	goto	u1327
  3346  06A0  0BF2               	decfsz	??_lcd_init,f
  3347  06A1  2E9E               	goto	u1327
  3348  06A2                     l1740:
  3349                           
  3350                           ;lcd_lib.c: 80: lcd_cmd(0x00);
  3351  06A2  3000               	movlw	0
  3352  06A3  3181  21DF  3185   	fcall	_lcd_cmd
  3353  06A6                     l1742:
  3354                           
  3355                           ;lcd_lib.c: 81: lcd_cmd(0x04);
  3356  06A6  3004               	movlw	4
  3357  06A7  3181  21DF  3185   	fcall	_lcd_cmd
  3358  06AA                     l1744:
  3359                           
  3360                           ;lcd_lib.c: 82: lcd_cmd(0x00);
  3361  06AA  3000               	movlw	0
  3362  06AB  3181  21DF  3185   	fcall	_lcd_cmd
  3363  06AE                     l1746:
  3364                           
  3365                           ;lcd_lib.c: 84: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3366  06AE  3042               	movlw	66
  3367  06AF                     u1337:
  3368  06AF  0B89               	decfsz	9,f
  3369  06B0  2EAF               	goto	u1337
  3370  06B1  3200               	nop2
  3371                           
  3372                           ;lcd_lib.c: 86: lcd_cmd(0x60);
  3373  06B2  3060               	movlw	96
  3374  06B3  3181  21DF  3185   	fcall	_lcd_cmd
  3375                           
  3376                           ;lcd_lib.c: 87: lcd_cmd(0x64);
  3377  06B6  3064               	movlw	100
  3378  06B7  3181  21DF  3185   	fcall	_lcd_cmd
  3379                           
  3380                           ;lcd_lib.c: 88: lcd_cmd(0x60);
  3381  06BA  3060               	movlw	96
  3382  06BB  3181  21DF  3185   	fcall	_lcd_cmd
  3383                           
  3384                           ;lcd_lib.c: 92: lcd_cmd(0x00);
  3385  06BE  3000               	movlw	0
  3386  06BF  3181  21DF  3185   	fcall	_lcd_cmd
  3387                           
  3388                           ;lcd_lib.c: 93: lcd_cmd(0x04);
  3389  06C2  3004               	movlw	4
  3390  06C3  3181  21DF  3185   	fcall	_lcd_cmd
  3391                           
  3392                           ;lcd_lib.c: 94: lcd_cmd(0x00);
  3393  06C6  3000               	movlw	0
  3394  06C7  3181  21DF  3185   	fcall	_lcd_cmd
  3395  06CA                     l1748:
  3396                           
  3397                           ;lcd_lib.c: 96: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3398  06CA  3042               	movlw	66
  3399  06CB                     u1347:
  3400  06CB  0B89               	decfsz	9,f
  3401  06CC  2ECB               	goto	u1347
  3402  06CD  3200               	nop2
  3403  06CE                     l1750:
  3404                           
  3405                           ;lcd_lib.c: 98: lcd_cmd(0x20);
  3406  06CE  3020               	movlw	32
  3407  06CF  3181  21DF  3185   	fcall	_lcd_cmd
  3408  06D2                     l1752:
  3409                           
  3410                           ;lcd_lib.c: 99: lcd_cmd(0x24);
  3411  06D2  3024               	movlw	36
  3412  06D3  3181  21DF  3185   	fcall	_lcd_cmd
  3413  06D6                     l1754:
  3414                           
  3415                           ;lcd_lib.c: 100: lcd_cmd(0x20);
  3416  06D6  3020               	movlw	32
  3417  06D7  3181  21DF  3185   	fcall	_lcd_cmd
  3418                           
  3419                           ;lcd_lib.c: 102: _delay((unsigned long)((3)*(8000000/4000.0)));
  3420  06DA  3008               	movlw	8
  3421  06DB  00F2               	movwf	??_lcd_init
  3422  06DC  30CA               	movlw	202
  3423  06DD                     u1357:
  3424  06DD  0B89               	decfsz	9,f
  3425  06DE  2EDD               	goto	u1357
  3426  06DF  0BF2               	decfsz	??_lcd_init,f
  3427  06E0  2EDD               	goto	u1357
  3428  06E1                     l226:
  3429  06E1  0008               	return
  3430  06E2                     __end_of_lcd_init:
  3431                           
  3432                           	psect	text7
  3433  0248                     __ptext7:	
  3434 ;; *************** function _lcd_clear *****************
  3435 ;; Defined at:
  3436 ;;		line 111 in file "lcd_lib.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;		None
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  col             1    7[BANK0 ] unsigned char 
  3441 ;;  row             1    6[BANK0 ] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3451 ;;      Params:         0       0       0       0       0       0
  3452 ;;      Locals:         0       2       0       0       0       0
  3453 ;;      Temps:          1       0       0       0       0       0
  3454 ;;      Totals:         1       2       0       0       0       0
  3455 ;;Total ram usage:        3 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 5
  3458 ;; This function calls:
  3459 ;;		_lcd_print
  3460 ;;		_lcd_set_cursor
  3461 ;; This function is called by:
  3462 ;;		_main
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           
  3467                           ;psect for function _lcd_clear
  3468  0248                     _lcd_clear:
  3469  0248                     l1826:	
  3470                           ;incstack = 0
  3471                           ; Regs used in _lcd_clear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3472                           
  3473                           
  3474                           ;lcd_lib.c: 112: for(uint8_t row = 0; row < 2; row++){
  3475  0248  0020               	movlb	0	; select bank0
  3476  0249  01A6               	clrf	lcd_clear@row
  3477  024A                     l1832:
  3478                           
  3479                           ;lcd_lib.c: 113: for(uint8_t col = 0; col < 16; col++){
  3480  024A  01A7               	clrf	lcd_clear@col
  3481  024B                     l1838:
  3482                           
  3483                           ;lcd_lib.c: 114: lcd_set_cursor(col, row);
  3484  024B  0826               	movf	lcd_clear@row,w
  3485  024C  00FC               	movwf	??_lcd_clear
  3486  024D  087C               	movf	??_lcd_clear,w
  3487  024E  00F8               	movwf	lcd_set_cursor@row
  3488  024F  0827               	movf	lcd_clear@col,w
  3489  0250  3182  2226  3182   	fcall	_lcd_set_cursor
  3490  0253                     l1840:
  3491                           
  3492                           ;lcd_lib.c: 115: lcd_print(" ");
  3493  0253  304A               	movlw	low (STR_5| (0+32768))
  3494  0254  00F8               	movwf	lcd_print@str
  3495  0255  3088               	movlw	high (STR_5| (0+32768))
  3496  0256  00F9               	movwf	lcd_print@str+1
  3497  0257  3182  2209  3182   	fcall	_lcd_print
  3498  025A                     l1842:
  3499  025A  3001               	movlw	1
  3500  025B  00FC               	movwf	??_lcd_clear
  3501  025C  087C               	movf	??_lcd_clear,w
  3502  025D  0020               	movlb	0	; select bank0
  3503  025E  07A7               	addwf	lcd_clear@col,f
  3504  025F                     l1844:
  3505  025F  3010               	movlw	16
  3506  0260  0227               	subwf	lcd_clear@col,w
  3507  0261  1C03               	skipc
  3508  0262  2A64               	goto	u1101
  3509  0263  2A65               	goto	u1100
  3510  0264                     u1101:
  3511  0264  2A4B               	goto	l1838
  3512  0265                     u1100:
  3513  0265                     l1846:
  3514  0265  3001               	movlw	1
  3515  0266  00FC               	movwf	??_lcd_clear
  3516  0267  087C               	movf	??_lcd_clear,w
  3517  0268  07A6               	addwf	lcd_clear@row,f
  3518  0269                     l1848:
  3519  0269  3002               	movlw	2
  3520  026A  0226               	subwf	lcd_clear@row,w
  3521  026B  1C03               	skipc
  3522  026C  2A6E               	goto	u1111
  3523  026D  2A6F               	goto	u1110
  3524  026E                     u1111:
  3525  026E  2A4A               	goto	l1832
  3526  026F                     u1110:
  3527  026F                     l236:
  3528  026F  0008               	return
  3529  0270                     __end_of_lcd_clear:
  3530                           
  3531                           	psect	text8
  3532  0226                     __ptext8:	
  3533 ;; *************** function _lcd_set_cursor *****************
  3534 ;; Defined at:
  3535 ;;		line 120 in file "lcd_lib.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  col             1    wreg     unsigned char 
  3538 ;;  row             1    8[COMMON] unsigned char 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  col             1    4[BANK0 ] unsigned char 
  3541 ;;  row_offsets     4    0[BANK0 ] unsigned char [4]
  3542 ;;  cmd             1    5[BANK0 ] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3552 ;;      Params:         1       0       0       0       0       0
  3553 ;;      Locals:         0       6       0       0       0       0
  3554 ;;      Temps:          1       0       0       0       0       0
  3555 ;;      Totals:         2       6       0       0       0       0
  3556 ;;Total ram usage:        8 bytes
  3557 ;; Hardware stack levels used: 1
  3558 ;; Hardware stack levels required when called: 4
  3559 ;; This function calls:
  3560 ;;		_command
  3561 ;; This function is called by:
  3562 ;;		_main
  3563 ;;		_lcd_clear
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           
  3568                           ;psect for function _lcd_set_cursor
  3569  0226                     _lcd_set_cursor:
  3570                           
  3571                           ;incstack = 0
  3572                           ; Regs used in _lcd_set_cursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3573                           ;lcd_set_cursor@col stored from wreg
  3574  0226  0020               	movlb	0	; select bank0
  3575  0227  00A4               	movwf	lcd_set_cursor@col
  3576  0228                     l1516:
  3577                           
  3578                           ;lcd_lib.c: 121: uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  3579  0228  0864               	movf	lcd_set_cursor@F2395+3,w
  3580  0229  00A3               	movwf	lcd_set_cursor@row_offsets+3
  3581  022A  0863               	movf	lcd_set_cursor@F2395+2,w
  3582  022B  00A2               	movwf	lcd_set_cursor@row_offsets+2
  3583  022C  0862               	movf	lcd_set_cursor@F2395+1,w
  3584  022D  00A1               	movwf	lcd_set_cursor@row_offsets+1
  3585  022E  0861               	movf	lcd_set_cursor@F2395,w
  3586  022F  00A0               	movwf	lcd_set_cursor@row_offsets
  3587                           
  3588                           ;lcd_lib.c: 122: if(row > 2){
  3589  0230  3003               	movlw	3
  3590  0231  0278               	subwf	lcd_set_cursor@row,w
  3591  0232  1C03               	skipc
  3592  0233  2A35               	goto	u681
  3593  0234  2A36               	goto	u680
  3594  0235                     u681:
  3595  0235  2A38               	goto	l1520
  3596  0236                     u680:
  3597  0236                     l1518:
  3598                           
  3599                           ;lcd_lib.c: 123: row = 2 - 1;
  3600  0236  01F8               	clrf	lcd_set_cursor@row
  3601  0237  0AF8               	incf	lcd_set_cursor@row,f
  3602  0238                     l1520:
  3603                           
  3604                           ;lcd_lib.c: 124: };lcd_lib.c: 125: uint8_t cmd = 0x80 | (col + row_offsets[row]);
  3605  0238  0878               	movf	lcd_set_cursor@row,w
  3606  0239  3E20               	addlw	(low (lcd_set_cursor@row_offsets| 0))& (0+255)
  3607  023A  0086               	movwf	6
  3608  023B  0187               	clrf	7
  3609  023C  0801               	movf	1,w
  3610  023D  0724               	addwf	lcd_set_cursor@col,w
  3611  023E  3880               	iorlw	128
  3612  023F  00F9               	movwf	??_lcd_set_cursor
  3613  0240  0879               	movf	??_lcd_set_cursor,w
  3614  0241  00A5               	movwf	lcd_set_cursor@cmd
  3615  0242                     l1522:
  3616                           
  3617                           ;lcd_lib.c: 126: command(cmd, 0);
  3618  0242  01F2               	clrf	command@mode
  3619  0243  0825               	movf	lcd_set_cursor@cmd,w
  3620  0244  3182  22A1  3182   	fcall	_command
  3621  0247                     l242:
  3622  0247  0008               	return
  3623  0248                     __end_of_lcd_set_cursor:
  3624                           
  3625                           	psect	text9
  3626  0209                     __ptext9:	
  3627 ;; *************** function _lcd_print *****************
  3628 ;; Defined at:
  3629 ;;		line 129 in file "lcd_lib.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  str             2    8[COMMON] PTR unsigned char 
  3632 ;;		 -> STR_5(2), str(16), STR_2(17), STR_1(11), 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  cmd             1   11[COMMON] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3644 ;;      Params:         2       0       0       0       0       0
  3645 ;;      Locals:         1       0       0       0       0       0
  3646 ;;      Temps:          1       0       0       0       0       0
  3647 ;;      Totals:         4       0       0       0       0       0
  3648 ;;Total ram usage:        4 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 4
  3651 ;; This function calls:
  3652 ;;		_command
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;;		_lcd_clear
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function _lcd_print
  3661  0209                     _lcd_print:
  3662  0209                     l1524:	
  3663                           ;incstack = 0
  3664                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3665                           
  3666                           
  3667                           ;lcd_lib.c: 130: while (*str) {
  3668  0209  2A1C               	goto	l1532
  3669  020A                     l1526:
  3670                           
  3671                           ;lcd_lib.c: 131: uint8_t cmd = *str++;
  3672  020A  0878               	movf	lcd_print@str,w
  3673  020B  0084               	movwf	4
  3674  020C  0879               	movf	lcd_print@str+1,w
  3675  020D  0085               	movwf	5
  3676  020E  0800               	movf	0,w	;code access
  3677  020F  00FA               	movwf	??_lcd_print
  3678  0210  087A               	movf	??_lcd_print,w
  3679  0211  00FB               	movwf	lcd_print@cmd
  3680  0212                     l1528:
  3681  0212  3001               	movlw	1
  3682  0213  07F8               	addwf	lcd_print@str,f
  3683  0214  3000               	movlw	0
  3684  0215  3DF9               	addwfc	lcd_print@str+1,f
  3685  0216                     l1530:
  3686                           
  3687                           ;lcd_lib.c: 132: command(cmd, 0b00000001);
  3688  0216  01F2               	clrf	command@mode
  3689  0217  0AF2               	incf	command@mode,f
  3690  0218  087B               	movf	lcd_print@cmd,w
  3691  0219  3182  22A1  3182   	fcall	_command
  3692  021C                     l1532:
  3693  021C  0878               	movf	lcd_print@str,w
  3694  021D  0084               	movwf	4
  3695  021E  0879               	movf	lcd_print@str+1,w
  3696  021F  0085               	movwf	5
  3697  0220  0012               	moviw fsr0++
  3698  0221  1D03               	btfss	3,2
  3699  0222  2A24               	goto	u691
  3700  0223  2A25               	goto	u690
  3701  0224                     u691:
  3702  0224  2A0A               	goto	l1526
  3703  0225                     u690:
  3704  0225                     l248:
  3705  0225  0008               	return
  3706  0226                     __end_of_lcd_print:
  3707                           
  3708                           	psect	text10
  3709  02A1                     __ptext10:	
  3710 ;; *************** function _command *****************
  3711 ;; Defined at:
  3712 ;;		line 136 in file "lcd_lib.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  val             1    wreg     unsigned char 
  3715 ;;  mode            1    2[COMMON] unsigned char 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  val             1    5[COMMON] unsigned char 
  3718 ;;  lownib          1    7[COMMON] unsigned char 
  3719 ;;  highnib         1    6[COMMON] unsigned char 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      void 
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, status,0, pclath, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3729 ;;      Params:         1       0       0       0       0       0
  3730 ;;      Locals:         3       0       0       0       0       0
  3731 ;;      Temps:          2       0       0       0       0       0
  3732 ;;      Totals:         6       0       0       0       0       0
  3733 ;;Total ram usage:        6 bytes
  3734 ;; Hardware stack levels used: 1
  3735 ;; Hardware stack levels required when called: 3
  3736 ;; This function calls:
  3737 ;;		_lcd_cmd
  3738 ;; This function is called by:
  3739 ;;		_lcd_set_cursor
  3740 ;;		_lcd_print
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           
  3745                           ;psect for function _command
  3746  02A1                     _command:
  3747                           
  3748                           ;incstack = 0
  3749                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
  3750                           ;command@val stored from wreg
  3751  02A1  00F5               	movwf	command@val
  3752  02A2                     l1480:
  3753                           
  3754                           ;lcd_lib.c: 137: uint8_t highnib = (val & 0xf0) | _backlightval | mode;
  3755  02A2  0875               	movf	command@val,w
  3756  02A3  39F0               	andlw	240
  3757  02A4  0020               	movlb	0	; select bank0
  3758  02A5  0450               	iorwf	__backlightval,w
  3759  02A6  0472               	iorwf	command@mode,w
  3760  02A7  00F3               	movwf	??_command
  3761  02A8  0873               	movf	??_command,w
  3762  02A9  00F6               	movwf	command@highnib
  3763                           
  3764                           ;lcd_lib.c: 138: uint8_t lownib = ((val << 4) & 0xf0) | _backlightval | mode;
  3765  02AA  0875               	movf	command@val,w
  3766  02AB  00F3               	movwf	??_command
  3767  02AC  3003               	movlw	3
  3768  02AD                     u675:
  3769  02AD  35F3               	lslf	??_command,f
  3770  02AE  3EFF               	addlw	-1
  3771  02AF  1D03               	skipz
  3772  02B0  2AAD               	goto	u675
  3773  02B1  3573               	lslf	??_command,w
  3774  02B2  39F0               	andlw	240
  3775  02B3  0450               	iorwf	__backlightval,w
  3776  02B4  0472               	iorwf	command@mode,w
  3777  02B5  00F4               	movwf	??_command+1
  3778  02B6  0874               	movf	??_command+1,w
  3779  02B7  00F7               	movwf	command@lownib
  3780  02B8                     l1482:
  3781                           
  3782                           ;lcd_lib.c: 140: lcd_cmd(highnib);
  3783  02B8  0876               	movf	command@highnib,w
  3784  02B9  3181  21DF  3182   	fcall	_lcd_cmd
  3785  02BC                     l1484:
  3786                           
  3787                           ;lcd_lib.c: 141: lcd_cmd(highnib | 0b00000100);
  3788  02BC  0876               	movf	command@highnib,w
  3789  02BD  3804               	iorlw	4
  3790  02BE  3181  21DF  3182   	fcall	_lcd_cmd
  3791  02C1                     l1486:
  3792                           
  3793                           ;lcd_lib.c: 142: lcd_cmd(highnib & ~0b00000100);
  3794  02C1  0876               	movf	command@highnib,w
  3795  02C2  39FB               	andlw	251
  3796  02C3  3181  21DF  3182   	fcall	_lcd_cmd
  3797  02C6                     l1488:
  3798                           
  3799                           ;lcd_lib.c: 144: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3800  02C6  3042               	movlw	66
  3801  02C7                     u1367:
  3802  02C7  0B89               	decfsz	9,f
  3803  02C8  2AC7               	goto	u1367
  3804  02C9  3200               	nop2
  3805  02CA                     l1490:
  3806                           
  3807                           ;lcd_lib.c: 146: lcd_cmd(lownib);
  3808  02CA  0877               	movf	command@lownib,w
  3809  02CB  3181  21DF  3182   	fcall	_lcd_cmd
  3810  02CE                     l1492:
  3811                           
  3812                           ;lcd_lib.c: 147: lcd_cmd(lownib | 0b00000100);
  3813  02CE  0877               	movf	command@lownib,w
  3814  02CF  3804               	iorlw	4
  3815  02D0  3181  21DF  3182   	fcall	_lcd_cmd
  3816  02D3                     l1494:
  3817                           
  3818                           ;lcd_lib.c: 148: lcd_cmd(lownib & ~0b00000100);
  3819  02D3  0877               	movf	command@lownib,w
  3820  02D4  39FB               	andlw	251
  3821  02D5  3181  21DF  3182   	fcall	_lcd_cmd
  3822  02D8                     l251:
  3823  02D8  0008               	return
  3824  02D9                     __end_of_command:
  3825                           
  3826                           	psect	text11
  3827  01C1                     __ptext11:	
  3828 ;; *************** function _lcd_backlight *****************
  3829 ;; Defined at:
  3830 ;;		line 105 in file "lcd_lib.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, status,2, status,0, pclath, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3844 ;;      Params:         0       0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0
  3846 ;;      Temps:          1       0       0       0       0       0
  3847 ;;      Totals:         1       0       0       0       0       0
  3848 ;;Total ram usage:        1 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 3
  3851 ;; This function calls:
  3852 ;;		_lcd_cmd
  3853 ;; This function is called by:
  3854 ;;		_main
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           
  3859                           ;psect for function _lcd_backlight
  3860  01C1                     _lcd_backlight:
  3861  01C1                     l1756:	
  3862                           ;incstack = 0
  3863                           ; Regs used in _lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
  3864                           
  3865                           
  3866                           ;lcd_lib.c: 106: lcd_cmd(0x08);
  3867  01C1  3008               	movlw	8
  3868  01C2  3181  21DF  3181   	fcall	_lcd_cmd
  3869  01C5                     l1758:
  3870                           
  3871                           ;lcd_lib.c: 107: _backlightval = 0x08;
  3872  01C5  3008               	movlw	8
  3873  01C6  00F2               	movwf	??_lcd_backlight
  3874  01C7  0872               	movf	??_lcd_backlight,w
  3875  01C8  0020               	movlb	0	; select bank0
  3876  01C9  00D0               	movwf	__backlightval
  3877  01CA                     l1760:
  3878                           
  3879                           ;lcd_lib.c: 108: _delay((unsigned long)((10)*(8000000/4000000.0)));
  3880  01CA  3006               	movlw	6
  3881  01CB                     u1377:
  3882  01CB  0B89               	decfsz	9,f
  3883  01CC  29CB               	goto	u1377
  3884  01CD  3200               	nop2
  3885  01CE                     l229:
  3886  01CE  0008               	return
  3887  01CF                     __end_of_lcd_backlight:
  3888                           
  3889                           	psect	text12
  3890  01DF                     __ptext12:	
  3891 ;; *************** function _lcd_cmd *****************
  3892 ;; Defined at:
  3893 ;;		line 11 in file "lcd_lib.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  cmd             1    wreg     unsigned char 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  cmd             1    1[COMMON] unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0, pclath, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3907 ;;      Params:         0       0       0       0       0       0
  3908 ;;      Locals:         1       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0
  3910 ;;      Totals:         1       0       0       0       0       0
  3911 ;;Total ram usage:        1 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 2
  3914 ;; This function calls:
  3915 ;;		_i2c_start
  3916 ;;		_i2c_stop
  3917 ;;		_i2c_write
  3918 ;; This function is called by:
  3919 ;;		_lcd_init
  3920 ;;		_lcd_backlight
  3921 ;;		_command
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           
  3926                           ;psect for function _lcd_cmd
  3927  01DF                     _lcd_cmd:
  3928                           
  3929                           ;incstack = 0
  3930                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3931                           ;lcd_cmd@cmd stored from wreg
  3932  01DF  00F1               	movwf	lcd_cmd@cmd
  3933  01E0                     l1476:
  3934                           
  3935                           ;lcd_lib.c: 12: i2c_start();
  3936  01E0  3181  21AB  3181   	fcall	_i2c_start
  3937                           
  3938                           ;lcd_lib.c: 13: i2c_write(0x27 << 1);
  3939  01E3  304E               	movlw	78
  3940  01E4  3181  21CF  3181   	fcall	_i2c_write
  3941                           
  3942                           ;lcd_lib.c: 14: i2c_write(cmd);
  3943  01E7  0871               	movf	lcd_cmd@cmd,w
  3944  01E8  3181  21CF  3181   	fcall	_i2c_write
  3945  01EB                     l1478:
  3946                           
  3947                           ;lcd_lib.c: 15: i2c_stop();
  3948  01EB  3181  219A  3181   	fcall	_i2c_stop
  3949                           
  3950                           ;lcd_lib.c: 16: _delay((unsigned long)((10)*(8000000/4000000.0)));
  3951  01EE  3006               	movlw	6
  3952  01EF                     u1387:
  3953  01EF  0B89               	decfsz	9,f
  3954  01F0  29EF               	goto	u1387
  3955  01F1  3200               	nop2
  3956  01F2                     l223:
  3957  01F2  0008               	return
  3958  01F3                     __end_of_lcd_cmd:
  3959                           
  3960                           	psect	text13
  3961  01CF                     __ptext13:	
  3962 ;; *************** function _i2c_write *****************
  3963 ;; Defined at:
  3964 ;;		line 25 in file "i2c.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;  data            1    wreg     unsigned char 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  data            1    0[COMMON] unsigned char 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		wreg, status,2, status,0, pclath, cstack
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3978 ;;      Params:         0       0       0       0       0       0
  3979 ;;      Locals:         1       0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0
  3981 ;;      Totals:         1       0       0       0       0       0
  3982 ;;Total ram usage:        1 bytes
  3983 ;; Hardware stack levels used: 1
  3984 ;; Hardware stack levels required when called: 1
  3985 ;; This function calls:
  3986 ;;		_i2c_wait
  3987 ;; This function is called by:
  3988 ;;		_lcd_cmd
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           
  3993                           ;psect for function _i2c_write
  3994  01CF                     _i2c_write:
  3995                           
  3996                           ;incstack = 0
  3997                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  3998                           ;i2c_write@data stored from wreg
  3999  01CF  00F0               	movwf	i2c_write@data
  4000  01D0                     l1472:
  4001                           
  4002                           ;i2c.c: 26: SSP2BUF = data;
  4003  01D0  0870               	movf	i2c_write@data,w
  4004  01D1  0024               	movlb	4	; select bank4
  4005  01D2  0099               	movwf	25	;volatile
  4006  01D3                     l192:	
  4007                           ;i2c.c: 27: while(SSP2STATbits.BF);
  4008                           
  4009  01D3  181C               	btfsc	28,0	;volatile
  4010  01D4  29D6               	goto	u651
  4011  01D5  29D7               	goto	u650
  4012  01D6                     u651:
  4013  01D6  29D3               	goto	l192
  4014  01D7                     u650:
  4015  01D7                     l195:
  4016  01D7  1B1E               	btfsc	30,6	;volatile
  4017  01D8  29DA               	goto	u661
  4018  01D9  29DB               	goto	u660
  4019  01DA                     u661:
  4020  01DA  29D7               	goto	l195
  4021  01DB                     u660:
  4022  01DB                     l1474:
  4023                           
  4024                           ;i2c.c: 29: i2c_wait();
  4025  01DB  3181  21B5  3181   	fcall	_i2c_wait
  4026  01DE                     l198:
  4027  01DE  0008               	return
  4028  01DF                     __end_of_i2c_write:
  4029                           
  4030                           	psect	text14
  4031  019A                     __ptext14:	
  4032 ;; *************** function _i2c_stop *****************
  4033 ;; Defined at:
  4034 ;;		line 14 in file "i2c.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;		None
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;		None
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      void 
  4041 ;; Registers used:
  4042 ;;		None
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4048 ;;      Params:         0       0       0       0       0       0
  4049 ;;      Locals:         0       0       0       0       0       0
  4050 ;;      Temps:          0       0       0       0       0       0
  4051 ;;      Totals:         0       0       0       0       0       0
  4052 ;;Total ram usage:        0 bytes
  4053 ;; Hardware stack levels used: 1
  4054 ;; This function calls:
  4055 ;;		Nothing
  4056 ;; This function is called by:
  4057 ;;		_lcd_cmd
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           
  4062                           ;psect for function _i2c_stop
  4063  019A                     _i2c_stop:
  4064  019A                     l1470:	
  4065                           ;incstack = 0
  4066                           ; Regs used in _i2c_stop: []
  4067                           
  4068                           
  4069                           ;i2c.c: 15: SSP2CON2bits.PEN = 1;
  4070  019A  0024               	movlb	4	; select bank4
  4071  019B  151E               	bsf	30,2	;volatile
  4072  019C                     l180:	
  4073                           ;i2c.c: 16: while(SSP2CON2bits.PEN);
  4074                           
  4075  019C  191E               	btfsc	30,2	;volatile
  4076  019D  299F               	goto	u641
  4077  019E  29A0               	goto	u640
  4078  019F                     u641:
  4079  019F  299C               	goto	l180
  4080  01A0                     u640:
  4081  01A0                     l183:
  4082  01A0  0008               	return
  4083  01A1                     __end_of_i2c_stop:
  4084                           
  4085                           	psect	text15
  4086  01AB                     __ptext15:	
  4087 ;; *************** function _i2c_start *****************
  4088 ;; Defined at:
  4089 ;;		line 8 in file "i2c.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0, pclath, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4103 ;;      Params:         0       0       0       0       0       0
  4104 ;;      Locals:         0       0       0       0       0       0
  4105 ;;      Temps:          0       0       0       0       0       0
  4106 ;;      Totals:         0       0       0       0       0       0
  4107 ;;Total ram usage:        0 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; Hardware stack levels required when called: 1
  4110 ;; This function calls:
  4111 ;;		_i2c_wait
  4112 ;; This function is called by:
  4113 ;;		_lcd_cmd
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           
  4118                           ;psect for function _i2c_start
  4119  01AB                     _i2c_start:
  4120  01AB                     l1466:	
  4121                           ;incstack = 0
  4122                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  4123                           
  4124                           
  4125                           ;i2c.c: 9: i2c_wait();
  4126  01AB  3181  21B5  3181   	fcall	_i2c_wait
  4127  01AE                     l1468:
  4128                           
  4129                           ;i2c.c: 10: SSP2CON2bits.SEN = 1;
  4130  01AE  0024               	movlb	4	; select bank4
  4131  01AF  141E               	bsf	30,0	;volatile
  4132  01B0                     l174:	
  4133                           ;i2c.c: 11: while(SSP2CON2bits.SEN);
  4134                           
  4135  01B0  181E               	btfsc	30,0	;volatile
  4136  01B1  29B3               	goto	u631
  4137  01B2  29B4               	goto	u630
  4138  01B3                     u631:
  4139  01B3  29B0               	goto	l174
  4140  01B4                     u630:
  4141  01B4                     l177:
  4142  01B4  0008               	return
  4143  01B5                     __end_of_i2c_start:
  4144                           
  4145                           	psect	text16
  4146  01B5                     __ptext16:	
  4147 ;; *************** function _i2c_wait *****************
  4148 ;; Defined at:
  4149 ;;		line 4 in file "i2c.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;		None
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4163 ;;      Params:         0       0       0       0       0       0
  4164 ;;      Locals:         0       0       0       0       0       0
  4165 ;;      Temps:          0       0       0       0       0       0
  4166 ;;      Totals:         0       0       0       0       0       0
  4167 ;;Total ram usage:        0 bytes
  4168 ;; Hardware stack levels used: 1
  4169 ;; This function calls:
  4170 ;;		Nothing
  4171 ;; This function is called by:
  4172 ;;		_i2c_start
  4173 ;;		_i2c_write
  4174 ;;		_i2c_repeated_start
  4175 ;;		_i2c_read
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           
  4180                           ;psect for function _i2c_wait
  4181  01B5                     _i2c_wait:
  4182  01B5                     l1460:	
  4183                           ;incstack = 0
  4184                           ; Regs used in _i2c_wait: [wreg+status,2]
  4185                           
  4186  01B5                     l1462:	
  4187                           ;i2c.c: 5: while((SSP2CON2 & 0x1F) || (SSP2STAT & 0x04));
  4188                           
  4189  01B5  0024               	movlb	4	; select bank4
  4190  01B6  081E               	movf	30,w	;volatile
  4191  01B7  391F               	andlw	31
  4192  01B8  1D03               	btfss	3,2
  4193  01B9  29BB               	goto	u611
  4194  01BA  29BC               	goto	u610
  4195  01BB                     u611:
  4196  01BB  29B5               	goto	l1462
  4197  01BC                     u610:
  4198  01BC                     l1464:
  4199  01BC  191C               	btfsc	28,2	;volatile
  4200  01BD  29BF               	goto	u621
  4201  01BE  29C0               	goto	u620
  4202  01BF                     u621:
  4203  01BF  29B5               	goto	l1462
  4204  01C0                     u620:
  4205  01C0                     l171:
  4206  01C0  0008               	return
  4207  01C1                     __end_of_i2c_wait:
  4208                           
  4209                           	psect	text17
  4210  03CA                     __ptext17:	
  4211 ;; *************** function _get_scale_val *****************
  4212 ;; Defined at:
  4213 ;;		line 28 in file "loadcell.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  n               1    wreg     unsigned char 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  n               1    7[BANK0 ] unsigned char 
  4218 ;;  i               1   11[BANK0 ] unsigned char 
  4219 ;;  j               1    6[BANK0 ] unsigned char 
  4220 ;;  weight_count    3    8[BANK0 ] unsigned um
  4221 ;;  weight_add      3    3[BANK0 ] unsigned um
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  3   11[COMMON] unsigned um
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4231 ;;      Params:         3       0       0       0       0       0
  4232 ;;      Locals:         0       9       0       0       0       0
  4233 ;;      Temps:          0       3       0       0       0       0
  4234 ;;      Totals:         3      12       0       0       0       0
  4235 ;;Total ram usage:       15 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 1
  4238 ;; This function calls:
  4239 ;;		___ltdiv
  4240 ;;		_get_CELL_DAT_VAL
  4241 ;;		_set_CELL_CLK_HIGH
  4242 ;;		_set_CELL_CLK_LOW
  4243 ;; This function is called by:
  4244 ;;		_main
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           
  4249                           ;psect for function _get_scale_val
  4250  03CA                     _get_scale_val:
  4251                           
  4252                           ;incstack = 0
  4253                           ; Regs used in _get_scale_val: [wreg+status,2+status,0+pclath+cstack]
  4254                           ;get_scale_val@n stored from wreg
  4255  03CA  0020               	movlb	0	; select bank0
  4256  03CB  00A7               	movwf	get_scale_val@n
  4257  03CC                     l1762:
  4258                           
  4259                           ;loadcell.c: 30: set_CELL_CLK_LOW();
  4260  03CC  3181  2180  3183   	fcall	_set_CELL_CLK_LOW
  4261  03CF                     l1764:
  4262                           
  4263                           ;loadcell.c: 32: unsigned short long weight_count = 0;
  4264  03CF  3000               	movlw	0
  4265  03D0  0020               	movlb	0	; select bank0
  4266  03D1  00A8               	movwf	get_scale_val@weight_count
  4267  03D2  3000               	movlw	0
  4268  03D3  00A9               	movwf	get_scale_val@weight_count+1
  4269  03D4  3000               	movlw	0
  4270  03D5  00AA               	movwf	get_scale_val@weight_count+2
  4271  03D6                     l1766:
  4272                           
  4273                           ;loadcell.c: 33: unsigned short long weight_add = 0;
  4274  03D6  3000               	movlw	0
  4275  03D7  00A3               	movwf	get_scale_val@weight_add
  4276  03D8  3000               	movlw	0
  4277  03D9  00A4               	movwf	get_scale_val@weight_add+1
  4278  03DA  3000               	movlw	0
  4279  03DB  00A5               	movwf	get_scale_val@weight_add+2
  4280  03DC                     l1768:
  4281                           
  4282                           ;loadcell.c: 34: for (uint8_t j = 0; j < n; j++)
  4283  03DC  01A6               	clrf	get_scale_val@j
  4284  03DD  2C49               	goto	l1818
  4285  03DE                     l1770:
  4286  03DE  3181  2193  3183   	fcall	_get_CELL_DAT_VAL
  4287  03E1  3A00               	xorlw	0
  4288  03E2  1903               	skipnz
  4289  03E3  2BE5               	goto	u1041
  4290  03E4  2BE6               	goto	u1040
  4291  03E5                     u1041:
  4292  03E5  2BDE               	goto	l1770
  4293  03E6                     u1040:
  4294  03E6                     l1772:
  4295  03E6  3181  2193  3183   	fcall	_get_CELL_DAT_VAL
  4296  03E9  3A01               	xorlw	1
  4297  03EA  1903               	skipnz
  4298  03EB  2BED               	goto	u1051
  4299  03EC  2BEE               	goto	u1050
  4300  03ED                     u1051:
  4301  03ED  2BE6               	goto	l1772
  4302  03EE                     u1050:
  4303  03EE                     l1774:
  4304                           
  4305                           ;loadcell.c: 38: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4306  03EE  3006               	movlw	6
  4307  03EF                     u1397:
  4308  03EF  0B89               	decfsz	9,f
  4309  03F0  2BEF               	goto	u1397
  4310  03F1  3200               	nop2
  4311  03F2                     l1776:
  4312                           
  4313                           ;loadcell.c: 40: uint8_t i;;loadcell.c: 41: for (i = 0; i < 24; i++){
  4314  03F2  0020               	movlb	0	; select bank0
  4315  03F3  01AB               	clrf	get_scale_val@i
  4316  03F4                     l1782:
  4317                           
  4318                           ;loadcell.c: 42: weight_count <<= 1;
  4319  03F4  3001               	movlw	1
  4320  03F5                     u1065:
  4321  03F5  35A8               	lslf	get_scale_val@weight_count,f
  4322  03F6  0DA9               	rlf	get_scale_val@weight_count+1,f
  4323  03F7  0DAA               	rlf	get_scale_val@weight_count+2,f
  4324  03F8  0B89               	decfsz	9,f
  4325  03F9  2BF5               	goto	u1065
  4326  03FA                     l1784:
  4327                           
  4328                           ;loadcell.c: 43: set_CELL_CLK_HIGH();
  4329  03FA  3181  2175  3183   	fcall	_set_CELL_CLK_HIGH
  4330  03FD                     l1786:
  4331                           
  4332                           ;loadcell.c: 44: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4333  03FD  3006               	movlw	6
  4334  03FE                     u1407:
  4335  03FE  0B89               	decfsz	9,f
  4336  03FF  2BFE               	goto	u1407
  4337  0400  3200               	nop2
  4338  0401                     l1788:
  4339                           
  4340                           ;loadcell.c: 45: set_CELL_CLK_LOW();
  4341  0401  3181  2180  3183   	fcall	_set_CELL_CLK_LOW
  4342  0404                     l1790:
  4343                           
  4344                           ;loadcell.c: 46: weight_count += get_CELL_DAT_VAL();
  4345  0404  3181  2193  3183   	fcall	_get_CELL_DAT_VAL
  4346  0407  0020               	movlb	0	; select bank0
  4347  0408  00A0               	movwf	??_get_scale_val
  4348  0409  01A1               	clrf	??_get_scale_val+1
  4349  040A  01A2               	clrf	??_get_scale_val+2
  4350  040B  0820               	movf	??_get_scale_val,w
  4351  040C  07A8               	addwf	get_scale_val@weight_count,f
  4352  040D  0821               	movf	??_get_scale_val+1,w
  4353  040E  3DA9               	addwfc	get_scale_val@weight_count+1,f
  4354  040F  0822               	movf	??_get_scale_val+2,w
  4355  0410  3DAA               	addwfc	get_scale_val@weight_count+2,f
  4356  0411                     l1792:
  4357                           
  4358                           ;loadcell.c: 47: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4359  0411  3006               	movlw	6
  4360  0412                     u1417:
  4361  0412  0B89               	decfsz	9,f
  4362  0413  2C12               	goto	u1417
  4363  0414  3200               	nop2
  4364  0415                     l1794:
  4365  0415  3001               	movlw	1
  4366  0416  0020               	movlb	0	; select bank0
  4367  0417  00A0               	movwf	??_get_scale_val
  4368  0418  0820               	movf	??_get_scale_val,w
  4369  0419  07AB               	addwf	get_scale_val@i,f
  4370  041A                     l1796:
  4371  041A  3018               	movlw	24
  4372  041B  022B               	subwf	get_scale_val@i,w
  4373  041C  1C03               	skipc
  4374  041D  2C1F               	goto	u1071
  4375  041E  2C20               	goto	u1070
  4376  041F                     u1071:
  4377  041F  2BF4               	goto	l1782
  4378  0420                     u1070:
  4379  0420                     l1798:
  4380                           
  4381                           ;loadcell.c: 48: };loadcell.c: 50: for (i = 0; i < 1; i++){
  4382  0420  01AB               	clrf	get_scale_val@i
  4383  0421                     l1804:
  4384                           
  4385                           ;loadcell.c: 51: set_CELL_CLK_HIGH();
  4386  0421  3181  2175  3183   	fcall	_set_CELL_CLK_HIGH
  4387  0424                     l1806:
  4388                           
  4389                           ;loadcell.c: 52: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4390  0424  3006               	movlw	6
  4391  0425                     u1427:
  4392  0425  0B89               	decfsz	9,f
  4393  0426  2C25               	goto	u1427
  4394  0427  3200               	nop2
  4395                           
  4396                           ;loadcell.c: 53: set_CELL_CLK_LOW();
  4397  0428  3181  2180  3183   	fcall	_set_CELL_CLK_LOW
  4398  042B                     l1808:
  4399                           
  4400                           ;loadcell.c: 54: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4401  042B  3006               	movlw	6
  4402  042C                     u1437:
  4403  042C  0B89               	decfsz	9,f
  4404  042D  2C2C               	goto	u1437
  4405  042E  3200               	nop2
  4406  042F                     l1810:
  4407  042F  3001               	movlw	1
  4408  0430  0020               	movlb	0	; select bank0
  4409  0431  00A0               	movwf	??_get_scale_val
  4410  0432  0820               	movf	??_get_scale_val,w
  4411  0433  07AB               	addwf	get_scale_val@i,f
  4412  0434                     l1812:
  4413  0434  082B               	movf	get_scale_val@i,w
  4414  0435  1903               	btfsc	3,2
  4415  0436  2C38               	goto	u1081
  4416  0437  2C39               	goto	u1080
  4417  0438                     u1081:
  4418  0438  2C21               	goto	l1804
  4419  0439                     u1080:
  4420  0439                     l1814:
  4421                           
  4422                           ;loadcell.c: 55: };loadcell.c: 57: weight_add += weight_count;
  4423  0439  0828               	movf	get_scale_val@weight_count,w
  4424  043A  07A3               	addwf	get_scale_val@weight_add,f
  4425  043B  0829               	movf	get_scale_val@weight_count+1,w
  4426  043C  3DA4               	addwfc	get_scale_val@weight_add+1,f
  4427  043D  082A               	movf	get_scale_val@weight_count+2,w
  4428  043E  3DA5               	addwfc	get_scale_val@weight_add+2,f
  4429                           
  4430                           ;loadcell.c: 58: weight_count = 0;
  4431  043F  3000               	movlw	0
  4432  0440  00A8               	movwf	get_scale_val@weight_count
  4433  0441  3000               	movlw	0
  4434  0442  00A9               	movwf	get_scale_val@weight_count+1
  4435  0443  3000               	movlw	0
  4436  0444  00AA               	movwf	get_scale_val@weight_count+2
  4437  0445                     l1816:
  4438  0445  3001               	movlw	1
  4439  0446  00A0               	movwf	??_get_scale_val
  4440  0447  0820               	movf	??_get_scale_val,w
  4441  0448  07A6               	addwf	get_scale_val@j,f
  4442  0449                     l1818:
  4443  0449  0827               	movf	get_scale_val@n,w
  4444  044A  0226               	subwf	get_scale_val@j,w
  4445  044B  1C03               	skipc
  4446  044C  2C4E               	goto	u1091
  4447  044D  2C4F               	goto	u1090
  4448  044E                     u1091:
  4449  044E  2BDE               	goto	l1770
  4450  044F                     u1090:
  4451  044F                     l1820:
  4452                           
  4453                           ;loadcell.c: 59: };loadcell.c: 60: weight_count = weight_add / n;
  4454  044F  0827               	movf	get_scale_val@n,w
  4455  0450  00A0               	movwf	??_get_scale_val
  4456  0451  01A1               	clrf	??_get_scale_val+1
  4457  0452  01A2               	clrf	??_get_scale_val+2
  4458  0453  0820               	movf	??_get_scale_val,w
  4459  0454  00F0               	movwf	___ltdiv@divisor
  4460  0455  0821               	movf	??_get_scale_val+1,w
  4461  0456  00F1               	movwf	___ltdiv@divisor+1
  4462  0457  0822               	movf	??_get_scale_val+2,w
  4463  0458  00F2               	movwf	___ltdiv@divisor+2
  4464  0459  0823               	movf	get_scale_val@weight_add,w
  4465  045A  00F3               	movwf	___ltdiv@dividend
  4466  045B  0824               	movf	get_scale_val@weight_add+1,w
  4467  045C  00F4               	movwf	___ltdiv@dividend+1
  4468  045D  0825               	movf	get_scale_val@weight_add+2,w
  4469  045E  00F5               	movwf	___ltdiv@dividend+2
  4470  045F  3183  2324  3183   	fcall	___ltdiv
  4471  0462  0870               	movf	?___ltdiv,w
  4472  0463  0020               	movlb	0	; select bank0
  4473  0464  00A8               	movwf	get_scale_val@weight_count
  4474  0465  0871               	movf	?___ltdiv+1,w
  4475  0466  00A9               	movwf	get_scale_val@weight_count+1
  4476  0467  0872               	movf	?___ltdiv+2,w
  4477  0468  00AA               	movwf	get_scale_val@weight_count+2
  4478  0469                     l1822:
  4479                           
  4480                           ;loadcell.c: 61: return weight_count;
  4481  0469  0828               	movf	get_scale_val@weight_count,w
  4482  046A  00FB               	movwf	?_get_scale_val
  4483  046B  0829               	movf	get_scale_val@weight_count+1,w
  4484  046C  00FC               	movwf	?_get_scale_val+1
  4485  046D  082A               	movf	get_scale_val@weight_count+2,w
  4486  046E  00FD               	movwf	?_get_scale_val+2
  4487  046F                     l150:
  4488  046F  0008               	return
  4489  0470                     __end_of_get_scale_val:
  4490                           
  4491                           	psect	text18
  4492  0180                     __ptext18:	
  4493 ;; *************** function _set_CELL_CLK_LOW *****************
  4494 ;; Defined at:
  4495 ;;		line 7 in file "loadcell.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4509 ;;      Params:         0       0       0       0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0
  4511 ;;      Temps:          1       0       0       0       0       0
  4512 ;;      Totals:         1       0       0       0       0       0
  4513 ;;Total ram usage:        1 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_get_scale_val
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           
  4523                           ;psect for function _set_CELL_CLK_LOW
  4524  0180                     _set_CELL_CLK_LOW:
  4525  0180                     l1534:	
  4526                           ;incstack = 0
  4527                           ; Regs used in _set_CELL_CLK_LOW: [wreg+status,2+status,0]
  4528                           
  4529  0180  30FD               	movlw	253
  4530  0181  00F0               	movwf	??_set_CELL_CLK_LOW
  4531  0182  0870               	movf	??_set_CELL_CLK_LOW,w
  4532  0183  0022               	movlb	2	; select bank2
  4533  0184  058C               	andwf	12,f	;volatile
  4534  0185                     l120:
  4535  0185  0008               	return
  4536  0186                     __end_of_set_CELL_CLK_LOW:
  4537                           
  4538                           	psect	text19
  4539  0175                     __ptext19:	
  4540 ;; *************** function _set_CELL_CLK_HIGH *****************
  4541 ;; Defined at:
  4542 ;;		line 12 in file "loadcell.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		None
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4556 ;;      Params:         0       0       0       0       0       0
  4557 ;;      Locals:         0       0       0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0       0
  4559 ;;      Totals:         0       0       0       0       0       0
  4560 ;;Total ram usage:        0 bytes
  4561 ;; Hardware stack levels used: 1
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_get_scale_val
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           
  4570                           ;psect for function _set_CELL_CLK_HIGH
  4571  0175                     _set_CELL_CLK_HIGH:
  4572  0175                     l1536:	
  4573                           ;incstack = 0
  4574                           ; Regs used in _set_CELL_CLK_HIGH: []
  4575                           
  4576  0175  0022               	movlb	2	; select bank2
  4577  0176  148C               	bsf	12,1	;volatile
  4578  0177                     l123:
  4579  0177  0008               	return
  4580  0178                     __end_of_set_CELL_CLK_HIGH:
  4581                           
  4582                           	psect	text20
  4583  0193                     __ptext20:	
  4584 ;; *************** function _get_CELL_DAT_VAL *****************
  4585 ;; Defined at:
  4586 ;;		line 15 in file "loadcell.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;		None
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;		None
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1    wreg      unsigned char 
  4593 ;; Registers used:
  4594 ;;		wreg, status,2, status,0
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4600 ;;      Params:         0       0       0       0       0       0
  4601 ;;      Locals:         0       0       0       0       0       0
  4602 ;;      Temps:          1       0       0       0       0       0
  4603 ;;      Totals:         1       0       0       0       0       0
  4604 ;;Total ram usage:        1 bytes
  4605 ;; Hardware stack levels used: 1
  4606 ;; This function calls:
  4607 ;;		Nothing
  4608 ;; This function is called by:
  4609 ;;		_get_scale_val
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           
  4614                           ;psect for function _get_CELL_DAT_VAL
  4615  0193                     _get_CELL_DAT_VAL:
  4616  0193                     l1538:	
  4617                           ;incstack = 0
  4618                           ; Regs used in _get_CELL_DAT_VAL: [wreg+status,2+status,0]
  4619                           
  4620  0193                     l1552:	
  4621                           ;loadcell.c: 16: if(0x08 == 0x01){ return PORTAbits.RA0; }
  4622                           
  4623  0193  0020               	movlb	0	; select bank0
  4624  0194  0C0C               	rrf	12,w	;volatile
  4625  0195  00F0               	movwf	??_get_CELL_DAT_VAL
  4626  0196  0CF0               	rrf	??_get_CELL_DAT_VAL,f
  4627  0197  0C70               	rrf	??_get_CELL_DAT_VAL,w
  4628  0198  3901               	andlw	1
  4629  0199                     l127:
  4630  0199  0008               	return
  4631  019A                     __end_of_get_CELL_DAT_VAL:
  4632                           
  4633                           	psect	text21
  4634  0324                     __ptext21:	
  4635 ;; *************** function ___ltdiv *****************
  4636 ;; Defined at:
  4637 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ltdiv.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  divisor         3    0[COMMON] unsigned um
  4640 ;;  dividend        3    3[COMMON] unsigned um
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  quotient        3    7[COMMON] unsigned um
  4643 ;;  counter         1   10[COMMON] unsigned char 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  3    0[COMMON] unsigned um
  4646 ;; Registers used:
  4647 ;;		wreg, status,2, status,0
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4653 ;;      Params:         6       0       0       0       0       0
  4654 ;;      Locals:         4       0       0       0       0       0
  4655 ;;      Temps:          1       0       0       0       0       0
  4656 ;;      Totals:        11       0       0       0       0       0
  4657 ;;Total ram usage:       11 bytes
  4658 ;; Hardware stack levels used: 1
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_get_scale_val
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           
  4667                           ;psect for function ___ltdiv
  4668  0324                     ___ltdiv:
  4669  0324                     l1620:	
  4670                           ;incstack = 0
  4671                           ; Regs used in ___ltdiv: [wreg+status,2+status,0]
  4672                           
  4673  0324  3000               	movlw	0
  4674  0325  00F7               	movwf	___ltdiv@quotient
  4675  0326  3000               	movlw	0
  4676  0327  00F8               	movwf	___ltdiv@quotient+1
  4677  0328  3000               	movlw	0
  4678  0329  00F9               	movwf	___ltdiv@quotient+2
  4679  032A  0872               	movf	___ltdiv@divisor+2,w
  4680  032B  0471               	iorwf	___ltdiv@divisor+1,w
  4681  032C  0470               	iorwf	___ltdiv@divisor,w
  4682  032D  1903               	skipnz
  4683  032E  2B30               	goto	u831
  4684  032F  2B31               	goto	u830
  4685  0330                     u831:
  4686  0330  2B69               	goto	l1640
  4687  0331                     u830:
  4688  0331                     l1622:
  4689  0331  01FA               	clrf	___ltdiv@counter
  4690  0332  0AFA               	incf	___ltdiv@counter,f
  4691  0333  2B3E               	goto	l1626
  4692  0334                     l1624:
  4693  0334  3001               	movlw	1
  4694  0335                     u845:
  4695  0335  35F0               	lslf	___ltdiv@divisor,f
  4696  0336  0DF1               	rlf	___ltdiv@divisor+1,f
  4697  0337  0DF2               	rlf	___ltdiv@divisor+2,f
  4698  0338  0B89               	decfsz	9,f
  4699  0339  2B35               	goto	u845
  4700  033A  3001               	movlw	1
  4701  033B  00F6               	movwf	??___ltdiv
  4702  033C  0876               	movf	??___ltdiv,w
  4703  033D  07FA               	addwf	___ltdiv@counter,f
  4704  033E                     l1626:
  4705  033E  1FF2               	btfss	___ltdiv@divisor+2,7
  4706  033F  2B41               	goto	u851
  4707  0340  2B42               	goto	u850
  4708  0341                     u851:
  4709  0341  2B34               	goto	l1624
  4710  0342                     u850:
  4711  0342                     l1628:
  4712  0342  3001               	movlw	1
  4713  0343                     u865:
  4714  0343  35F7               	lslf	___ltdiv@quotient,f
  4715  0344  0DF8               	rlf	___ltdiv@quotient+1,f
  4716  0345  0DF9               	rlf	___ltdiv@quotient+2,f
  4717  0346  0B89               	decfsz	9,f
  4718  0347  2B43               	goto	u865
  4719  0348                     l1630:
  4720  0348  0872               	movf	___ltdiv@divisor+2,w
  4721  0349  0275               	subwf	___ltdiv@dividend+2,w
  4722  034A  1D03               	skipz
  4723  034B  2B52               	goto	u875
  4724  034C  0871               	movf	___ltdiv@divisor+1,w
  4725  034D  0274               	subwf	___ltdiv@dividend+1,w
  4726  034E  1D03               	skipz
  4727  034F  2B52               	goto	u875
  4728  0350  0870               	movf	___ltdiv@divisor,w
  4729  0351  0273               	subwf	___ltdiv@dividend,w
  4730  0352                     u875:
  4731  0352  1C03               	skipc
  4732  0353  2B55               	goto	u871
  4733  0354  2B56               	goto	u870
  4734  0355                     u871:
  4735  0355  2B5D               	goto	l1636
  4736  0356                     u870:
  4737  0356                     l1632:
  4738  0356  0870               	movf	___ltdiv@divisor,w
  4739  0357  02F3               	subwf	___ltdiv@dividend,f
  4740  0358  0871               	movf	___ltdiv@divisor+1,w
  4741  0359  3BF4               	subwfb	___ltdiv@dividend+1,f
  4742  035A  0872               	movf	___ltdiv@divisor+2,w
  4743  035B  3BF5               	subwfb	___ltdiv@dividend+2,f
  4744  035C                     l1634:
  4745  035C  1477               	bsf	___ltdiv@quotient,0
  4746  035D                     l1636:
  4747  035D  3001               	movlw	1
  4748  035E                     u885:
  4749  035E  36F2               	lsrf	___ltdiv@divisor+2,f
  4750  035F  0CF1               	rrf	___ltdiv@divisor+1,f
  4751  0360  0CF0               	rrf	___ltdiv@divisor,f
  4752  0361  0B89               	decfsz	9,f
  4753  0362  2B5E               	goto	u885
  4754  0363                     l1638:
  4755  0363  3001               	movlw	1
  4756  0364  02FA               	subwf	___ltdiv@counter,f
  4757  0365  1D03               	btfss	3,2
  4758  0366  2B68               	goto	u891
  4759  0367  2B69               	goto	u890
  4760  0368                     u891:
  4761  0368  2B42               	goto	l1628
  4762  0369                     u890:
  4763  0369                     l1640:
  4764  0369  0877               	movf	___ltdiv@quotient,w
  4765  036A  00F0               	movwf	?___ltdiv
  4766  036B  0878               	movf	___ltdiv@quotient+1,w
  4767  036C  00F1               	movwf	?___ltdiv+1
  4768  036D  0879               	movf	___ltdiv@quotient+2,w
  4769  036E  00F2               	movwf	?___ltdiv+2
  4770  036F                     l682:
  4771  036F  0008               	return
  4772  0370                     __end_of___ltdiv:
  4773                           
  4774                           	psect	text22
  4775  01A1                     __ptext22:	
  4776 ;; *************** function _SYSTEM_Initialize *****************
  4777 ;; Defined at:
  4778 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;		None
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      void 
  4785 ;; Registers used:
  4786 ;;		wreg, status,2, status,0, pclath, cstack
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4792 ;;      Params:         0       0       0       0       0       0
  4793 ;;      Locals:         0       0       0       0       0       0
  4794 ;;      Temps:          0       0       0       0       0       0
  4795 ;;      Totals:         0       0       0       0       0       0
  4796 ;;Total ram usage:        0 bytes
  4797 ;; Hardware stack levels used: 1
  4798 ;; Hardware stack levels required when called: 1
  4799 ;; This function calls:
  4800 ;;		_OSCILLATOR_Initialize
  4801 ;;		_PIN_MANAGER_Initialize
  4802 ;;		_WDT_Initialize
  4803 ;; This function is called by:
  4804 ;;		_main
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           
  4809                           ;psect for function _SYSTEM_Initialize
  4810  01A1                     _SYSTEM_Initialize:
  4811  01A1                     l1688:	
  4812                           ;incstack = 0
  4813                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4814                           
  4815                           
  4816                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  4817  01A1  3181  21F3  3181   	fcall	_PIN_MANAGER_Initialize
  4818                           
  4819                           ;mcc.c: 54: OSCILLATOR_Initialize();
  4820  01A4  3181  218C  3181   	fcall	_OSCILLATOR_Initialize
  4821                           
  4822                           ;mcc.c: 55: WDT_Initialize();
  4823  01A7  3181  2178  3181   	fcall	_WDT_Initialize
  4824  01AA                     l17:
  4825  01AA  0008               	return
  4826  01AB                     __end_of_SYSTEM_Initialize:
  4827                           
  4828                           	psect	text23
  4829  0178                     __ptext23:	
  4830 ;; *************** function _WDT_Initialize *****************
  4831 ;; Defined at:
  4832 ;;		line 68 in file "mcc_generated_files/mcc.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4846 ;;      Params:         0       0       0       0       0       0
  4847 ;;      Locals:         0       0       0       0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0
  4849 ;;      Totals:         0       0       0       0       0       0
  4850 ;;Total ram usage:        0 bytes
  4851 ;; Hardware stack levels used: 1
  4852 ;; This function calls:
  4853 ;;		Nothing
  4854 ;; This function is called by:
  4855 ;;		_SYSTEM_Initialize
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           
  4860                           ;psect for function _WDT_Initialize
  4861  0178                     _WDT_Initialize:
  4862  0178                     l1514:	
  4863                           ;incstack = 0
  4864                           ; Regs used in _WDT_Initialize: [wreg]
  4865                           
  4866                           
  4867                           ;mcc.c: 71: WDTCON = 0x16;
  4868  0178  3016               	movlw	22
  4869  0179  0021               	movlb	1	; select bank1
  4870  017A  0097               	movwf	23	;volatile
  4871  017B                     l23:
  4872  017B  0008               	return
  4873  017C                     __end_of_WDT_Initialize:
  4874                           
  4875                           	psect	text24
  4876  01F3                     __ptext24:	
  4877 ;; *************** function _PIN_MANAGER_Initialize *****************
  4878 ;; Defined at:
  4879 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;		None
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;		None
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      void 
  4886 ;; Registers used:
  4887 ;;		wreg, status,2
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4893 ;;      Params:         0       0       0       0       0       0
  4894 ;;      Locals:         0       0       0       0       0       0
  4895 ;;      Temps:          0       0       0       0       0       0
  4896 ;;      Totals:         0       0       0       0       0       0
  4897 ;;Total ram usage:        0 bytes
  4898 ;; Hardware stack levels used: 1
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_SYSTEM_Initialize
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           
  4907                           ;psect for function _PIN_MANAGER_Initialize
  4908  01F3                     _PIN_MANAGER_Initialize:
  4909  01F3                     l1496:	
  4910                           ;incstack = 0
  4911                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4912                           
  4913                           
  4914                           ;pin_manager.c: 60: LATA = 0x00;
  4915  01F3  0022               	movlb	2	; select bank2
  4916  01F4  018C               	clrf	12	;volatile
  4917                           
  4918                           ;pin_manager.c: 61: LATB = 0x00;
  4919  01F5  018D               	clrf	13	;volatile
  4920  01F6                     l1498:
  4921                           
  4922                           ;pin_manager.c: 66: TRISA = 0xFF;
  4923  01F6  30FF               	movlw	255
  4924  01F7  0021               	movlb	1	; select bank1
  4925  01F8  008C               	movwf	12	;volatile
  4926  01F9                     l1500:
  4927                           
  4928                           ;pin_manager.c: 67: TRISB = 0xFF;
  4929  01F9  30FF               	movlw	255
  4930  01FA  008D               	movwf	13	;volatile
  4931  01FB                     l1502:
  4932                           
  4933                           ;pin_manager.c: 72: ANSELB = 0xFE;
  4934  01FB  30FE               	movlw	254
  4935  01FC  0023               	movlb	3	; select bank3
  4936  01FD  008D               	movwf	13	;volatile
  4937  01FE                     l1504:
  4938                           
  4939                           ;pin_manager.c: 73: ANSELA = 0x1F;
  4940  01FE  301F               	movlw	31
  4941  01FF  008C               	movwf	12	;volatile
  4942                           
  4943                           ;pin_manager.c: 78: WPUB = 0x00;
  4944  0200  0024               	movlb	4	; select bank4
  4945  0201  018D               	clrf	13	;volatile
  4946                           
  4947                           ;pin_manager.c: 79: WPUA = 0x00;
  4948  0202  018C               	clrf	12	;volatile
  4949  0203                     l1506:
  4950                           
  4951                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  4952  0203  0021               	movlb	1	; select bank1
  4953  0204  1795               	bsf	21,7	;volatile
  4954                           
  4955                           ;pin_manager.c: 86: APFCON0 = 0x00;
  4956  0205  0022               	movlb	2	; select bank2
  4957  0206  019D               	clrf	29	;volatile
  4958                           
  4959                           ;pin_manager.c: 87: APFCON1 = 0x00;
  4960  0207  019E               	clrf	30	;volatile
  4961  0208                     l48:
  4962  0208  0008               	return
  4963  0209                     __end_of_PIN_MANAGER_Initialize:
  4964                           
  4965                           	psect	text25
  4966  018C                     __ptext25:	
  4967 ;; *************** function _OSCILLATOR_Initialize *****************
  4968 ;; Defined at:
  4969 ;;		line 58 in file "mcc_generated_files/mcc.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;		None
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;		None
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      void 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4983 ;;      Params:         0       0       0       0       0       0
  4984 ;;      Locals:         0       0       0       0       0       0
  4985 ;;      Temps:          0       0       0       0       0       0
  4986 ;;      Totals:         0       0       0       0       0       0
  4987 ;;Total ram usage:        0 bytes
  4988 ;; Hardware stack levels used: 1
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_SYSTEM_Initialize
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           
  4997                           ;psect for function _OSCILLATOR_Initialize
  4998  018C                     _OSCILLATOR_Initialize:
  4999  018C                     l1508:	
  5000                           ;incstack = 0
  5001                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5002                           
  5003                           
  5004                           ;mcc.c: 61: OSCCON = 0x70;
  5005  018C  3070               	movlw	112
  5006  018D  0021               	movlb	1	; select bank1
  5007  018E  0099               	movwf	25	;volatile
  5008  018F                     l1510:
  5009                           
  5010                           ;mcc.c: 63: OSCTUNE = 0x00;
  5011  018F  0198               	clrf	24	;volatile
  5012  0190                     l1512:
  5013                           
  5014                           ;mcc.c: 65: BORCON = 0x00;
  5015  0190  0022               	movlb	2	; select bank2
  5016  0191  0196               	clrf	22	;volatile
  5017  0192                     l20:
  5018  0192  0008               	return
  5019  0193                     __end_of_OSCILLATOR_Initialize:
  5020  007E                     btemp	set	126	;btemp
  5021  007E                     wtemp0	set	126
  5022                           
  5023                           	psect	config
  5024                           
  5025                           ;Config register CONFIG1 @ 0x8007
  5026                           ;	Oscillator Selection
  5027                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5028                           ;	Watchdog Timer Enable
  5029                           ;	WDTE = OFF, WDT disabled
  5030                           ;	Power-up Timer Enable
  5031                           ;	PWRTE = OFF, PWRT disabled
  5032                           ;	MCLR Pin Function Select
  5033                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5034                           ;	Flash Program Memory Code Protection
  5035                           ;	CP = OFF, Program memory code protection is disabled
  5036                           ;	Data Memory Code Protection
  5037                           ;	CPD = OFF, Data memory code protection is disabled
  5038                           ;	Brown-out Reset Enable
  5039                           ;	BOREN = ON, Brown-out Reset enabled
  5040                           ;	Clock Out Enable
  5041                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5042                           ;	Internal/External Switchover
  5043                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5044                           ;	Fail-Safe Clock Monitor Enable
  5045                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5046  8007                     	org	32775
  5047  8007  3FE4               	dw	16356
  5048                           
  5049                           ;Config register CONFIG2 @ 0x8008
  5050                           ;	Flash Memory Self-Write Protection
  5051                           ;	WRT = OFF, Write protection off
  5052                           ;	PLL Enable
  5053                           ;	PLLEN = OFF, 4x PLL disabled
  5054                           ;	Stack Overflow/Underflow Reset Enable
  5055                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5056                           ;	Brown-out Reset Voltage Selection
  5057                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5058                           ;	Low-Voltage Programming Enable
  5059                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5060  8008                     	org	32776
  5061  8008  1EFF               	dw	7935

Data Sizes:
    Strings     36
    Constant    40
    Data        4
    BSS         23
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      69
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), STR_3(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> str(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_print@str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[2]), str(BANK0[16]), STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_get_scale_val
    _sprintf->___lldiv
    ___llmod->___lldiv
    _scale_convert_gram->___xxtofl
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_print
    _lcd_set_cursor->_command
    _lcd_print->_command
    _command->_lcd_cmd
    _lcd_backlight->_lcd_cmd
    _lcd_cmd->_i2c_write
    _get_scale_val->___ltdiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___llmod
    _lcd_clear->_lcd_set_cursor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    6245
                                             32 BANK0     10    10      0
                  _SYSTEM_Initialize
                      _get_scale_val
                      _lcd_backlight
                          _lcd_clear
                           _lcd_init
                          _lcd_print
                     _lcd_set_cursor
                 _scale_convert_gram
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             30    24      6    1277
                                             10 BANK0     22    16      6
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _scale_convert_gram                                  11     7      4     595
                                              0 BANK0     11     7      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      44
                                              2 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            3     3      0    1914
                                             12 COMMON     1     1      0
                                              6 BANK0      2     2      0
                          _lcd_print
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       8     7      1     912
                                              8 COMMON     2     1      1
                                              0 BANK0      6     6      0
                            _command
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            4     2      2     866
                                              8 COMMON     4     2      2
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              6     5      1     418
                                              2 COMMON     6     5      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_backlight                                        1     1      0      44
                                              2 COMMON     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_scale_val                                       15    12      3     547
                                             11 COMMON     3     0      3
                                              0 BANK0     12    12      0
                            ___ltdiv
                   _get_CELL_DAT_VAL
                  _set_CELL_CLK_HIGH
                   _set_CELL_CLK_LOW
 ---------------------------------------------------------------------------------
 (2) _set_CELL_CLK_LOW                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_CELL_CLK_HIGH                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_CELL_DAT_VAL                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___ltdiv                                             11     5      6     314
                                              0 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _get_scale_val
     ___ltdiv
     _get_CELL_DAT_VAL
     _set_CELL_CLK_HIGH
     _set_CELL_CLK_LOW
   _lcd_backlight
     _lcd_cmd
       _i2c_start
         _i2c_wait
       _i2c_stop
       _i2c_write
         _i2c_wait
   _lcd_clear
     _lcd_print
       _command
         _lcd_cmd
     _lcd_set_cursor
       _command
   _lcd_init
     _lcd_cmd
   _lcd_print
   _lcd_set_cursor
   _scale_convert_gram
     ___xxtofl
   _sprintf
     ___lldiv
     ___llmod
       ___lldiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      53       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2A      45       6       86.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      53      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Oct 31 01:19:16 2021

                             l20 0192                               l23 017B                               l17 01AA  
                             l48 0208                     lcd_clear@col 0027                     lcd_clear@row 0026  
                            l120 0185                              l123 0177                              l150 046F  
                            l127 0199                              l223 01F2                              l153 02A0  
                            l242 0247                              l226 06E1                              l171 01C0  
                            l251 02D8                              l180 019C                              l236 026F  
                            l229 01CE                              l413 06FD                              l174 01B0  
                            l183 01A0                              l192 01D3                              l248 0225  
                            l416 071B                              l177 01B4                              l426 07E4  
                            l195 01D7                              l198 01DE                              l466 03C9  
                            l652 0323                              l682 036F                              l863 0492  
                            l865 051B                              l876 04E7                              l877 04F3  
                            l869 04CD                              u610 01BC                              u611 01BB  
                            u620 01C0                              u700 0380                              u621 01BF  
                            u701 037F                              u630 01B4                              u631 01B3  
                            u640 01A0                              u720 0392                              u800 0306  
                            u641 019F                              u721 0391                              u801 0305  
                            u650 01D7                              u651 01D6                              u715 0384  
                            u660 01DB                              u900 0476                              u740 03AB  
                            u820 031B                              u661 01DA                              u901 0475  
                            u741 03AA                              u821 031A                              u805 0302  
                            u830 0331                              u910 047A                              u831 0330  
                            u911 0479                              u735 0393                              u815 030F  
                            u680 0236                              u920 049A                              u760 03C1  
                            u681 0235                              u921 0499                              u761 03C0  
                            u745 03A7                              u850 0342                              u690 0225  
                            u770 02E2                              u851 0341                              u675 02AD  
                            u691 0224                              u755 03B5                              u771 02E1  
                            u940 04B9                              u845 0335                              u941 04B8  
                            u870 0356                              u790 02F4                              u871 0355  
                            u935 04AD                              u791 02F3                              u960 04D3  
                            u865 0343                              u961 04D2                              u785 02E6  
                            u890 0369                              u891 0368                              u875 0352  
                            u955 04C7                              u980 04E1                              u885 035E  
                            u981 04E0                              u990 04E7                              u991 04E6  
                            u975 04D7                              _str 0051                              wreg 0009  
                    command@mode 0072        get_scale_val@weight_count 0028                  ?_lcd_set_cursor 0078  
                           l1500 01F9                             l1510 018F                             l1502 01FB  
                           l1512 0190                             l1504 01FE                             l1520 0238  
                           l1600 02D9                             l1506 0203                             l1514 0178  
                           l1530 0216                             l1522 0242                             l1610 0306  
                           l1602 02E2                             l1508 018C                             l1620 0324  
                           l1460 01B5                             l1532 021C                             l1524 0209  
                           l1516 0228                             l1700 0621                             l1612 030E  
                           l1604 02E5                             l1630 0348                             l1622 0331  
                           l1534 0180                             l1462 01B5                             l1470 019A  
                           l1526 020A                             l1518 0236                             l1710 063B  
                           l1702 0628                             l1614 0315                             l1606 02F0  
                           l1632 0356                             l1624 0334                             l1640 0369  
                           l1552 0193                             l1536 0175                             l1464 01BC  
                           l1472 01D0                             l1480 02A2                             l1528 0212  
                           l1720 065B                             l1712 063F                             l1704 062C  
                           l1608 02F4                             l1616 031B                             l1634 035C  
                           l1626 033E                             l1538 0193                             l1810 042F  
                           l1466 01AB                             l1474 01DB                             l1490 02CA  
                           l1482 02B8                             l1730 066F                             l1722 065F  
                           l1714 0643                             l1706 0630                             l1650 048A  
                           l1636 035D                             l1628 0342                             l1820 044F  
                           l1812 0434                             l1804 0421                             l1468 01AE  
                           l1476 01E0                             l1492 02CE                             l1484 02BC  
                           l1740 06A2                             l1732 068B                             l1724 0663  
                           l1716 0653                             l1708 0637                             l1660 04B3  
                           l1652 049A                             l1644 0471                             l1580 0383  
                           l1900 07C0                             l1638 0363                             l1822 0469  
                           l1814 0439                             l1806 0424                             l1478 01EB  
                           l1494 02D3                             l1486 02C1                             l1750 06CE  
                           l1742 06A6                             l1734 068F                             l1726 0667  
                           l1718 0657                             l1670 04DD                             l1662 04BA  
                           l1646 0476                             l1590 03B3                             l1582 038E  
                           l1902 07CC                             l1910 051F                             l1496 01F3  
                           l1816 0445                             l1808 042B                             l1760 01CA  
                           l1488 02C6                             l1840 0253                             l1832 024A  
                           l1752 06D2                             l1744 06AA                             l1736 0693  
                           l1728 066B                             l1680 050E                             l1672 04E1  
                           l1664 04BE                             l1656 04A3                             l1648 047A  
                           l1592 03B4                             l1584 0392                             l1576 0370  
                           l1904 07E0                             l1920 052A                             l1912 0522  
                           l1498 01F6                             l1770 03DE                             l1818 0449  
                           l1762 03CC                             l1842 025A                             l1826 0248  
                           l1754 06D6                             l1746 06AE                             l1738 0697  
                           l1690 05F6                             l1682 0512                             l1674 04EB  
                           l1666 04C6                             l1658 04A8                             l1850 0270  
                           l1594 03BB                             l1586 0399                             l1578 0380  
                           l1930 0533                             l1922 052C                             l1914 0524  
                           l1772 03E6                             l1764 03CF                             l1756 01C1  
                           l1844 025F                             l1748 06CA                             l1692 0602  
                           l1684 0513                             l1676 04F5                             l1668 04D4  
                           l1852 0298                             l1588 03AB                             l1596 03C1  
                           l1860 06EF                             l1940 055E                             l1932 053A  
                           l1924 052D                             l1916 0526                             l1908 051C  
                           l1790 0404                             l1782 03F4                             l1774 03EE  
                           l1766 03D6                             l1758 01C5                             l1846 0265  
                           l1838 024B                             l1694 0606                             l1678 0509  
                           l1870 0704                             l1862 06F6                             l1950 0586  
                           l1942 0561                             l1934 053F                             l1926 0530  
                           l1918 0527                             l1688 01A1                             l1792 0411  
                           l1784 03FA                             l1776 03F2                             l1768 03DC  
                           l1848 0269                             l1696 060A                             l1880 0740  
                           l1872 071F                             l1864 06FB                             l1856 06E4  
                           l1960 05DA                             l1952 0596                             l1944 0566  
                           l1936 0546                             l1928 0532                             l1794 0415  
                           l1786 03FD                             l1698 060E                             l1890 076A  
                           l1874 072A                             l1866 06FF                             l1858 06E9  
                           l1962 05DF                             l1954 059D                             l1946 056D  
                           l1938 0553                             l1796 041A                             l1788 0401  
                           l1892 0774                             l1876 072F                             l1964 05E6  
                           l1956 05AA                             l1948 0573                             l1798 0420  
                           l1894 077C                             l1886 0742                             l1878 073C  
                           l1958 05B5                             l1896 07B5                             l1898 07BC  
                           STR_1 0839                             STR_2 0828                             STR_3 0844  
                           STR_4 0844                             STR_5 084A                             u1000 04EB  
                           u1001 04EA                             u1010 04FF                             u1100 0265  
                           u1020 050E                             u1101 0264                             u1021 050D  
                           u1110 026F                             u1030 0512                             u1111 026E  
                           u1031 0511                             u1015 04FB                             u1040 03E6  
                           u1041 03E5                             u1121 027B                             u1050 03EE  
                           u1122 027C                             u1130 06EF                             u1051 03ED  
                           u1123 0283                             u1131 06EE                             u1124 0284  
                           u1140 071F                             u1141 071E                             u1070 0420  
                           u1150 0769                             u1071 041F                             u1151 0768  
                           u1080 0439                             u1160 0774                             u1081 0438  
                           u1065 03F5                             u1161 0773                             u1217 054C  
                           u1090 044F                             u1170 07CC                             u1091 044E  
                           u1307 0670                             u1171 07CB                             u1155 0765  
                           u1227 05A3                             u1180 07E0                             u1317 068C  
                           u1181 07DF                             u1237 05EC                             _LATA 010C  
                           _LATB 010D                             u1407 03FE                             u1327 069E  
                           u1247 05FB                             u1417 0412                             u1337 06AF  
                           u1257 0611                             u1427 0425                             u1347 06CB  
                           u1267 0624                             u1437 042C                             u1357 06DD  
                           u1277 0635                             u1367 02C7                             u1287 0644  
                           u1377 01CB                             u1297 0654                             u1387 01EF  
                           u1397 03EF                             _WPUA 020C                             _WPUB 020D  
                ??_lcd_backlight 0072                             _main 051C                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           start 0002   __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 0193  
                          ?_main 0070                  __end_of___lldiv 03CA                  __end_of___llmod 0324  
                __end_of___ltdiv 0370                            _TRISA 008C                            _TRISB 008D  
         scale_convert_gram@temp 0027                     lcd_print@cmd 007B                     lcd_print@str 0078  
                __end_of_lcd_cmd 01F3                  __end_of_command 02D9                  __end_of_dpowers 0828  
                 _WDT_Initialize 0178                            status 0003               _scale_convert_gram 0270  
                          wtemp0 007E                  __end_of_sprintf 07E5       __size_of_set_CELL_CLK_HIGH 0003  
                ??_get_scale_val 0020                  __initialization 07E5              ?_scale_convert_gram 0020  
                   __end_of_main 05F6                    command@lownib 0077                 __end_of_i2c_wait 01C1  
               __end_of_i2c_stop 01A1                           ??_main 0040           __end_of_WDT_Initialize 017C  
           ??_scale_convert_gram 0024                 ___llmod@dividend 0024                           _ANSELA 018C  
                         _ANSELB 018D                           _BORCON 0116                           _OSCCON 0099  
                         _WDTCON 0097               __size_of_i2c_start 000A                 __end_of___xxtofl 051C  
             __size_of_i2c_write 0010          scale_convert_gram@count 0020         __end_of_get_CELL_DAT_VAL 019A  
               __end_of_lcd_init 06E2                        ??___lldiv 0078                        ??___llmod 0028  
                      ??___ltdiv 0076                        ??_lcd_cmd 0071                        ??_command 0073  
                ?_WDT_Initialize 0070                        ??_sprintf 0030                     ___xxtofl@arg 007A  
                   ___xxtofl@exp 0079                _SYSTEM_Initialize 01A1                     ___xxtofl@val 0070  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0070        __size_of_set_CELL_CLK_LOW 0006  
                 command@highnib 0076                   __pcstackCOMMON 0070                     __pidataBANK0 017C  
            ??_SYSTEM_Initialize 0070                   get_scale_val@i 002B                   get_scale_val@j 0026  
                 get_scale_val@n 0027                __end_of_i2c_start 01B5                 ??_lcd_set_cursor 0079  
              __end_of_i2c_write 01DF                   _OPTION_REGbits 0095               __size_of_lcd_clear 0028  
             __size_of_lcd_print 001D        __end_of_SYSTEM_Initialize 01AB                       __pbssBANK0 004A  
                      ?_i2c_wait 0070                        ?_i2c_stop 0070                       __pmaintext 051C  
                        _APFCON0 011D                          _APFCON1 011E                        ?___xxtofl 0070  
                        _OSCTUNE 0098                          _SSP2ADD 021A                          _SSP2BUF 0219  
                      ?_lcd_init 0070                       ??_i2c_wait 0070                       ??_i2c_stop 0070  
          __end_of_lcd_backlight 01CF                __end_of_lcd_clear 0270                __end_of_lcd_print 0226  
                        ___lldiv 0370                          ___llmod 02D9                          ___ltdiv 0324  
                        __ptext1 06E2                          __ptext2 02D9                          __ptext3 0370  
                        __ptext4 0270                          __ptext5 0470                          __ptext6 05F6  
                        __ptext7 0248                          __ptext8 0226                          __ptext9 0209  
                        _lcd_cmd 01DF                          _command 02A1                          _dpowers 0800  
          _OSCILLATOR_Initialize 018C                       ??___xxtofl 0074         ??_PIN_MANAGER_Initialize 0070  
     __size_of_SYSTEM_Initialize 000A                          _sprintf 06E2                          clrloop0 0187  
                     ??_lcd_init 0072             end_of_initialization 07FD                  ___lldiv@divisor 0070  
               ___ltdiv@dividend 0073                  ___lldiv@counter 007D            __end_of_get_scale_val 0470  
               _set_CELL_CLK_LOW 0180                ?_get_CELL_DAT_VAL 0070              main@weight_gram_180 0046  
             ??_get_CELL_DAT_VAL 0070                 ??_WDT_Initialize 0070                        _PORTAbits 000C  
                     _weight_dat 004D                    i2c_write@data 0070        lcd_set_cursor@row_offsets 0020  
                  ___xxtofl@sign 0078                       lcd_cmd@cmd 0071                 ___ltdiv@quotient 0077  
    __size_of_scale_convert_gram 0031                       command@val 0075           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07E5  __size_of_PIN_MANAGER_Initialize 0016                        _i2c_start 01AB  
                      _i2c_write 01CF                  ___llmod@divisor 0020                  ___llmod@counter 0029  
              __size_of_i2c_wait 000C                __size_of_i2c_stop 0007          get_scale_val@weight_add 0023  
                    __pdataBANK0 0061              lcd_set_cursor@F2395 0061                        ___latbits 0001  
                  __pcstackBANK0 0020                       ?_i2c_start 0070                       ?_i2c_write 0070  
              __size_of___xxtofl 00AC                __size_of_lcd_init 00EC                      sprintf@flag 0036  
                    sprintf@prec 0037           _PIN_MANAGER_Initialize 01F3                         ?___lldiv 0070  
                       ?___llmod 0020                         ?___ltdiv 0070                        _lcd_clear 0248  
                      _lcd_print 0209                         ?_lcd_cmd 0070                         ?_command 0072  
       __end_of_set_CELL_CLK_LOW 0186                         ?_sprintf 002A          __size_of_lcd_set_cursor 0022  
                      clear_ram0 0186                  ___ltdiv@divisor 0070                  ___ltdiv@counter 007A  
                       _SSP2CON1 021D                         _SSP2CON2 021E                         _SSP2STAT 021C  
                     ?_lcd_clear 0070                       ?_lcd_print 0078        __size_of_get_CELL_DAT_VAL 0007  
         __size_of_lcd_backlight 000E                      ??_i2c_start 0070                      ??_i2c_write 0070  
                       _i2c_wait 01B5                         _i2c_stop 019A          ??_OSCILLATOR_Initialize 0070  
               __size_of___lldiv 005A                 __size_of___llmod 004B                 __size_of___ltdiv 004C  
               __size_of_lcd_cmd 0014                 __size_of_command 0038       __end_of_scale_convert_gram 02A1  
                     sprintf@val 0039                         ___xxtofl 0470           __size_of_get_scale_val 00A6  
                       __ptext10 02A1                         __ptext11 01C1                         __ptext20 0193  
                       __ptext12 01DF                         __ptext21 0324                         __ptext13 01CF  
                       __ptext22 01A1                         __ptext14 019A                         __ptext23 0178  
                       __ptext15 01AB                         __ptext24 01F3                         __ptext16 01B5  
                       __ptext25 018C                         __ptext17 03CA                         __ptext18 0180  
                       __ptext19 0175                         _lcd_init 05F6                     _SSP2CON1bits 021D  
                   _SSP2CON2bits 021E                 __size_of_sprintf 0103                    __size_of_main 00DA  
                  _lcd_backlight 01C1                      ??_lcd_clear 007C                     _SSP2STATbits 021C  
                    ??_lcd_print 007A                  main@weight_gram 0042          __size_of_WDT_Initialize 0004  
                 _lcd_set_cursor 0226                lcd_set_cursor@cmd 0025                lcd_set_cursor@col 0024  
                      sprintf@ap 003D                        sprintf@sp 003E                lcd_set_cursor@row 0078  
               ___lldiv@dividend 0074          ?_PIN_MANAGER_Initialize 0070                   ?_lcd_backlight 0070  
              _set_CELL_CLK_HIGH 0175                    _get_scale_val 03CA               ?_set_CELL_CLK_HIGH 0070  
                  __pstringtext1 0800                    __pstringtext2 0839                    __pstringtext3 0844  
                  __pstringtext4 084A                    __pstringtext5 0000              ??_set_CELL_CLK_HIGH 0070  
                       sprintf@c 003F                         sprintf@f 002A                 ___lldiv@quotient 0079  
               _get_CELL_DAT_VAL 0193                ?_set_CELL_CLK_LOW 0070           __end_of_lcd_set_cursor 0248  
                    _weight_zero 004A               ??_set_CELL_CLK_LOW 0070   __end_of_PIN_MANAGER_Initialize 0209  
      __end_of_set_CELL_CLK_HIGH 0178                   ?_get_scale_val 007B                    __backlightval 0050  
